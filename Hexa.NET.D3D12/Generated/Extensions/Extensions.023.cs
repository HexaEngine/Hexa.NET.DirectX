// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D12
{
	public static unsafe partial class Extensions
	{

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList3> comObj, ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList3> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
			{
				fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, pDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, pDependentSubresourceRanges);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList3> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, pDstBuffer, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList3> comObj, ref ID3D12Resource pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
				{
					fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, (ID3D12Resource*)ppDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, pDependentSubresourceRanges);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList3> comObj, ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList3> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, pDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList3> comObj, ref ID3D12Resource pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, (ID3D12Resource*)ppDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList3> comObj, ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, pSrcBuffer, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList3> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
			{
				fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, pDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList3> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, pDstBuffer, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList3> comObj, ref ID3D12Resource pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
				{
					fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, (ID3D12Resource*)ppDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList3> comObj, ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList3> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
			{
				fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, pDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList3> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, pDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList3> comObj, ref ID3D12Resource pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
				{
					fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, (ID3D12Resource*)ppDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList3> comObj, ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList3> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
			{
				fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
				{
					fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, pDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList3> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, pDstBuffer, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList3> comObj, ref ID3D12Resource pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
				{
					fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
					{
						fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
						{
							((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, (ID3D12Resource*)ppDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList3> comObj, ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void OMSetDepthBounds(this ComPtr<ID3D12GraphicsCommandList3> comObj, float min, float max) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, float, float, void>)(handle->LpVtbl[62]))(handle, min, max);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetSamplePositions(this ComPtr<ID3D12GraphicsCommandList3> comObj, uint numSamplesPerPixel, uint numPixels, SamplePosition* pSamplePositions) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, uint, uint, SamplePosition*, void>)(handle->LpVtbl[63]))(handle, numSamplesPerPixel, numPixels, pSamplePositions);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetSamplePositions(this ComPtr<ID3D12GraphicsCommandList3> comObj, uint numSamplesPerPixel, uint numPixels, ref SamplePosition pSamplePositions) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (SamplePosition* ppSamplePositions = &pSamplePositions)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, uint, uint, SamplePosition*, void>)(handle->LpVtbl[63]))(handle, numSamplesPerPixel, numPixels, (SamplePosition*)ppSamplePositions);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresourceRegion(this ComPtr<ID3D12GraphicsCommandList3> comObj, ID3D12Resource* pDstResource, uint dstSubresource, uint dstX, uint dstY, ID3D12Resource* pSrcResource, uint srcSubresource, Rect32* pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(handle->LpVtbl[64]))(handle, pDstResource, dstSubresource, dstX, dstY, pSrcResource, srcSubresource, pSrcRect, format, resolveMode);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresourceRegion(this ComPtr<ID3D12GraphicsCommandList3> comObj, ref ID3D12Resource pDstResource, uint dstSubresource, uint dstX, uint dstY, ID3D12Resource* pSrcResource, uint srcSubresource, Rect32* pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(handle->LpVtbl[64]))(handle, (ID3D12Resource*)ppDstResource, dstSubresource, dstX, dstY, pSrcResource, srcSubresource, pSrcRect, format, resolveMode);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresourceRegion(this ComPtr<ID3D12GraphicsCommandList3> comObj, ComPtr<ID3D12Resource> pDstResource, uint dstSubresource, uint dstX, uint dstY, ID3D12Resource* pSrcResource, uint srcSubresource, Rect32* pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(handle->LpVtbl[64]))(handle, (ID3D12Resource*)pDstResource.Handle, dstSubresource, dstX, dstY, pSrcResource, srcSubresource, pSrcRect, format, resolveMode);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresourceRegion(this ComPtr<ID3D12GraphicsCommandList3> comObj, ID3D12Resource* pDstResource, uint dstSubresource, uint dstX, uint dstY, ref ID3D12Resource pSrcResource, uint srcSubresource, Rect32* pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(handle->LpVtbl[64]))(handle, pDstResource, dstSubresource, dstX, dstY, (ID3D12Resource*)ppSrcResource, srcSubresource, pSrcRect, format, resolveMode);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresourceRegion(this ComPtr<ID3D12GraphicsCommandList3> comObj, ID3D12Resource* pDstResource, uint dstSubresource, uint dstX, uint dstY, ComPtr<ID3D12Resource> pSrcResource, uint srcSubresource, Rect32* pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(handle->LpVtbl[64]))(handle, pDstResource, dstSubresource, dstX, dstY, (ID3D12Resource*)pSrcResource.Handle, srcSubresource, pSrcRect, format, resolveMode);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresourceRegion(this ComPtr<ID3D12GraphicsCommandList3> comObj, ref ID3D12Resource pDstResource, uint dstSubresource, uint dstX, uint dstY, ref ID3D12Resource pSrcResource, uint srcSubresource, Rect32* pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(handle->LpVtbl[64]))(handle, (ID3D12Resource*)ppDstResource, dstSubresource, dstX, dstY, (ID3D12Resource*)ppSrcResource, srcSubresource, pSrcRect, format, resolveMode);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresourceRegion(this ComPtr<ID3D12GraphicsCommandList3> comObj, ComPtr<ID3D12Resource> pDstResource, uint dstSubresource, uint dstX, uint dstY, ComPtr<ID3D12Resource> pSrcResource, uint srcSubresource, Rect32* pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(handle->LpVtbl[64]))(handle, (ID3D12Resource*)pDstResource.Handle, dstSubresource, dstX, dstY, (ID3D12Resource*)pSrcResource.Handle, srcSubresource, pSrcRect, format, resolveMode);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresourceRegion(this ComPtr<ID3D12GraphicsCommandList3> comObj, ID3D12Resource* pDstResource, uint dstSubresource, uint dstX, uint dstY, ID3D12Resource* pSrcResource, uint srcSubresource, ref Rect32 pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (Rect32* ppSrcRect = &pSrcRect)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(handle->LpVtbl[64]))(handle, pDstResource, dstSubresource, dstX, dstY, pSrcResource, srcSubresource, (Rect32*)ppSrcRect, format, resolveMode);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresourceRegion(this ComPtr<ID3D12GraphicsCommandList3> comObj, ref ID3D12Resource pDstResource, uint dstSubresource, uint dstX, uint dstY, ID3D12Resource* pSrcResource, uint srcSubresource, ref Rect32 pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				fixed (Rect32* ppSrcRect = &pSrcRect)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(handle->LpVtbl[64]))(handle, (ID3D12Resource*)ppDstResource, dstSubresource, dstX, dstY, pSrcResource, srcSubresource, (Rect32*)ppSrcRect, format, resolveMode);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresourceRegion(this ComPtr<ID3D12GraphicsCommandList3> comObj, ComPtr<ID3D12Resource> pDstResource, uint dstSubresource, uint dstX, uint dstY, ID3D12Resource* pSrcResource, uint srcSubresource, ref Rect32 pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (Rect32* ppSrcRect = &pSrcRect)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(handle->LpVtbl[64]))(handle, (ID3D12Resource*)pDstResource.Handle, dstSubresource, dstX, dstY, pSrcResource, srcSubresource, (Rect32*)ppSrcRect, format, resolveMode);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresourceRegion(this ComPtr<ID3D12GraphicsCommandList3> comObj, ID3D12Resource* pDstResource, uint dstSubresource, uint dstX, uint dstY, ref ID3D12Resource pSrcResource, uint srcSubresource, ref Rect32 pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
			{
				fixed (Rect32* ppSrcRect = &pSrcRect)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(handle->LpVtbl[64]))(handle, pDstResource, dstSubresource, dstX, dstY, (ID3D12Resource*)ppSrcResource, srcSubresource, (Rect32*)ppSrcRect, format, resolveMode);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresourceRegion(this ComPtr<ID3D12GraphicsCommandList3> comObj, ID3D12Resource* pDstResource, uint dstSubresource, uint dstX, uint dstY, ComPtr<ID3D12Resource> pSrcResource, uint srcSubresource, ref Rect32 pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (Rect32* ppSrcRect = &pSrcRect)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(handle->LpVtbl[64]))(handle, pDstResource, dstSubresource, dstX, dstY, (ID3D12Resource*)pSrcResource.Handle, srcSubresource, (Rect32*)ppSrcRect, format, resolveMode);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresourceRegion(this ComPtr<ID3D12GraphicsCommandList3> comObj, ref ID3D12Resource pDstResource, uint dstSubresource, uint dstX, uint dstY, ref ID3D12Resource pSrcResource, uint srcSubresource, ref Rect32 pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
				{
					fixed (Rect32* ppSrcRect = &pSrcRect)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(handle->LpVtbl[64]))(handle, (ID3D12Resource*)ppDstResource, dstSubresource, dstX, dstY, (ID3D12Resource*)ppSrcResource, srcSubresource, (Rect32*)ppSrcRect, format, resolveMode);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresourceRegion(this ComPtr<ID3D12GraphicsCommandList3> comObj, ComPtr<ID3D12Resource> pDstResource, uint dstSubresource, uint dstX, uint dstY, ComPtr<ID3D12Resource> pSrcResource, uint srcSubresource, ref Rect32 pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (Rect32* ppSrcRect = &pSrcRect)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(handle->LpVtbl[64]))(handle, (ID3D12Resource*)pDstResource.Handle, dstSubresource, dstX, dstY, (ID3D12Resource*)pSrcResource.Handle, srcSubresource, (Rect32*)ppSrcRect, format, resolveMode);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetViewInstanceMask(this ComPtr<ID3D12GraphicsCommandList3> comObj, uint mask) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, uint, void>)(handle->LpVtbl[65]))(handle, mask);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void WriteBufferImmediate(this ComPtr<ID3D12GraphicsCommandList3> comObj, uint count, WritebufferimmediateParameter* pParams, WritebufferimmediateMode* pModes) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, uint, WritebufferimmediateParameter*, WritebufferimmediateMode*, void>)(handle->LpVtbl[66]))(handle, count, pParams, pModes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void WriteBufferImmediate(this ComPtr<ID3D12GraphicsCommandList3> comObj, uint count, ref WritebufferimmediateParameter pParams, WritebufferimmediateMode* pModes) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (WritebufferimmediateParameter* ppParams = &pParams)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, uint, WritebufferimmediateParameter*, WritebufferimmediateMode*, void>)(handle->LpVtbl[66]))(handle, count, (WritebufferimmediateParameter*)ppParams, pModes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void WriteBufferImmediate(this ComPtr<ID3D12GraphicsCommandList3> comObj, uint count, WritebufferimmediateParameter* pParams, ref WritebufferimmediateMode pModes) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (WritebufferimmediateMode* ppModes = &pModes)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, uint, WritebufferimmediateParameter*, WritebufferimmediateMode*, void>)(handle->LpVtbl[66]))(handle, count, pParams, (WritebufferimmediateMode*)ppModes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void WriteBufferImmediate(this ComPtr<ID3D12GraphicsCommandList3> comObj, uint count, ref WritebufferimmediateParameter pParams, ref WritebufferimmediateMode pModes) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (WritebufferimmediateParameter* ppParams = &pParams)
			{
				fixed (WritebufferimmediateMode* ppModes = &pModes)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, uint, WritebufferimmediateParameter*, WritebufferimmediateMode*, void>)(handle->LpVtbl[66]))(handle, count, (WritebufferimmediateParameter*)ppParams, (WritebufferimmediateMode*)ppModes);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetProtectedResourceSession(this ComPtr<ID3D12GraphicsCommandList3> comObj, ID3D12ProtectedResourceSession* pProtectedResourceSession) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12ProtectedResourceSession*, void>)(handle->LpVtbl[67]))(handle, pProtectedResourceSession);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetProtectedResourceSession(this ComPtr<ID3D12GraphicsCommandList3> comObj, ref ID3D12ProtectedResourceSession pProtectedResourceSession) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12ProtectedResourceSession*, void>)(handle->LpVtbl[67]))(handle, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetProtectedResourceSession(this ComPtr<ID3D12GraphicsCommandList3> comObj, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession) 
		{
			ID3D12GraphicsCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList3*, ID3D12ProtectedResourceSession*, void>)(handle->LpVtbl[67]))(handle, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D12MetaCommand> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D12MetaCommand* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12MetaCommand*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D12MetaCommand> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D12MetaCommand* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12MetaCommand*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D12MetaCommand> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12MetaCommand* handle = comObj.Handle;
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12MetaCommand*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D12MetaCommand> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12MetaCommand* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12MetaCommand*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D12MetaCommand> comObj) 
		{
			ID3D12MetaCommand* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12MetaCommand*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D12MetaCommand> comObj) 
		{
			ID3D12MetaCommand* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12MetaCommand*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D12MetaCommand> comObj, Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D12MetaCommand* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12MetaCommand*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[3]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D12MetaCommand> comObj, ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D12MetaCommand* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12MetaCommand*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D12MetaCommand> comObj, Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D12MetaCommand* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12MetaCommand*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[3]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D12MetaCommand> comObj, ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D12MetaCommand* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12MetaCommand*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D12MetaCommand> comObj, Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12MetaCommand* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12MetaCommand*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[3]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D12MetaCommand> comObj, ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12MetaCommand* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12MetaCommand*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D12MetaCommand> comObj, Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12MetaCommand* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12MetaCommand*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[3]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D12MetaCommand> comObj, ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12MetaCommand* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12MetaCommand*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D12MetaCommand> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D12MetaCommand* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12MetaCommand*, Guid*, uint, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D12MetaCommand> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D12MetaCommand* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12MetaCommand*, Guid*, uint, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D12MetaCommand> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D12MetaCommand* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12MetaCommand*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[5]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D12MetaCommand> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D12MetaCommand* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12MetaCommand*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D12MetaCommand> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D12MetaCommand* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12MetaCommand*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[5]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D12MetaCommand> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D12MetaCommand* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12MetaCommand*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[5]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D12MetaCommand> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D12MetaCommand* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12MetaCommand*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D12MetaCommand> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D12MetaCommand* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12MetaCommand*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetName(this ComPtr<ID3D12MetaCommand> comObj, char* name) 
		{
			ID3D12MetaCommand* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12MetaCommand*, char*, HResult>)(handle->LpVtbl[6]))(handle, name);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetName(this ComPtr<ID3D12MetaCommand> comObj, ReadOnlySpan<char> name) 
		{
			ID3D12MetaCommand* handle = comObj.Handle;
			fixed (char* pname = name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12MetaCommand*, char*, HResult>)(handle->LpVtbl[6]))(handle, (char*)pname);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetName(this ComPtr<ID3D12MetaCommand> comObj, string name) 
		{
			ID3D12MetaCommand* handle = comObj.Handle;
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12MetaCommand*, char*, HResult>)(handle->LpVtbl[6]))(handle, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDevice(this ComPtr<ID3D12MetaCommand> comObj, Guid* riid, void** ppvDevice) 
		{
			ID3D12MetaCommand* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12MetaCommand*, Guid*, void**, HResult>)(handle->LpVtbl[7]))(handle, riid, ppvDevice);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDevice(this ComPtr<ID3D12MetaCommand> comObj, ref Guid riid, void** ppvDevice) 
		{
			ID3D12MetaCommand* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12MetaCommand*, Guid*, void**, HResult>)(handle->LpVtbl[7]))(handle, (Guid*)priid, ppvDevice);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDevice<T>(this ComPtr<ID3D12MetaCommand> comObj, out ComPtr<T> ppvDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12MetaCommand* handle = comObj.Handle;
			ppvDevice = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12MetaCommand*, Guid*, void**, HResult>)(handle->LpVtbl[7]))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvDevice.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDevice<T>(this ComPtr<ID3D12MetaCommand> comObj, ref Guid riid, out ComPtr<T> ppvDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12MetaCommand* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvDevice = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12MetaCommand*, Guid*, void**, HResult>)(handle->LpVtbl[7]))(handle, (Guid*)priid, (void**)ppvDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static ulong GetRequiredParameterResourceSize(this ComPtr<ID3D12MetaCommand> comObj, MetaCommandParameterStage stage, uint parameterIndex) 
		{
			ID3D12MetaCommand* handle = comObj.Handle;
			ulong ret = ((delegate* unmanaged[Stdcall]<ID3D12MetaCommand*, MetaCommandParameterStage, uint, ulong>)(handle->LpVtbl[8]))(handle, stage, parameterIndex);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D12GraphicsCommandList4> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D12GraphicsCommandList4> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D12GraphicsCommandList4> comObj) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D12GraphicsCommandList4> comObj) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D12GraphicsCommandList4> comObj, Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[3]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D12GraphicsCommandList4> comObj, Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[3]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D12GraphicsCommandList4> comObj, Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[3]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D12GraphicsCommandList4> comObj, Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[3]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D12GraphicsCommandList4> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, Guid*, uint, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, Guid*, uint, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D12GraphicsCommandList4> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[5]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D12GraphicsCommandList4> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[5]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D12GraphicsCommandList4> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[5]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetName(this ComPtr<ID3D12GraphicsCommandList4> comObj, char* name) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, char*, HResult>)(handle->LpVtbl[6]))(handle, name);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetName(this ComPtr<ID3D12GraphicsCommandList4> comObj, ReadOnlySpan<char> name) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (char* pname = name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, char*, HResult>)(handle->LpVtbl[6]))(handle, (char*)pname);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetName(this ComPtr<ID3D12GraphicsCommandList4> comObj, string name) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, char*, HResult>)(handle->LpVtbl[6]))(handle, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDevice(this ComPtr<ID3D12GraphicsCommandList4> comObj, Guid* riid, void** ppvDevice) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, Guid*, void**, HResult>)(handle->LpVtbl[7]))(handle, riid, ppvDevice);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDevice(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref Guid riid, void** ppvDevice) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, Guid*, void**, HResult>)(handle->LpVtbl[7]))(handle, (Guid*)priid, ppvDevice);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDevice<T>(this ComPtr<ID3D12GraphicsCommandList4> comObj, out ComPtr<T> ppvDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			ppvDevice = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, Guid*, void**, HResult>)(handle->LpVtbl[7]))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvDevice.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDevice<T>(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref Guid riid, out ComPtr<T> ppvDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvDevice = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, Guid*, void**, HResult>)(handle->LpVtbl[7]))(handle, (Guid*)priid, (void**)ppvDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static CommandListType GetType(this ComPtr<ID3D12GraphicsCommandList4> comObj) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			CommandListType ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, CommandListType>)(handle->LpVtbl[8]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult Close(this ComPtr<ID3D12GraphicsCommandList4> comObj) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, HResult>)(handle->LpVtbl[9]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult Reset(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12CommandAllocator* pAllocator, ID3D12PipelineState* pInitialState) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12CommandAllocator*, ID3D12PipelineState*, HResult>)(handle->LpVtbl[10]))(handle, pAllocator, pInitialState);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult Reset(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12CommandAllocator pAllocator, ID3D12PipelineState* pInitialState) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12CommandAllocator* ppAllocator = &pAllocator)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12CommandAllocator*, ID3D12PipelineState*, HResult>)(handle->LpVtbl[10]))(handle, (ID3D12CommandAllocator*)ppAllocator, pInitialState);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult Reset(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12CommandAllocator> pAllocator, ID3D12PipelineState* pInitialState) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12CommandAllocator*, ID3D12PipelineState*, HResult>)(handle->LpVtbl[10]))(handle, (ID3D12CommandAllocator*)pAllocator.Handle, pInitialState);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult Reset(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12CommandAllocator* pAllocator, ref ID3D12PipelineState pInitialState) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12PipelineState* ppInitialState = &pInitialState)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12CommandAllocator*, ID3D12PipelineState*, HResult>)(handle->LpVtbl[10]))(handle, pAllocator, (ID3D12PipelineState*)ppInitialState);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult Reset(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12CommandAllocator* pAllocator, ComPtr<ID3D12PipelineState> pInitialState) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12CommandAllocator*, ID3D12PipelineState*, HResult>)(handle->LpVtbl[10]))(handle, pAllocator, (ID3D12PipelineState*)pInitialState.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult Reset(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12CommandAllocator pAllocator, ref ID3D12PipelineState pInitialState) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12CommandAllocator* ppAllocator = &pAllocator)
			{
				fixed (ID3D12PipelineState* ppInitialState = &pInitialState)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12CommandAllocator*, ID3D12PipelineState*, HResult>)(handle->LpVtbl[10]))(handle, (ID3D12CommandAllocator*)ppAllocator, (ID3D12PipelineState*)ppInitialState);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult Reset(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12CommandAllocator> pAllocator, ComPtr<ID3D12PipelineState> pInitialState) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12CommandAllocator*, ID3D12PipelineState*, HResult>)(handle->LpVtbl[10]))(handle, (ID3D12CommandAllocator*)pAllocator.Handle, (ID3D12PipelineState*)pInitialState.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearState(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12PipelineState* pPipelineState) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12PipelineState*, void>)(handle->LpVtbl[11]))(handle, pPipelineState);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearState(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12PipelineState pPipelineState) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12PipelineState* ppPipelineState = &pPipelineState)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12PipelineState*, void>)(handle->LpVtbl[11]))(handle, (ID3D12PipelineState*)ppPipelineState);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearState(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12PipelineState> pPipelineState) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12PipelineState*, void>)(handle->LpVtbl[11]))(handle, (ID3D12PipelineState*)pPipelineState.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DrawInstanced(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint vertexCountPerInstance, uint instanceCount, uint startVertexLocation, uint startInstanceLocation) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, uint, uint, uint, void>)(handle->LpVtbl[12]))(handle, vertexCountPerInstance, instanceCount, startVertexLocation, startInstanceLocation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DrawIndexedInstanced(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint indexCountPerInstance, uint instanceCount, uint startIndexLocation, int baseVertexLocation, uint startInstanceLocation) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, uint, uint, int, uint, void>)(handle->LpVtbl[13]))(handle, indexCountPerInstance, instanceCount, startIndexLocation, baseVertexLocation, startInstanceLocation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void Dispatch(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint threadGroupCountX, uint threadGroupCountY, uint threadGroupCountZ) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, uint, uint, void>)(handle->LpVtbl[14]))(handle, threadGroupCountX, threadGroupCountY, threadGroupCountZ);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyBufferRegion(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, ulong numBytes) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, ulong, void>)(handle->LpVtbl[15]))(handle, pDstBuffer, dstOffset, pSrcBuffer, srcOffset, numBytes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyBufferRegion(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, ulong numBytes) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, ulong, void>)(handle->LpVtbl[15]))(handle, (ID3D12Resource*)ppDstBuffer, dstOffset, pSrcBuffer, srcOffset, numBytes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyBufferRegion(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, ulong numBytes) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, ulong, void>)(handle->LpVtbl[15]))(handle, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, pSrcBuffer, srcOffset, numBytes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyBufferRegion(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, ulong numBytes) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, ulong, void>)(handle->LpVtbl[15]))(handle, pDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, numBytes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyBufferRegion(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, ulong numBytes) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, ulong, void>)(handle->LpVtbl[15]))(handle, pDstBuffer, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, numBytes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyBufferRegion(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, ulong numBytes) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, ulong, void>)(handle->LpVtbl[15]))(handle, (ID3D12Resource*)ppDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, numBytes);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyBufferRegion(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, ulong numBytes) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, ulong, void>)(handle->LpVtbl[15]))(handle, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, numBytes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTextureRegion(this ComPtr<ID3D12GraphicsCommandList4> comObj, TextureCopyLocation* pDst, uint dstX, uint dstY, uint dstZ, TextureCopyLocation* pSrc, Box* pSrcBox) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, TextureCopyLocation*, uint, uint, uint, TextureCopyLocation*, Box*, void>)(handle->LpVtbl[16]))(handle, pDst, dstX, dstY, dstZ, pSrc, pSrcBox);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTextureRegion(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref TextureCopyLocation pDst, uint dstX, uint dstY, uint dstZ, TextureCopyLocation* pSrc, Box* pSrcBox) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (TextureCopyLocation* ppDst = &pDst)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, TextureCopyLocation*, uint, uint, uint, TextureCopyLocation*, Box*, void>)(handle->LpVtbl[16]))(handle, (TextureCopyLocation*)ppDst, dstX, dstY, dstZ, pSrc, pSrcBox);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTextureRegion(this ComPtr<ID3D12GraphicsCommandList4> comObj, TextureCopyLocation* pDst, uint dstX, uint dstY, uint dstZ, ref TextureCopyLocation pSrc, Box* pSrcBox) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (TextureCopyLocation* ppSrc = &pSrc)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, TextureCopyLocation*, uint, uint, uint, TextureCopyLocation*, Box*, void>)(handle->LpVtbl[16]))(handle, pDst, dstX, dstY, dstZ, (TextureCopyLocation*)ppSrc, pSrcBox);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTextureRegion(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref TextureCopyLocation pDst, uint dstX, uint dstY, uint dstZ, ref TextureCopyLocation pSrc, Box* pSrcBox) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (TextureCopyLocation* ppDst = &pDst)
			{
				fixed (TextureCopyLocation* ppSrc = &pSrc)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, TextureCopyLocation*, uint, uint, uint, TextureCopyLocation*, Box*, void>)(handle->LpVtbl[16]))(handle, (TextureCopyLocation*)ppDst, dstX, dstY, dstZ, (TextureCopyLocation*)ppSrc, pSrcBox);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTextureRegion(this ComPtr<ID3D12GraphicsCommandList4> comObj, TextureCopyLocation* pDst, uint dstX, uint dstY, uint dstZ, TextureCopyLocation* pSrc, ref Box pSrcBox) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (Box* ppSrcBox = &pSrcBox)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, TextureCopyLocation*, uint, uint, uint, TextureCopyLocation*, Box*, void>)(handle->LpVtbl[16]))(handle, pDst, dstX, dstY, dstZ, pSrc, (Box*)ppSrcBox);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTextureRegion(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref TextureCopyLocation pDst, uint dstX, uint dstY, uint dstZ, TextureCopyLocation* pSrc, ref Box pSrcBox) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (TextureCopyLocation* ppDst = &pDst)
			{
				fixed (Box* ppSrcBox = &pSrcBox)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, TextureCopyLocation*, uint, uint, uint, TextureCopyLocation*, Box*, void>)(handle->LpVtbl[16]))(handle, (TextureCopyLocation*)ppDst, dstX, dstY, dstZ, pSrc, (Box*)ppSrcBox);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTextureRegion(this ComPtr<ID3D12GraphicsCommandList4> comObj, TextureCopyLocation* pDst, uint dstX, uint dstY, uint dstZ, ref TextureCopyLocation pSrc, ref Box pSrcBox) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (TextureCopyLocation* ppSrc = &pSrc)
			{
				fixed (Box* ppSrcBox = &pSrcBox)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, TextureCopyLocation*, uint, uint, uint, TextureCopyLocation*, Box*, void>)(handle->LpVtbl[16]))(handle, pDst, dstX, dstY, dstZ, (TextureCopyLocation*)ppSrc, (Box*)ppSrcBox);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTextureRegion(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref TextureCopyLocation pDst, uint dstX, uint dstY, uint dstZ, ref TextureCopyLocation pSrc, ref Box pSrcBox) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (TextureCopyLocation* ppDst = &pDst)
			{
				fixed (TextureCopyLocation* ppSrc = &pSrc)
				{
					fixed (Box* ppSrcBox = &pSrcBox)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, TextureCopyLocation*, uint, uint, uint, TextureCopyLocation*, Box*, void>)(handle->LpVtbl[16]))(handle, (TextureCopyLocation*)ppDst, dstX, dstY, dstZ, (TextureCopyLocation*)ppSrc, (Box*)ppSrcBox);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyResource(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstResource, ID3D12Resource* pSrcResource) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ID3D12Resource*, void>)(handle->LpVtbl[17]))(handle, pDstResource, pSrcResource);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyResource(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pDstResource, ID3D12Resource* pSrcResource) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ID3D12Resource*, void>)(handle->LpVtbl[17]))(handle, (ID3D12Resource*)ppDstResource, pSrcResource);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyResource(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pDstResource, ID3D12Resource* pSrcResource) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ID3D12Resource*, void>)(handle->LpVtbl[17]))(handle, (ID3D12Resource*)pDstResource.Handle, pSrcResource);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyResource(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstResource, ref ID3D12Resource pSrcResource) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ID3D12Resource*, void>)(handle->LpVtbl[17]))(handle, pDstResource, (ID3D12Resource*)ppSrcResource);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyResource(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstResource, ComPtr<ID3D12Resource> pSrcResource) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ID3D12Resource*, void>)(handle->LpVtbl[17]))(handle, pDstResource, (ID3D12Resource*)pSrcResource.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyResource(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pDstResource, ref ID3D12Resource pSrcResource) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ID3D12Resource*, void>)(handle->LpVtbl[17]))(handle, (ID3D12Resource*)ppDstResource, (ID3D12Resource*)ppSrcResource);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyResource(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pDstResource, ComPtr<ID3D12Resource> pSrcResource) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ID3D12Resource*, void>)(handle->LpVtbl[17]))(handle, (ID3D12Resource*)pDstResource.Handle, (ID3D12Resource*)pSrcResource.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTiles(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ID3D12Resource* pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(handle->LpVtbl[18]))(handle, pTiledResource, pTileRegionStartCoordinate, pTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTiles(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ID3D12Resource* pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(handle->LpVtbl[18]))(handle, (ID3D12Resource*)ppTiledResource, pTileRegionStartCoordinate, pTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTiles(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ID3D12Resource* pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(handle->LpVtbl[18]))(handle, (ID3D12Resource*)pTiledResource.Handle, pTileRegionStartCoordinate, pTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTiles(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ID3D12Resource* pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(handle->LpVtbl[18]))(handle, pTiledResource, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, pTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTiles(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ID3D12Resource* pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(handle->LpVtbl[18]))(handle, (ID3D12Resource*)ppTiledResource, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, pTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTiles(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ID3D12Resource* pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(handle->LpVtbl[18]))(handle, (ID3D12Resource*)pTiledResource.Handle, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, pTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTiles(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ID3D12Resource* pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(handle->LpVtbl[18]))(handle, pTiledResource, pTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTiles(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ID3D12Resource* pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(handle->LpVtbl[18]))(handle, (ID3D12Resource*)ppTiledResource, pTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTiles(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ID3D12Resource* pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(handle->LpVtbl[18]))(handle, (ID3D12Resource*)pTiledResource.Handle, pTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTiles(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ID3D12Resource* pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(handle->LpVtbl[18]))(handle, pTiledResource, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTiles(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ID3D12Resource* pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
				{
					fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(handle->LpVtbl[18]))(handle, (ID3D12Resource*)ppTiledResource, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTiles(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ID3D12Resource* pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(handle->LpVtbl[18]))(handle, (ID3D12Resource*)pTiledResource.Handle, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTiles(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ref ID3D12Resource pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppBuffer = &pBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(handle->LpVtbl[18]))(handle, pTiledResource, pTileRegionStartCoordinate, pTileRegionSize, (ID3D12Resource*)ppBuffer, bufferStartOffsetInBytes, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTiles(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ComPtr<ID3D12Resource> pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(handle->LpVtbl[18]))(handle, pTiledResource, pTileRegionStartCoordinate, pTileRegionSize, (ID3D12Resource*)pBuffer.Handle, bufferStartOffsetInBytes, flags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTiles(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ref ID3D12Resource pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (ID3D12Resource* ppBuffer = &pBuffer)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(handle->LpVtbl[18]))(handle, (ID3D12Resource*)ppTiledResource, pTileRegionStartCoordinate, pTileRegionSize, (ID3D12Resource*)ppBuffer, bufferStartOffsetInBytes, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTiles(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ComPtr<ID3D12Resource> pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(handle->LpVtbl[18]))(handle, (ID3D12Resource*)pTiledResource.Handle, pTileRegionStartCoordinate, pTileRegionSize, (ID3D12Resource*)pBuffer.Handle, bufferStartOffsetInBytes, flags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTiles(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ref ID3D12Resource pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
			{
				fixed (ID3D12Resource* ppBuffer = &pBuffer)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(handle->LpVtbl[18]))(handle, pTiledResource, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, pTileRegionSize, (ID3D12Resource*)ppBuffer, bufferStartOffsetInBytes, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTiles(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ComPtr<ID3D12Resource> pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(handle->LpVtbl[18]))(handle, pTiledResource, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, pTileRegionSize, (ID3D12Resource*)pBuffer.Handle, bufferStartOffsetInBytes, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTiles(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ref ID3D12Resource pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
				{
					fixed (ID3D12Resource* ppBuffer = &pBuffer)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(handle->LpVtbl[18]))(handle, (ID3D12Resource*)ppTiledResource, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, pTileRegionSize, (ID3D12Resource*)ppBuffer, bufferStartOffsetInBytes, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTiles(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ComPtr<ID3D12Resource> pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(handle->LpVtbl[18]))(handle, (ID3D12Resource*)pTiledResource.Handle, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, pTileRegionSize, (ID3D12Resource*)pBuffer.Handle, bufferStartOffsetInBytes, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTiles(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ref ID3D12Resource pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
			{
				fixed (ID3D12Resource* ppBuffer = &pBuffer)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(handle->LpVtbl[18]))(handle, pTiledResource, pTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, (ID3D12Resource*)ppBuffer, bufferStartOffsetInBytes, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTiles(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ComPtr<ID3D12Resource> pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(handle->LpVtbl[18]))(handle, pTiledResource, pTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, (ID3D12Resource*)pBuffer.Handle, bufferStartOffsetInBytes, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTiles(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ref ID3D12Resource pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					fixed (ID3D12Resource* ppBuffer = &pBuffer)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(handle->LpVtbl[18]))(handle, (ID3D12Resource*)ppTiledResource, pTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, (ID3D12Resource*)ppBuffer, bufferStartOffsetInBytes, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTiles(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ComPtr<ID3D12Resource> pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(handle->LpVtbl[18]))(handle, (ID3D12Resource*)pTiledResource.Handle, pTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, (ID3D12Resource*)pBuffer.Handle, bufferStartOffsetInBytes, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTiles(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ref ID3D12Resource pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					fixed (ID3D12Resource* ppBuffer = &pBuffer)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(handle->LpVtbl[18]))(handle, pTiledResource, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, (ID3D12Resource*)ppBuffer, bufferStartOffsetInBytes, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTiles(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ComPtr<ID3D12Resource> pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(handle->LpVtbl[18]))(handle, pTiledResource, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, (ID3D12Resource*)pBuffer.Handle, bufferStartOffsetInBytes, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTiles(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ref ID3D12Resource pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
				{
					fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
					{
						fixed (ID3D12Resource* ppBuffer = &pBuffer)
						{
							((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(handle->LpVtbl[18]))(handle, (ID3D12Resource*)ppTiledResource, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, (ID3D12Resource*)ppBuffer, bufferStartOffsetInBytes, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyTiles(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ComPtr<ID3D12Resource> pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(handle->LpVtbl[18]))(handle, (ID3D12Resource*)pTiledResource.Handle, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, (ID3D12Resource*)pBuffer.Handle, bufferStartOffsetInBytes, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresource(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstResource, uint dstSubresource, ID3D12Resource* pSrcResource, uint srcSubresource, Format format) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, uint, ID3D12Resource*, uint, Format, void>)(handle->LpVtbl[19]))(handle, pDstResource, dstSubresource, pSrcResource, srcSubresource, format);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresource(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pDstResource, uint dstSubresource, ID3D12Resource* pSrcResource, uint srcSubresource, Format format) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, uint, ID3D12Resource*, uint, Format, void>)(handle->LpVtbl[19]))(handle, (ID3D12Resource*)ppDstResource, dstSubresource, pSrcResource, srcSubresource, format);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresource(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pDstResource, uint dstSubresource, ID3D12Resource* pSrcResource, uint srcSubresource, Format format) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, uint, ID3D12Resource*, uint, Format, void>)(handle->LpVtbl[19]))(handle, (ID3D12Resource*)pDstResource.Handle, dstSubresource, pSrcResource, srcSubresource, format);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresource(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstResource, uint dstSubresource, ref ID3D12Resource pSrcResource, uint srcSubresource, Format format) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, uint, ID3D12Resource*, uint, Format, void>)(handle->LpVtbl[19]))(handle, pDstResource, dstSubresource, (ID3D12Resource*)ppSrcResource, srcSubresource, format);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresource(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstResource, uint dstSubresource, ComPtr<ID3D12Resource> pSrcResource, uint srcSubresource, Format format) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, uint, ID3D12Resource*, uint, Format, void>)(handle->LpVtbl[19]))(handle, pDstResource, dstSubresource, (ID3D12Resource*)pSrcResource.Handle, srcSubresource, format);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresource(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pDstResource, uint dstSubresource, ref ID3D12Resource pSrcResource, uint srcSubresource, Format format) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, uint, ID3D12Resource*, uint, Format, void>)(handle->LpVtbl[19]))(handle, (ID3D12Resource*)ppDstResource, dstSubresource, (ID3D12Resource*)ppSrcResource, srcSubresource, format);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresource(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pDstResource, uint dstSubresource, ComPtr<ID3D12Resource> pSrcResource, uint srcSubresource, Format format) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, uint, ID3D12Resource*, uint, Format, void>)(handle->LpVtbl[19]))(handle, (ID3D12Resource*)pDstResource.Handle, dstSubresource, (ID3D12Resource*)pSrcResource.Handle, srcSubresource, format);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void IASetPrimitiveTopology(this ComPtr<ID3D12GraphicsCommandList4> comObj, PrimitiveTopology primitiveTopology) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, PrimitiveTopology, void>)(handle->LpVtbl[20]))(handle, primitiveTopology);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void RSSetViewports(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint numViewports, Viewport* pViewports) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, Viewport*, void>)(handle->LpVtbl[21]))(handle, numViewports, pViewports);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void RSSetViewports(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint numViewports, ref Viewport pViewports) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (Viewport* ppViewports = &pViewports)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, Viewport*, void>)(handle->LpVtbl[21]))(handle, numViewports, (Viewport*)ppViewports);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void RSSetScissorRects(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, Rect32*, void>)(handle->LpVtbl[22]))(handle, numRects, pRects);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void RSSetScissorRects(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (Rect32* ppRects = &pRects)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, Rect32*, void>)(handle->LpVtbl[22]))(handle, numRects, (Rect32*)ppRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void OMSetBlendFactor(this ComPtr<ID3D12GraphicsCommandList4> comObj, float* blendFactor) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, float*, void>)(handle->LpVtbl[23]))(handle, blendFactor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void OMSetBlendFactor(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref float blendFactor) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (float* pblendFactor = &blendFactor)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, float*, void>)(handle->LpVtbl[23]))(handle, (float*)pblendFactor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void OMSetBlendFactor(this ComPtr<ID3D12GraphicsCommandList4> comObj, ReadOnlySpan<float> blendFactor) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (float* pblendFactor = blendFactor)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, float*, void>)(handle->LpVtbl[23]))(handle, (float*)pblendFactor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void OMSetStencilRef(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint stencilRef) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, void>)(handle->LpVtbl[24]))(handle, stencilRef);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetPipelineState(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12PipelineState* pPipelineState) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12PipelineState*, void>)(handle->LpVtbl[25]))(handle, pPipelineState);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetPipelineState(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12PipelineState pPipelineState) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12PipelineState* ppPipelineState = &pPipelineState)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12PipelineState*, void>)(handle->LpVtbl[25]))(handle, (ID3D12PipelineState*)ppPipelineState);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetPipelineState(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12PipelineState> pPipelineState) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12PipelineState*, void>)(handle->LpVtbl[25]))(handle, (ID3D12PipelineState*)pPipelineState.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResourceBarrier(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint numBarriers, ResourceBarrier* pBarriers) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, ResourceBarrier*, void>)(handle->LpVtbl[26]))(handle, numBarriers, pBarriers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResourceBarrier(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint numBarriers, ref ResourceBarrier pBarriers) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ResourceBarrier* ppBarriers = &pBarriers)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, ResourceBarrier*, void>)(handle->LpVtbl[26]))(handle, numBarriers, (ResourceBarrier*)ppBarriers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ExecuteBundle(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12GraphicsCommandList* pCommandList) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12GraphicsCommandList*, void>)(handle->LpVtbl[27]))(handle, pCommandList);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ExecuteBundle(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12GraphicsCommandList pCommandList) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12GraphicsCommandList* ppCommandList = &pCommandList)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12GraphicsCommandList*, void>)(handle->LpVtbl[27]))(handle, (ID3D12GraphicsCommandList*)ppCommandList);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ExecuteBundle(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12GraphicsCommandList> pCommandList) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12GraphicsCommandList*, void>)(handle->LpVtbl[27]))(handle, (ID3D12GraphicsCommandList*)pCommandList.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetDescriptorHeaps(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint numDescriptorHeaps, ID3D12DescriptorHeap** ppDescriptorHeaps) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, ID3D12DescriptorHeap**, void>)(handle->LpVtbl[28]))(handle, numDescriptorHeaps, ppDescriptorHeaps);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetDescriptorHeaps(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint numDescriptorHeaps, ref ID3D12DescriptorHeap* ppDescriptorHeaps) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12DescriptorHeap** pppDescriptorHeaps = &ppDescriptorHeaps)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, ID3D12DescriptorHeap**, void>)(handle->LpVtbl[28]))(handle, numDescriptorHeaps, (ID3D12DescriptorHeap**)pppDescriptorHeaps);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetDescriptorHeaps(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint numDescriptorHeaps, ComPtr<ID3D12DescriptorHeap> ppDescriptorHeaps) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, ID3D12DescriptorHeap**, void>)(handle->LpVtbl[28]))(handle, numDescriptorHeaps, (ID3D12DescriptorHeap**)ppDescriptorHeaps.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetComputeRootSignature(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12RootSignature* pRootSignature) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12RootSignature*, void>)(handle->LpVtbl[29]))(handle, pRootSignature);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetComputeRootSignature(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12RootSignature pRootSignature) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12RootSignature* ppRootSignature = &pRootSignature)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12RootSignature*, void>)(handle->LpVtbl[29]))(handle, (ID3D12RootSignature*)ppRootSignature);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetGraphicsRootSignature(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12RootSignature* pRootSignature) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12RootSignature*, void>)(handle->LpVtbl[30]))(handle, pRootSignature);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetGraphicsRootSignature(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12RootSignature pRootSignature) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12RootSignature* ppRootSignature = &pRootSignature)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12RootSignature*, void>)(handle->LpVtbl[30]))(handle, (ID3D12RootSignature*)ppRootSignature);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetComputeRootDescriptorTable(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint rootParameterIndex, GpuDescriptorHandle baseDescriptor) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, GpuDescriptorHandle, void>)(handle->LpVtbl[31]))(handle, rootParameterIndex, baseDescriptor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetGraphicsRootDescriptorTable(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint rootParameterIndex, GpuDescriptorHandle baseDescriptor) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, GpuDescriptorHandle, void>)(handle->LpVtbl[32]))(handle, rootParameterIndex, baseDescriptor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetComputeRoot32BitConstant(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint rootParameterIndex, uint srcData, uint destOffsetIn32BitValues) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, uint, uint, void>)(handle->LpVtbl[33]))(handle, rootParameterIndex, srcData, destOffsetIn32BitValues);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetGraphicsRoot32BitConstant(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint rootParameterIndex, uint srcData, uint destOffsetIn32BitValues) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, uint, uint, void>)(handle->LpVtbl[34]))(handle, rootParameterIndex, srcData, destOffsetIn32BitValues);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetComputeRoot32BitConstants(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint rootParameterIndex, uint num32BitValuesToSet, void* pSrcData, uint destOffsetIn32BitValues) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, uint, void*, uint, void>)(handle->LpVtbl[35]))(handle, rootParameterIndex, num32BitValuesToSet, pSrcData, destOffsetIn32BitValues);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetGraphicsRoot32BitConstants(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint rootParameterIndex, uint num32BitValuesToSet, void* pSrcData, uint destOffsetIn32BitValues) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, uint, void*, uint, void>)(handle->LpVtbl[36]))(handle, rootParameterIndex, num32BitValuesToSet, pSrcData, destOffsetIn32BitValues);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetComputeRootConstantBufferView(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint rootParameterIndex, ulong bufferLocation) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, ulong, void>)(handle->LpVtbl[37]))(handle, rootParameterIndex, bufferLocation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetGraphicsRootConstantBufferView(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint rootParameterIndex, ulong bufferLocation) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, ulong, void>)(handle->LpVtbl[38]))(handle, rootParameterIndex, bufferLocation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetComputeRootShaderResourceView(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint rootParameterIndex, ulong bufferLocation) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, ulong, void>)(handle->LpVtbl[39]))(handle, rootParameterIndex, bufferLocation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetGraphicsRootShaderResourceView(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint rootParameterIndex, ulong bufferLocation) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, ulong, void>)(handle->LpVtbl[40]))(handle, rootParameterIndex, bufferLocation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetComputeRootUnorderedAccessView(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint rootParameterIndex, ulong bufferLocation) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, ulong, void>)(handle->LpVtbl[41]))(handle, rootParameterIndex, bufferLocation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetGraphicsRootUnorderedAccessView(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint rootParameterIndex, ulong bufferLocation) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, ulong, void>)(handle->LpVtbl[42]))(handle, rootParameterIndex, bufferLocation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void IASetIndexBuffer(this ComPtr<ID3D12GraphicsCommandList4> comObj, IndexBufferView* pView) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, IndexBufferView*, void>)(handle->LpVtbl[43]))(handle, pView);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void IASetIndexBuffer(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref IndexBufferView pView) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (IndexBufferView* ppView = &pView)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, IndexBufferView*, void>)(handle->LpVtbl[43]))(handle, (IndexBufferView*)ppView);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void IASetVertexBuffers(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint startSlot, uint numViews, VertexBufferView* pViews) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, uint, VertexBufferView*, void>)(handle->LpVtbl[44]))(handle, startSlot, numViews, pViews);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void IASetVertexBuffers(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint startSlot, uint numViews, ref VertexBufferView pViews) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (VertexBufferView* ppViews = &pViews)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, uint, VertexBufferView*, void>)(handle->LpVtbl[44]))(handle, startSlot, numViews, (VertexBufferView*)ppViews);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SOSetTargets(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint startSlot, uint numViews, StreamOutputBufferView* pViews) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, uint, StreamOutputBufferView*, void>)(handle->LpVtbl[45]))(handle, startSlot, numViews, pViews);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SOSetTargets(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint startSlot, uint numViews, ref StreamOutputBufferView pViews) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (StreamOutputBufferView* ppViews = &pViews)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, uint, StreamOutputBufferView*, void>)(handle->LpVtbl[45]))(handle, startSlot, numViews, (StreamOutputBufferView*)ppViews);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void OMSetRenderTargets(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint numRenderTargetDescriptors, CpuDescriptorHandle* pRenderTargetDescriptors, Bool32 rTsSingleHandleToDescriptorRange, CpuDescriptorHandle* pDepthStencilDescriptor) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, CpuDescriptorHandle*, Bool32, CpuDescriptorHandle*, void>)(handle->LpVtbl[46]))(handle, numRenderTargetDescriptors, pRenderTargetDescriptors, rTsSingleHandleToDescriptorRange, pDepthStencilDescriptor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void OMSetRenderTargets(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint numRenderTargetDescriptors, ref CpuDescriptorHandle pRenderTargetDescriptors, Bool32 rTsSingleHandleToDescriptorRange, CpuDescriptorHandle* pDepthStencilDescriptor) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (CpuDescriptorHandle* ppRenderTargetDescriptors = &pRenderTargetDescriptors)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, CpuDescriptorHandle*, Bool32, CpuDescriptorHandle*, void>)(handle->LpVtbl[46]))(handle, numRenderTargetDescriptors, (CpuDescriptorHandle*)ppRenderTargetDescriptors, rTsSingleHandleToDescriptorRange, pDepthStencilDescriptor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void OMSetRenderTargets(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint numRenderTargetDescriptors, CpuDescriptorHandle* pRenderTargetDescriptors, Bool32 rTsSingleHandleToDescriptorRange, ref CpuDescriptorHandle pDepthStencilDescriptor) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (CpuDescriptorHandle* ppDepthStencilDescriptor = &pDepthStencilDescriptor)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, CpuDescriptorHandle*, Bool32, CpuDescriptorHandle*, void>)(handle->LpVtbl[46]))(handle, numRenderTargetDescriptors, pRenderTargetDescriptors, rTsSingleHandleToDescriptorRange, (CpuDescriptorHandle*)ppDepthStencilDescriptor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void OMSetRenderTargets(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint numRenderTargetDescriptors, ref CpuDescriptorHandle pRenderTargetDescriptors, Bool32 rTsSingleHandleToDescriptorRange, ref CpuDescriptorHandle pDepthStencilDescriptor) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (CpuDescriptorHandle* ppRenderTargetDescriptors = &pRenderTargetDescriptors)
			{
				fixed (CpuDescriptorHandle* ppDepthStencilDescriptor = &pDepthStencilDescriptor)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, CpuDescriptorHandle*, Bool32, CpuDescriptorHandle*, void>)(handle->LpVtbl[46]))(handle, numRenderTargetDescriptors, (CpuDescriptorHandle*)ppRenderTargetDescriptors, rTsSingleHandleToDescriptorRange, (CpuDescriptorHandle*)ppDepthStencilDescriptor);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearDepthStencilView(this ComPtr<ID3D12GraphicsCommandList4> comObj, CpuDescriptorHandle depthStencilView, ClearFlags clearFlags, float depth, byte stencil, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, CpuDescriptorHandle, ClearFlags, float, byte, uint, Rect32*, void>)(handle->LpVtbl[47]))(handle, depthStencilView, clearFlags, depth, stencil, numRects, pRects);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearDepthStencilView(this ComPtr<ID3D12GraphicsCommandList4> comObj, CpuDescriptorHandle depthStencilView, ClearFlags clearFlags, float depth, byte stencil, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (Rect32* ppRects = &pRects)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, CpuDescriptorHandle, ClearFlags, float, byte, uint, Rect32*, void>)(handle->LpVtbl[47]))(handle, depthStencilView, clearFlags, depth, stencil, numRects, (Rect32*)ppRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearRenderTargetView(this ComPtr<ID3D12GraphicsCommandList4> comObj, CpuDescriptorHandle renderTargetView, float* colorRgba, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, CpuDescriptorHandle, float*, uint, Rect32*, void>)(handle->LpVtbl[48]))(handle, renderTargetView, colorRgba, numRects, pRects);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearRenderTargetView(this ComPtr<ID3D12GraphicsCommandList4> comObj, CpuDescriptorHandle renderTargetView, ref float colorRgba, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (float* pcolorRgba = &colorRgba)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, CpuDescriptorHandle, float*, uint, Rect32*, void>)(handle->LpVtbl[48]))(handle, renderTargetView, (float*)pcolorRgba, numRects, pRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearRenderTargetView(this ComPtr<ID3D12GraphicsCommandList4> comObj, CpuDescriptorHandle renderTargetView, ReadOnlySpan<float> colorRgba, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (float* pcolorRgba = colorRgba)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, CpuDescriptorHandle, float*, uint, Rect32*, void>)(handle->LpVtbl[48]))(handle, renderTargetView, (float*)pcolorRgba, numRects, pRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearRenderTargetView(this ComPtr<ID3D12GraphicsCommandList4> comObj, CpuDescriptorHandle renderTargetView, float* colorRgba, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (Rect32* ppRects = &pRects)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, CpuDescriptorHandle, float*, uint, Rect32*, void>)(handle->LpVtbl[48]))(handle, renderTargetView, colorRgba, numRects, (Rect32*)ppRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearRenderTargetView(this ComPtr<ID3D12GraphicsCommandList4> comObj, CpuDescriptorHandle renderTargetView, ref float colorRgba, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (float* pcolorRgba = &colorRgba)
			{
				fixed (Rect32* ppRects = &pRects)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, CpuDescriptorHandle, float*, uint, Rect32*, void>)(handle->LpVtbl[48]))(handle, renderTargetView, (float*)pcolorRgba, numRects, (Rect32*)ppRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearRenderTargetView(this ComPtr<ID3D12GraphicsCommandList4> comObj, CpuDescriptorHandle renderTargetView, ReadOnlySpan<float> colorRgba, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (float* pcolorRgba = colorRgba)
			{
				fixed (Rect32* ppRects = &pRects)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, CpuDescriptorHandle, float*, uint, Rect32*, void>)(handle->LpVtbl[48]))(handle, renderTargetView, (float*)pcolorRgba, numRects, (Rect32*)ppRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewUint(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ID3D12Resource* pResource, uint* values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(handle->LpVtbl[49]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, pResource, values, numRects, pRects);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewUint(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ref ID3D12Resource pResource, uint* values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(handle->LpVtbl[49]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)ppResource, values, numRects, pRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewUint(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ComPtr<ID3D12Resource> pResource, uint* values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(handle->LpVtbl[49]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)pResource.Handle, values, numRects, pRects);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewUint(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ID3D12Resource* pResource, ref uint values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (uint* pvalues = &values)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(handle->LpVtbl[49]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, pResource, (uint*)pvalues, numRects, pRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewUint(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ID3D12Resource* pResource, ReadOnlySpan<uint> values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (uint* pvalues = values)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(handle->LpVtbl[49]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, pResource, (uint*)pvalues, numRects, pRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewUint(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ref ID3D12Resource pResource, ref uint values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (uint* pvalues = &values)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(handle->LpVtbl[49]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)ppResource, (uint*)pvalues, numRects, pRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewUint(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ref ID3D12Resource pResource, ReadOnlySpan<uint> values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (uint* pvalues = values)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(handle->LpVtbl[49]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)ppResource, (uint*)pvalues, numRects, pRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewUint(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ComPtr<ID3D12Resource> pResource, ref uint values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (uint* pvalues = &values)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(handle->LpVtbl[49]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)pResource.Handle, (uint*)pvalues, numRects, pRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewUint(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ID3D12Resource* pResource, uint* values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (Rect32* ppRects = &pRects)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(handle->LpVtbl[49]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, pResource, values, numRects, (Rect32*)ppRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewUint(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ref ID3D12Resource pResource, uint* values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (Rect32* ppRects = &pRects)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(handle->LpVtbl[49]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)ppResource, values, numRects, (Rect32*)ppRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewUint(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ComPtr<ID3D12Resource> pResource, uint* values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (Rect32* ppRects = &pRects)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(handle->LpVtbl[49]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)pResource.Handle, values, numRects, (Rect32*)ppRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewUint(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ID3D12Resource* pResource, ref uint values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (uint* pvalues = &values)
			{
				fixed (Rect32* ppRects = &pRects)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(handle->LpVtbl[49]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, pResource, (uint*)pvalues, numRects, (Rect32*)ppRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewUint(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ID3D12Resource* pResource, ReadOnlySpan<uint> values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (uint* pvalues = values)
			{
				fixed (Rect32* ppRects = &pRects)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(handle->LpVtbl[49]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, pResource, (uint*)pvalues, numRects, (Rect32*)ppRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewUint(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ref ID3D12Resource pResource, ref uint values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (uint* pvalues = &values)
				{
					fixed (Rect32* ppRects = &pRects)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(handle->LpVtbl[49]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)ppResource, (uint*)pvalues, numRects, (Rect32*)ppRects);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewUint(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ref ID3D12Resource pResource, ReadOnlySpan<uint> values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (uint* pvalues = values)
				{
					fixed (Rect32* ppRects = &pRects)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(handle->LpVtbl[49]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)ppResource, (uint*)pvalues, numRects, (Rect32*)ppRects);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewUint(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ComPtr<ID3D12Resource> pResource, ref uint values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (uint* pvalues = &values)
			{
				fixed (Rect32* ppRects = &pRects)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(handle->LpVtbl[49]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)pResource.Handle, (uint*)pvalues, numRects, (Rect32*)ppRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewFloat(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ID3D12Resource* pResource, float* values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(handle->LpVtbl[50]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, pResource, values, numRects, pRects);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewFloat(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ref ID3D12Resource pResource, float* values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(handle->LpVtbl[50]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)ppResource, values, numRects, pRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewFloat(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ComPtr<ID3D12Resource> pResource, float* values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(handle->LpVtbl[50]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)pResource.Handle, values, numRects, pRects);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewFloat(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ID3D12Resource* pResource, ref float values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (float* pvalues = &values)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(handle->LpVtbl[50]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, pResource, (float*)pvalues, numRects, pRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewFloat(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ID3D12Resource* pResource, ReadOnlySpan<float> values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (float* pvalues = values)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(handle->LpVtbl[50]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, pResource, (float*)pvalues, numRects, pRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewFloat(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ref ID3D12Resource pResource, ref float values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (float* pvalues = &values)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(handle->LpVtbl[50]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)ppResource, (float*)pvalues, numRects, pRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewFloat(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ref ID3D12Resource pResource, ReadOnlySpan<float> values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (float* pvalues = values)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(handle->LpVtbl[50]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)ppResource, (float*)pvalues, numRects, pRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewFloat(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ComPtr<ID3D12Resource> pResource, ref float values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (float* pvalues = &values)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(handle->LpVtbl[50]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)pResource.Handle, (float*)pvalues, numRects, pRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewFloat(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ID3D12Resource* pResource, float* values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (Rect32* ppRects = &pRects)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(handle->LpVtbl[50]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, pResource, values, numRects, (Rect32*)ppRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewFloat(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ref ID3D12Resource pResource, float* values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (Rect32* ppRects = &pRects)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(handle->LpVtbl[50]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)ppResource, values, numRects, (Rect32*)ppRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewFloat(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ComPtr<ID3D12Resource> pResource, float* values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (Rect32* ppRects = &pRects)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(handle->LpVtbl[50]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)pResource.Handle, values, numRects, (Rect32*)ppRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewFloat(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ID3D12Resource* pResource, ref float values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (float* pvalues = &values)
			{
				fixed (Rect32* ppRects = &pRects)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(handle->LpVtbl[50]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, pResource, (float*)pvalues, numRects, (Rect32*)ppRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewFloat(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ID3D12Resource* pResource, ReadOnlySpan<float> values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (float* pvalues = values)
			{
				fixed (Rect32* ppRects = &pRects)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(handle->LpVtbl[50]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, pResource, (float*)pvalues, numRects, (Rect32*)ppRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewFloat(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ref ID3D12Resource pResource, ref float values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (float* pvalues = &values)
				{
					fixed (Rect32* ppRects = &pRects)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(handle->LpVtbl[50]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)ppResource, (float*)pvalues, numRects, (Rect32*)ppRects);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewFloat(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ref ID3D12Resource pResource, ReadOnlySpan<float> values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (float* pvalues = values)
				{
					fixed (Rect32* ppRects = &pRects)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(handle->LpVtbl[50]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)ppResource, (float*)pvalues, numRects, (Rect32*)ppRects);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearUnorderedAccessViewFloat(this ComPtr<ID3D12GraphicsCommandList4> comObj, GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ComPtr<ID3D12Resource> pResource, ref float values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (float* pvalues = &values)
			{
				fixed (Rect32* ppRects = &pRects)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(handle->LpVtbl[50]))(handle, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)pResource.Handle, (float*)pvalues, numRects, (Rect32*)ppRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DiscardResource(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pResource, DiscardRegion* pRegion) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, DiscardRegion*, void>)(handle->LpVtbl[51]))(handle, pResource, pRegion);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DiscardResource(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pResource, DiscardRegion* pRegion) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, DiscardRegion*, void>)(handle->LpVtbl[51]))(handle, (ID3D12Resource*)ppResource, pRegion);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DiscardResource(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pResource, DiscardRegion* pRegion) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, DiscardRegion*, void>)(handle->LpVtbl[51]))(handle, (ID3D12Resource*)pResource.Handle, pRegion);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DiscardResource(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pResource, ref DiscardRegion pRegion) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (DiscardRegion* ppRegion = &pRegion)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, DiscardRegion*, void>)(handle->LpVtbl[51]))(handle, pResource, (DiscardRegion*)ppRegion);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DiscardResource(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pResource, ref DiscardRegion pRegion) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (DiscardRegion* ppRegion = &pRegion)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, DiscardRegion*, void>)(handle->LpVtbl[51]))(handle, (ID3D12Resource*)ppResource, (DiscardRegion*)ppRegion);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DiscardResource(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pResource, ref DiscardRegion pRegion) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (DiscardRegion* ppRegion = &pRegion)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, DiscardRegion*, void>)(handle->LpVtbl[51]))(handle, (ID3D12Resource*)pResource.Handle, (DiscardRegion*)ppRegion);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void BeginQuery(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12QueryHeap* pQueryHeap, QueryType type, uint index) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12QueryHeap*, QueryType, uint, void>)(handle->LpVtbl[52]))(handle, pQueryHeap, type, index);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void BeginQuery(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12QueryHeap pQueryHeap, QueryType type, uint index) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12QueryHeap* ppQueryHeap = &pQueryHeap)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12QueryHeap*, QueryType, uint, void>)(handle->LpVtbl[52]))(handle, (ID3D12QueryHeap*)ppQueryHeap, type, index);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void EndQuery(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12QueryHeap* pQueryHeap, QueryType type, uint index) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12QueryHeap*, QueryType, uint, void>)(handle->LpVtbl[53]))(handle, pQueryHeap, type, index);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void EndQuery(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12QueryHeap pQueryHeap, QueryType type, uint index) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12QueryHeap* ppQueryHeap = &pQueryHeap)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12QueryHeap*, QueryType, uint, void>)(handle->LpVtbl[53]))(handle, (ID3D12QueryHeap*)ppQueryHeap, type, index);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveQueryData(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12QueryHeap* pQueryHeap, QueryType type, uint startIndex, uint numQueries, ID3D12Resource* pDestinationBuffer, ulong alignedDestinationBufferOffset) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12QueryHeap*, QueryType, uint, uint, ID3D12Resource*, ulong, void>)(handle->LpVtbl[54]))(handle, pQueryHeap, type, startIndex, numQueries, pDestinationBuffer, alignedDestinationBufferOffset);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveQueryData(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12QueryHeap pQueryHeap, QueryType type, uint startIndex, uint numQueries, ID3D12Resource* pDestinationBuffer, ulong alignedDestinationBufferOffset) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12QueryHeap* ppQueryHeap = &pQueryHeap)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12QueryHeap*, QueryType, uint, uint, ID3D12Resource*, ulong, void>)(handle->LpVtbl[54]))(handle, (ID3D12QueryHeap*)ppQueryHeap, type, startIndex, numQueries, pDestinationBuffer, alignedDestinationBufferOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveQueryData(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12QueryHeap* pQueryHeap, QueryType type, uint startIndex, uint numQueries, ref ID3D12Resource pDestinationBuffer, ulong alignedDestinationBufferOffset) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDestinationBuffer = &pDestinationBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12QueryHeap*, QueryType, uint, uint, ID3D12Resource*, ulong, void>)(handle->LpVtbl[54]))(handle, pQueryHeap, type, startIndex, numQueries, (ID3D12Resource*)ppDestinationBuffer, alignedDestinationBufferOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveQueryData(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12QueryHeap* pQueryHeap, QueryType type, uint startIndex, uint numQueries, ComPtr<ID3D12Resource> pDestinationBuffer, ulong alignedDestinationBufferOffset) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12QueryHeap*, QueryType, uint, uint, ID3D12Resource*, ulong, void>)(handle->LpVtbl[54]))(handle, pQueryHeap, type, startIndex, numQueries, (ID3D12Resource*)pDestinationBuffer.Handle, alignedDestinationBufferOffset);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveQueryData(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12QueryHeap pQueryHeap, QueryType type, uint startIndex, uint numQueries, ref ID3D12Resource pDestinationBuffer, ulong alignedDestinationBufferOffset) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12QueryHeap* ppQueryHeap = &pQueryHeap)
			{
				fixed (ID3D12Resource* ppDestinationBuffer = &pDestinationBuffer)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12QueryHeap*, QueryType, uint, uint, ID3D12Resource*, ulong, void>)(handle->LpVtbl[54]))(handle, (ID3D12QueryHeap*)ppQueryHeap, type, startIndex, numQueries, (ID3D12Resource*)ppDestinationBuffer, alignedDestinationBufferOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveQueryData(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12QueryHeap pQueryHeap, QueryType type, uint startIndex, uint numQueries, ComPtr<ID3D12Resource> pDestinationBuffer, ulong alignedDestinationBufferOffset) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12QueryHeap* ppQueryHeap = &pQueryHeap)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12QueryHeap*, QueryType, uint, uint, ID3D12Resource*, ulong, void>)(handle->LpVtbl[54]))(handle, (ID3D12QueryHeap*)ppQueryHeap, type, startIndex, numQueries, (ID3D12Resource*)pDestinationBuffer.Handle, alignedDestinationBufferOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetPredication(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pBuffer, ulong alignedBufferOffset, PredicationOp operation) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, PredicationOp, void>)(handle->LpVtbl[55]))(handle, pBuffer, alignedBufferOffset, operation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetPredication(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pBuffer, ulong alignedBufferOffset, PredicationOp operation) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppBuffer = &pBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, PredicationOp, void>)(handle->LpVtbl[55]))(handle, (ID3D12Resource*)ppBuffer, alignedBufferOffset, operation);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetPredication(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pBuffer, ulong alignedBufferOffset, PredicationOp operation) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, PredicationOp, void>)(handle->LpVtbl[55]))(handle, (ID3D12Resource*)pBuffer.Handle, alignedBufferOffset, operation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetMarker(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint metadata, void* pData, uint size) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, void*, uint, void>)(handle->LpVtbl[56]))(handle, metadata, pData, size);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void BeginEvent(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint metadata, void* pData, uint size) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, void*, uint, void>)(handle->LpVtbl[57]))(handle, metadata, pData, size);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void EndEvent(this ComPtr<ID3D12GraphicsCommandList4> comObj) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, void>)(handle->LpVtbl[58]))(handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ExecuteIndirect(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12CommandSignature* pCommandSignature, uint maxCommandCount, ID3D12Resource* pArgumentBuffer, ulong argumentBufferOffset, ID3D12Resource* pCountBuffer, ulong countBufferOffset) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12CommandSignature*, uint, ID3D12Resource*, ulong, ID3D12Resource*, ulong, void>)(handle->LpVtbl[59]))(handle, pCommandSignature, maxCommandCount, pArgumentBuffer, argumentBufferOffset, pCountBuffer, countBufferOffset);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ExecuteIndirect(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12CommandSignature pCommandSignature, uint maxCommandCount, ID3D12Resource* pArgumentBuffer, ulong argumentBufferOffset, ID3D12Resource* pCountBuffer, ulong countBufferOffset) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12CommandSignature* ppCommandSignature = &pCommandSignature)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12CommandSignature*, uint, ID3D12Resource*, ulong, ID3D12Resource*, ulong, void>)(handle->LpVtbl[59]))(handle, (ID3D12CommandSignature*)ppCommandSignature, maxCommandCount, pArgumentBuffer, argumentBufferOffset, pCountBuffer, countBufferOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ExecuteIndirect(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12CommandSignature* pCommandSignature, uint maxCommandCount, ref ID3D12Resource pArgumentBuffer, ulong argumentBufferOffset, ID3D12Resource* pCountBuffer, ulong countBufferOffset) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppArgumentBuffer = &pArgumentBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12CommandSignature*, uint, ID3D12Resource*, ulong, ID3D12Resource*, ulong, void>)(handle->LpVtbl[59]))(handle, pCommandSignature, maxCommandCount, (ID3D12Resource*)ppArgumentBuffer, argumentBufferOffset, pCountBuffer, countBufferOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ExecuteIndirect(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12CommandSignature* pCommandSignature, uint maxCommandCount, ComPtr<ID3D12Resource> pArgumentBuffer, ulong argumentBufferOffset, ID3D12Resource* pCountBuffer, ulong countBufferOffset) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12CommandSignature*, uint, ID3D12Resource*, ulong, ID3D12Resource*, ulong, void>)(handle->LpVtbl[59]))(handle, pCommandSignature, maxCommandCount, (ID3D12Resource*)pArgumentBuffer.Handle, argumentBufferOffset, pCountBuffer, countBufferOffset);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ExecuteIndirect(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12CommandSignature pCommandSignature, uint maxCommandCount, ref ID3D12Resource pArgumentBuffer, ulong argumentBufferOffset, ID3D12Resource* pCountBuffer, ulong countBufferOffset) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12CommandSignature* ppCommandSignature = &pCommandSignature)
			{
				fixed (ID3D12Resource* ppArgumentBuffer = &pArgumentBuffer)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12CommandSignature*, uint, ID3D12Resource*, ulong, ID3D12Resource*, ulong, void>)(handle->LpVtbl[59]))(handle, (ID3D12CommandSignature*)ppCommandSignature, maxCommandCount, (ID3D12Resource*)ppArgumentBuffer, argumentBufferOffset, pCountBuffer, countBufferOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ExecuteIndirect(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12CommandSignature pCommandSignature, uint maxCommandCount, ComPtr<ID3D12Resource> pArgumentBuffer, ulong argumentBufferOffset, ID3D12Resource* pCountBuffer, ulong countBufferOffset) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12CommandSignature* ppCommandSignature = &pCommandSignature)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12CommandSignature*, uint, ID3D12Resource*, ulong, ID3D12Resource*, ulong, void>)(handle->LpVtbl[59]))(handle, (ID3D12CommandSignature*)ppCommandSignature, maxCommandCount, (ID3D12Resource*)pArgumentBuffer.Handle, argumentBufferOffset, pCountBuffer, countBufferOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ExecuteIndirect(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12CommandSignature* pCommandSignature, uint maxCommandCount, ID3D12Resource* pArgumentBuffer, ulong argumentBufferOffset, ref ID3D12Resource pCountBuffer, ulong countBufferOffset) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppCountBuffer = &pCountBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12CommandSignature*, uint, ID3D12Resource*, ulong, ID3D12Resource*, ulong, void>)(handle->LpVtbl[59]))(handle, pCommandSignature, maxCommandCount, pArgumentBuffer, argumentBufferOffset, (ID3D12Resource*)ppCountBuffer, countBufferOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ExecuteIndirect(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12CommandSignature* pCommandSignature, uint maxCommandCount, ID3D12Resource* pArgumentBuffer, ulong argumentBufferOffset, ComPtr<ID3D12Resource> pCountBuffer, ulong countBufferOffset) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12CommandSignature*, uint, ID3D12Resource*, ulong, ID3D12Resource*, ulong, void>)(handle->LpVtbl[59]))(handle, pCommandSignature, maxCommandCount, pArgumentBuffer, argumentBufferOffset, (ID3D12Resource*)pCountBuffer.Handle, countBufferOffset);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ExecuteIndirect(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12CommandSignature pCommandSignature, uint maxCommandCount, ID3D12Resource* pArgumentBuffer, ulong argumentBufferOffset, ref ID3D12Resource pCountBuffer, ulong countBufferOffset) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12CommandSignature* ppCommandSignature = &pCommandSignature)
			{
				fixed (ID3D12Resource* ppCountBuffer = &pCountBuffer)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12CommandSignature*, uint, ID3D12Resource*, ulong, ID3D12Resource*, ulong, void>)(handle->LpVtbl[59]))(handle, (ID3D12CommandSignature*)ppCommandSignature, maxCommandCount, pArgumentBuffer, argumentBufferOffset, (ID3D12Resource*)ppCountBuffer, countBufferOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ExecuteIndirect(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12CommandSignature pCommandSignature, uint maxCommandCount, ID3D12Resource* pArgumentBuffer, ulong argumentBufferOffset, ComPtr<ID3D12Resource> pCountBuffer, ulong countBufferOffset) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12CommandSignature* ppCommandSignature = &pCommandSignature)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12CommandSignature*, uint, ID3D12Resource*, ulong, ID3D12Resource*, ulong, void>)(handle->LpVtbl[59]))(handle, (ID3D12CommandSignature*)ppCommandSignature, maxCommandCount, pArgumentBuffer, argumentBufferOffset, (ID3D12Resource*)pCountBuffer.Handle, countBufferOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ExecuteIndirect(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12CommandSignature* pCommandSignature, uint maxCommandCount, ref ID3D12Resource pArgumentBuffer, ulong argumentBufferOffset, ref ID3D12Resource pCountBuffer, ulong countBufferOffset) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppArgumentBuffer = &pArgumentBuffer)
			{
				fixed (ID3D12Resource* ppCountBuffer = &pCountBuffer)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12CommandSignature*, uint, ID3D12Resource*, ulong, ID3D12Resource*, ulong, void>)(handle->LpVtbl[59]))(handle, pCommandSignature, maxCommandCount, (ID3D12Resource*)ppArgumentBuffer, argumentBufferOffset, (ID3D12Resource*)ppCountBuffer, countBufferOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ExecuteIndirect(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12CommandSignature* pCommandSignature, uint maxCommandCount, ComPtr<ID3D12Resource> pArgumentBuffer, ulong argumentBufferOffset, ComPtr<ID3D12Resource> pCountBuffer, ulong countBufferOffset) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12CommandSignature*, uint, ID3D12Resource*, ulong, ID3D12Resource*, ulong, void>)(handle->LpVtbl[59]))(handle, pCommandSignature, maxCommandCount, (ID3D12Resource*)pArgumentBuffer.Handle, argumentBufferOffset, (ID3D12Resource*)pCountBuffer.Handle, countBufferOffset);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ExecuteIndirect(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12CommandSignature pCommandSignature, uint maxCommandCount, ref ID3D12Resource pArgumentBuffer, ulong argumentBufferOffset, ref ID3D12Resource pCountBuffer, ulong countBufferOffset) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12CommandSignature* ppCommandSignature = &pCommandSignature)
			{
				fixed (ID3D12Resource* ppArgumentBuffer = &pArgumentBuffer)
				{
					fixed (ID3D12Resource* ppCountBuffer = &pCountBuffer)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12CommandSignature*, uint, ID3D12Resource*, ulong, ID3D12Resource*, ulong, void>)(handle->LpVtbl[59]))(handle, (ID3D12CommandSignature*)ppCommandSignature, maxCommandCount, (ID3D12Resource*)ppArgumentBuffer, argumentBufferOffset, (ID3D12Resource*)ppCountBuffer, countBufferOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ExecuteIndirect(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12CommandSignature pCommandSignature, uint maxCommandCount, ComPtr<ID3D12Resource> pArgumentBuffer, ulong argumentBufferOffset, ComPtr<ID3D12Resource> pCountBuffer, ulong countBufferOffset) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12CommandSignature* ppCommandSignature = &pCommandSignature)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12CommandSignature*, uint, ID3D12Resource*, ulong, ID3D12Resource*, ulong, void>)(handle->LpVtbl[59]))(handle, (ID3D12CommandSignature*)ppCommandSignature, maxCommandCount, (ID3D12Resource*)pArgumentBuffer.Handle, argumentBufferOffset, (ID3D12Resource*)pCountBuffer.Handle, countBufferOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[60]))(handle, pDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, ppDependentResources, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[60]))(handle, (ID3D12Resource*)ppDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, ppDependentResources, pDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[60]))(handle, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, pSrcBuffer, srcOffset, dependencies, ppDependentResources, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[60]))(handle, pDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, ppDependentResources, pDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[60]))(handle, pDstBuffer, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, ppDependentResources, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[60]))(handle, (ID3D12Resource*)ppDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, ppDependentResources, pDependentSubresourceRanges);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[60]))(handle, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, ppDependentResources, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[60]))(handle, pDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, pDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[60]))(handle, pDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[60]))(handle, (ID3D12Resource*)ppDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, pDependentSubresourceRanges);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[60]))(handle, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
			{
				fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[60]))(handle, pDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, pDependentSubresourceRanges);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[60]))(handle, pDstBuffer, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
				{
					fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[60]))(handle, (ID3D12Resource*)ppDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, pDependentSubresourceRanges);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[60]))(handle, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[60]))(handle, pDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[60]))(handle, (ID3D12Resource*)ppDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[60]))(handle, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, pSrcBuffer, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
			{
				fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[60]))(handle, pDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[60]))(handle, pDstBuffer, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
				{
					fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[60]))(handle, (ID3D12Resource*)ppDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[60]))(handle, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
			{
				fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[60]))(handle, pDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[60]))(handle, pDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
				{
					fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[60]))(handle, (ID3D12Resource*)ppDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[60]))(handle, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
			{
				fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
				{
					fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[60]))(handle, pDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[60]))(handle, pDstBuffer, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
				{
					fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
					{
						fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
						{
							((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[60]))(handle, (ID3D12Resource*)ppDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[60]))(handle, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, pDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, ppDependentResources, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, (ID3D12Resource*)ppDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, ppDependentResources, pDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, pSrcBuffer, srcOffset, dependencies, ppDependentResources, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, pDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, ppDependentResources, pDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, pDstBuffer, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, ppDependentResources, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, (ID3D12Resource*)ppDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, ppDependentResources, pDependentSubresourceRanges);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, ppDependentResources, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, pDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, pDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, pDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, (ID3D12Resource*)ppDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, pDependentSubresourceRanges);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
			{
				fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, pDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, pDependentSubresourceRanges);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, pDstBuffer, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
				{
					fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, (ID3D12Resource*)ppDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, pDependentSubresourceRanges);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, pDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, (ID3D12Resource*)ppDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, pSrcBuffer, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
			{
				fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, pDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, pDstBuffer, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
				{
					fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, (ID3D12Resource*)ppDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
			{
				fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, pDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, pDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
				{
					fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, (ID3D12Resource*)ppDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
			{
				fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
				{
					fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, pDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, pDstBuffer, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
				{
					fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
					{
						fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
						{
							((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, (ID3D12Resource*)ppDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void AtomicCopyBufferUINT64(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(handle->LpVtbl[61]))(handle, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void OMSetDepthBounds(this ComPtr<ID3D12GraphicsCommandList4> comObj, float min, float max) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, float, float, void>)(handle->LpVtbl[62]))(handle, min, max);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetSamplePositions(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint numSamplesPerPixel, uint numPixels, SamplePosition* pSamplePositions) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, uint, SamplePosition*, void>)(handle->LpVtbl[63]))(handle, numSamplesPerPixel, numPixels, pSamplePositions);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetSamplePositions(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint numSamplesPerPixel, uint numPixels, ref SamplePosition pSamplePositions) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (SamplePosition* ppSamplePositions = &pSamplePositions)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, uint, SamplePosition*, void>)(handle->LpVtbl[63]))(handle, numSamplesPerPixel, numPixels, (SamplePosition*)ppSamplePositions);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresourceRegion(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstResource, uint dstSubresource, uint dstX, uint dstY, ID3D12Resource* pSrcResource, uint srcSubresource, Rect32* pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(handle->LpVtbl[64]))(handle, pDstResource, dstSubresource, dstX, dstY, pSrcResource, srcSubresource, pSrcRect, format, resolveMode);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresourceRegion(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pDstResource, uint dstSubresource, uint dstX, uint dstY, ID3D12Resource* pSrcResource, uint srcSubresource, Rect32* pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(handle->LpVtbl[64]))(handle, (ID3D12Resource*)ppDstResource, dstSubresource, dstX, dstY, pSrcResource, srcSubresource, pSrcRect, format, resolveMode);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresourceRegion(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pDstResource, uint dstSubresource, uint dstX, uint dstY, ID3D12Resource* pSrcResource, uint srcSubresource, Rect32* pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(handle->LpVtbl[64]))(handle, (ID3D12Resource*)pDstResource.Handle, dstSubresource, dstX, dstY, pSrcResource, srcSubresource, pSrcRect, format, resolveMode);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresourceRegion(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstResource, uint dstSubresource, uint dstX, uint dstY, ref ID3D12Resource pSrcResource, uint srcSubresource, Rect32* pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(handle->LpVtbl[64]))(handle, pDstResource, dstSubresource, dstX, dstY, (ID3D12Resource*)ppSrcResource, srcSubresource, pSrcRect, format, resolveMode);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresourceRegion(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstResource, uint dstSubresource, uint dstX, uint dstY, ComPtr<ID3D12Resource> pSrcResource, uint srcSubresource, Rect32* pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(handle->LpVtbl[64]))(handle, pDstResource, dstSubresource, dstX, dstY, (ID3D12Resource*)pSrcResource.Handle, srcSubresource, pSrcRect, format, resolveMode);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresourceRegion(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pDstResource, uint dstSubresource, uint dstX, uint dstY, ref ID3D12Resource pSrcResource, uint srcSubresource, Rect32* pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(handle->LpVtbl[64]))(handle, (ID3D12Resource*)ppDstResource, dstSubresource, dstX, dstY, (ID3D12Resource*)ppSrcResource, srcSubresource, pSrcRect, format, resolveMode);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresourceRegion(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pDstResource, uint dstSubresource, uint dstX, uint dstY, ComPtr<ID3D12Resource> pSrcResource, uint srcSubresource, Rect32* pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(handle->LpVtbl[64]))(handle, (ID3D12Resource*)pDstResource.Handle, dstSubresource, dstX, dstY, (ID3D12Resource*)pSrcResource.Handle, srcSubresource, pSrcRect, format, resolveMode);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresourceRegion(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstResource, uint dstSubresource, uint dstX, uint dstY, ID3D12Resource* pSrcResource, uint srcSubresource, ref Rect32 pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (Rect32* ppSrcRect = &pSrcRect)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(handle->LpVtbl[64]))(handle, pDstResource, dstSubresource, dstX, dstY, pSrcResource, srcSubresource, (Rect32*)ppSrcRect, format, resolveMode);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresourceRegion(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pDstResource, uint dstSubresource, uint dstX, uint dstY, ID3D12Resource* pSrcResource, uint srcSubresource, ref Rect32 pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				fixed (Rect32* ppSrcRect = &pSrcRect)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(handle->LpVtbl[64]))(handle, (ID3D12Resource*)ppDstResource, dstSubresource, dstX, dstY, pSrcResource, srcSubresource, (Rect32*)ppSrcRect, format, resolveMode);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresourceRegion(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pDstResource, uint dstSubresource, uint dstX, uint dstY, ID3D12Resource* pSrcResource, uint srcSubresource, ref Rect32 pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (Rect32* ppSrcRect = &pSrcRect)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(handle->LpVtbl[64]))(handle, (ID3D12Resource*)pDstResource.Handle, dstSubresource, dstX, dstY, pSrcResource, srcSubresource, (Rect32*)ppSrcRect, format, resolveMode);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresourceRegion(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstResource, uint dstSubresource, uint dstX, uint dstY, ref ID3D12Resource pSrcResource, uint srcSubresource, ref Rect32 pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
			{
				fixed (Rect32* ppSrcRect = &pSrcRect)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(handle->LpVtbl[64]))(handle, pDstResource, dstSubresource, dstX, dstY, (ID3D12Resource*)ppSrcResource, srcSubresource, (Rect32*)ppSrcRect, format, resolveMode);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresourceRegion(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12Resource* pDstResource, uint dstSubresource, uint dstX, uint dstY, ComPtr<ID3D12Resource> pSrcResource, uint srcSubresource, ref Rect32 pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (Rect32* ppSrcRect = &pSrcRect)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(handle->LpVtbl[64]))(handle, pDstResource, dstSubresource, dstX, dstY, (ID3D12Resource*)pSrcResource.Handle, srcSubresource, (Rect32*)ppSrcRect, format, resolveMode);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresourceRegion(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12Resource pDstResource, uint dstSubresource, uint dstX, uint dstY, ref ID3D12Resource pSrcResource, uint srcSubresource, ref Rect32 pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
				{
					fixed (Rect32* ppSrcRect = &pSrcRect)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(handle->LpVtbl[64]))(handle, (ID3D12Resource*)ppDstResource, dstSubresource, dstX, dstY, (ID3D12Resource*)ppSrcResource, srcSubresource, (Rect32*)ppSrcRect, format, resolveMode);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveSubresourceRegion(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12Resource> pDstResource, uint dstSubresource, uint dstX, uint dstY, ComPtr<ID3D12Resource> pSrcResource, uint srcSubresource, ref Rect32 pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (Rect32* ppSrcRect = &pSrcRect)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(handle->LpVtbl[64]))(handle, (ID3D12Resource*)pDstResource.Handle, dstSubresource, dstX, dstY, (ID3D12Resource*)pSrcResource.Handle, srcSubresource, (Rect32*)ppSrcRect, format, resolveMode);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetViewInstanceMask(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint mask) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, void>)(handle->LpVtbl[65]))(handle, mask);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void WriteBufferImmediate(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint count, WritebufferimmediateParameter* pParams, WritebufferimmediateMode* pModes) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, WritebufferimmediateParameter*, WritebufferimmediateMode*, void>)(handle->LpVtbl[66]))(handle, count, pParams, pModes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void WriteBufferImmediate(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint count, ref WritebufferimmediateParameter pParams, WritebufferimmediateMode* pModes) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (WritebufferimmediateParameter* ppParams = &pParams)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, WritebufferimmediateParameter*, WritebufferimmediateMode*, void>)(handle->LpVtbl[66]))(handle, count, (WritebufferimmediateParameter*)ppParams, pModes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void WriteBufferImmediate(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint count, WritebufferimmediateParameter* pParams, ref WritebufferimmediateMode pModes) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (WritebufferimmediateMode* ppModes = &pModes)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, WritebufferimmediateParameter*, WritebufferimmediateMode*, void>)(handle->LpVtbl[66]))(handle, count, pParams, (WritebufferimmediateMode*)ppModes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void WriteBufferImmediate(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint count, ref WritebufferimmediateParameter pParams, ref WritebufferimmediateMode pModes) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (WritebufferimmediateParameter* ppParams = &pParams)
			{
				fixed (WritebufferimmediateMode* ppModes = &pModes)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, WritebufferimmediateParameter*, WritebufferimmediateMode*, void>)(handle->LpVtbl[66]))(handle, count, (WritebufferimmediateParameter*)ppParams, (WritebufferimmediateMode*)ppModes);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetProtectedResourceSession(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12ProtectedResourceSession* pProtectedResourceSession) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12ProtectedResourceSession*, void>)(handle->LpVtbl[67]))(handle, pProtectedResourceSession);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetProtectedResourceSession(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12ProtectedResourceSession pProtectedResourceSession) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12ProtectedResourceSession*, void>)(handle->LpVtbl[67]))(handle, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetProtectedResourceSession(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12ProtectedResourceSession*, void>)(handle->LpVtbl[67]))(handle, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void BeginRenderPass(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint numRenderTargets, RenderPassRenderTargetDesc* pRenderTargets, RenderPassDepthStencilDesc* pDepthStencil, RenderPassFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, RenderPassRenderTargetDesc*, RenderPassDepthStencilDesc*, RenderPassFlags, void>)(handle->LpVtbl[68]))(handle, numRenderTargets, pRenderTargets, pDepthStencil, flags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void BeginRenderPass(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint numRenderTargets, ref RenderPassRenderTargetDesc pRenderTargets, RenderPassDepthStencilDesc* pDepthStencil, RenderPassFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (RenderPassRenderTargetDesc* ppRenderTargets = &pRenderTargets)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, RenderPassRenderTargetDesc*, RenderPassDepthStencilDesc*, RenderPassFlags, void>)(handle->LpVtbl[68]))(handle, numRenderTargets, (RenderPassRenderTargetDesc*)ppRenderTargets, pDepthStencil, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void BeginRenderPass(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint numRenderTargets, RenderPassRenderTargetDesc* pRenderTargets, ref RenderPassDepthStencilDesc pDepthStencil, RenderPassFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (RenderPassDepthStencilDesc* ppDepthStencil = &pDepthStencil)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, RenderPassRenderTargetDesc*, RenderPassDepthStencilDesc*, RenderPassFlags, void>)(handle->LpVtbl[68]))(handle, numRenderTargets, pRenderTargets, (RenderPassDepthStencilDesc*)ppDepthStencil, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void BeginRenderPass(this ComPtr<ID3D12GraphicsCommandList4> comObj, uint numRenderTargets, ref RenderPassRenderTargetDesc pRenderTargets, ref RenderPassDepthStencilDesc pDepthStencil, RenderPassFlags flags) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (RenderPassRenderTargetDesc* ppRenderTargets = &pRenderTargets)
			{
				fixed (RenderPassDepthStencilDesc* ppDepthStencil = &pDepthStencil)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, uint, RenderPassRenderTargetDesc*, RenderPassDepthStencilDesc*, RenderPassFlags, void>)(handle->LpVtbl[68]))(handle, numRenderTargets, (RenderPassRenderTargetDesc*)ppRenderTargets, (RenderPassDepthStencilDesc*)ppDepthStencil, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void EndRenderPass(this ComPtr<ID3D12GraphicsCommandList4> comObj) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, void>)(handle->LpVtbl[69]))(handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void InitializeMetaCommand(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12MetaCommand* pMetaCommand, void* pInitializationParametersData, nuint initializationParametersDataSizeInBytes) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12MetaCommand*, void*, nuint, void>)(handle->LpVtbl[70]))(handle, pMetaCommand, pInitializationParametersData, initializationParametersDataSizeInBytes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void InitializeMetaCommand(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12MetaCommand pMetaCommand, void* pInitializationParametersData, nuint initializationParametersDataSizeInBytes) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12MetaCommand* ppMetaCommand = &pMetaCommand)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12MetaCommand*, void*, nuint, void>)(handle->LpVtbl[70]))(handle, (ID3D12MetaCommand*)ppMetaCommand, pInitializationParametersData, initializationParametersDataSizeInBytes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void InitializeMetaCommand(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12MetaCommand> pMetaCommand, void* pInitializationParametersData, nuint initializationParametersDataSizeInBytes) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12MetaCommand*, void*, nuint, void>)(handle->LpVtbl[70]))(handle, (ID3D12MetaCommand*)pMetaCommand.Handle, pInitializationParametersData, initializationParametersDataSizeInBytes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ExecuteMetaCommand(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12MetaCommand* pMetaCommand, void* pExecutionParametersData, nuint executionParametersDataSizeInBytes) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12MetaCommand*, void*, nuint, void>)(handle->LpVtbl[71]))(handle, pMetaCommand, pExecutionParametersData, executionParametersDataSizeInBytes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ExecuteMetaCommand(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12MetaCommand pMetaCommand, void* pExecutionParametersData, nuint executionParametersDataSizeInBytes) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12MetaCommand* ppMetaCommand = &pMetaCommand)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12MetaCommand*, void*, nuint, void>)(handle->LpVtbl[71]))(handle, (ID3D12MetaCommand*)ppMetaCommand, pExecutionParametersData, executionParametersDataSizeInBytes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ExecuteMetaCommand(this ComPtr<ID3D12GraphicsCommandList4> comObj, ComPtr<ID3D12MetaCommand> pMetaCommand, void* pExecutionParametersData, nuint executionParametersDataSizeInBytes) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12MetaCommand*, void*, nuint, void>)(handle->LpVtbl[71]))(handle, (ID3D12MetaCommand*)pMetaCommand.Handle, pExecutionParametersData, executionParametersDataSizeInBytes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void BuildRaytracingAccelerationStructure(this ComPtr<ID3D12GraphicsCommandList4> comObj, BuildRaytracingAccelerationStructureDesc* pDesc, uint numPostbuildInfoDescs, RaytracingAccelerationStructurePostbuildInfoDesc* pPostbuildInfoDescs) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, BuildRaytracingAccelerationStructureDesc*, uint, RaytracingAccelerationStructurePostbuildInfoDesc*, void>)(handle->LpVtbl[72]))(handle, pDesc, numPostbuildInfoDescs, pPostbuildInfoDescs);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void BuildRaytracingAccelerationStructure(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref BuildRaytracingAccelerationStructureDesc pDesc, uint numPostbuildInfoDescs, RaytracingAccelerationStructurePostbuildInfoDesc* pPostbuildInfoDescs) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (BuildRaytracingAccelerationStructureDesc* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, BuildRaytracingAccelerationStructureDesc*, uint, RaytracingAccelerationStructurePostbuildInfoDesc*, void>)(handle->LpVtbl[72]))(handle, (BuildRaytracingAccelerationStructureDesc*)ppDesc, numPostbuildInfoDescs, pPostbuildInfoDescs);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void BuildRaytracingAccelerationStructure(this ComPtr<ID3D12GraphicsCommandList4> comObj, BuildRaytracingAccelerationStructureDesc* pDesc, uint numPostbuildInfoDescs, ref RaytracingAccelerationStructurePostbuildInfoDesc pPostbuildInfoDescs) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (RaytracingAccelerationStructurePostbuildInfoDesc* ppPostbuildInfoDescs = &pPostbuildInfoDescs)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, BuildRaytracingAccelerationStructureDesc*, uint, RaytracingAccelerationStructurePostbuildInfoDesc*, void>)(handle->LpVtbl[72]))(handle, pDesc, numPostbuildInfoDescs, (RaytracingAccelerationStructurePostbuildInfoDesc*)ppPostbuildInfoDescs);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void BuildRaytracingAccelerationStructure(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref BuildRaytracingAccelerationStructureDesc pDesc, uint numPostbuildInfoDescs, ref RaytracingAccelerationStructurePostbuildInfoDesc pPostbuildInfoDescs) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (BuildRaytracingAccelerationStructureDesc* ppDesc = &pDesc)
			{
				fixed (RaytracingAccelerationStructurePostbuildInfoDesc* ppPostbuildInfoDescs = &pPostbuildInfoDescs)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, BuildRaytracingAccelerationStructureDesc*, uint, RaytracingAccelerationStructurePostbuildInfoDesc*, void>)(handle->LpVtbl[72]))(handle, (BuildRaytracingAccelerationStructureDesc*)ppDesc, numPostbuildInfoDescs, (RaytracingAccelerationStructurePostbuildInfoDesc*)ppPostbuildInfoDescs);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void EmitRaytracingAccelerationStructurePostbuildInfo(this ComPtr<ID3D12GraphicsCommandList4> comObj, RaytracingAccelerationStructurePostbuildInfoDesc* pDesc, uint numSourceAccelerationStructures, ulong* pSourceAccelerationStructureData) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, RaytracingAccelerationStructurePostbuildInfoDesc*, uint, ulong*, void>)(handle->LpVtbl[73]))(handle, pDesc, numSourceAccelerationStructures, pSourceAccelerationStructureData);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void EmitRaytracingAccelerationStructurePostbuildInfo(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref RaytracingAccelerationStructurePostbuildInfoDesc pDesc, uint numSourceAccelerationStructures, ulong* pSourceAccelerationStructureData) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (RaytracingAccelerationStructurePostbuildInfoDesc* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, RaytracingAccelerationStructurePostbuildInfoDesc*, uint, ulong*, void>)(handle->LpVtbl[73]))(handle, (RaytracingAccelerationStructurePostbuildInfoDesc*)ppDesc, numSourceAccelerationStructures, pSourceAccelerationStructureData);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void EmitRaytracingAccelerationStructurePostbuildInfo(this ComPtr<ID3D12GraphicsCommandList4> comObj, RaytracingAccelerationStructurePostbuildInfoDesc* pDesc, uint numSourceAccelerationStructures, ref ulong pSourceAccelerationStructureData) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ulong* ppSourceAccelerationStructureData = &pSourceAccelerationStructureData)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, RaytracingAccelerationStructurePostbuildInfoDesc*, uint, ulong*, void>)(handle->LpVtbl[73]))(handle, pDesc, numSourceAccelerationStructures, (ulong*)ppSourceAccelerationStructureData);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void EmitRaytracingAccelerationStructurePostbuildInfo(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref RaytracingAccelerationStructurePostbuildInfoDesc pDesc, uint numSourceAccelerationStructures, ref ulong pSourceAccelerationStructureData) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (RaytracingAccelerationStructurePostbuildInfoDesc* ppDesc = &pDesc)
			{
				fixed (ulong* ppSourceAccelerationStructureData = &pSourceAccelerationStructureData)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, RaytracingAccelerationStructurePostbuildInfoDesc*, uint, ulong*, void>)(handle->LpVtbl[73]))(handle, (RaytracingAccelerationStructurePostbuildInfoDesc*)ppDesc, numSourceAccelerationStructures, (ulong*)ppSourceAccelerationStructureData);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CopyRaytracingAccelerationStructure(this ComPtr<ID3D12GraphicsCommandList4> comObj, ulong destAccelerationStructureData, ulong sourceAccelerationStructureData, RaytracingAccelerationStructureCopyMode mode) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ulong, ulong, RaytracingAccelerationStructureCopyMode, void>)(handle->LpVtbl[74]))(handle, destAccelerationStructureData, sourceAccelerationStructureData, mode);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetPipelineState1(this ComPtr<ID3D12GraphicsCommandList4> comObj, ID3D12StateObject* pStateObject) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12StateObject*, void>)(handle->LpVtbl[75]))(handle, pStateObject);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetPipelineState1(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref ID3D12StateObject pStateObject) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (ID3D12StateObject* ppStateObject = &pStateObject)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, ID3D12StateObject*, void>)(handle->LpVtbl[75]))(handle, (ID3D12StateObject*)ppStateObject);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DispatchRays(this ComPtr<ID3D12GraphicsCommandList4> comObj, DispatchRaysDesc* pDesc) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, DispatchRaysDesc*, void>)(handle->LpVtbl[76]))(handle, pDesc);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DispatchRays(this ComPtr<ID3D12GraphicsCommandList4> comObj, ref DispatchRaysDesc pDesc) 
		{
			ID3D12GraphicsCommandList4* handle = comObj.Handle;
			fixed (DispatchRaysDesc* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList4*, DispatchRaysDesc*, void>)(handle->LpVtbl[76]))(handle, (DispatchRaysDesc*)ppDesc);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D12ShaderCacheSession> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D12ShaderCacheSession* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderCacheSession*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D12ShaderCacheSession> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D12ShaderCacheSession* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderCacheSession*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D12ShaderCacheSession> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12ShaderCacheSession* handle = comObj.Handle;
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderCacheSession*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D12ShaderCacheSession> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12ShaderCacheSession* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderCacheSession*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D12ShaderCacheSession> comObj) 
		{
			ID3D12ShaderCacheSession* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderCacheSession*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D12ShaderCacheSession> comObj) 
		{
			ID3D12ShaderCacheSession* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderCacheSession*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D12ShaderCacheSession> comObj, Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D12ShaderCacheSession* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderCacheSession*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[3]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D12ShaderCacheSession> comObj, ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D12ShaderCacheSession* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderCacheSession*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}
	}
}
