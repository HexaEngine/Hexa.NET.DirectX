// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D12
{
	public static unsafe partial class Extensions
	{

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DiscardResource(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ref ID3D12Resource pResource, ref DiscardRegion pRegion) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (DiscardRegion* ppRegion = &pRegion)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12Resource*, DiscardRegion*, void>)(handle->LpVtbl[13]))(handle, (ID3D12Resource*)ppResource, (DiscardRegion*)ppRegion);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DiscardResource(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ComPtr<ID3D12Resource> pResource, ref DiscardRegion pRegion) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (DiscardRegion* ppRegion = &pRegion)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12Resource*, DiscardRegion*, void>)(handle->LpVtbl[13]))(handle, (ID3D12Resource*)pResource.Handle, (DiscardRegion*)ppRegion);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void BeginQuery(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ID3D12QueryHeap* pQueryHeap, QueryType type, uint index) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12QueryHeap*, QueryType, uint, void>)(handle->LpVtbl[14]))(handle, pQueryHeap, type, index);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void BeginQuery(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ref ID3D12QueryHeap pQueryHeap, QueryType type, uint index) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (ID3D12QueryHeap* ppQueryHeap = &pQueryHeap)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12QueryHeap*, QueryType, uint, void>)(handle->LpVtbl[14]))(handle, (ID3D12QueryHeap*)ppQueryHeap, type, index);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void EndQuery(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ID3D12QueryHeap* pQueryHeap, QueryType type, uint index) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12QueryHeap*, QueryType, uint, void>)(handle->LpVtbl[15]))(handle, pQueryHeap, type, index);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void EndQuery(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ref ID3D12QueryHeap pQueryHeap, QueryType type, uint index) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (ID3D12QueryHeap* ppQueryHeap = &pQueryHeap)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12QueryHeap*, QueryType, uint, void>)(handle->LpVtbl[15]))(handle, (ID3D12QueryHeap*)ppQueryHeap, type, index);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveQueryData(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ID3D12QueryHeap* pQueryHeap, QueryType type, uint startIndex, uint numQueries, ID3D12Resource* pDestinationBuffer, ulong alignedDestinationBufferOffset) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12QueryHeap*, QueryType, uint, uint, ID3D12Resource*, ulong, void>)(handle->LpVtbl[16]))(handle, pQueryHeap, type, startIndex, numQueries, pDestinationBuffer, alignedDestinationBufferOffset);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveQueryData(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ref ID3D12QueryHeap pQueryHeap, QueryType type, uint startIndex, uint numQueries, ID3D12Resource* pDestinationBuffer, ulong alignedDestinationBufferOffset) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (ID3D12QueryHeap* ppQueryHeap = &pQueryHeap)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12QueryHeap*, QueryType, uint, uint, ID3D12Resource*, ulong, void>)(handle->LpVtbl[16]))(handle, (ID3D12QueryHeap*)ppQueryHeap, type, startIndex, numQueries, pDestinationBuffer, alignedDestinationBufferOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveQueryData(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ID3D12QueryHeap* pQueryHeap, QueryType type, uint startIndex, uint numQueries, ref ID3D12Resource pDestinationBuffer, ulong alignedDestinationBufferOffset) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDestinationBuffer = &pDestinationBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12QueryHeap*, QueryType, uint, uint, ID3D12Resource*, ulong, void>)(handle->LpVtbl[16]))(handle, pQueryHeap, type, startIndex, numQueries, (ID3D12Resource*)ppDestinationBuffer, alignedDestinationBufferOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveQueryData(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ID3D12QueryHeap* pQueryHeap, QueryType type, uint startIndex, uint numQueries, ComPtr<ID3D12Resource> pDestinationBuffer, ulong alignedDestinationBufferOffset) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12QueryHeap*, QueryType, uint, uint, ID3D12Resource*, ulong, void>)(handle->LpVtbl[16]))(handle, pQueryHeap, type, startIndex, numQueries, (ID3D12Resource*)pDestinationBuffer.Handle, alignedDestinationBufferOffset);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveQueryData(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ref ID3D12QueryHeap pQueryHeap, QueryType type, uint startIndex, uint numQueries, ref ID3D12Resource pDestinationBuffer, ulong alignedDestinationBufferOffset) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (ID3D12QueryHeap* ppQueryHeap = &pQueryHeap)
			{
				fixed (ID3D12Resource* ppDestinationBuffer = &pDestinationBuffer)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12QueryHeap*, QueryType, uint, uint, ID3D12Resource*, ulong, void>)(handle->LpVtbl[16]))(handle, (ID3D12QueryHeap*)ppQueryHeap, type, startIndex, numQueries, (ID3D12Resource*)ppDestinationBuffer, alignedDestinationBufferOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveQueryData(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ref ID3D12QueryHeap pQueryHeap, QueryType type, uint startIndex, uint numQueries, ComPtr<ID3D12Resource> pDestinationBuffer, ulong alignedDestinationBufferOffset) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (ID3D12QueryHeap* ppQueryHeap = &pQueryHeap)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12QueryHeap*, QueryType, uint, uint, ID3D12Resource*, ulong, void>)(handle->LpVtbl[16]))(handle, (ID3D12QueryHeap*)ppQueryHeap, type, startIndex, numQueries, (ID3D12Resource*)pDestinationBuffer.Handle, alignedDestinationBufferOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetPredication(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ID3D12Resource* pBuffer, ulong alignedBufferOffset, PredicationOp operation) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12Resource*, ulong, PredicationOp, void>)(handle->LpVtbl[17]))(handle, pBuffer, alignedBufferOffset, operation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetPredication(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ref ID3D12Resource pBuffer, ulong alignedBufferOffset, PredicationOp operation) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (ID3D12Resource* ppBuffer = &pBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12Resource*, ulong, PredicationOp, void>)(handle->LpVtbl[17]))(handle, (ID3D12Resource*)ppBuffer, alignedBufferOffset, operation);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetPredication(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ComPtr<ID3D12Resource> pBuffer, ulong alignedBufferOffset, PredicationOp operation) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12Resource*, ulong, PredicationOp, void>)(handle->LpVtbl[17]))(handle, (ID3D12Resource*)pBuffer.Handle, alignedBufferOffset, operation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetMarker(this ComPtr<ID3D12VideoProcessCommandList3> comObj, uint metadata, void* pData, uint size) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, uint, void*, uint, void>)(handle->LpVtbl[18]))(handle, metadata, pData, size);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void BeginEvent(this ComPtr<ID3D12VideoProcessCommandList3> comObj, uint metadata, void* pData, uint size) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, uint, void*, uint, void>)(handle->LpVtbl[19]))(handle, metadata, pData, size);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void EndEvent(this ComPtr<ID3D12VideoProcessCommandList3> comObj) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, void>)(handle->LpVtbl[20]))(handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ProcessFrames(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ID3D12VideoProcessor* pVideoProcessor, VideoProcessOutputStreamArguments* pOutputArguments, uint numInputStreams, VideoProcessInputStreamArguments* pInputArguments) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12VideoProcessor*, VideoProcessOutputStreamArguments*, uint, VideoProcessInputStreamArguments*, void>)(handle->LpVtbl[21]))(handle, pVideoProcessor, pOutputArguments, numInputStreams, pInputArguments);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ProcessFrames(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ref ID3D12VideoProcessor pVideoProcessor, VideoProcessOutputStreamArguments* pOutputArguments, uint numInputStreams, VideoProcessInputStreamArguments* pInputArguments) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (ID3D12VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12VideoProcessor*, VideoProcessOutputStreamArguments*, uint, VideoProcessInputStreamArguments*, void>)(handle->LpVtbl[21]))(handle, (ID3D12VideoProcessor*)ppVideoProcessor, pOutputArguments, numInputStreams, pInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ProcessFrames(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ComPtr<ID3D12VideoProcessor> pVideoProcessor, VideoProcessOutputStreamArguments* pOutputArguments, uint numInputStreams, VideoProcessInputStreamArguments* pInputArguments) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12VideoProcessor*, VideoProcessOutputStreamArguments*, uint, VideoProcessInputStreamArguments*, void>)(handle->LpVtbl[21]))(handle, (ID3D12VideoProcessor*)pVideoProcessor.Handle, pOutputArguments, numInputStreams, pInputArguments);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ProcessFrames(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ID3D12VideoProcessor* pVideoProcessor, ref VideoProcessOutputStreamArguments pOutputArguments, uint numInputStreams, VideoProcessInputStreamArguments* pInputArguments) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamArguments* ppOutputArguments = &pOutputArguments)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12VideoProcessor*, VideoProcessOutputStreamArguments*, uint, VideoProcessInputStreamArguments*, void>)(handle->LpVtbl[21]))(handle, pVideoProcessor, (VideoProcessOutputStreamArguments*)ppOutputArguments, numInputStreams, pInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ProcessFrames(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ref ID3D12VideoProcessor pVideoProcessor, ref VideoProcessOutputStreamArguments pOutputArguments, uint numInputStreams, VideoProcessInputStreamArguments* pInputArguments) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (ID3D12VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessOutputStreamArguments* ppOutputArguments = &pOutputArguments)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12VideoProcessor*, VideoProcessOutputStreamArguments*, uint, VideoProcessInputStreamArguments*, void>)(handle->LpVtbl[21]))(handle, (ID3D12VideoProcessor*)ppVideoProcessor, (VideoProcessOutputStreamArguments*)ppOutputArguments, numInputStreams, pInputArguments);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ProcessFrames(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ComPtr<ID3D12VideoProcessor> pVideoProcessor, ref VideoProcessOutputStreamArguments pOutputArguments, uint numInputStreams, VideoProcessInputStreamArguments* pInputArguments) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamArguments* ppOutputArguments = &pOutputArguments)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12VideoProcessor*, VideoProcessOutputStreamArguments*, uint, VideoProcessInputStreamArguments*, void>)(handle->LpVtbl[21]))(handle, (ID3D12VideoProcessor*)pVideoProcessor.Handle, (VideoProcessOutputStreamArguments*)ppOutputArguments, numInputStreams, pInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ProcessFrames(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ID3D12VideoProcessor* pVideoProcessor, VideoProcessOutputStreamArguments* pOutputArguments, uint numInputStreams, ref VideoProcessInputStreamArguments pInputArguments) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (VideoProcessInputStreamArguments* ppInputArguments = &pInputArguments)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12VideoProcessor*, VideoProcessOutputStreamArguments*, uint, VideoProcessInputStreamArguments*, void>)(handle->LpVtbl[21]))(handle, pVideoProcessor, pOutputArguments, numInputStreams, (VideoProcessInputStreamArguments*)ppInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ProcessFrames(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ref ID3D12VideoProcessor pVideoProcessor, VideoProcessOutputStreamArguments* pOutputArguments, uint numInputStreams, ref VideoProcessInputStreamArguments pInputArguments) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (ID3D12VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessInputStreamArguments* ppInputArguments = &pInputArguments)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12VideoProcessor*, VideoProcessOutputStreamArguments*, uint, VideoProcessInputStreamArguments*, void>)(handle->LpVtbl[21]))(handle, (ID3D12VideoProcessor*)ppVideoProcessor, pOutputArguments, numInputStreams, (VideoProcessInputStreamArguments*)ppInputArguments);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ProcessFrames(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ComPtr<ID3D12VideoProcessor> pVideoProcessor, VideoProcessOutputStreamArguments* pOutputArguments, uint numInputStreams, ref VideoProcessInputStreamArguments pInputArguments) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (VideoProcessInputStreamArguments* ppInputArguments = &pInputArguments)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12VideoProcessor*, VideoProcessOutputStreamArguments*, uint, VideoProcessInputStreamArguments*, void>)(handle->LpVtbl[21]))(handle, (ID3D12VideoProcessor*)pVideoProcessor.Handle, pOutputArguments, numInputStreams, (VideoProcessInputStreamArguments*)ppInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ProcessFrames(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ID3D12VideoProcessor* pVideoProcessor, ref VideoProcessOutputStreamArguments pOutputArguments, uint numInputStreams, ref VideoProcessInputStreamArguments pInputArguments) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamArguments* ppOutputArguments = &pOutputArguments)
			{
				fixed (VideoProcessInputStreamArguments* ppInputArguments = &pInputArguments)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12VideoProcessor*, VideoProcessOutputStreamArguments*, uint, VideoProcessInputStreamArguments*, void>)(handle->LpVtbl[21]))(handle, pVideoProcessor, (VideoProcessOutputStreamArguments*)ppOutputArguments, numInputStreams, (VideoProcessInputStreamArguments*)ppInputArguments);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ProcessFrames(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ref ID3D12VideoProcessor pVideoProcessor, ref VideoProcessOutputStreamArguments pOutputArguments, uint numInputStreams, ref VideoProcessInputStreamArguments pInputArguments) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (ID3D12VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessOutputStreamArguments* ppOutputArguments = &pOutputArguments)
				{
					fixed (VideoProcessInputStreamArguments* ppInputArguments = &pInputArguments)
					{
						((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12VideoProcessor*, VideoProcessOutputStreamArguments*, uint, VideoProcessInputStreamArguments*, void>)(handle->LpVtbl[21]))(handle, (ID3D12VideoProcessor*)ppVideoProcessor, (VideoProcessOutputStreamArguments*)ppOutputArguments, numInputStreams, (VideoProcessInputStreamArguments*)ppInputArguments);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ProcessFrames(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ComPtr<ID3D12VideoProcessor> pVideoProcessor, ref VideoProcessOutputStreamArguments pOutputArguments, uint numInputStreams, ref VideoProcessInputStreamArguments pInputArguments) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamArguments* ppOutputArguments = &pOutputArguments)
			{
				fixed (VideoProcessInputStreamArguments* ppInputArguments = &pInputArguments)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12VideoProcessor*, VideoProcessOutputStreamArguments*, uint, VideoProcessInputStreamArguments*, void>)(handle->LpVtbl[21]))(handle, (ID3D12VideoProcessor*)pVideoProcessor.Handle, (VideoProcessOutputStreamArguments*)ppOutputArguments, numInputStreams, (VideoProcessInputStreamArguments*)ppInputArguments);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void WriteBufferImmediate(this ComPtr<ID3D12VideoProcessCommandList3> comObj, uint count, WritebufferimmediateParameter* pParams, WritebufferimmediateMode* pModes) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, uint, WritebufferimmediateParameter*, WritebufferimmediateMode*, void>)(handle->LpVtbl[22]))(handle, count, pParams, pModes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void WriteBufferImmediate(this ComPtr<ID3D12VideoProcessCommandList3> comObj, uint count, ref WritebufferimmediateParameter pParams, WritebufferimmediateMode* pModes) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (WritebufferimmediateParameter* ppParams = &pParams)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, uint, WritebufferimmediateParameter*, WritebufferimmediateMode*, void>)(handle->LpVtbl[22]))(handle, count, (WritebufferimmediateParameter*)ppParams, pModes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void WriteBufferImmediate(this ComPtr<ID3D12VideoProcessCommandList3> comObj, uint count, WritebufferimmediateParameter* pParams, ref WritebufferimmediateMode pModes) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (WritebufferimmediateMode* ppModes = &pModes)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, uint, WritebufferimmediateParameter*, WritebufferimmediateMode*, void>)(handle->LpVtbl[22]))(handle, count, pParams, (WritebufferimmediateMode*)ppModes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void WriteBufferImmediate(this ComPtr<ID3D12VideoProcessCommandList3> comObj, uint count, ref WritebufferimmediateParameter pParams, ref WritebufferimmediateMode pModes) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (WritebufferimmediateParameter* ppParams = &pParams)
			{
				fixed (WritebufferimmediateMode* ppModes = &pModes)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, uint, WritebufferimmediateParameter*, WritebufferimmediateMode*, void>)(handle->LpVtbl[22]))(handle, count, (WritebufferimmediateParameter*)ppParams, (WritebufferimmediateMode*)ppModes);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ProcessFrames1(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ID3D12VideoProcessor* pVideoProcessor, VideoProcessOutputStreamArguments* pOutputArguments, uint numInputStreams, VideoProcessInputStreamArguments1* pInputArguments) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12VideoProcessor*, VideoProcessOutputStreamArguments*, uint, VideoProcessInputStreamArguments1*, void>)(handle->LpVtbl[23]))(handle, pVideoProcessor, pOutputArguments, numInputStreams, pInputArguments);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ProcessFrames1(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ref ID3D12VideoProcessor pVideoProcessor, VideoProcessOutputStreamArguments* pOutputArguments, uint numInputStreams, VideoProcessInputStreamArguments1* pInputArguments) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (ID3D12VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12VideoProcessor*, VideoProcessOutputStreamArguments*, uint, VideoProcessInputStreamArguments1*, void>)(handle->LpVtbl[23]))(handle, (ID3D12VideoProcessor*)ppVideoProcessor, pOutputArguments, numInputStreams, pInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ProcessFrames1(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ComPtr<ID3D12VideoProcessor> pVideoProcessor, VideoProcessOutputStreamArguments* pOutputArguments, uint numInputStreams, VideoProcessInputStreamArguments1* pInputArguments) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12VideoProcessor*, VideoProcessOutputStreamArguments*, uint, VideoProcessInputStreamArguments1*, void>)(handle->LpVtbl[23]))(handle, (ID3D12VideoProcessor*)pVideoProcessor.Handle, pOutputArguments, numInputStreams, pInputArguments);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ProcessFrames1(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ID3D12VideoProcessor* pVideoProcessor, ref VideoProcessOutputStreamArguments pOutputArguments, uint numInputStreams, VideoProcessInputStreamArguments1* pInputArguments) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamArguments* ppOutputArguments = &pOutputArguments)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12VideoProcessor*, VideoProcessOutputStreamArguments*, uint, VideoProcessInputStreamArguments1*, void>)(handle->LpVtbl[23]))(handle, pVideoProcessor, (VideoProcessOutputStreamArguments*)ppOutputArguments, numInputStreams, pInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ProcessFrames1(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ref ID3D12VideoProcessor pVideoProcessor, ref VideoProcessOutputStreamArguments pOutputArguments, uint numInputStreams, VideoProcessInputStreamArguments1* pInputArguments) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (ID3D12VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessOutputStreamArguments* ppOutputArguments = &pOutputArguments)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12VideoProcessor*, VideoProcessOutputStreamArguments*, uint, VideoProcessInputStreamArguments1*, void>)(handle->LpVtbl[23]))(handle, (ID3D12VideoProcessor*)ppVideoProcessor, (VideoProcessOutputStreamArguments*)ppOutputArguments, numInputStreams, pInputArguments);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ProcessFrames1(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ComPtr<ID3D12VideoProcessor> pVideoProcessor, ref VideoProcessOutputStreamArguments pOutputArguments, uint numInputStreams, VideoProcessInputStreamArguments1* pInputArguments) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamArguments* ppOutputArguments = &pOutputArguments)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12VideoProcessor*, VideoProcessOutputStreamArguments*, uint, VideoProcessInputStreamArguments1*, void>)(handle->LpVtbl[23]))(handle, (ID3D12VideoProcessor*)pVideoProcessor.Handle, (VideoProcessOutputStreamArguments*)ppOutputArguments, numInputStreams, pInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ProcessFrames1(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ID3D12VideoProcessor* pVideoProcessor, VideoProcessOutputStreamArguments* pOutputArguments, uint numInputStreams, ref VideoProcessInputStreamArguments1 pInputArguments) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (VideoProcessInputStreamArguments1* ppInputArguments = &pInputArguments)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12VideoProcessor*, VideoProcessOutputStreamArguments*, uint, VideoProcessInputStreamArguments1*, void>)(handle->LpVtbl[23]))(handle, pVideoProcessor, pOutputArguments, numInputStreams, (VideoProcessInputStreamArguments1*)ppInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ProcessFrames1(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ref ID3D12VideoProcessor pVideoProcessor, VideoProcessOutputStreamArguments* pOutputArguments, uint numInputStreams, ref VideoProcessInputStreamArguments1 pInputArguments) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (ID3D12VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessInputStreamArguments1* ppInputArguments = &pInputArguments)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12VideoProcessor*, VideoProcessOutputStreamArguments*, uint, VideoProcessInputStreamArguments1*, void>)(handle->LpVtbl[23]))(handle, (ID3D12VideoProcessor*)ppVideoProcessor, pOutputArguments, numInputStreams, (VideoProcessInputStreamArguments1*)ppInputArguments);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ProcessFrames1(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ComPtr<ID3D12VideoProcessor> pVideoProcessor, VideoProcessOutputStreamArguments* pOutputArguments, uint numInputStreams, ref VideoProcessInputStreamArguments1 pInputArguments) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (VideoProcessInputStreamArguments1* ppInputArguments = &pInputArguments)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12VideoProcessor*, VideoProcessOutputStreamArguments*, uint, VideoProcessInputStreamArguments1*, void>)(handle->LpVtbl[23]))(handle, (ID3D12VideoProcessor*)pVideoProcessor.Handle, pOutputArguments, numInputStreams, (VideoProcessInputStreamArguments1*)ppInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ProcessFrames1(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ID3D12VideoProcessor* pVideoProcessor, ref VideoProcessOutputStreamArguments pOutputArguments, uint numInputStreams, ref VideoProcessInputStreamArguments1 pInputArguments) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamArguments* ppOutputArguments = &pOutputArguments)
			{
				fixed (VideoProcessInputStreamArguments1* ppInputArguments = &pInputArguments)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12VideoProcessor*, VideoProcessOutputStreamArguments*, uint, VideoProcessInputStreamArguments1*, void>)(handle->LpVtbl[23]))(handle, pVideoProcessor, (VideoProcessOutputStreamArguments*)ppOutputArguments, numInputStreams, (VideoProcessInputStreamArguments1*)ppInputArguments);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ProcessFrames1(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ref ID3D12VideoProcessor pVideoProcessor, ref VideoProcessOutputStreamArguments pOutputArguments, uint numInputStreams, ref VideoProcessInputStreamArguments1 pInputArguments) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (ID3D12VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessOutputStreamArguments* ppOutputArguments = &pOutputArguments)
				{
					fixed (VideoProcessInputStreamArguments1* ppInputArguments = &pInputArguments)
					{
						((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12VideoProcessor*, VideoProcessOutputStreamArguments*, uint, VideoProcessInputStreamArguments1*, void>)(handle->LpVtbl[23]))(handle, (ID3D12VideoProcessor*)ppVideoProcessor, (VideoProcessOutputStreamArguments*)ppOutputArguments, numInputStreams, (VideoProcessInputStreamArguments1*)ppInputArguments);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ProcessFrames1(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ComPtr<ID3D12VideoProcessor> pVideoProcessor, ref VideoProcessOutputStreamArguments pOutputArguments, uint numInputStreams, ref VideoProcessInputStreamArguments1 pInputArguments) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamArguments* ppOutputArguments = &pOutputArguments)
			{
				fixed (VideoProcessInputStreamArguments1* ppInputArguments = &pInputArguments)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12VideoProcessor*, VideoProcessOutputStreamArguments*, uint, VideoProcessInputStreamArguments1*, void>)(handle->LpVtbl[23]))(handle, (ID3D12VideoProcessor*)pVideoProcessor.Handle, (VideoProcessOutputStreamArguments*)ppOutputArguments, numInputStreams, (VideoProcessInputStreamArguments1*)ppInputArguments);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetProtectedResourceSession(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ID3D12ProtectedResourceSession* pProtectedResourceSession) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12ProtectedResourceSession*, void>)(handle->LpVtbl[24]))(handle, pProtectedResourceSession);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetProtectedResourceSession(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ref ID3D12ProtectedResourceSession pProtectedResourceSession) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12ProtectedResourceSession*, void>)(handle->LpVtbl[24]))(handle, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetProtectedResourceSession(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12ProtectedResourceSession*, void>)(handle->LpVtbl[24]))(handle, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void InitializeExtensionCommand(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ID3D12VideoExtensionCommand* pExtensionCommand, void* pInitializationParameters, nuint initializationParametersSizeInBytes) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12VideoExtensionCommand*, void*, nuint, void>)(handle->LpVtbl[25]))(handle, pExtensionCommand, pInitializationParameters, initializationParametersSizeInBytes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void InitializeExtensionCommand(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ref ID3D12VideoExtensionCommand pExtensionCommand, void* pInitializationParameters, nuint initializationParametersSizeInBytes) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (ID3D12VideoExtensionCommand* ppExtensionCommand = &pExtensionCommand)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12VideoExtensionCommand*, void*, nuint, void>)(handle->LpVtbl[25]))(handle, (ID3D12VideoExtensionCommand*)ppExtensionCommand, pInitializationParameters, initializationParametersSizeInBytes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void InitializeExtensionCommand(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ComPtr<ID3D12VideoExtensionCommand> pExtensionCommand, void* pInitializationParameters, nuint initializationParametersSizeInBytes) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12VideoExtensionCommand*, void*, nuint, void>)(handle->LpVtbl[25]))(handle, (ID3D12VideoExtensionCommand*)pExtensionCommand.Handle, pInitializationParameters, initializationParametersSizeInBytes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ExecuteExtensionCommand(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ID3D12VideoExtensionCommand* pExtensionCommand, void* pExecutionParameters, nuint executionParametersSizeInBytes) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12VideoExtensionCommand*, void*, nuint, void>)(handle->LpVtbl[26]))(handle, pExtensionCommand, pExecutionParameters, executionParametersSizeInBytes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ExecuteExtensionCommand(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ref ID3D12VideoExtensionCommand pExtensionCommand, void* pExecutionParameters, nuint executionParametersSizeInBytes) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (ID3D12VideoExtensionCommand* ppExtensionCommand = &pExtensionCommand)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12VideoExtensionCommand*, void*, nuint, void>)(handle->LpVtbl[26]))(handle, (ID3D12VideoExtensionCommand*)ppExtensionCommand, pExecutionParameters, executionParametersSizeInBytes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ExecuteExtensionCommand(this ComPtr<ID3D12VideoProcessCommandList3> comObj, ComPtr<ID3D12VideoExtensionCommand> pExtensionCommand, void* pExecutionParameters, nuint executionParametersSizeInBytes) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, ID3D12VideoExtensionCommand*, void*, nuint, void>)(handle->LpVtbl[26]))(handle, (ID3D12VideoExtensionCommand*)pExtensionCommand.Handle, pExecutionParameters, executionParametersSizeInBytes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void Barrier(this ComPtr<ID3D12VideoProcessCommandList3> comObj, uint numBarrierGroups, BarrierGroup* pBarrierGroups) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, uint, BarrierGroup*, void>)(handle->LpVtbl[27]))(handle, numBarrierGroups, pBarrierGroups);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void Barrier(this ComPtr<ID3D12VideoProcessCommandList3> comObj, uint numBarrierGroups, ref BarrierGroup pBarrierGroups) 
		{
			ID3D12VideoProcessCommandList3* handle = comObj.Handle;
			fixed (BarrierGroup* ppBarrierGroups = &pBarrierGroups)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoProcessCommandList3*, uint, BarrierGroup*, void>)(handle->LpVtbl[27]))(handle, numBarrierGroups, (BarrierGroup*)ppBarrierGroups);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int QueryInterface(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int QueryInterface(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int QueryInterface<T>(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int QueryInterface<T>(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D12VideoEncodeCommandList1> comObj) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D12VideoEncodeCommandList1> comObj) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetPrivateData(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetPrivateData(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetPrivateData(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetPrivateData(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetPrivateData<T>(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetPrivateData<T>(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetPrivateData<T>(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetPrivateData<T>(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateData(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, Guid*, uint, void*, int>)(handle->LpVtbl[4]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateData(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, Guid*, uint, void*, int>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetName(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, char* name) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, char*, int>)(handle->LpVtbl[6]))(handle, name);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetName(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ReadOnlySpan<char> name) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (char* pname = name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, char*, int>)(handle->LpVtbl[6]))(handle, (char*)pname);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetName(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, string name) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, char*, int>)(handle->LpVtbl[6]))(handle, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetDevice(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, Guid* riid, void** ppvDevice) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, riid, ppvDevice);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetDevice(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ref Guid riid, void** ppvDevice) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (Guid*)priid, ppvDevice);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetDevice<T>(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, out ComPtr<T> ppvDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			ppvDevice = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvDevice.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetDevice<T>(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ref Guid riid, out ComPtr<T> ppvDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvDevice = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (Guid*)priid, (void**)ppvDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static CommandListType GetType(this ComPtr<ID3D12VideoEncodeCommandList1> comObj) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			CommandListType ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, CommandListType>)(handle->LpVtbl[8]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int Close(this ComPtr<ID3D12VideoEncodeCommandList1> comObj) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, int>)(handle->LpVtbl[9]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int Reset(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ID3D12CommandAllocator* pAllocator) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12CommandAllocator*, int>)(handle->LpVtbl[10]))(handle, pAllocator);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int Reset(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ref ID3D12CommandAllocator pAllocator) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (ID3D12CommandAllocator* ppAllocator = &pAllocator)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12CommandAllocator*, int>)(handle->LpVtbl[10]))(handle, (ID3D12CommandAllocator*)ppAllocator);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int Reset(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ComPtr<ID3D12CommandAllocator> pAllocator) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12CommandAllocator*, int>)(handle->LpVtbl[10]))(handle, (ID3D12CommandAllocator*)pAllocator.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearState(this ComPtr<ID3D12VideoEncodeCommandList1> comObj) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, void>)(handle->LpVtbl[11]))(handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResourceBarrier(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, uint numBarriers, ResourceBarrier* pBarriers) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, uint, ResourceBarrier*, void>)(handle->LpVtbl[12]))(handle, numBarriers, pBarriers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResourceBarrier(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, uint numBarriers, ref ResourceBarrier pBarriers) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (ResourceBarrier* ppBarriers = &pBarriers)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, uint, ResourceBarrier*, void>)(handle->LpVtbl[12]))(handle, numBarriers, (ResourceBarrier*)ppBarriers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DiscardResource(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ID3D12Resource* pResource, DiscardRegion* pRegion) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12Resource*, DiscardRegion*, void>)(handle->LpVtbl[13]))(handle, pResource, pRegion);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DiscardResource(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ref ID3D12Resource pResource, DiscardRegion* pRegion) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12Resource*, DiscardRegion*, void>)(handle->LpVtbl[13]))(handle, (ID3D12Resource*)ppResource, pRegion);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DiscardResource(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ComPtr<ID3D12Resource> pResource, DiscardRegion* pRegion) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12Resource*, DiscardRegion*, void>)(handle->LpVtbl[13]))(handle, (ID3D12Resource*)pResource.Handle, pRegion);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DiscardResource(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ID3D12Resource* pResource, ref DiscardRegion pRegion) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (DiscardRegion* ppRegion = &pRegion)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12Resource*, DiscardRegion*, void>)(handle->LpVtbl[13]))(handle, pResource, (DiscardRegion*)ppRegion);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DiscardResource(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ref ID3D12Resource pResource, ref DiscardRegion pRegion) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (DiscardRegion* ppRegion = &pRegion)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12Resource*, DiscardRegion*, void>)(handle->LpVtbl[13]))(handle, (ID3D12Resource*)ppResource, (DiscardRegion*)ppRegion);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DiscardResource(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ComPtr<ID3D12Resource> pResource, ref DiscardRegion pRegion) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (DiscardRegion* ppRegion = &pRegion)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12Resource*, DiscardRegion*, void>)(handle->LpVtbl[13]))(handle, (ID3D12Resource*)pResource.Handle, (DiscardRegion*)ppRegion);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void BeginQuery(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ID3D12QueryHeap* pQueryHeap, QueryType type, uint index) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12QueryHeap*, QueryType, uint, void>)(handle->LpVtbl[14]))(handle, pQueryHeap, type, index);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void BeginQuery(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ref ID3D12QueryHeap pQueryHeap, QueryType type, uint index) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (ID3D12QueryHeap* ppQueryHeap = &pQueryHeap)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12QueryHeap*, QueryType, uint, void>)(handle->LpVtbl[14]))(handle, (ID3D12QueryHeap*)ppQueryHeap, type, index);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void EndQuery(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ID3D12QueryHeap* pQueryHeap, QueryType type, uint index) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12QueryHeap*, QueryType, uint, void>)(handle->LpVtbl[15]))(handle, pQueryHeap, type, index);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void EndQuery(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ref ID3D12QueryHeap pQueryHeap, QueryType type, uint index) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (ID3D12QueryHeap* ppQueryHeap = &pQueryHeap)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12QueryHeap*, QueryType, uint, void>)(handle->LpVtbl[15]))(handle, (ID3D12QueryHeap*)ppQueryHeap, type, index);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveQueryData(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ID3D12QueryHeap* pQueryHeap, QueryType type, uint startIndex, uint numQueries, ID3D12Resource* pDestinationBuffer, ulong alignedDestinationBufferOffset) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12QueryHeap*, QueryType, uint, uint, ID3D12Resource*, ulong, void>)(handle->LpVtbl[16]))(handle, pQueryHeap, type, startIndex, numQueries, pDestinationBuffer, alignedDestinationBufferOffset);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveQueryData(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ref ID3D12QueryHeap pQueryHeap, QueryType type, uint startIndex, uint numQueries, ID3D12Resource* pDestinationBuffer, ulong alignedDestinationBufferOffset) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (ID3D12QueryHeap* ppQueryHeap = &pQueryHeap)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12QueryHeap*, QueryType, uint, uint, ID3D12Resource*, ulong, void>)(handle->LpVtbl[16]))(handle, (ID3D12QueryHeap*)ppQueryHeap, type, startIndex, numQueries, pDestinationBuffer, alignedDestinationBufferOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveQueryData(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ID3D12QueryHeap* pQueryHeap, QueryType type, uint startIndex, uint numQueries, ref ID3D12Resource pDestinationBuffer, ulong alignedDestinationBufferOffset) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (ID3D12Resource* ppDestinationBuffer = &pDestinationBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12QueryHeap*, QueryType, uint, uint, ID3D12Resource*, ulong, void>)(handle->LpVtbl[16]))(handle, pQueryHeap, type, startIndex, numQueries, (ID3D12Resource*)ppDestinationBuffer, alignedDestinationBufferOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveQueryData(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ID3D12QueryHeap* pQueryHeap, QueryType type, uint startIndex, uint numQueries, ComPtr<ID3D12Resource> pDestinationBuffer, ulong alignedDestinationBufferOffset) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12QueryHeap*, QueryType, uint, uint, ID3D12Resource*, ulong, void>)(handle->LpVtbl[16]))(handle, pQueryHeap, type, startIndex, numQueries, (ID3D12Resource*)pDestinationBuffer.Handle, alignedDestinationBufferOffset);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveQueryData(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ref ID3D12QueryHeap pQueryHeap, QueryType type, uint startIndex, uint numQueries, ref ID3D12Resource pDestinationBuffer, ulong alignedDestinationBufferOffset) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (ID3D12QueryHeap* ppQueryHeap = &pQueryHeap)
			{
				fixed (ID3D12Resource* ppDestinationBuffer = &pDestinationBuffer)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12QueryHeap*, QueryType, uint, uint, ID3D12Resource*, ulong, void>)(handle->LpVtbl[16]))(handle, (ID3D12QueryHeap*)ppQueryHeap, type, startIndex, numQueries, (ID3D12Resource*)ppDestinationBuffer, alignedDestinationBufferOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveQueryData(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ref ID3D12QueryHeap pQueryHeap, QueryType type, uint startIndex, uint numQueries, ComPtr<ID3D12Resource> pDestinationBuffer, ulong alignedDestinationBufferOffset) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (ID3D12QueryHeap* ppQueryHeap = &pQueryHeap)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12QueryHeap*, QueryType, uint, uint, ID3D12Resource*, ulong, void>)(handle->LpVtbl[16]))(handle, (ID3D12QueryHeap*)ppQueryHeap, type, startIndex, numQueries, (ID3D12Resource*)pDestinationBuffer.Handle, alignedDestinationBufferOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetPredication(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ID3D12Resource* pBuffer, ulong alignedBufferOffset, PredicationOp operation) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12Resource*, ulong, PredicationOp, void>)(handle->LpVtbl[17]))(handle, pBuffer, alignedBufferOffset, operation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetPredication(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ref ID3D12Resource pBuffer, ulong alignedBufferOffset, PredicationOp operation) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (ID3D12Resource* ppBuffer = &pBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12Resource*, ulong, PredicationOp, void>)(handle->LpVtbl[17]))(handle, (ID3D12Resource*)ppBuffer, alignedBufferOffset, operation);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetPredication(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ComPtr<ID3D12Resource> pBuffer, ulong alignedBufferOffset, PredicationOp operation) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12Resource*, ulong, PredicationOp, void>)(handle->LpVtbl[17]))(handle, (ID3D12Resource*)pBuffer.Handle, alignedBufferOffset, operation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetMarker(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, uint metadata, void* pData, uint size) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, uint, void*, uint, void>)(handle->LpVtbl[18]))(handle, metadata, pData, size);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void BeginEvent(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, uint metadata, void* pData, uint size) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, uint, void*, uint, void>)(handle->LpVtbl[19]))(handle, metadata, pData, size);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void EndEvent(this ComPtr<ID3D12VideoEncodeCommandList1> comObj) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, void>)(handle->LpVtbl[20]))(handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void EstimateMotion(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ID3D12VideoMotionEstimator* pMotionEstimator, VideoMotionEstimatorOutput* pOutputArguments, VideoMotionEstimatorInput* pInputArguments) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12VideoMotionEstimator*, VideoMotionEstimatorOutput*, VideoMotionEstimatorInput*, void>)(handle->LpVtbl[21]))(handle, pMotionEstimator, pOutputArguments, pInputArguments);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void EstimateMotion(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ref ID3D12VideoMotionEstimator pMotionEstimator, VideoMotionEstimatorOutput* pOutputArguments, VideoMotionEstimatorInput* pInputArguments) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (ID3D12VideoMotionEstimator* ppMotionEstimator = &pMotionEstimator)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12VideoMotionEstimator*, VideoMotionEstimatorOutput*, VideoMotionEstimatorInput*, void>)(handle->LpVtbl[21]))(handle, (ID3D12VideoMotionEstimator*)ppMotionEstimator, pOutputArguments, pInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void EstimateMotion(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ComPtr<ID3D12VideoMotionEstimator> pMotionEstimator, VideoMotionEstimatorOutput* pOutputArguments, VideoMotionEstimatorInput* pInputArguments) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12VideoMotionEstimator*, VideoMotionEstimatorOutput*, VideoMotionEstimatorInput*, void>)(handle->LpVtbl[21]))(handle, (ID3D12VideoMotionEstimator*)pMotionEstimator.Handle, pOutputArguments, pInputArguments);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void EstimateMotion(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ID3D12VideoMotionEstimator* pMotionEstimator, ref VideoMotionEstimatorOutput pOutputArguments, VideoMotionEstimatorInput* pInputArguments) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (VideoMotionEstimatorOutput* ppOutputArguments = &pOutputArguments)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12VideoMotionEstimator*, VideoMotionEstimatorOutput*, VideoMotionEstimatorInput*, void>)(handle->LpVtbl[21]))(handle, pMotionEstimator, (VideoMotionEstimatorOutput*)ppOutputArguments, pInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void EstimateMotion(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ref ID3D12VideoMotionEstimator pMotionEstimator, ref VideoMotionEstimatorOutput pOutputArguments, VideoMotionEstimatorInput* pInputArguments) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (ID3D12VideoMotionEstimator* ppMotionEstimator = &pMotionEstimator)
			{
				fixed (VideoMotionEstimatorOutput* ppOutputArguments = &pOutputArguments)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12VideoMotionEstimator*, VideoMotionEstimatorOutput*, VideoMotionEstimatorInput*, void>)(handle->LpVtbl[21]))(handle, (ID3D12VideoMotionEstimator*)ppMotionEstimator, (VideoMotionEstimatorOutput*)ppOutputArguments, pInputArguments);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void EstimateMotion(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ComPtr<ID3D12VideoMotionEstimator> pMotionEstimator, ref VideoMotionEstimatorOutput pOutputArguments, VideoMotionEstimatorInput* pInputArguments) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (VideoMotionEstimatorOutput* ppOutputArguments = &pOutputArguments)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12VideoMotionEstimator*, VideoMotionEstimatorOutput*, VideoMotionEstimatorInput*, void>)(handle->LpVtbl[21]))(handle, (ID3D12VideoMotionEstimator*)pMotionEstimator.Handle, (VideoMotionEstimatorOutput*)ppOutputArguments, pInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void EstimateMotion(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ID3D12VideoMotionEstimator* pMotionEstimator, VideoMotionEstimatorOutput* pOutputArguments, ref VideoMotionEstimatorInput pInputArguments) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (VideoMotionEstimatorInput* ppInputArguments = &pInputArguments)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12VideoMotionEstimator*, VideoMotionEstimatorOutput*, VideoMotionEstimatorInput*, void>)(handle->LpVtbl[21]))(handle, pMotionEstimator, pOutputArguments, (VideoMotionEstimatorInput*)ppInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void EstimateMotion(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ref ID3D12VideoMotionEstimator pMotionEstimator, VideoMotionEstimatorOutput* pOutputArguments, ref VideoMotionEstimatorInput pInputArguments) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (ID3D12VideoMotionEstimator* ppMotionEstimator = &pMotionEstimator)
			{
				fixed (VideoMotionEstimatorInput* ppInputArguments = &pInputArguments)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12VideoMotionEstimator*, VideoMotionEstimatorOutput*, VideoMotionEstimatorInput*, void>)(handle->LpVtbl[21]))(handle, (ID3D12VideoMotionEstimator*)ppMotionEstimator, pOutputArguments, (VideoMotionEstimatorInput*)ppInputArguments);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void EstimateMotion(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ComPtr<ID3D12VideoMotionEstimator> pMotionEstimator, VideoMotionEstimatorOutput* pOutputArguments, ref VideoMotionEstimatorInput pInputArguments) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (VideoMotionEstimatorInput* ppInputArguments = &pInputArguments)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12VideoMotionEstimator*, VideoMotionEstimatorOutput*, VideoMotionEstimatorInput*, void>)(handle->LpVtbl[21]))(handle, (ID3D12VideoMotionEstimator*)pMotionEstimator.Handle, pOutputArguments, (VideoMotionEstimatorInput*)ppInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void EstimateMotion(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ID3D12VideoMotionEstimator* pMotionEstimator, ref VideoMotionEstimatorOutput pOutputArguments, ref VideoMotionEstimatorInput pInputArguments) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (VideoMotionEstimatorOutput* ppOutputArguments = &pOutputArguments)
			{
				fixed (VideoMotionEstimatorInput* ppInputArguments = &pInputArguments)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12VideoMotionEstimator*, VideoMotionEstimatorOutput*, VideoMotionEstimatorInput*, void>)(handle->LpVtbl[21]))(handle, pMotionEstimator, (VideoMotionEstimatorOutput*)ppOutputArguments, (VideoMotionEstimatorInput*)ppInputArguments);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void EstimateMotion(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ref ID3D12VideoMotionEstimator pMotionEstimator, ref VideoMotionEstimatorOutput pOutputArguments, ref VideoMotionEstimatorInput pInputArguments) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (ID3D12VideoMotionEstimator* ppMotionEstimator = &pMotionEstimator)
			{
				fixed (VideoMotionEstimatorOutput* ppOutputArguments = &pOutputArguments)
				{
					fixed (VideoMotionEstimatorInput* ppInputArguments = &pInputArguments)
					{
						((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12VideoMotionEstimator*, VideoMotionEstimatorOutput*, VideoMotionEstimatorInput*, void>)(handle->LpVtbl[21]))(handle, (ID3D12VideoMotionEstimator*)ppMotionEstimator, (VideoMotionEstimatorOutput*)ppOutputArguments, (VideoMotionEstimatorInput*)ppInputArguments);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void EstimateMotion(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ComPtr<ID3D12VideoMotionEstimator> pMotionEstimator, ref VideoMotionEstimatorOutput pOutputArguments, ref VideoMotionEstimatorInput pInputArguments) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (VideoMotionEstimatorOutput* ppOutputArguments = &pOutputArguments)
			{
				fixed (VideoMotionEstimatorInput* ppInputArguments = &pInputArguments)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12VideoMotionEstimator*, VideoMotionEstimatorOutput*, VideoMotionEstimatorInput*, void>)(handle->LpVtbl[21]))(handle, (ID3D12VideoMotionEstimator*)pMotionEstimator.Handle, (VideoMotionEstimatorOutput*)ppOutputArguments, (VideoMotionEstimatorInput*)ppInputArguments);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveMotionVectorHeap(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ResolveVideoMotionVectorHeapOutput* pOutputArguments, ResolveVideoMotionVectorHeapInput* pInputArguments) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ResolveVideoMotionVectorHeapOutput*, ResolveVideoMotionVectorHeapInput*, void>)(handle->LpVtbl[22]))(handle, pOutputArguments, pInputArguments);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveMotionVectorHeap(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ref ResolveVideoMotionVectorHeapOutput pOutputArguments, ResolveVideoMotionVectorHeapInput* pInputArguments) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (ResolveVideoMotionVectorHeapOutput* ppOutputArguments = &pOutputArguments)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ResolveVideoMotionVectorHeapOutput*, ResolveVideoMotionVectorHeapInput*, void>)(handle->LpVtbl[22]))(handle, (ResolveVideoMotionVectorHeapOutput*)ppOutputArguments, pInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveMotionVectorHeap(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ResolveVideoMotionVectorHeapOutput* pOutputArguments, ref ResolveVideoMotionVectorHeapInput pInputArguments) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (ResolveVideoMotionVectorHeapInput* ppInputArguments = &pInputArguments)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ResolveVideoMotionVectorHeapOutput*, ResolveVideoMotionVectorHeapInput*, void>)(handle->LpVtbl[22]))(handle, pOutputArguments, (ResolveVideoMotionVectorHeapInput*)ppInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ResolveMotionVectorHeap(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ref ResolveVideoMotionVectorHeapOutput pOutputArguments, ref ResolveVideoMotionVectorHeapInput pInputArguments) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (ResolveVideoMotionVectorHeapOutput* ppOutputArguments = &pOutputArguments)
			{
				fixed (ResolveVideoMotionVectorHeapInput* ppInputArguments = &pInputArguments)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ResolveVideoMotionVectorHeapOutput*, ResolveVideoMotionVectorHeapInput*, void>)(handle->LpVtbl[22]))(handle, (ResolveVideoMotionVectorHeapOutput*)ppOutputArguments, (ResolveVideoMotionVectorHeapInput*)ppInputArguments);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void WriteBufferImmediate(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, uint count, WritebufferimmediateParameter* pParams, WritebufferimmediateMode* pModes) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, uint, WritebufferimmediateParameter*, WritebufferimmediateMode*, void>)(handle->LpVtbl[23]))(handle, count, pParams, pModes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void WriteBufferImmediate(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, uint count, ref WritebufferimmediateParameter pParams, WritebufferimmediateMode* pModes) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (WritebufferimmediateParameter* ppParams = &pParams)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, uint, WritebufferimmediateParameter*, WritebufferimmediateMode*, void>)(handle->LpVtbl[23]))(handle, count, (WritebufferimmediateParameter*)ppParams, pModes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void WriteBufferImmediate(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, uint count, WritebufferimmediateParameter* pParams, ref WritebufferimmediateMode pModes) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (WritebufferimmediateMode* ppModes = &pModes)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, uint, WritebufferimmediateParameter*, WritebufferimmediateMode*, void>)(handle->LpVtbl[23]))(handle, count, pParams, (WritebufferimmediateMode*)ppModes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void WriteBufferImmediate(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, uint count, ref WritebufferimmediateParameter pParams, ref WritebufferimmediateMode pModes) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (WritebufferimmediateParameter* ppParams = &pParams)
			{
				fixed (WritebufferimmediateMode* ppModes = &pModes)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, uint, WritebufferimmediateParameter*, WritebufferimmediateMode*, void>)(handle->LpVtbl[23]))(handle, count, (WritebufferimmediateParameter*)ppParams, (WritebufferimmediateMode*)ppModes);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetProtectedResourceSession(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ID3D12ProtectedResourceSession* pProtectedResourceSession) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12ProtectedResourceSession*, void>)(handle->LpVtbl[24]))(handle, pProtectedResourceSession);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetProtectedResourceSession(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ref ID3D12ProtectedResourceSession pProtectedResourceSession) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12ProtectedResourceSession*, void>)(handle->LpVtbl[24]))(handle, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetProtectedResourceSession(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12ProtectedResourceSession*, void>)(handle->LpVtbl[24]))(handle, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void InitializeExtensionCommand(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ID3D12VideoExtensionCommand* pExtensionCommand, void* pInitializationParameters, nuint initializationParametersSizeInBytes) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12VideoExtensionCommand*, void*, nuint, void>)(handle->LpVtbl[25]))(handle, pExtensionCommand, pInitializationParameters, initializationParametersSizeInBytes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void InitializeExtensionCommand(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ref ID3D12VideoExtensionCommand pExtensionCommand, void* pInitializationParameters, nuint initializationParametersSizeInBytes) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (ID3D12VideoExtensionCommand* ppExtensionCommand = &pExtensionCommand)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12VideoExtensionCommand*, void*, nuint, void>)(handle->LpVtbl[25]))(handle, (ID3D12VideoExtensionCommand*)ppExtensionCommand, pInitializationParameters, initializationParametersSizeInBytes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void InitializeExtensionCommand(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ComPtr<ID3D12VideoExtensionCommand> pExtensionCommand, void* pInitializationParameters, nuint initializationParametersSizeInBytes) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12VideoExtensionCommand*, void*, nuint, void>)(handle->LpVtbl[25]))(handle, (ID3D12VideoExtensionCommand*)pExtensionCommand.Handle, pInitializationParameters, initializationParametersSizeInBytes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ExecuteExtensionCommand(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ID3D12VideoExtensionCommand* pExtensionCommand, void* pExecutionParameters, nuint executionParametersSizeInBytes) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12VideoExtensionCommand*, void*, nuint, void>)(handle->LpVtbl[26]))(handle, pExtensionCommand, pExecutionParameters, executionParametersSizeInBytes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ExecuteExtensionCommand(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ref ID3D12VideoExtensionCommand pExtensionCommand, void* pExecutionParameters, nuint executionParametersSizeInBytes) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			fixed (ID3D12VideoExtensionCommand* ppExtensionCommand = &pExtensionCommand)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12VideoExtensionCommand*, void*, nuint, void>)(handle->LpVtbl[26]))(handle, (ID3D12VideoExtensionCommand*)ppExtensionCommand, pExecutionParameters, executionParametersSizeInBytes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ExecuteExtensionCommand(this ComPtr<ID3D12VideoEncodeCommandList1> comObj, ComPtr<ID3D12VideoExtensionCommand> pExtensionCommand, void* pExecutionParameters, nuint executionParametersSizeInBytes) 
		{
			ID3D12VideoEncodeCommandList1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12VideoEncodeCommandList1*, ID3D12VideoExtensionCommand*, void*, nuint, void>)(handle->LpVtbl[26]))(handle, (ID3D12VideoExtensionCommand*)pExtensionCommand.Handle, pExecutionParameters, executionParametersSizeInBytes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int QueryInterface(this ComPtr<ID3D12VideoEncoder> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int QueryInterface(this ComPtr<ID3D12VideoEncoder> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int QueryInterface<T>(this ComPtr<ID3D12VideoEncoder> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int QueryInterface<T>(this ComPtr<ID3D12VideoEncoder> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D12VideoEncoder> comObj) 
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D12VideoEncoder> comObj) 
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetPrivateData(this ComPtr<ID3D12VideoEncoder> comObj, Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetPrivateData(this ComPtr<ID3D12VideoEncoder> comObj, ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetPrivateData(this ComPtr<ID3D12VideoEncoder> comObj, Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetPrivateData(this ComPtr<ID3D12VideoEncoder> comObj, ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetPrivateData<T>(this ComPtr<ID3D12VideoEncoder> comObj, Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetPrivateData<T>(this ComPtr<ID3D12VideoEncoder> comObj, ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetPrivateData<T>(this ComPtr<ID3D12VideoEncoder> comObj, Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetPrivateData<T>(this ComPtr<ID3D12VideoEncoder> comObj, ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateData(this ComPtr<ID3D12VideoEncoder> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, Guid*, uint, void*, int>)(handle->LpVtbl[4]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateData(this ComPtr<ID3D12VideoEncoder> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, Guid*, uint, void*, int>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoEncoder> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoEncoder> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoEncoder> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoEncoder> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoEncoder> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoEncoder> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetName(this ComPtr<ID3D12VideoEncoder> comObj, char* name) 
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, char*, int>)(handle->LpVtbl[6]))(handle, name);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetName(this ComPtr<ID3D12VideoEncoder> comObj, ReadOnlySpan<char> name) 
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			fixed (char* pname = name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, char*, int>)(handle->LpVtbl[6]))(handle, (char*)pname);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetName(this ComPtr<ID3D12VideoEncoder> comObj, string name) 
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, char*, int>)(handle->LpVtbl[6]))(handle, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetDevice(this ComPtr<ID3D12VideoEncoder> comObj, Guid* riid, void** ppvDevice) 
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, riid, ppvDevice);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetDevice(this ComPtr<ID3D12VideoEncoder> comObj, ref Guid riid, void** ppvDevice) 
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (Guid*)priid, ppvDevice);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetDevice<T>(this ComPtr<ID3D12VideoEncoder> comObj, out ComPtr<T> ppvDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			ppvDevice = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvDevice.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetDevice<T>(this ComPtr<ID3D12VideoEncoder> comObj, ref Guid riid, out ComPtr<T> ppvDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvDevice = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (Guid*)priid, (void**)ppvDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint GetNodeMask(this ComPtr<ID3D12VideoEncoder> comObj) 
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, uint>)(handle->LpVtbl[8]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static VideoEncoderFlags GetEncoderFlags(this ComPtr<ID3D12VideoEncoder> comObj) 
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			VideoEncoderFlags ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, VideoEncoderFlags>)(handle->LpVtbl[9]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static VideoEncoderCodec GetCodec(this ComPtr<ID3D12VideoEncoder> comObj) 
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			VideoEncoderCodec ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, VideoEncoderCodec>)(handle->LpVtbl[10]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCodecProfile(this ComPtr<ID3D12VideoEncoder> comObj, VideoEncoderProfileDesc dstProfile) 
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, VideoEncoderProfileDesc, int>)(handle->LpVtbl[11]))(handle, dstProfile);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCodecConfiguration(this ComPtr<ID3D12VideoEncoder> comObj, VideoEncoderCodecConfiguration dstCodecConfig) 
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, VideoEncoderCodecConfiguration, int>)(handle->LpVtbl[12]))(handle, dstCodecConfig);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static Format GetInputFormat(this ComPtr<ID3D12VideoEncoder> comObj) 
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			Format ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, Format>)(handle->LpVtbl[13]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static VideoEncoderMotionEstimationPrecisionMode GetMaxMotionEstimationPrecision(this ComPtr<ID3D12VideoEncoder> comObj) 
		{
			ID3D12VideoEncoder* handle = comObj.Handle;
			VideoEncoderMotionEstimationPrecisionMode ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoder*, VideoEncoderMotionEstimationPrecisionMode>)(handle->LpVtbl[14]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int QueryInterface(this ComPtr<ID3D12VideoEncoderHeap> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int QueryInterface(this ComPtr<ID3D12VideoEncoderHeap> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int QueryInterface<T>(this ComPtr<ID3D12VideoEncoderHeap> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int QueryInterface<T>(this ComPtr<ID3D12VideoEncoderHeap> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D12VideoEncoderHeap> comObj) 
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D12VideoEncoderHeap> comObj) 
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetPrivateData(this ComPtr<ID3D12VideoEncoderHeap> comObj, Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetPrivateData(this ComPtr<ID3D12VideoEncoderHeap> comObj, ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetPrivateData(this ComPtr<ID3D12VideoEncoderHeap> comObj, Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetPrivateData(this ComPtr<ID3D12VideoEncoderHeap> comObj, ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetPrivateData<T>(this ComPtr<ID3D12VideoEncoderHeap> comObj, Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetPrivateData<T>(this ComPtr<ID3D12VideoEncoderHeap> comObj, ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetPrivateData<T>(this ComPtr<ID3D12VideoEncoderHeap> comObj, Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetPrivateData<T>(this ComPtr<ID3D12VideoEncoderHeap> comObj, ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateData(this ComPtr<ID3D12VideoEncoderHeap> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, Guid*, uint, void*, int>)(handle->LpVtbl[4]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateData(this ComPtr<ID3D12VideoEncoderHeap> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, Guid*, uint, void*, int>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoEncoderHeap> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoEncoderHeap> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoEncoderHeap> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoEncoderHeap> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoEncoderHeap> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoEncoderHeap> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetName(this ComPtr<ID3D12VideoEncoderHeap> comObj, char* name) 
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, char*, int>)(handle->LpVtbl[6]))(handle, name);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetName(this ComPtr<ID3D12VideoEncoderHeap> comObj, ReadOnlySpan<char> name) 
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			fixed (char* pname = name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, char*, int>)(handle->LpVtbl[6]))(handle, (char*)pname);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetName(this ComPtr<ID3D12VideoEncoderHeap> comObj, string name) 
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, char*, int>)(handle->LpVtbl[6]))(handle, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetDevice(this ComPtr<ID3D12VideoEncoderHeap> comObj, Guid* riid, void** ppvDevice) 
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, riid, ppvDevice);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetDevice(this ComPtr<ID3D12VideoEncoderHeap> comObj, ref Guid riid, void** ppvDevice) 
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (Guid*)priid, ppvDevice);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetDevice<T>(this ComPtr<ID3D12VideoEncoderHeap> comObj, out ComPtr<T> ppvDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			ppvDevice = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvDevice.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetDevice<T>(this ComPtr<ID3D12VideoEncoderHeap> comObj, ref Guid riid, out ComPtr<T> ppvDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvDevice = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (Guid*)priid, (void**)ppvDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint GetNodeMask(this ComPtr<ID3D12VideoEncoderHeap> comObj) 
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, uint>)(handle->LpVtbl[8]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static VideoEncoderHeapFlags GetEncoderHeapFlags(this ComPtr<ID3D12VideoEncoderHeap> comObj) 
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			VideoEncoderHeapFlags ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, VideoEncoderHeapFlags>)(handle->LpVtbl[9]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static VideoEncoderCodec GetCodec(this ComPtr<ID3D12VideoEncoderHeap> comObj) 
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			VideoEncoderCodec ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, VideoEncoderCodec>)(handle->LpVtbl[10]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCodecProfile(this ComPtr<ID3D12VideoEncoderHeap> comObj, VideoEncoderProfileDesc dstProfile) 
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, VideoEncoderProfileDesc, int>)(handle->LpVtbl[11]))(handle, dstProfile);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCodecLevel(this ComPtr<ID3D12VideoEncoderHeap> comObj, VideoEncoderLevelSetting dstLevel) 
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, VideoEncoderLevelSetting, int>)(handle->LpVtbl[12]))(handle, dstLevel);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint GetResolutionListCount(this ComPtr<ID3D12VideoEncoderHeap> comObj) 
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, uint>)(handle->LpVtbl[13]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetResolutionList(this ComPtr<ID3D12VideoEncoderHeap> comObj, uint resolutionsListCount, VideoEncoderPictureResolutionDesc* pResolutionList) 
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, uint, VideoEncoderPictureResolutionDesc*, int>)(handle->LpVtbl[14]))(handle, resolutionsListCount, pResolutionList);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetResolutionList(this ComPtr<ID3D12VideoEncoderHeap> comObj, uint resolutionsListCount, ref VideoEncoderPictureResolutionDesc pResolutionList) 
		{
			ID3D12VideoEncoderHeap* handle = comObj.Handle;
			fixed (VideoEncoderPictureResolutionDesc* ppResolutionList = &pResolutionList)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoEncoderHeap*, uint, VideoEncoderPictureResolutionDesc*, int>)(handle->LpVtbl[14]))(handle, resolutionsListCount, (VideoEncoderPictureResolutionDesc*)ppResolutionList);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int QueryInterface(this ComPtr<ID3D12VideoDevice3> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int QueryInterface(this ComPtr<ID3D12VideoDevice3> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int QueryInterface<T>(this ComPtr<ID3D12VideoDevice3> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int QueryInterface<T>(this ComPtr<ID3D12VideoDevice3> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D12VideoDevice3> comObj) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D12VideoDevice3> comObj) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckFeatureSupport(this ComPtr<ID3D12VideoDevice3> comObj, FeatureVideo featureVideo, void* pFeatureSupportData, uint featureSupportDataSize) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, FeatureVideo, void*, uint, int>)(handle->LpVtbl[3]))(handle, featureVideo, pFeatureSupportData, featureSupportDataSize);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckFeatureSupport<T>(this ComPtr<ID3D12VideoDevice3> comObj, FeatureVideo featureVideo, ComPtr<T> pFeatureSupportData, uint featureSupportDataSize) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, FeatureVideo, void*, uint, int>)(handle->LpVtbl[3]))(handle, featureVideo, (void*)pFeatureSupportData.Handle, featureSupportDataSize);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder(this ComPtr<ID3D12VideoDevice3> comObj, VideoDecoderDesc* pDesc, Guid* riid, void** ppVideoDecoder) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderDesc*, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, pDesc, riid, ppVideoDecoder);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoDecoderDesc pDesc, Guid* riid, void** ppVideoDecoder) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderDesc*, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, (VideoDecoderDesc*)ppDesc, riid, ppVideoDecoder);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder(this ComPtr<ID3D12VideoDevice3> comObj, VideoDecoderDesc* pDesc, ref Guid riid, void** ppVideoDecoder) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderDesc*, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, pDesc, (Guid*)priid, ppVideoDecoder);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoDecoderDesc pDesc, ref Guid riid, void** ppVideoDecoder) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderDesc*, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, (VideoDecoderDesc*)ppDesc, (Guid*)priid, ppVideoDecoder);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder<T>(this ComPtr<ID3D12VideoDevice3> comObj, VideoDecoderDesc* pDesc, out ComPtr<T> ppVideoDecoder) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			ppVideoDecoder = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderDesc*, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, pDesc, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoDecoder.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder<T>(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoDecoderDesc pDesc, out ComPtr<T> ppVideoDecoder) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppDesc = &pDesc)
			{
				ppVideoDecoder = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderDesc*, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, (VideoDecoderDesc*)ppDesc, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoDecoder.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder<T>(this ComPtr<ID3D12VideoDevice3> comObj, VideoDecoderDesc* pDesc, ref Guid riid, out ComPtr<T> ppVideoDecoder) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppVideoDecoder = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderDesc*, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, pDesc, (Guid*)priid, (void**)ppVideoDecoder.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder<T>(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoDecoderDesc pDesc, ref Guid riid, out ComPtr<T> ppVideoDecoder) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppVideoDecoder = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderDesc*, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, (VideoDecoderDesc*)ppDesc, (Guid*)priid, (void**)ppVideoDecoder.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderHeap(this ComPtr<ID3D12VideoDevice3> comObj, VideoDecoderHeapDesc* pVideoDecoderHeapDesc, Guid* riid, void** ppVideoDecoderHeap) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderHeapDesc*, Guid*, void**, int>)(handle->LpVtbl[5]))(handle, pVideoDecoderHeapDesc, riid, ppVideoDecoderHeap);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderHeap(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoDecoderHeapDesc pVideoDecoderHeapDesc, Guid* riid, void** ppVideoDecoderHeap) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoDecoderHeapDesc* ppVideoDecoderHeapDesc = &pVideoDecoderHeapDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderHeapDesc*, Guid*, void**, int>)(handle->LpVtbl[5]))(handle, (VideoDecoderHeapDesc*)ppVideoDecoderHeapDesc, riid, ppVideoDecoderHeap);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderHeap(this ComPtr<ID3D12VideoDevice3> comObj, VideoDecoderHeapDesc* pVideoDecoderHeapDesc, ref Guid riid, void** ppVideoDecoderHeap) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderHeapDesc*, Guid*, void**, int>)(handle->LpVtbl[5]))(handle, pVideoDecoderHeapDesc, (Guid*)priid, ppVideoDecoderHeap);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderHeap(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoDecoderHeapDesc pVideoDecoderHeapDesc, ref Guid riid, void** ppVideoDecoderHeap) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoDecoderHeapDesc* ppVideoDecoderHeapDesc = &pVideoDecoderHeapDesc)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderHeapDesc*, Guid*, void**, int>)(handle->LpVtbl[5]))(handle, (VideoDecoderHeapDesc*)ppVideoDecoderHeapDesc, (Guid*)priid, ppVideoDecoderHeap);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderHeap<T>(this ComPtr<ID3D12VideoDevice3> comObj, VideoDecoderHeapDesc* pVideoDecoderHeapDesc, out ComPtr<T> ppVideoDecoderHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			ppVideoDecoderHeap = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderHeapDesc*, Guid*, void**, int>)(handle->LpVtbl[5]))(handle, pVideoDecoderHeapDesc, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoDecoderHeap.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderHeap<T>(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoDecoderHeapDesc pVideoDecoderHeapDesc, out ComPtr<T> ppVideoDecoderHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoDecoderHeapDesc* ppVideoDecoderHeapDesc = &pVideoDecoderHeapDesc)
			{
				ppVideoDecoderHeap = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderHeapDesc*, Guid*, void**, int>)(handle->LpVtbl[5]))(handle, (VideoDecoderHeapDesc*)ppVideoDecoderHeapDesc, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoDecoderHeap.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderHeap<T>(this ComPtr<ID3D12VideoDevice3> comObj, VideoDecoderHeapDesc* pVideoDecoderHeapDesc, ref Guid riid, out ComPtr<T> ppVideoDecoderHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppVideoDecoderHeap = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderHeapDesc*, Guid*, void**, int>)(handle->LpVtbl[5]))(handle, pVideoDecoderHeapDesc, (Guid*)priid, (void**)ppVideoDecoderHeap.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderHeap<T>(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoDecoderHeapDesc pVideoDecoderHeapDesc, ref Guid riid, out ComPtr<T> ppVideoDecoderHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoDecoderHeapDesc* ppVideoDecoderHeapDesc = &pVideoDecoderHeapDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppVideoDecoderHeap = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderHeapDesc*, Guid*, void**, int>)(handle->LpVtbl[5]))(handle, (VideoDecoderHeapDesc*)ppVideoDecoderHeapDesc, (Guid*)priid, (void**)ppVideoDecoderHeap.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, VideoProcessOutputStreamDesc* pOutputStreamDesc, uint numInputStreamDescs, VideoProcessInputStreamDesc* pInputStreamDescs, Guid* riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, riid, ppVideoProcessor);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, ref VideoProcessOutputStreamDesc pOutputStreamDesc, uint numInputStreamDescs, VideoProcessInputStreamDesc* pInputStreamDescs, Guid* riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, (VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, riid, ppVideoProcessor);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, VideoProcessOutputStreamDesc* pOutputStreamDesc, uint numInputStreamDescs, ref VideoProcessInputStreamDesc pInputStreamDescs, Guid* riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, (VideoProcessInputStreamDesc*)ppInputStreamDescs, riid, ppVideoProcessor);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, ref VideoProcessOutputStreamDesc pOutputStreamDesc, uint numInputStreamDescs, ref VideoProcessInputStreamDesc pInputStreamDescs, Guid* riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				fixed (VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, (VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, (VideoProcessInputStreamDesc*)ppInputStreamDescs, riid, ppVideoProcessor);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, VideoProcessOutputStreamDesc* pOutputStreamDesc, uint numInputStreamDescs, VideoProcessInputStreamDesc* pInputStreamDescs, ref Guid riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, (Guid*)priid, ppVideoProcessor);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, ref VideoProcessOutputStreamDesc pOutputStreamDesc, uint numInputStreamDescs, VideoProcessInputStreamDesc* pInputStreamDescs, ref Guid riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, (VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, (Guid*)priid, ppVideoProcessor);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, VideoProcessOutputStreamDesc* pOutputStreamDesc, uint numInputStreamDescs, ref VideoProcessInputStreamDesc pInputStreamDescs, ref Guid riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, (VideoProcessInputStreamDesc*)ppInputStreamDescs, (Guid*)priid, ppVideoProcessor);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, ref VideoProcessOutputStreamDesc pOutputStreamDesc, uint numInputStreamDescs, ref VideoProcessInputStreamDesc pInputStreamDescs, ref Guid riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				fixed (VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
				{
					fixed (Guid* priid = &riid)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, (VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, (VideoProcessInputStreamDesc*)ppInputStreamDescs, (Guid*)priid, ppVideoProcessor);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor<T>(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, VideoProcessOutputStreamDesc* pOutputStreamDesc, uint numInputStreamDescs, VideoProcessInputStreamDesc* pInputStreamDescs, out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			ppVideoProcessor = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoProcessor.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor<T>(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, ref VideoProcessOutputStreamDesc pOutputStreamDesc, uint numInputStreamDescs, VideoProcessInputStreamDesc* pInputStreamDescs, out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				ppVideoProcessor = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, (VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoProcessor.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor<T>(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, VideoProcessOutputStreamDesc* pOutputStreamDesc, uint numInputStreamDescs, ref VideoProcessInputStreamDesc pInputStreamDescs, out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
			{
				ppVideoProcessor = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, (VideoProcessInputStreamDesc*)ppInputStreamDescs, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoProcessor.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor<T>(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, ref VideoProcessOutputStreamDesc pOutputStreamDesc, uint numInputStreamDescs, ref VideoProcessInputStreamDesc pInputStreamDescs, out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				fixed (VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
				{
					ppVideoProcessor = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, (VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, (VideoProcessInputStreamDesc*)ppInputStreamDescs, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoProcessor.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor<T>(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, VideoProcessOutputStreamDesc* pOutputStreamDesc, uint numInputStreamDescs, VideoProcessInputStreamDesc* pInputStreamDescs, ref Guid riid, out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppVideoProcessor = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, (Guid*)priid, (void**)ppVideoProcessor.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor<T>(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, ref VideoProcessOutputStreamDesc pOutputStreamDesc, uint numInputStreamDescs, VideoProcessInputStreamDesc* pInputStreamDescs, ref Guid riid, out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppVideoProcessor = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, (VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, (Guid*)priid, (void**)ppVideoProcessor.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor<T>(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, VideoProcessOutputStreamDesc* pOutputStreamDesc, uint numInputStreamDescs, ref VideoProcessInputStreamDesc pInputStreamDescs, ref Guid riid, out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
			{
				fixed (Guid* priid = &riid)
				{
					ppVideoProcessor = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, (VideoProcessInputStreamDesc*)ppInputStreamDescs, (Guid*)priid, (void**)ppVideoProcessor.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor<T>(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, ref VideoProcessOutputStreamDesc pOutputStreamDesc, uint numInputStreamDescs, ref VideoProcessInputStreamDesc pInputStreamDescs, ref Guid riid, out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				fixed (VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
				{
					fixed (Guid* priid = &riid)
					{
						ppVideoProcessor = default;
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, (VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, (VideoProcessInputStreamDesc*)ppInputStreamDescs, (Guid*)priid, (void**)ppVideoProcessor.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionEstimator(this ComPtr<ID3D12VideoDevice3> comObj, VideoMotionEstimatorDesc* pDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, Guid* riid, void** ppVideoMotionEstimator) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionEstimatorDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, pDesc, pProtectedResourceSession, riid, ppVideoMotionEstimator);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionEstimator(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoMotionEstimatorDesc pDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, Guid* riid, void** ppVideoMotionEstimator) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoMotionEstimatorDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionEstimatorDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (VideoMotionEstimatorDesc*)ppDesc, pProtectedResourceSession, riid, ppVideoMotionEstimator);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionEstimator(this ComPtr<ID3D12VideoDevice3> comObj, VideoMotionEstimatorDesc* pDesc, ref ID3D12ProtectedResourceSession pProtectedResourceSession, Guid* riid, void** ppVideoMotionEstimator) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionEstimatorDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, pDesc, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession, riid, ppVideoMotionEstimator);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionEstimator(this ComPtr<ID3D12VideoDevice3> comObj, VideoMotionEstimatorDesc* pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, Guid* riid, void** ppVideoMotionEstimator) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionEstimatorDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, pDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, riid, ppVideoMotionEstimator);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionEstimator(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoMotionEstimatorDesc pDesc, ref ID3D12ProtectedResourceSession pProtectedResourceSession, Guid* riid, void** ppVideoMotionEstimator) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoMotionEstimatorDesc* ppDesc = &pDesc)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionEstimatorDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (VideoMotionEstimatorDesc*)ppDesc, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession, riid, ppVideoMotionEstimator);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionEstimator(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoMotionEstimatorDesc pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, Guid* riid, void** ppVideoMotionEstimator) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoMotionEstimatorDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionEstimatorDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (VideoMotionEstimatorDesc*)ppDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, riid, ppVideoMotionEstimator);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionEstimator(this ComPtr<ID3D12VideoDevice3> comObj, VideoMotionEstimatorDesc* pDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, ref Guid riid, void** ppVideoMotionEstimator) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionEstimatorDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, pDesc, pProtectedResourceSession, (Guid*)priid, ppVideoMotionEstimator);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionEstimator(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoMotionEstimatorDesc pDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, ref Guid riid, void** ppVideoMotionEstimator) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoMotionEstimatorDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionEstimatorDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (VideoMotionEstimatorDesc*)ppDesc, pProtectedResourceSession, (Guid*)priid, ppVideoMotionEstimator);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionEstimator(this ComPtr<ID3D12VideoDevice3> comObj, VideoMotionEstimatorDesc* pDesc, ref ID3D12ProtectedResourceSession pProtectedResourceSession, ref Guid riid, void** ppVideoMotionEstimator) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionEstimatorDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, pDesc, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession, (Guid*)priid, ppVideoMotionEstimator);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionEstimator(this ComPtr<ID3D12VideoDevice3> comObj, VideoMotionEstimatorDesc* pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, ref Guid riid, void** ppVideoMotionEstimator) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionEstimatorDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, pDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)priid, ppVideoMotionEstimator);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionEstimator(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoMotionEstimatorDesc pDesc, ref ID3D12ProtectedResourceSession pProtectedResourceSession, ref Guid riid, void** ppVideoMotionEstimator) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoMotionEstimatorDesc* ppDesc = &pDesc)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
				{
					fixed (Guid* priid = &riid)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionEstimatorDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (VideoMotionEstimatorDesc*)ppDesc, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession, (Guid*)priid, ppVideoMotionEstimator);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionEstimator(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoMotionEstimatorDesc pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, ref Guid riid, void** ppVideoMotionEstimator) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoMotionEstimatorDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionEstimatorDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (VideoMotionEstimatorDesc*)ppDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)priid, ppVideoMotionEstimator);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionEstimator<T>(this ComPtr<ID3D12VideoDevice3> comObj, VideoMotionEstimatorDesc* pDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, out ComPtr<T> ppVideoMotionEstimator) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			ppVideoMotionEstimator = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionEstimatorDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, pDesc, pProtectedResourceSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoMotionEstimator.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionEstimator<T>(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoMotionEstimatorDesc pDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, out ComPtr<T> ppVideoMotionEstimator) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoMotionEstimatorDesc* ppDesc = &pDesc)
			{
				ppVideoMotionEstimator = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionEstimatorDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (VideoMotionEstimatorDesc*)ppDesc, pProtectedResourceSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoMotionEstimator.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionEstimator<T>(this ComPtr<ID3D12VideoDevice3> comObj, VideoMotionEstimatorDesc* pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, out ComPtr<T> ppVideoMotionEstimator) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			ppVideoMotionEstimator = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionEstimatorDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, pDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoMotionEstimator.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionEstimator<T>(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoMotionEstimatorDesc pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, out ComPtr<T> ppVideoMotionEstimator) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoMotionEstimatorDesc* ppDesc = &pDesc)
			{
				ppVideoMotionEstimator = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionEstimatorDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (VideoMotionEstimatorDesc*)ppDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoMotionEstimator.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionEstimator<T>(this ComPtr<ID3D12VideoDevice3> comObj, VideoMotionEstimatorDesc* pDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, ref Guid riid, out ComPtr<T> ppVideoMotionEstimator) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppVideoMotionEstimator = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionEstimatorDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, pDesc, pProtectedResourceSession, (Guid*)priid, (void**)ppVideoMotionEstimator.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionEstimator<T>(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoMotionEstimatorDesc pDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, ref Guid riid, out ComPtr<T> ppVideoMotionEstimator) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoMotionEstimatorDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppVideoMotionEstimator = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionEstimatorDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (VideoMotionEstimatorDesc*)ppDesc, pProtectedResourceSession, (Guid*)priid, (void**)ppVideoMotionEstimator.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionEstimator<T>(this ComPtr<ID3D12VideoDevice3> comObj, VideoMotionEstimatorDesc* pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, ref Guid riid, out ComPtr<T> ppVideoMotionEstimator) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppVideoMotionEstimator = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionEstimatorDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, pDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)priid, (void**)ppVideoMotionEstimator.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionEstimator<T>(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoMotionEstimatorDesc pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, ref Guid riid, out ComPtr<T> ppVideoMotionEstimator) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoMotionEstimatorDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppVideoMotionEstimator = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionEstimatorDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (VideoMotionEstimatorDesc*)ppDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)priid, (void**)ppVideoMotionEstimator.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionVectorHeap(this ComPtr<ID3D12VideoDevice3> comObj, VideoMotionVectorHeapDesc* pDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, Guid* riid, void** ppVideoMotionVectorHeap) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionVectorHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[8]))(handle, pDesc, pProtectedResourceSession, riid, ppVideoMotionVectorHeap);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionVectorHeap(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoMotionVectorHeapDesc pDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, Guid* riid, void** ppVideoMotionVectorHeap) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoMotionVectorHeapDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionVectorHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[8]))(handle, (VideoMotionVectorHeapDesc*)ppDesc, pProtectedResourceSession, riid, ppVideoMotionVectorHeap);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionVectorHeap(this ComPtr<ID3D12VideoDevice3> comObj, VideoMotionVectorHeapDesc* pDesc, ref ID3D12ProtectedResourceSession pProtectedResourceSession, Guid* riid, void** ppVideoMotionVectorHeap) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionVectorHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[8]))(handle, pDesc, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession, riid, ppVideoMotionVectorHeap);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionVectorHeap(this ComPtr<ID3D12VideoDevice3> comObj, VideoMotionVectorHeapDesc* pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, Guid* riid, void** ppVideoMotionVectorHeap) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionVectorHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[8]))(handle, pDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, riid, ppVideoMotionVectorHeap);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionVectorHeap(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoMotionVectorHeapDesc pDesc, ref ID3D12ProtectedResourceSession pProtectedResourceSession, Guid* riid, void** ppVideoMotionVectorHeap) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoMotionVectorHeapDesc* ppDesc = &pDesc)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionVectorHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[8]))(handle, (VideoMotionVectorHeapDesc*)ppDesc, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession, riid, ppVideoMotionVectorHeap);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionVectorHeap(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoMotionVectorHeapDesc pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, Guid* riid, void** ppVideoMotionVectorHeap) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoMotionVectorHeapDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionVectorHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[8]))(handle, (VideoMotionVectorHeapDesc*)ppDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, riid, ppVideoMotionVectorHeap);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionVectorHeap(this ComPtr<ID3D12VideoDevice3> comObj, VideoMotionVectorHeapDesc* pDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, ref Guid riid, void** ppVideoMotionVectorHeap) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionVectorHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[8]))(handle, pDesc, pProtectedResourceSession, (Guid*)priid, ppVideoMotionVectorHeap);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionVectorHeap(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoMotionVectorHeapDesc pDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, ref Guid riid, void** ppVideoMotionVectorHeap) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoMotionVectorHeapDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionVectorHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[8]))(handle, (VideoMotionVectorHeapDesc*)ppDesc, pProtectedResourceSession, (Guid*)priid, ppVideoMotionVectorHeap);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionVectorHeap(this ComPtr<ID3D12VideoDevice3> comObj, VideoMotionVectorHeapDesc* pDesc, ref ID3D12ProtectedResourceSession pProtectedResourceSession, ref Guid riid, void** ppVideoMotionVectorHeap) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionVectorHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[8]))(handle, pDesc, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession, (Guid*)priid, ppVideoMotionVectorHeap);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionVectorHeap(this ComPtr<ID3D12VideoDevice3> comObj, VideoMotionVectorHeapDesc* pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, ref Guid riid, void** ppVideoMotionVectorHeap) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionVectorHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[8]))(handle, pDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)priid, ppVideoMotionVectorHeap);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionVectorHeap(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoMotionVectorHeapDesc pDesc, ref ID3D12ProtectedResourceSession pProtectedResourceSession, ref Guid riid, void** ppVideoMotionVectorHeap) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoMotionVectorHeapDesc* ppDesc = &pDesc)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
				{
					fixed (Guid* priid = &riid)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionVectorHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[8]))(handle, (VideoMotionVectorHeapDesc*)ppDesc, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession, (Guid*)priid, ppVideoMotionVectorHeap);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionVectorHeap(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoMotionVectorHeapDesc pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, ref Guid riid, void** ppVideoMotionVectorHeap) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoMotionVectorHeapDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionVectorHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[8]))(handle, (VideoMotionVectorHeapDesc*)ppDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)priid, ppVideoMotionVectorHeap);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionVectorHeap<T>(this ComPtr<ID3D12VideoDevice3> comObj, VideoMotionVectorHeapDesc* pDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, out ComPtr<T> ppVideoMotionVectorHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			ppVideoMotionVectorHeap = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionVectorHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[8]))(handle, pDesc, pProtectedResourceSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoMotionVectorHeap.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionVectorHeap<T>(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoMotionVectorHeapDesc pDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, out ComPtr<T> ppVideoMotionVectorHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoMotionVectorHeapDesc* ppDesc = &pDesc)
			{
				ppVideoMotionVectorHeap = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionVectorHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[8]))(handle, (VideoMotionVectorHeapDesc*)ppDesc, pProtectedResourceSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoMotionVectorHeap.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionVectorHeap<T>(this ComPtr<ID3D12VideoDevice3> comObj, VideoMotionVectorHeapDesc* pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, out ComPtr<T> ppVideoMotionVectorHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			ppVideoMotionVectorHeap = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionVectorHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[8]))(handle, pDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoMotionVectorHeap.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionVectorHeap<T>(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoMotionVectorHeapDesc pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, out ComPtr<T> ppVideoMotionVectorHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoMotionVectorHeapDesc* ppDesc = &pDesc)
			{
				ppVideoMotionVectorHeap = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionVectorHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[8]))(handle, (VideoMotionVectorHeapDesc*)ppDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoMotionVectorHeap.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionVectorHeap<T>(this ComPtr<ID3D12VideoDevice3> comObj, VideoMotionVectorHeapDesc* pDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, ref Guid riid, out ComPtr<T> ppVideoMotionVectorHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppVideoMotionVectorHeap = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionVectorHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[8]))(handle, pDesc, pProtectedResourceSession, (Guid*)priid, (void**)ppVideoMotionVectorHeap.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionVectorHeap<T>(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoMotionVectorHeapDesc pDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, ref Guid riid, out ComPtr<T> ppVideoMotionVectorHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoMotionVectorHeapDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppVideoMotionVectorHeap = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionVectorHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[8]))(handle, (VideoMotionVectorHeapDesc*)ppDesc, pProtectedResourceSession, (Guid*)priid, (void**)ppVideoMotionVectorHeap.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionVectorHeap<T>(this ComPtr<ID3D12VideoDevice3> comObj, VideoMotionVectorHeapDesc* pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, ref Guid riid, out ComPtr<T> ppVideoMotionVectorHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppVideoMotionVectorHeap = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionVectorHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[8]))(handle, pDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)priid, (void**)ppVideoMotionVectorHeap.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoMotionVectorHeap<T>(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoMotionVectorHeapDesc pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, ref Guid riid, out ComPtr<T> ppVideoMotionVectorHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoMotionVectorHeapDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppVideoMotionVectorHeap = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoMotionVectorHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[8]))(handle, (VideoMotionVectorHeapDesc*)ppDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)priid, (void**)ppVideoMotionVectorHeap.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder1(this ComPtr<ID3D12VideoDevice3> comObj, VideoDecoderDesc* pDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, Guid* riid, void** ppVideoDecoder) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[9]))(handle, pDesc, pProtectedResourceSession, riid, ppVideoDecoder);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder1(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoDecoderDesc pDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, Guid* riid, void** ppVideoDecoder) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[9]))(handle, (VideoDecoderDesc*)ppDesc, pProtectedResourceSession, riid, ppVideoDecoder);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder1(this ComPtr<ID3D12VideoDevice3> comObj, VideoDecoderDesc* pDesc, ref ID3D12ProtectedResourceSession pProtectedResourceSession, Guid* riid, void** ppVideoDecoder) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[9]))(handle, pDesc, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession, riid, ppVideoDecoder);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder1(this ComPtr<ID3D12VideoDevice3> comObj, VideoDecoderDesc* pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, Guid* riid, void** ppVideoDecoder) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[9]))(handle, pDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, riid, ppVideoDecoder);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder1(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoDecoderDesc pDesc, ref ID3D12ProtectedResourceSession pProtectedResourceSession, Guid* riid, void** ppVideoDecoder) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppDesc = &pDesc)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[9]))(handle, (VideoDecoderDesc*)ppDesc, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession, riid, ppVideoDecoder);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder1(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoDecoderDesc pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, Guid* riid, void** ppVideoDecoder) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[9]))(handle, (VideoDecoderDesc*)ppDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, riid, ppVideoDecoder);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder1(this ComPtr<ID3D12VideoDevice3> comObj, VideoDecoderDesc* pDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, ref Guid riid, void** ppVideoDecoder) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[9]))(handle, pDesc, pProtectedResourceSession, (Guid*)priid, ppVideoDecoder);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder1(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoDecoderDesc pDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, ref Guid riid, void** ppVideoDecoder) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[9]))(handle, (VideoDecoderDesc*)ppDesc, pProtectedResourceSession, (Guid*)priid, ppVideoDecoder);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder1(this ComPtr<ID3D12VideoDevice3> comObj, VideoDecoderDesc* pDesc, ref ID3D12ProtectedResourceSession pProtectedResourceSession, ref Guid riid, void** ppVideoDecoder) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[9]))(handle, pDesc, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession, (Guid*)priid, ppVideoDecoder);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder1(this ComPtr<ID3D12VideoDevice3> comObj, VideoDecoderDesc* pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, ref Guid riid, void** ppVideoDecoder) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[9]))(handle, pDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)priid, ppVideoDecoder);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder1(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoDecoderDesc pDesc, ref ID3D12ProtectedResourceSession pProtectedResourceSession, ref Guid riid, void** ppVideoDecoder) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppDesc = &pDesc)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
				{
					fixed (Guid* priid = &riid)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[9]))(handle, (VideoDecoderDesc*)ppDesc, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession, (Guid*)priid, ppVideoDecoder);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder1(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoDecoderDesc pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, ref Guid riid, void** ppVideoDecoder) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[9]))(handle, (VideoDecoderDesc*)ppDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)priid, ppVideoDecoder);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder1<T>(this ComPtr<ID3D12VideoDevice3> comObj, VideoDecoderDesc* pDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, out ComPtr<T> ppVideoDecoder) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			ppVideoDecoder = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[9]))(handle, pDesc, pProtectedResourceSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoDecoder.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder1<T>(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoDecoderDesc pDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, out ComPtr<T> ppVideoDecoder) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppDesc = &pDesc)
			{
				ppVideoDecoder = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[9]))(handle, (VideoDecoderDesc*)ppDesc, pProtectedResourceSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoDecoder.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder1<T>(this ComPtr<ID3D12VideoDevice3> comObj, VideoDecoderDesc* pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, out ComPtr<T> ppVideoDecoder) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			ppVideoDecoder = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[9]))(handle, pDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoDecoder.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder1<T>(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoDecoderDesc pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, out ComPtr<T> ppVideoDecoder) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppDesc = &pDesc)
			{
				ppVideoDecoder = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[9]))(handle, (VideoDecoderDesc*)ppDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoDecoder.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder1<T>(this ComPtr<ID3D12VideoDevice3> comObj, VideoDecoderDesc* pDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, ref Guid riid, out ComPtr<T> ppVideoDecoder) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppVideoDecoder = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[9]))(handle, pDesc, pProtectedResourceSession, (Guid*)priid, (void**)ppVideoDecoder.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder1<T>(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoDecoderDesc pDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, ref Guid riid, out ComPtr<T> ppVideoDecoder) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppVideoDecoder = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[9]))(handle, (VideoDecoderDesc*)ppDesc, pProtectedResourceSession, (Guid*)priid, (void**)ppVideoDecoder.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder1<T>(this ComPtr<ID3D12VideoDevice3> comObj, VideoDecoderDesc* pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, ref Guid riid, out ComPtr<T> ppVideoDecoder) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppVideoDecoder = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[9]))(handle, pDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)priid, (void**)ppVideoDecoder.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder1<T>(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoDecoderDesc pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, ref Guid riid, out ComPtr<T> ppVideoDecoder) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppVideoDecoder = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[9]))(handle, (VideoDecoderDesc*)ppDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)priid, (void**)ppVideoDecoder.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderHeap1(this ComPtr<ID3D12VideoDevice3> comObj, VideoDecoderHeapDesc* pVideoDecoderHeapDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, Guid* riid, void** ppVideoDecoderHeap) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[10]))(handle, pVideoDecoderHeapDesc, pProtectedResourceSession, riid, ppVideoDecoderHeap);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderHeap1(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoDecoderHeapDesc pVideoDecoderHeapDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, Guid* riid, void** ppVideoDecoderHeap) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoDecoderHeapDesc* ppVideoDecoderHeapDesc = &pVideoDecoderHeapDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[10]))(handle, (VideoDecoderHeapDesc*)ppVideoDecoderHeapDesc, pProtectedResourceSession, riid, ppVideoDecoderHeap);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderHeap1(this ComPtr<ID3D12VideoDevice3> comObj, VideoDecoderHeapDesc* pVideoDecoderHeapDesc, ref ID3D12ProtectedResourceSession pProtectedResourceSession, Guid* riid, void** ppVideoDecoderHeap) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[10]))(handle, pVideoDecoderHeapDesc, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession, riid, ppVideoDecoderHeap);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderHeap1(this ComPtr<ID3D12VideoDevice3> comObj, VideoDecoderHeapDesc* pVideoDecoderHeapDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, Guid* riid, void** ppVideoDecoderHeap) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[10]))(handle, pVideoDecoderHeapDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, riid, ppVideoDecoderHeap);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderHeap1(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoDecoderHeapDesc pVideoDecoderHeapDesc, ref ID3D12ProtectedResourceSession pProtectedResourceSession, Guid* riid, void** ppVideoDecoderHeap) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoDecoderHeapDesc* ppVideoDecoderHeapDesc = &pVideoDecoderHeapDesc)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[10]))(handle, (VideoDecoderHeapDesc*)ppVideoDecoderHeapDesc, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession, riid, ppVideoDecoderHeap);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderHeap1(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoDecoderHeapDesc pVideoDecoderHeapDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, Guid* riid, void** ppVideoDecoderHeap) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoDecoderHeapDesc* ppVideoDecoderHeapDesc = &pVideoDecoderHeapDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[10]))(handle, (VideoDecoderHeapDesc*)ppVideoDecoderHeapDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, riid, ppVideoDecoderHeap);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderHeap1(this ComPtr<ID3D12VideoDevice3> comObj, VideoDecoderHeapDesc* pVideoDecoderHeapDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, ref Guid riid, void** ppVideoDecoderHeap) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[10]))(handle, pVideoDecoderHeapDesc, pProtectedResourceSession, (Guid*)priid, ppVideoDecoderHeap);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderHeap1(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoDecoderHeapDesc pVideoDecoderHeapDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, ref Guid riid, void** ppVideoDecoderHeap) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoDecoderHeapDesc* ppVideoDecoderHeapDesc = &pVideoDecoderHeapDesc)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[10]))(handle, (VideoDecoderHeapDesc*)ppVideoDecoderHeapDesc, pProtectedResourceSession, (Guid*)priid, ppVideoDecoderHeap);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderHeap1(this ComPtr<ID3D12VideoDevice3> comObj, VideoDecoderHeapDesc* pVideoDecoderHeapDesc, ref ID3D12ProtectedResourceSession pProtectedResourceSession, ref Guid riid, void** ppVideoDecoderHeap) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[10]))(handle, pVideoDecoderHeapDesc, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession, (Guid*)priid, ppVideoDecoderHeap);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderHeap1(this ComPtr<ID3D12VideoDevice3> comObj, VideoDecoderHeapDesc* pVideoDecoderHeapDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, ref Guid riid, void** ppVideoDecoderHeap) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[10]))(handle, pVideoDecoderHeapDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)priid, ppVideoDecoderHeap);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderHeap1(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoDecoderHeapDesc pVideoDecoderHeapDesc, ref ID3D12ProtectedResourceSession pProtectedResourceSession, ref Guid riid, void** ppVideoDecoderHeap) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoDecoderHeapDesc* ppVideoDecoderHeapDesc = &pVideoDecoderHeapDesc)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
				{
					fixed (Guid* priid = &riid)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[10]))(handle, (VideoDecoderHeapDesc*)ppVideoDecoderHeapDesc, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession, (Guid*)priid, ppVideoDecoderHeap);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderHeap1(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoDecoderHeapDesc pVideoDecoderHeapDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, ref Guid riid, void** ppVideoDecoderHeap) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoDecoderHeapDesc* ppVideoDecoderHeapDesc = &pVideoDecoderHeapDesc)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[10]))(handle, (VideoDecoderHeapDesc*)ppVideoDecoderHeapDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)priid, ppVideoDecoderHeap);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderHeap1<T>(this ComPtr<ID3D12VideoDevice3> comObj, VideoDecoderHeapDesc* pVideoDecoderHeapDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, out ComPtr<T> ppVideoDecoderHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			ppVideoDecoderHeap = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[10]))(handle, pVideoDecoderHeapDesc, pProtectedResourceSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoDecoderHeap.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderHeap1<T>(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoDecoderHeapDesc pVideoDecoderHeapDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, out ComPtr<T> ppVideoDecoderHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoDecoderHeapDesc* ppVideoDecoderHeapDesc = &pVideoDecoderHeapDesc)
			{
				ppVideoDecoderHeap = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[10]))(handle, (VideoDecoderHeapDesc*)ppVideoDecoderHeapDesc, pProtectedResourceSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoDecoderHeap.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderHeap1<T>(this ComPtr<ID3D12VideoDevice3> comObj, VideoDecoderHeapDesc* pVideoDecoderHeapDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, out ComPtr<T> ppVideoDecoderHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			ppVideoDecoderHeap = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[10]))(handle, pVideoDecoderHeapDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoDecoderHeap.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderHeap1<T>(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoDecoderHeapDesc pVideoDecoderHeapDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, out ComPtr<T> ppVideoDecoderHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoDecoderHeapDesc* ppVideoDecoderHeapDesc = &pVideoDecoderHeapDesc)
			{
				ppVideoDecoderHeap = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[10]))(handle, (VideoDecoderHeapDesc*)ppVideoDecoderHeapDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoDecoderHeap.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderHeap1<T>(this ComPtr<ID3D12VideoDevice3> comObj, VideoDecoderHeapDesc* pVideoDecoderHeapDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, ref Guid riid, out ComPtr<T> ppVideoDecoderHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppVideoDecoderHeap = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[10]))(handle, pVideoDecoderHeapDesc, pProtectedResourceSession, (Guid*)priid, (void**)ppVideoDecoderHeap.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderHeap1<T>(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoDecoderHeapDesc pVideoDecoderHeapDesc, ID3D12ProtectedResourceSession* pProtectedResourceSession, ref Guid riid, out ComPtr<T> ppVideoDecoderHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoDecoderHeapDesc* ppVideoDecoderHeapDesc = &pVideoDecoderHeapDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppVideoDecoderHeap = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[10]))(handle, (VideoDecoderHeapDesc*)ppVideoDecoderHeapDesc, pProtectedResourceSession, (Guid*)priid, (void**)ppVideoDecoderHeap.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderHeap1<T>(this ComPtr<ID3D12VideoDevice3> comObj, VideoDecoderHeapDesc* pVideoDecoderHeapDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, ref Guid riid, out ComPtr<T> ppVideoDecoderHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppVideoDecoderHeap = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[10]))(handle, pVideoDecoderHeapDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)priid, (void**)ppVideoDecoderHeap.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderHeap1<T>(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoDecoderHeapDesc pVideoDecoderHeapDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, ref Guid riid, out ComPtr<T> ppVideoDecoderHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoDecoderHeapDesc* ppVideoDecoderHeapDesc = &pVideoDecoderHeapDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppVideoDecoderHeap = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoDecoderHeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[10]))(handle, (VideoDecoderHeapDesc*)ppVideoDecoderHeapDesc, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)priid, (void**)ppVideoDecoderHeap.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, VideoProcessOutputStreamDesc* pOutputStreamDesc, uint numInputStreamDescs, VideoProcessInputStreamDesc* pInputStreamDescs, ID3D12ProtectedResourceSession* pProtectedResourceSession, Guid* riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, pProtectedResourceSession, riid, ppVideoProcessor);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, ref VideoProcessOutputStreamDesc pOutputStreamDesc, uint numInputStreamDescs, VideoProcessInputStreamDesc* pInputStreamDescs, ID3D12ProtectedResourceSession* pProtectedResourceSession, Guid* riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, (VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, pProtectedResourceSession, riid, ppVideoProcessor);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, VideoProcessOutputStreamDesc* pOutputStreamDesc, uint numInputStreamDescs, ref VideoProcessInputStreamDesc pInputStreamDescs, ID3D12ProtectedResourceSession* pProtectedResourceSession, Guid* riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, (VideoProcessInputStreamDesc*)ppInputStreamDescs, pProtectedResourceSession, riid, ppVideoProcessor);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, ref VideoProcessOutputStreamDesc pOutputStreamDesc, uint numInputStreamDescs, ref VideoProcessInputStreamDesc pInputStreamDescs, ID3D12ProtectedResourceSession* pProtectedResourceSession, Guid* riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				fixed (VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, (VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, (VideoProcessInputStreamDesc*)ppInputStreamDescs, pProtectedResourceSession, riid, ppVideoProcessor);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, VideoProcessOutputStreamDesc* pOutputStreamDesc, uint numInputStreamDescs, VideoProcessInputStreamDesc* pInputStreamDescs, ref ID3D12ProtectedResourceSession pProtectedResourceSession, Guid* riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession, riid, ppVideoProcessor);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, VideoProcessOutputStreamDesc* pOutputStreamDesc, uint numInputStreamDescs, VideoProcessInputStreamDesc* pInputStreamDescs, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, Guid* riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, riid, ppVideoProcessor);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, ref VideoProcessOutputStreamDesc pOutputStreamDesc, uint numInputStreamDescs, VideoProcessInputStreamDesc* pInputStreamDescs, ref ID3D12ProtectedResourceSession pProtectedResourceSession, Guid* riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, (VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession, riid, ppVideoProcessor);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, ref VideoProcessOutputStreamDesc pOutputStreamDesc, uint numInputStreamDescs, VideoProcessInputStreamDesc* pInputStreamDescs, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, Guid* riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, (VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, riid, ppVideoProcessor);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, VideoProcessOutputStreamDesc* pOutputStreamDesc, uint numInputStreamDescs, ref VideoProcessInputStreamDesc pInputStreamDescs, ref ID3D12ProtectedResourceSession pProtectedResourceSession, Guid* riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, (VideoProcessInputStreamDesc*)ppInputStreamDescs, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession, riid, ppVideoProcessor);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, VideoProcessOutputStreamDesc* pOutputStreamDesc, uint numInputStreamDescs, ref VideoProcessInputStreamDesc pInputStreamDescs, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, Guid* riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, (VideoProcessInputStreamDesc*)ppInputStreamDescs, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, riid, ppVideoProcessor);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, ref VideoProcessOutputStreamDesc pOutputStreamDesc, uint numInputStreamDescs, ref VideoProcessInputStreamDesc pInputStreamDescs, ref ID3D12ProtectedResourceSession pProtectedResourceSession, Guid* riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				fixed (VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
				{
					fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, (VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, (VideoProcessInputStreamDesc*)ppInputStreamDescs, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession, riid, ppVideoProcessor);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, ref VideoProcessOutputStreamDesc pOutputStreamDesc, uint numInputStreamDescs, ref VideoProcessInputStreamDesc pInputStreamDescs, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, Guid* riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				fixed (VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, (VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, (VideoProcessInputStreamDesc*)ppInputStreamDescs, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, riid, ppVideoProcessor);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, VideoProcessOutputStreamDesc* pOutputStreamDesc, uint numInputStreamDescs, VideoProcessInputStreamDesc* pInputStreamDescs, ID3D12ProtectedResourceSession* pProtectedResourceSession, ref Guid riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, pProtectedResourceSession, (Guid*)priid, ppVideoProcessor);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, ref VideoProcessOutputStreamDesc pOutputStreamDesc, uint numInputStreamDescs, VideoProcessInputStreamDesc* pInputStreamDescs, ID3D12ProtectedResourceSession* pProtectedResourceSession, ref Guid riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, (VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, pProtectedResourceSession, (Guid*)priid, ppVideoProcessor);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, VideoProcessOutputStreamDesc* pOutputStreamDesc, uint numInputStreamDescs, ref VideoProcessInputStreamDesc pInputStreamDescs, ID3D12ProtectedResourceSession* pProtectedResourceSession, ref Guid riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, (VideoProcessInputStreamDesc*)ppInputStreamDescs, pProtectedResourceSession, (Guid*)priid, ppVideoProcessor);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, ref VideoProcessOutputStreamDesc pOutputStreamDesc, uint numInputStreamDescs, ref VideoProcessInputStreamDesc pInputStreamDescs, ID3D12ProtectedResourceSession* pProtectedResourceSession, ref Guid riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				fixed (VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
				{
					fixed (Guid* priid = &riid)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, (VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, (VideoProcessInputStreamDesc*)ppInputStreamDescs, pProtectedResourceSession, (Guid*)priid, ppVideoProcessor);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, VideoProcessOutputStreamDesc* pOutputStreamDesc, uint numInputStreamDescs, VideoProcessInputStreamDesc* pInputStreamDescs, ref ID3D12ProtectedResourceSession pProtectedResourceSession, ref Guid riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession, (Guid*)priid, ppVideoProcessor);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, VideoProcessOutputStreamDesc* pOutputStreamDesc, uint numInputStreamDescs, VideoProcessInputStreamDesc* pInputStreamDescs, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, ref Guid riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)priid, ppVideoProcessor);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, ref VideoProcessOutputStreamDesc pOutputStreamDesc, uint numInputStreamDescs, VideoProcessInputStreamDesc* pInputStreamDescs, ref ID3D12ProtectedResourceSession pProtectedResourceSession, ref Guid riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
				{
					fixed (Guid* priid = &riid)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, (VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession, (Guid*)priid, ppVideoProcessor);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, ref VideoProcessOutputStreamDesc pOutputStreamDesc, uint numInputStreamDescs, VideoProcessInputStreamDesc* pInputStreamDescs, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, ref Guid riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, (VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)priid, ppVideoProcessor);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, VideoProcessOutputStreamDesc* pOutputStreamDesc, uint numInputStreamDescs, ref VideoProcessInputStreamDesc pInputStreamDescs, ref ID3D12ProtectedResourceSession pProtectedResourceSession, ref Guid riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
				{
					fixed (Guid* priid = &riid)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, (VideoProcessInputStreamDesc*)ppInputStreamDescs, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession, (Guid*)priid, ppVideoProcessor);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, VideoProcessOutputStreamDesc* pOutputStreamDesc, uint numInputStreamDescs, ref VideoProcessInputStreamDesc pInputStreamDescs, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, ref Guid riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, (VideoProcessInputStreamDesc*)ppInputStreamDescs, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)priid, ppVideoProcessor);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, ref VideoProcessOutputStreamDesc pOutputStreamDesc, uint numInputStreamDescs, ref VideoProcessInputStreamDesc pInputStreamDescs, ref ID3D12ProtectedResourceSession pProtectedResourceSession, ref Guid riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				fixed (VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
				{
					fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
					{
						fixed (Guid* priid = &riid)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, (VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, (VideoProcessInputStreamDesc*)ppInputStreamDescs, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession, (Guid*)priid, ppVideoProcessor);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, ref VideoProcessOutputStreamDesc pOutputStreamDesc, uint numInputStreamDescs, ref VideoProcessInputStreamDesc pInputStreamDescs, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, ref Guid riid, void** ppVideoProcessor) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				fixed (VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
				{
					fixed (Guid* priid = &riid)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, (VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, (VideoProcessInputStreamDesc*)ppInputStreamDescs, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)priid, ppVideoProcessor);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1<T>(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, VideoProcessOutputStreamDesc* pOutputStreamDesc, uint numInputStreamDescs, VideoProcessInputStreamDesc* pInputStreamDescs, ID3D12ProtectedResourceSession* pProtectedResourceSession, out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			ppVideoProcessor = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, pProtectedResourceSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoProcessor.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1<T>(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, ref VideoProcessOutputStreamDesc pOutputStreamDesc, uint numInputStreamDescs, VideoProcessInputStreamDesc* pInputStreamDescs, ID3D12ProtectedResourceSession* pProtectedResourceSession, out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				ppVideoProcessor = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, (VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, pProtectedResourceSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoProcessor.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1<T>(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, VideoProcessOutputStreamDesc* pOutputStreamDesc, uint numInputStreamDescs, ref VideoProcessInputStreamDesc pInputStreamDescs, ID3D12ProtectedResourceSession* pProtectedResourceSession, out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
			{
				ppVideoProcessor = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, (VideoProcessInputStreamDesc*)ppInputStreamDescs, pProtectedResourceSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoProcessor.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1<T>(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, ref VideoProcessOutputStreamDesc pOutputStreamDesc, uint numInputStreamDescs, ref VideoProcessInputStreamDesc pInputStreamDescs, ID3D12ProtectedResourceSession* pProtectedResourceSession, out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				fixed (VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
				{
					ppVideoProcessor = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, (VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, (VideoProcessInputStreamDesc*)ppInputStreamDescs, pProtectedResourceSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoProcessor.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1<T>(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, VideoProcessOutputStreamDesc* pOutputStreamDesc, uint numInputStreamDescs, VideoProcessInputStreamDesc* pInputStreamDescs, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			ppVideoProcessor = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoProcessor.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1<T>(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, ref VideoProcessOutputStreamDesc pOutputStreamDesc, uint numInputStreamDescs, VideoProcessInputStreamDesc* pInputStreamDescs, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				ppVideoProcessor = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, (VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoProcessor.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1<T>(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, VideoProcessOutputStreamDesc* pOutputStreamDesc, uint numInputStreamDescs, ref VideoProcessInputStreamDesc pInputStreamDescs, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
			{
				ppVideoProcessor = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, (VideoProcessInputStreamDesc*)ppInputStreamDescs, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoProcessor.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1<T>(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, ref VideoProcessOutputStreamDesc pOutputStreamDesc, uint numInputStreamDescs, ref VideoProcessInputStreamDesc pInputStreamDescs, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				fixed (VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
				{
					ppVideoProcessor = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, (VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, (VideoProcessInputStreamDesc*)ppInputStreamDescs, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoProcessor.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1<T>(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, VideoProcessOutputStreamDesc* pOutputStreamDesc, uint numInputStreamDescs, VideoProcessInputStreamDesc* pInputStreamDescs, ID3D12ProtectedResourceSession* pProtectedResourceSession, ref Guid riid, out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppVideoProcessor = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, pProtectedResourceSession, (Guid*)priid, (void**)ppVideoProcessor.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1<T>(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, ref VideoProcessOutputStreamDesc pOutputStreamDesc, uint numInputStreamDescs, VideoProcessInputStreamDesc* pInputStreamDescs, ID3D12ProtectedResourceSession* pProtectedResourceSession, ref Guid riid, out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppVideoProcessor = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, (VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, pProtectedResourceSession, (Guid*)priid, (void**)ppVideoProcessor.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1<T>(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, VideoProcessOutputStreamDesc* pOutputStreamDesc, uint numInputStreamDescs, ref VideoProcessInputStreamDesc pInputStreamDescs, ID3D12ProtectedResourceSession* pProtectedResourceSession, ref Guid riid, out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
			{
				fixed (Guid* priid = &riid)
				{
					ppVideoProcessor = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, (VideoProcessInputStreamDesc*)ppInputStreamDescs, pProtectedResourceSession, (Guid*)priid, (void**)ppVideoProcessor.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1<T>(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, ref VideoProcessOutputStreamDesc pOutputStreamDesc, uint numInputStreamDescs, ref VideoProcessInputStreamDesc pInputStreamDescs, ID3D12ProtectedResourceSession* pProtectedResourceSession, ref Guid riid, out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				fixed (VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
				{
					fixed (Guid* priid = &riid)
					{
						ppVideoProcessor = default;
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, (VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, (VideoProcessInputStreamDesc*)ppInputStreamDescs, pProtectedResourceSession, (Guid*)priid, (void**)ppVideoProcessor.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1<T>(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, VideoProcessOutputStreamDesc* pOutputStreamDesc, uint numInputStreamDescs, VideoProcessInputStreamDesc* pInputStreamDescs, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, ref Guid riid, out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppVideoProcessor = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)priid, (void**)ppVideoProcessor.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1<T>(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, ref VideoProcessOutputStreamDesc pOutputStreamDesc, uint numInputStreamDescs, VideoProcessInputStreamDesc* pInputStreamDescs, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, ref Guid riid, out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppVideoProcessor = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, (VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)priid, (void**)ppVideoProcessor.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1<T>(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, VideoProcessOutputStreamDesc* pOutputStreamDesc, uint numInputStreamDescs, ref VideoProcessInputStreamDesc pInputStreamDescs, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, ref Guid riid, out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
			{
				fixed (Guid* priid = &riid)
				{
					ppVideoProcessor = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, (VideoProcessInputStreamDesc*)ppInputStreamDescs, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)priid, (void**)ppVideoProcessor.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor1<T>(this ComPtr<ID3D12VideoDevice3> comObj, uint nodeMask, ref VideoProcessOutputStreamDesc pOutputStreamDesc, uint numInputStreamDescs, ref VideoProcessInputStreamDesc pInputStreamDescs, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, ref Guid riid, out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				fixed (VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
				{
					fixed (Guid* priid = &riid)
					{
						ppVideoProcessor = default;
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, uint, VideoProcessOutputStreamDesc*, uint, VideoProcessInputStreamDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[11]))(handle, nodeMask, (VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, (VideoProcessInputStreamDesc*)ppInputStreamDescs, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, (Guid*)priid, (void**)ppVideoProcessor.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoExtensionCommand(this ComPtr<ID3D12VideoDevice3> comObj, VideoExtensionCommandDesc* pDesc, void* pCreationParameters, nuint creationParametersDataSizeInBytes, ID3D12ProtectedResourceSession* pProtectedResourceSession, Guid* riid, void** ppVideoExtensionCommand) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoExtensionCommandDesc*, void*, nuint, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[12]))(handle, pDesc, pCreationParameters, creationParametersDataSizeInBytes, pProtectedResourceSession, riid, ppVideoExtensionCommand);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoExtensionCommand(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoExtensionCommandDesc pDesc, void* pCreationParameters, nuint creationParametersDataSizeInBytes, ID3D12ProtectedResourceSession* pProtectedResourceSession, Guid* riid, void** ppVideoExtensionCommand) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoExtensionCommandDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoExtensionCommandDesc*, void*, nuint, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[12]))(handle, (VideoExtensionCommandDesc*)ppDesc, pCreationParameters, creationParametersDataSizeInBytes, pProtectedResourceSession, riid, ppVideoExtensionCommand);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoExtensionCommand(this ComPtr<ID3D12VideoDevice3> comObj, VideoExtensionCommandDesc* pDesc, void* pCreationParameters, nuint creationParametersDataSizeInBytes, ref ID3D12ProtectedResourceSession pProtectedResourceSession, Guid* riid, void** ppVideoExtensionCommand) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoExtensionCommandDesc*, void*, nuint, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[12]))(handle, pDesc, pCreationParameters, creationParametersDataSizeInBytes, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession, riid, ppVideoExtensionCommand);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoExtensionCommand(this ComPtr<ID3D12VideoDevice3> comObj, VideoExtensionCommandDesc* pDesc, void* pCreationParameters, nuint creationParametersDataSizeInBytes, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, Guid* riid, void** ppVideoExtensionCommand) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoExtensionCommandDesc*, void*, nuint, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[12]))(handle, pDesc, pCreationParameters, creationParametersDataSizeInBytes, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, riid, ppVideoExtensionCommand);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoExtensionCommand(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoExtensionCommandDesc pDesc, void* pCreationParameters, nuint creationParametersDataSizeInBytes, ref ID3D12ProtectedResourceSession pProtectedResourceSession, Guid* riid, void** ppVideoExtensionCommand) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoExtensionCommandDesc* ppDesc = &pDesc)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoExtensionCommandDesc*, void*, nuint, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[12]))(handle, (VideoExtensionCommandDesc*)ppDesc, pCreationParameters, creationParametersDataSizeInBytes, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession, riid, ppVideoExtensionCommand);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoExtensionCommand(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoExtensionCommandDesc pDesc, void* pCreationParameters, nuint creationParametersDataSizeInBytes, ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession, Guid* riid, void** ppVideoExtensionCommand) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoExtensionCommandDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoExtensionCommandDesc*, void*, nuint, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[12]))(handle, (VideoExtensionCommandDesc*)ppDesc, pCreationParameters, creationParametersDataSizeInBytes, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle, riid, ppVideoExtensionCommand);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoExtensionCommand(this ComPtr<ID3D12VideoDevice3> comObj, VideoExtensionCommandDesc* pDesc, void* pCreationParameters, nuint creationParametersDataSizeInBytes, ID3D12ProtectedResourceSession* pProtectedResourceSession, ref Guid riid, void** ppVideoExtensionCommand) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoExtensionCommandDesc*, void*, nuint, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[12]))(handle, pDesc, pCreationParameters, creationParametersDataSizeInBytes, pProtectedResourceSession, (Guid*)priid, ppVideoExtensionCommand);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoExtensionCommand(this ComPtr<ID3D12VideoDevice3> comObj, ref VideoExtensionCommandDesc pDesc, void* pCreationParameters, nuint creationParametersDataSizeInBytes, ID3D12ProtectedResourceSession* pProtectedResourceSession, ref Guid riid, void** ppVideoExtensionCommand) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (VideoExtensionCommandDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoExtensionCommandDesc*, void*, nuint, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[12]))(handle, (VideoExtensionCommandDesc*)ppDesc, pCreationParameters, creationParametersDataSizeInBytes, pProtectedResourceSession, (Guid*)priid, ppVideoExtensionCommand);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoExtensionCommand(this ComPtr<ID3D12VideoDevice3> comObj, VideoExtensionCommandDesc* pDesc, void* pCreationParameters, nuint creationParametersDataSizeInBytes, ref ID3D12ProtectedResourceSession pProtectedResourceSession, ref Guid riid, void** ppVideoExtensionCommand) 
		{
			ID3D12VideoDevice3* handle = comObj.Handle;
			fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice3*, VideoExtensionCommandDesc*, void*, nuint, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(handle->LpVtbl[12]))(handle, pDesc, pCreationParameters, creationParametersDataSizeInBytes, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession, (Guid*)priid, ppVideoExtensionCommand);
					return ret;
				}
			}
		}
	}
}
