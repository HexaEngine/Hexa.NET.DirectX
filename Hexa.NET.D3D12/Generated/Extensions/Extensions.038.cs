// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D12
{
	public static unsafe partial class Extensions
	{

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12Debug6> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12Debug6* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12Debug6*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12Debug6> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12Debug6* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12Debug6*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12Debug6> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Debug6* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12Debug6*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12Debug6> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Debug6* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12Debug6*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<ID3D12Debug6> comObj) 
		{
			ID3D12Debug6* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12Debug6*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<ID3D12Debug6> comObj) 
		{
			ID3D12Debug6* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12Debug6*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "EnableDebugLayer")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void EnableDebugLayer(this ComPtr<ID3D12Debug6> comObj) 
		{
			ID3D12Debug6* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12Debug6*, void>)(handle->LpVtbl[3]))(handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetEnableGPUBasedValidation")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SetEnableGPUBasedValidation(this ComPtr<ID3D12Debug6> comObj, [NativeName(NativeNameType.Param, "Enable")] [NativeName(NativeNameType.Type, "BOOL")] int enable) 
		{
			ID3D12Debug6* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12Debug6*, int, void>)(handle->LpVtbl[4]))(handle, enable);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetEnableSynchronizedCommandQueueValidation")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SetEnableSynchronizedCommandQueueValidation(this ComPtr<ID3D12Debug6> comObj, [NativeName(NativeNameType.Param, "Enable")] [NativeName(NativeNameType.Type, "BOOL")] int enable) 
		{
			ID3D12Debug6* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12Debug6*, int, void>)(handle->LpVtbl[5]))(handle, enable);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetGPUBasedValidationFlags")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SetGPUBasedValidationFlags(this ComPtr<ID3D12Debug6> comObj, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_GPU_BASED_VALIDATION_FLAGS")] D3D12GpuBasedValidationFlags flags) 
		{
			ID3D12Debug6* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12Debug6*, D3D12GpuBasedValidationFlags, void>)(handle->LpVtbl[6]))(handle, flags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DisableDebugLayer")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void DisableDebugLayer(this ComPtr<ID3D12Debug6> comObj) 
		{
			ID3D12Debug6* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12Debug6*, void>)(handle->LpVtbl[7]))(handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetEnableAutoName")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SetEnableAutoName(this ComPtr<ID3D12Debug6> comObj, [NativeName(NativeNameType.Param, "Enable")] [NativeName(NativeNameType.Type, "BOOL")] int enable) 
		{
			ID3D12Debug6* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12Debug6*, int, void>)(handle->LpVtbl[8]))(handle, enable);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetForceLegacyBarrierValidation")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SetForceLegacyBarrierValidation(this ComPtr<ID3D12Debug6> comObj, [NativeName(NativeNameType.Param, "Enable")] [NativeName(NativeNameType.Type, "BOOL")] int enable) 
		{
			ID3D12Debug6* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12Debug6*, int, void>)(handle->LpVtbl[9]))(handle, enable);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12DebugDevice1> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12DebugDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice1*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12DebugDevice1> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12DebugDevice1* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice1*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12DebugDevice1> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12DebugDevice1* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice1*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12DebugDevice1> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12DebugDevice1* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice1*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<ID3D12DebugDevice1> comObj) 
		{
			ID3D12DebugDevice1* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice1*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<ID3D12DebugDevice1> comObj) 
		{
			ID3D12DebugDevice1* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice1*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetDebugParameter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetDebugParameter(this ComPtr<ID3D12DebugDevice1> comObj, [NativeName(NativeNameType.Param, "Type")] [NativeName(NativeNameType.Type, "D3D12_DEBUG_DEVICE_PARAMETER_TYPE")] D3D12DebugDeviceParameterType type, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize) 
		{
			ID3D12DebugDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice1*, D3D12DebugDeviceParameterType, void*, uint, int>)(handle->LpVtbl[3]))(handle, type, pData, dataSize);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDebugParameter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDebugParameter(this ComPtr<ID3D12DebugDevice1> comObj, [NativeName(NativeNameType.Param, "Type")] [NativeName(NativeNameType.Type, "D3D12_DEBUG_DEVICE_PARAMETER_TYPE")] D3D12DebugDeviceParameterType type, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize) 
		{
			ID3D12DebugDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice1*, D3D12DebugDeviceParameterType, void*, uint, int>)(handle->LpVtbl[4]))(handle, type, pData, dataSize);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDebugParameter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDebugParameter<T>(this ComPtr<ID3D12DebugDevice1> comObj, [NativeName(NativeNameType.Param, "Type")] [NativeName(NativeNameType.Type, "D3D12_DEBUG_DEVICE_PARAMETER_TYPE")] D3D12DebugDeviceParameterType type, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12DebugDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice1*, D3D12DebugDeviceParameterType, void*, uint, int>)(handle->LpVtbl[4]))(handle, type, (void*)pData.Handle, dataSize);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ReportLiveDeviceObjects")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int ReportLiveDeviceObjects(this ComPtr<ID3D12DebugDevice1> comObj, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_RLDO_FLAGS")] D3D12RldoFlags flags) 
		{
			ID3D12DebugDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice1*, D3D12RldoFlags, int>)(handle->LpVtbl[5]))(handle, flags);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12DebugDevice> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12DebugDevice* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12DebugDevice> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12DebugDevice* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12DebugDevice> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12DebugDevice* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12DebugDevice> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12DebugDevice* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<ID3D12DebugDevice> comObj) 
		{
			ID3D12DebugDevice* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<ID3D12DebugDevice> comObj) 
		{
			ID3D12DebugDevice* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetFeatureMask")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetFeatureMask(this ComPtr<ID3D12DebugDevice> comObj, [NativeName(NativeNameType.Param, "Mask")] [NativeName(NativeNameType.Type, "D3D12_DEBUG_FEATURE")] D3D12DebugFeature mask) 
		{
			ID3D12DebugDevice* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice*, D3D12DebugFeature, int>)(handle->LpVtbl[3]))(handle, mask);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetFeatureMask")]
		[return: NativeName(NativeNameType.Type, "D3D12_DEBUG_FEATURE")]
		public static D3D12DebugFeature GetFeatureMask(this ComPtr<ID3D12DebugDevice> comObj) 
		{
			ID3D12DebugDevice* handle = comObj.Handle;
			D3D12DebugFeature ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice*, D3D12DebugFeature>)(handle->LpVtbl[4]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ReportLiveDeviceObjects")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int ReportLiveDeviceObjects(this ComPtr<ID3D12DebugDevice> comObj, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_RLDO_FLAGS")] D3D12RldoFlags flags) 
		{
			ID3D12DebugDevice* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice*, D3D12RldoFlags, int>)(handle->LpVtbl[5]))(handle, flags);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12DebugDevice2> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12DebugDevice2* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice2*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12DebugDevice2> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12DebugDevice2* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice2*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12DebugDevice2> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12DebugDevice2* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice2*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12DebugDevice2> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12DebugDevice2* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice2*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<ID3D12DebugDevice2> comObj) 
		{
			ID3D12DebugDevice2* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice2*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<ID3D12DebugDevice2> comObj) 
		{
			ID3D12DebugDevice2* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice2*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetFeatureMask")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetFeatureMask(this ComPtr<ID3D12DebugDevice2> comObj, [NativeName(NativeNameType.Param, "Mask")] [NativeName(NativeNameType.Type, "D3D12_DEBUG_FEATURE")] D3D12DebugFeature mask) 
		{
			ID3D12DebugDevice2* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice2*, D3D12DebugFeature, int>)(handle->LpVtbl[3]))(handle, mask);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetFeatureMask")]
		[return: NativeName(NativeNameType.Type, "D3D12_DEBUG_FEATURE")]
		public static D3D12DebugFeature GetFeatureMask(this ComPtr<ID3D12DebugDevice2> comObj) 
		{
			ID3D12DebugDevice2* handle = comObj.Handle;
			D3D12DebugFeature ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice2*, D3D12DebugFeature>)(handle->LpVtbl[4]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ReportLiveDeviceObjects")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int ReportLiveDeviceObjects(this ComPtr<ID3D12DebugDevice2> comObj, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_RLDO_FLAGS")] D3D12RldoFlags flags) 
		{
			ID3D12DebugDevice2* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice2*, D3D12RldoFlags, int>)(handle->LpVtbl[5]))(handle, flags);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetDebugParameter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetDebugParameter(this ComPtr<ID3D12DebugDevice2> comObj, [NativeName(NativeNameType.Param, "Type")] [NativeName(NativeNameType.Type, "D3D12_DEBUG_DEVICE_PARAMETER_TYPE")] D3D12DebugDeviceParameterType type, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize) 
		{
			ID3D12DebugDevice2* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice2*, D3D12DebugDeviceParameterType, void*, uint, int>)(handle->LpVtbl[6]))(handle, type, pData, dataSize);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDebugParameter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDebugParameter(this ComPtr<ID3D12DebugDevice2> comObj, [NativeName(NativeNameType.Param, "Type")] [NativeName(NativeNameType.Type, "D3D12_DEBUG_DEVICE_PARAMETER_TYPE")] D3D12DebugDeviceParameterType type, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize) 
		{
			ID3D12DebugDevice2* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice2*, D3D12DebugDeviceParameterType, void*, uint, int>)(handle->LpVtbl[7]))(handle, type, pData, dataSize);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDebugParameter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDebugParameter<T>(this ComPtr<ID3D12DebugDevice2> comObj, [NativeName(NativeNameType.Param, "Type")] [NativeName(NativeNameType.Type, "D3D12_DEBUG_DEVICE_PARAMETER_TYPE")] D3D12DebugDeviceParameterType type, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12DebugDevice2* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugDevice2*, D3D12DebugDeviceParameterType, void*, uint, int>)(handle->LpVtbl[7]))(handle, type, (void*)pData.Handle, dataSize);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12DebugCommandQueue> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12DebugCommandQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandQueue*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12DebugCommandQueue> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12DebugCommandQueue* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandQueue*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12DebugCommandQueue> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12DebugCommandQueue* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandQueue*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12DebugCommandQueue> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12DebugCommandQueue* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandQueue*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<ID3D12DebugCommandQueue> comObj) 
		{
			ID3D12DebugCommandQueue* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandQueue*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<ID3D12DebugCommandQueue> comObj) 
		{
			ID3D12DebugCommandQueue* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandQueue*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AssertResourceState")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public static int AssertResourceState(this ComPtr<ID3D12DebugCommandQueue> comObj, [NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "Subresource")] [NativeName(NativeNameType.Type, "UINT")] uint subresource, [NativeName(NativeNameType.Param, "State")] [NativeName(NativeNameType.Type, "UINT")] uint state) 
		{
			ID3D12DebugCommandQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandQueue*, ID3D12Resource*, uint, uint, int>)(handle->LpVtbl[3]))(handle, pResource, subresource, state);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AssertResourceState")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public static int AssertResourceState(this ComPtr<ID3D12DebugCommandQueue> comObj, [NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "Subresource")] [NativeName(NativeNameType.Type, "UINT")] uint subresource, [NativeName(NativeNameType.Param, "State")] [NativeName(NativeNameType.Type, "UINT")] uint state) 
		{
			ID3D12DebugCommandQueue* handle = comObj.Handle;
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandQueue*, ID3D12Resource*, uint, uint, int>)(handle->LpVtbl[3]))(handle, (ID3D12Resource*)ppResource, subresource, state);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AssertResourceState")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public static int AssertResourceState(this ComPtr<ID3D12DebugCommandQueue> comObj, [NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "Subresource")] [NativeName(NativeNameType.Type, "UINT")] uint subresource, [NativeName(NativeNameType.Param, "State")] [NativeName(NativeNameType.Type, "UINT")] uint state) 
		{
			ID3D12DebugCommandQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandQueue*, ID3D12Resource*, uint, uint, int>)(handle->LpVtbl[3]))(handle, (ID3D12Resource*)pResource.Handle, subresource, state);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12DebugCommandList1> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12DebugCommandList1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList1*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12DebugCommandList1> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12DebugCommandList1* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList1*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12DebugCommandList1> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12DebugCommandList1* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList1*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12DebugCommandList1> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12DebugCommandList1* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList1*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<ID3D12DebugCommandList1> comObj) 
		{
			ID3D12DebugCommandList1* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList1*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<ID3D12DebugCommandList1> comObj) 
		{
			ID3D12DebugCommandList1* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList1*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AssertResourceState")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public static int AssertResourceState(this ComPtr<ID3D12DebugCommandList1> comObj, [NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "Subresource")] [NativeName(NativeNameType.Type, "UINT")] uint subresource, [NativeName(NativeNameType.Param, "State")] [NativeName(NativeNameType.Type, "UINT")] uint state) 
		{
			ID3D12DebugCommandList1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList1*, ID3D12Resource*, uint, uint, int>)(handle->LpVtbl[3]))(handle, pResource, subresource, state);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AssertResourceState")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public static int AssertResourceState(this ComPtr<ID3D12DebugCommandList1> comObj, [NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "Subresource")] [NativeName(NativeNameType.Type, "UINT")] uint subresource, [NativeName(NativeNameType.Param, "State")] [NativeName(NativeNameType.Type, "UINT")] uint state) 
		{
			ID3D12DebugCommandList1* handle = comObj.Handle;
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList1*, ID3D12Resource*, uint, uint, int>)(handle->LpVtbl[3]))(handle, (ID3D12Resource*)ppResource, subresource, state);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AssertResourceState")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public static int AssertResourceState(this ComPtr<ID3D12DebugCommandList1> comObj, [NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "Subresource")] [NativeName(NativeNameType.Type, "UINT")] uint subresource, [NativeName(NativeNameType.Param, "State")] [NativeName(NativeNameType.Type, "UINT")] uint state) 
		{
			ID3D12DebugCommandList1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList1*, ID3D12Resource*, uint, uint, int>)(handle->LpVtbl[3]))(handle, (ID3D12Resource*)pResource.Handle, subresource, state);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetDebugParameter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetDebugParameter(this ComPtr<ID3D12DebugCommandList1> comObj, [NativeName(NativeNameType.Param, "Type")] [NativeName(NativeNameType.Type, "D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE")] D3D12DebugCommandListParameterType type, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize) 
		{
			ID3D12DebugCommandList1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList1*, D3D12DebugCommandListParameterType, void*, uint, int>)(handle->LpVtbl[4]))(handle, type, pData, dataSize);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDebugParameter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDebugParameter(this ComPtr<ID3D12DebugCommandList1> comObj, [NativeName(NativeNameType.Param, "Type")] [NativeName(NativeNameType.Type, "D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE")] D3D12DebugCommandListParameterType type, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize) 
		{
			ID3D12DebugCommandList1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList1*, D3D12DebugCommandListParameterType, void*, uint, int>)(handle->LpVtbl[5]))(handle, type, pData, dataSize);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDebugParameter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDebugParameter<T>(this ComPtr<ID3D12DebugCommandList1> comObj, [NativeName(NativeNameType.Param, "Type")] [NativeName(NativeNameType.Type, "D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE")] D3D12DebugCommandListParameterType type, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12DebugCommandList1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList1*, D3D12DebugCommandListParameterType, void*, uint, int>)(handle->LpVtbl[5]))(handle, type, (void*)pData.Handle, dataSize);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12DebugCommandList> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12DebugCommandList* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12DebugCommandList> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12DebugCommandList* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12DebugCommandList> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12DebugCommandList* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12DebugCommandList> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12DebugCommandList* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<ID3D12DebugCommandList> comObj) 
		{
			ID3D12DebugCommandList* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<ID3D12DebugCommandList> comObj) 
		{
			ID3D12DebugCommandList* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AssertResourceState")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public static int AssertResourceState(this ComPtr<ID3D12DebugCommandList> comObj, [NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "Subresource")] [NativeName(NativeNameType.Type, "UINT")] uint subresource, [NativeName(NativeNameType.Param, "State")] [NativeName(NativeNameType.Type, "UINT")] uint state) 
		{
			ID3D12DebugCommandList* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList*, ID3D12Resource*, uint, uint, int>)(handle->LpVtbl[3]))(handle, pResource, subresource, state);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AssertResourceState")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public static int AssertResourceState(this ComPtr<ID3D12DebugCommandList> comObj, [NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "Subresource")] [NativeName(NativeNameType.Type, "UINT")] uint subresource, [NativeName(NativeNameType.Param, "State")] [NativeName(NativeNameType.Type, "UINT")] uint state) 
		{
			ID3D12DebugCommandList* handle = comObj.Handle;
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList*, ID3D12Resource*, uint, uint, int>)(handle->LpVtbl[3]))(handle, (ID3D12Resource*)ppResource, subresource, state);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AssertResourceState")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public static int AssertResourceState(this ComPtr<ID3D12DebugCommandList> comObj, [NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "Subresource")] [NativeName(NativeNameType.Type, "UINT")] uint subresource, [NativeName(NativeNameType.Param, "State")] [NativeName(NativeNameType.Type, "UINT")] uint state) 
		{
			ID3D12DebugCommandList* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList*, ID3D12Resource*, uint, uint, int>)(handle->LpVtbl[3]))(handle, (ID3D12Resource*)pResource.Handle, subresource, state);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetFeatureMask")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetFeatureMask(this ComPtr<ID3D12DebugCommandList> comObj, [NativeName(NativeNameType.Param, "Mask")] [NativeName(NativeNameType.Type, "D3D12_DEBUG_FEATURE")] D3D12DebugFeature mask) 
		{
			ID3D12DebugCommandList* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList*, D3D12DebugFeature, int>)(handle->LpVtbl[4]))(handle, mask);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetFeatureMask")]
		[return: NativeName(NativeNameType.Type, "D3D12_DEBUG_FEATURE")]
		public static D3D12DebugFeature GetFeatureMask(this ComPtr<ID3D12DebugCommandList> comObj) 
		{
			ID3D12DebugCommandList* handle = comObj.Handle;
			D3D12DebugFeature ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList*, D3D12DebugFeature>)(handle->LpVtbl[5]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12DebugCommandList2> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12DebugCommandList2* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList2*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12DebugCommandList2> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12DebugCommandList2* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList2*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12DebugCommandList2> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12DebugCommandList2* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList2*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12DebugCommandList2> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12DebugCommandList2* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList2*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<ID3D12DebugCommandList2> comObj) 
		{
			ID3D12DebugCommandList2* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList2*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<ID3D12DebugCommandList2> comObj) 
		{
			ID3D12DebugCommandList2* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList2*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AssertResourceState")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public static int AssertResourceState(this ComPtr<ID3D12DebugCommandList2> comObj, [NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "Subresource")] [NativeName(NativeNameType.Type, "UINT")] uint subresource, [NativeName(NativeNameType.Param, "State")] [NativeName(NativeNameType.Type, "UINT")] uint state) 
		{
			ID3D12DebugCommandList2* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList2*, ID3D12Resource*, uint, uint, int>)(handle->LpVtbl[3]))(handle, pResource, subresource, state);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AssertResourceState")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public static int AssertResourceState(this ComPtr<ID3D12DebugCommandList2> comObj, [NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "Subresource")] [NativeName(NativeNameType.Type, "UINT")] uint subresource, [NativeName(NativeNameType.Param, "State")] [NativeName(NativeNameType.Type, "UINT")] uint state) 
		{
			ID3D12DebugCommandList2* handle = comObj.Handle;
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList2*, ID3D12Resource*, uint, uint, int>)(handle->LpVtbl[3]))(handle, (ID3D12Resource*)ppResource, subresource, state);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AssertResourceState")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public static int AssertResourceState(this ComPtr<ID3D12DebugCommandList2> comObj, [NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "Subresource")] [NativeName(NativeNameType.Type, "UINT")] uint subresource, [NativeName(NativeNameType.Param, "State")] [NativeName(NativeNameType.Type, "UINT")] uint state) 
		{
			ID3D12DebugCommandList2* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList2*, ID3D12Resource*, uint, uint, int>)(handle->LpVtbl[3]))(handle, (ID3D12Resource*)pResource.Handle, subresource, state);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetFeatureMask")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetFeatureMask(this ComPtr<ID3D12DebugCommandList2> comObj, [NativeName(NativeNameType.Param, "Mask")] [NativeName(NativeNameType.Type, "D3D12_DEBUG_FEATURE")] D3D12DebugFeature mask) 
		{
			ID3D12DebugCommandList2* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList2*, D3D12DebugFeature, int>)(handle->LpVtbl[4]))(handle, mask);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetFeatureMask")]
		[return: NativeName(NativeNameType.Type, "D3D12_DEBUG_FEATURE")]
		public static D3D12DebugFeature GetFeatureMask(this ComPtr<ID3D12DebugCommandList2> comObj) 
		{
			ID3D12DebugCommandList2* handle = comObj.Handle;
			D3D12DebugFeature ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList2*, D3D12DebugFeature>)(handle->LpVtbl[5]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetDebugParameter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetDebugParameter(this ComPtr<ID3D12DebugCommandList2> comObj, [NativeName(NativeNameType.Param, "Type")] [NativeName(NativeNameType.Type, "D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE")] D3D12DebugCommandListParameterType type, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize) 
		{
			ID3D12DebugCommandList2* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList2*, D3D12DebugCommandListParameterType, void*, uint, int>)(handle->LpVtbl[6]))(handle, type, pData, dataSize);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDebugParameter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDebugParameter(this ComPtr<ID3D12DebugCommandList2> comObj, [NativeName(NativeNameType.Param, "Type")] [NativeName(NativeNameType.Type, "D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE")] D3D12DebugCommandListParameterType type, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize) 
		{
			ID3D12DebugCommandList2* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList2*, D3D12DebugCommandListParameterType, void*, uint, int>)(handle->LpVtbl[7]))(handle, type, pData, dataSize);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDebugParameter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDebugParameter<T>(this ComPtr<ID3D12DebugCommandList2> comObj, [NativeName(NativeNameType.Param, "Type")] [NativeName(NativeNameType.Type, "D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE")] D3D12DebugCommandListParameterType type, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12DebugCommandList2* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList2*, D3D12DebugCommandListParameterType, void*, uint, int>)(handle->LpVtbl[7]))(handle, type, (void*)pData.Handle, dataSize);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12SharingContract> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12SharingContract* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12SharingContract*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12SharingContract> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12SharingContract* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12SharingContract*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12SharingContract> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12SharingContract* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12SharingContract*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12SharingContract> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12SharingContract* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12SharingContract*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<ID3D12SharingContract> comObj) 
		{
			ID3D12SharingContract* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12SharingContract*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<ID3D12SharingContract> comObj) 
		{
			ID3D12SharingContract* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12SharingContract*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Present")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void Present(this ComPtr<ID3D12SharingContract> comObj, [NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "Subresource")] [NativeName(NativeNameType.Type, "UINT")] uint subresource, [NativeName(NativeNameType.Param, "window")] [NativeName(NativeNameType.Type, "HWND")] nint window) 
		{
			ID3D12SharingContract* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12SharingContract*, ID3D12Resource*, uint, nint, void>)(handle->LpVtbl[3]))(handle, pResource, subresource, window);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Present")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void Present(this ComPtr<ID3D12SharingContract> comObj, [NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "Subresource")] [NativeName(NativeNameType.Type, "UINT")] uint subresource, [NativeName(NativeNameType.Param, "window")] [NativeName(NativeNameType.Type, "HWND")] nint window) 
		{
			ID3D12SharingContract* handle = comObj.Handle;
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12SharingContract*, ID3D12Resource*, uint, nint, void>)(handle->LpVtbl[3]))(handle, (ID3D12Resource*)ppResource, subresource, window);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Present")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void Present(this ComPtr<ID3D12SharingContract> comObj, [NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "Subresource")] [NativeName(NativeNameType.Type, "UINT")] uint subresource, [NativeName(NativeNameType.Param, "window")] [NativeName(NativeNameType.Type, "HWND")] nint window) 
		{
			ID3D12SharingContract* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12SharingContract*, ID3D12Resource*, uint, nint, void>)(handle->LpVtbl[3]))(handle, (ID3D12Resource*)pResource.Handle, subresource, window);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SharedFenceSignal")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SharedFenceSignal(this ComPtr<ID3D12SharingContract> comObj, [NativeName(NativeNameType.Param, "pFence")] [NativeName(NativeNameType.Type, "ID3D12Fence*")] ID3D12Fence* pFence, [NativeName(NativeNameType.Param, "FenceValue")] [NativeName(NativeNameType.Type, "UINT64")] ulong fenceValue) 
		{
			ID3D12SharingContract* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12SharingContract*, ID3D12Fence*, ulong, void>)(handle->LpVtbl[4]))(handle, pFence, fenceValue);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SharedFenceSignal")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SharedFenceSignal(this ComPtr<ID3D12SharingContract> comObj, [NativeName(NativeNameType.Param, "pFence")] [NativeName(NativeNameType.Type, "ID3D12Fence*")] ref ID3D12Fence pFence, [NativeName(NativeNameType.Param, "FenceValue")] [NativeName(NativeNameType.Type, "UINT64")] ulong fenceValue) 
		{
			ID3D12SharingContract* handle = comObj.Handle;
			fixed (ID3D12Fence* ppFence = &pFence)
			{
				((delegate* unmanaged[Stdcall]<ID3D12SharingContract*, ID3D12Fence*, ulong, void>)(handle->LpVtbl[4]))(handle, (ID3D12Fence*)ppFence, fenceValue);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SharedFenceSignal")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SharedFenceSignal(this ComPtr<ID3D12SharingContract> comObj, [NativeName(NativeNameType.Param, "pFence")] [NativeName(NativeNameType.Type, "ID3D12Fence*")] ComPtr<ID3D12Fence> pFence, [NativeName(NativeNameType.Param, "FenceValue")] [NativeName(NativeNameType.Type, "UINT64")] ulong fenceValue) 
		{
			ID3D12SharingContract* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12SharingContract*, ID3D12Fence*, ulong, void>)(handle->LpVtbl[4]))(handle, (ID3D12Fence*)pFence.Handle, fenceValue);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BeginCapturableWork")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void BeginCapturableWork(this ComPtr<ID3D12SharingContract> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid) 
		{
			ID3D12SharingContract* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12SharingContract*, Guid*, void>)(handle->LpVtbl[5]))(handle, guid);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BeginCapturableWork")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void BeginCapturableWork(this ComPtr<ID3D12SharingContract> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid) 
		{
			ID3D12SharingContract* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				((delegate* unmanaged[Stdcall]<ID3D12SharingContract*, Guid*, void>)(handle->LpVtbl[5]))(handle, (Guid*)pguid);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "EndCapturableWork")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void EndCapturableWork(this ComPtr<ID3D12SharingContract> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid) 
		{
			ID3D12SharingContract* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12SharingContract*, Guid*, void>)(handle->LpVtbl[6]))(handle, guid);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "EndCapturableWork")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void EndCapturableWork(this ComPtr<ID3D12SharingContract> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid) 
		{
			ID3D12SharingContract* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				((delegate* unmanaged[Stdcall]<ID3D12SharingContract*, Guid*, void>)(handle->LpVtbl[6]))(handle, (Guid*)pguid);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<ID3D12InfoQueue> comObj) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<ID3D12InfoQueue> comObj) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetMessageCountLimit")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetMessageCountLimit(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "MessageCountLimit")] [NativeName(NativeNameType.Type, "UINT64")] ulong messageCountLimit) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, ulong, int>)(handle->LpVtbl[3]))(handle, messageCountLimit);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ClearStoredMessages")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ClearStoredMessages(this ComPtr<ID3D12InfoQueue> comObj) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, void>)(handle->LpVtbl[4]))(handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetMessageA")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetMessageA(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "MessageIndex")] [NativeName(NativeNameType.Type, "UINT64")] ulong messageIndex, [NativeName(NativeNameType.Param, "pMessage")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE*")] D3D12Message* pMessage, [NativeName(NativeNameType.Param, "pMessageByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] nuint* pMessageByteLength) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, ulong, D3D12Message*, nuint*, int>)(handle->LpVtbl[5]))(handle, messageIndex, pMessage, pMessageByteLength);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetMessageA")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetMessageA(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "MessageIndex")] [NativeName(NativeNameType.Type, "UINT64")] ulong messageIndex, [NativeName(NativeNameType.Param, "pMessage")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE*")] ref D3D12Message pMessage, [NativeName(NativeNameType.Param, "pMessageByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] nuint* pMessageByteLength) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			fixed (D3D12Message* ppMessage = &pMessage)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, ulong, D3D12Message*, nuint*, int>)(handle->LpVtbl[5]))(handle, messageIndex, (D3D12Message*)ppMessage, pMessageByteLength);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetMessageA")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetMessageA(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "MessageIndex")] [NativeName(NativeNameType.Type, "UINT64")] ulong messageIndex, [NativeName(NativeNameType.Param, "pMessage")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE*")] D3D12Message* pMessage, [NativeName(NativeNameType.Param, "pMessageByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] ref nuint pMessageByteLength) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			fixed (nuint* ppMessageByteLength = &pMessageByteLength)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, ulong, D3D12Message*, nuint*, int>)(handle->LpVtbl[5]))(handle, messageIndex, pMessage, (nuint*)ppMessageByteLength);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetMessageA")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetMessageA(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "MessageIndex")] [NativeName(NativeNameType.Type, "UINT64")] ulong messageIndex, [NativeName(NativeNameType.Param, "pMessage")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE*")] ref D3D12Message pMessage, [NativeName(NativeNameType.Param, "pMessageByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] ref nuint pMessageByteLength) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			fixed (D3D12Message* ppMessage = &pMessage)
			{
				fixed (nuint* ppMessageByteLength = &pMessageByteLength)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, ulong, D3D12Message*, nuint*, int>)(handle->LpVtbl[5]))(handle, messageIndex, (D3D12Message*)ppMessage, (nuint*)ppMessageByteLength);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetNumMessagesAllowedByStorageFilter")]
		[return: NativeName(NativeNameType.Type, "UINT64")]
		public static ulong GetNumMessagesAllowedByStorageFilter(this ComPtr<ID3D12InfoQueue> comObj) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			ulong ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, ulong>)(handle->LpVtbl[6]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetNumMessagesDeniedByStorageFilter")]
		[return: NativeName(NativeNameType.Type, "UINT64")]
		public static ulong GetNumMessagesDeniedByStorageFilter(this ComPtr<ID3D12InfoQueue> comObj) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			ulong ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, ulong>)(handle->LpVtbl[7]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetNumStoredMessages")]
		[return: NativeName(NativeNameType.Type, "UINT64")]
		public static ulong GetNumStoredMessages(this ComPtr<ID3D12InfoQueue> comObj) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			ulong ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, ulong>)(handle->LpVtbl[8]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetNumStoredMessagesAllowedByRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "UINT64")]
		public static ulong GetNumStoredMessagesAllowedByRetrievalFilter(this ComPtr<ID3D12InfoQueue> comObj) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			ulong ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, ulong>)(handle->LpVtbl[9]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetNumMessagesDiscardedByMessageCountLimit")]
		[return: NativeName(NativeNameType.Type, "UINT64")]
		public static ulong GetNumMessagesDiscardedByMessageCountLimit(this ComPtr<ID3D12InfoQueue> comObj) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			ulong ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, ulong>)(handle->LpVtbl[10]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetMessageCountLimit")]
		[return: NativeName(NativeNameType.Type, "UINT64")]
		public static ulong GetMessageCountLimit(this ComPtr<ID3D12InfoQueue> comObj) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			ulong ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, ulong>)(handle->LpVtbl[11]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddStorageFilterEntries")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int AddStorageFilterEntries(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] D3D12InfoQueueFilter* pFilter) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, D3D12InfoQueueFilter*, int>)(handle->LpVtbl[12]))(handle, pFilter);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddStorageFilterEntries")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int AddStorageFilterEntries(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] ref D3D12InfoQueueFilter pFilter) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			fixed (D3D12InfoQueueFilter* ppFilter = &pFilter)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, D3D12InfoQueueFilter*, int>)(handle->LpVtbl[12]))(handle, (D3D12InfoQueueFilter*)ppFilter);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetStorageFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetStorageFilter(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] D3D12InfoQueueFilter* pFilter, [NativeName(NativeNameType.Param, "pFilterByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] nuint* pFilterByteLength) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, D3D12InfoQueueFilter*, nuint*, int>)(handle->LpVtbl[13]))(handle, pFilter, pFilterByteLength);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetStorageFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetStorageFilter(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] ref D3D12InfoQueueFilter pFilter, [NativeName(NativeNameType.Param, "pFilterByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] nuint* pFilterByteLength) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			fixed (D3D12InfoQueueFilter* ppFilter = &pFilter)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, D3D12InfoQueueFilter*, nuint*, int>)(handle->LpVtbl[13]))(handle, (D3D12InfoQueueFilter*)ppFilter, pFilterByteLength);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetStorageFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetStorageFilter(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] D3D12InfoQueueFilter* pFilter, [NativeName(NativeNameType.Param, "pFilterByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] ref nuint pFilterByteLength) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			fixed (nuint* ppFilterByteLength = &pFilterByteLength)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, D3D12InfoQueueFilter*, nuint*, int>)(handle->LpVtbl[13]))(handle, pFilter, (nuint*)ppFilterByteLength);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetStorageFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetStorageFilter(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] ref D3D12InfoQueueFilter pFilter, [NativeName(NativeNameType.Param, "pFilterByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] ref nuint pFilterByteLength) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			fixed (D3D12InfoQueueFilter* ppFilter = &pFilter)
			{
				fixed (nuint* ppFilterByteLength = &pFilterByteLength)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, D3D12InfoQueueFilter*, nuint*, int>)(handle->LpVtbl[13]))(handle, (D3D12InfoQueueFilter*)ppFilter, (nuint*)ppFilterByteLength);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ClearStorageFilter")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ClearStorageFilter(this ComPtr<ID3D12InfoQueue> comObj) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, void>)(handle->LpVtbl[14]))(handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "PushEmptyStorageFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int PushEmptyStorageFilter(this ComPtr<ID3D12InfoQueue> comObj) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, int>)(handle->LpVtbl[15]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "PushCopyOfStorageFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int PushCopyOfStorageFilter(this ComPtr<ID3D12InfoQueue> comObj) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, int>)(handle->LpVtbl[16]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "PushStorageFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int PushStorageFilter(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] D3D12InfoQueueFilter* pFilter) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, D3D12InfoQueueFilter*, int>)(handle->LpVtbl[17]))(handle, pFilter);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "PushStorageFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int PushStorageFilter(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] ref D3D12InfoQueueFilter pFilter) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			fixed (D3D12InfoQueueFilter* ppFilter = &pFilter)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, D3D12InfoQueueFilter*, int>)(handle->LpVtbl[17]))(handle, (D3D12InfoQueueFilter*)ppFilter);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "PopStorageFilter")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void PopStorageFilter(this ComPtr<ID3D12InfoQueue> comObj) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, void>)(handle->LpVtbl[18]))(handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetStorageFilterStackSize")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public static uint GetStorageFilterStackSize(this ComPtr<ID3D12InfoQueue> comObj) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, uint>)(handle->LpVtbl[19]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRetrievalFilterEntries")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int AddRetrievalFilterEntries(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] D3D12InfoQueueFilter* pFilter) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, D3D12InfoQueueFilter*, int>)(handle->LpVtbl[20]))(handle, pFilter);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRetrievalFilterEntries")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int AddRetrievalFilterEntries(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] ref D3D12InfoQueueFilter pFilter) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			fixed (D3D12InfoQueueFilter* ppFilter = &pFilter)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, D3D12InfoQueueFilter*, int>)(handle->LpVtbl[20]))(handle, (D3D12InfoQueueFilter*)ppFilter);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetRetrievalFilter(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] D3D12InfoQueueFilter* pFilter, [NativeName(NativeNameType.Param, "pFilterByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] nuint* pFilterByteLength) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, D3D12InfoQueueFilter*, nuint*, int>)(handle->LpVtbl[21]))(handle, pFilter, pFilterByteLength);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetRetrievalFilter(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] ref D3D12InfoQueueFilter pFilter, [NativeName(NativeNameType.Param, "pFilterByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] nuint* pFilterByteLength) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			fixed (D3D12InfoQueueFilter* ppFilter = &pFilter)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, D3D12InfoQueueFilter*, nuint*, int>)(handle->LpVtbl[21]))(handle, (D3D12InfoQueueFilter*)ppFilter, pFilterByteLength);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetRetrievalFilter(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] D3D12InfoQueueFilter* pFilter, [NativeName(NativeNameType.Param, "pFilterByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] ref nuint pFilterByteLength) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			fixed (nuint* ppFilterByteLength = &pFilterByteLength)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, D3D12InfoQueueFilter*, nuint*, int>)(handle->LpVtbl[21]))(handle, pFilter, (nuint*)ppFilterByteLength);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetRetrievalFilter(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] ref D3D12InfoQueueFilter pFilter, [NativeName(NativeNameType.Param, "pFilterByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] ref nuint pFilterByteLength) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			fixed (D3D12InfoQueueFilter* ppFilter = &pFilter)
			{
				fixed (nuint* ppFilterByteLength = &pFilterByteLength)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, D3D12InfoQueueFilter*, nuint*, int>)(handle->LpVtbl[21]))(handle, (D3D12InfoQueueFilter*)ppFilter, (nuint*)ppFilterByteLength);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ClearRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ClearRetrievalFilter(this ComPtr<ID3D12InfoQueue> comObj) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, void>)(handle->LpVtbl[22]))(handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "PushEmptyRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int PushEmptyRetrievalFilter(this ComPtr<ID3D12InfoQueue> comObj) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, int>)(handle->LpVtbl[23]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "PushCopyOfRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int PushCopyOfRetrievalFilter(this ComPtr<ID3D12InfoQueue> comObj) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, int>)(handle->LpVtbl[24]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "PushRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int PushRetrievalFilter(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] D3D12InfoQueueFilter* pFilter) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, D3D12InfoQueueFilter*, int>)(handle->LpVtbl[25]))(handle, pFilter);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "PushRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int PushRetrievalFilter(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] ref D3D12InfoQueueFilter pFilter) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			fixed (D3D12InfoQueueFilter* ppFilter = &pFilter)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, D3D12InfoQueueFilter*, int>)(handle->LpVtbl[25]))(handle, (D3D12InfoQueueFilter*)ppFilter);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "PopRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void PopRetrievalFilter(this ComPtr<ID3D12InfoQueue> comObj) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, void>)(handle->LpVtbl[26]))(handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetRetrievalFilterStackSize")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public static uint GetRetrievalFilterStackSize(this ComPtr<ID3D12InfoQueue> comObj) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, uint>)(handle->LpVtbl[27]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddMessage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int AddMessage(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "Category")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_CATEGORY")] D3D12MessageCategory category, [NativeName(NativeNameType.Param, "Severity")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_SEVERITY")] D3D12MessageSeverity severity, [NativeName(NativeNameType.Param, "ID")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_ID")] D3D12MessageId id, [NativeName(NativeNameType.Param, "pDescription")] [NativeName(NativeNameType.Type, "LPCSTR")] byte* pDescription) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, D3D12MessageCategory, D3D12MessageSeverity, D3D12MessageId, byte*, int>)(handle->LpVtbl[28]))(handle, category, severity, id, pDescription);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddMessage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int AddMessage(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "Category")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_CATEGORY")] D3D12MessageCategory category, [NativeName(NativeNameType.Param, "Severity")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_SEVERITY")] D3D12MessageSeverity severity, [NativeName(NativeNameType.Param, "ID")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_ID")] D3D12MessageId id, [NativeName(NativeNameType.Param, "pDescription")] [NativeName(NativeNameType.Type, "LPCSTR")] ReadOnlySpan<byte> pDescription) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			fixed (byte* ppDescription = pDescription)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, D3D12MessageCategory, D3D12MessageSeverity, D3D12MessageId, byte*, int>)(handle->LpVtbl[28]))(handle, category, severity, id, (byte*)ppDescription);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddMessage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int AddMessage(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "Category")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_CATEGORY")] D3D12MessageCategory category, [NativeName(NativeNameType.Param, "Severity")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_SEVERITY")] D3D12MessageSeverity severity, [NativeName(NativeNameType.Param, "ID")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_ID")] D3D12MessageId id, [NativeName(NativeNameType.Param, "pDescription")] [NativeName(NativeNameType.Type, "LPCSTR")] string pDescription) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (pDescription != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(pDescription);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(pDescription, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, D3D12MessageCategory, D3D12MessageSeverity, D3D12MessageId, byte*, int>)(handle->LpVtbl[28]))(handle, category, severity, id, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddApplicationMessage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int AddApplicationMessage(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "Severity")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_SEVERITY")] D3D12MessageSeverity severity, [NativeName(NativeNameType.Param, "pDescription")] [NativeName(NativeNameType.Type, "LPCSTR")] byte* pDescription) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, D3D12MessageSeverity, byte*, int>)(handle->LpVtbl[29]))(handle, severity, pDescription);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddApplicationMessage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int AddApplicationMessage(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "Severity")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_SEVERITY")] D3D12MessageSeverity severity, [NativeName(NativeNameType.Param, "pDescription")] [NativeName(NativeNameType.Type, "LPCSTR")] ReadOnlySpan<byte> pDescription) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			fixed (byte* ppDescription = pDescription)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, D3D12MessageSeverity, byte*, int>)(handle->LpVtbl[29]))(handle, severity, (byte*)ppDescription);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddApplicationMessage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int AddApplicationMessage(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "Severity")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_SEVERITY")] D3D12MessageSeverity severity, [NativeName(NativeNameType.Param, "pDescription")] [NativeName(NativeNameType.Type, "LPCSTR")] string pDescription) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (pDescription != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(pDescription);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(pDescription, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, D3D12MessageSeverity, byte*, int>)(handle->LpVtbl[29]))(handle, severity, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetBreakOnCategory")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetBreakOnCategory(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "Category")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_CATEGORY")] D3D12MessageCategory category, [NativeName(NativeNameType.Param, "bEnable")] [NativeName(NativeNameType.Type, "BOOL")] int bEnable) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, D3D12MessageCategory, int, int>)(handle->LpVtbl[30]))(handle, category, bEnable);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetBreakOnSeverity")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetBreakOnSeverity(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "Severity")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_SEVERITY")] D3D12MessageSeverity severity, [NativeName(NativeNameType.Param, "bEnable")] [NativeName(NativeNameType.Type, "BOOL")] int bEnable) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, D3D12MessageSeverity, int, int>)(handle->LpVtbl[31]))(handle, severity, bEnable);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetBreakOnID")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetBreakOnID(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "ID")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_ID")] D3D12MessageId id, [NativeName(NativeNameType.Param, "bEnable")] [NativeName(NativeNameType.Type, "BOOL")] int bEnable) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, D3D12MessageId, int, int>)(handle->LpVtbl[32]))(handle, id, bEnable);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetBreakOnCategory")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public static int GetBreakOnCategory(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "Category")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_CATEGORY")] D3D12MessageCategory category) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, D3D12MessageCategory, int>)(handle->LpVtbl[33]))(handle, category);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetBreakOnSeverity")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public static int GetBreakOnSeverity(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "Severity")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_SEVERITY")] D3D12MessageSeverity severity) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, D3D12MessageSeverity, int>)(handle->LpVtbl[34]))(handle, severity);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetBreakOnID")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public static int GetBreakOnID(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "ID")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_ID")] D3D12MessageId id) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, D3D12MessageId, int>)(handle->LpVtbl[35]))(handle, id);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetMuteDebugOutput")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SetMuteDebugOutput(this ComPtr<ID3D12InfoQueue> comObj, [NativeName(NativeNameType.Param, "bMute")] [NativeName(NativeNameType.Type, "BOOL")] int bMute) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, int, void>)(handle->LpVtbl[36]))(handle, bMute);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetMuteDebugOutput")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public static int GetMuteDebugOutput(this ComPtr<ID3D12InfoQueue> comObj) 
		{
			ID3D12InfoQueue* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue*, int>)(handle->LpVtbl[37]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<ID3D12InfoQueue1> comObj) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<ID3D12InfoQueue1> comObj) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetMessageCountLimit")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetMessageCountLimit(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "MessageCountLimit")] [NativeName(NativeNameType.Type, "UINT64")] ulong messageCountLimit) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, ulong, int>)(handle->LpVtbl[3]))(handle, messageCountLimit);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ClearStoredMessages")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ClearStoredMessages(this ComPtr<ID3D12InfoQueue1> comObj) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, void>)(handle->LpVtbl[4]))(handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetMessageA")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetMessageA(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "MessageIndex")] [NativeName(NativeNameType.Type, "UINT64")] ulong messageIndex, [NativeName(NativeNameType.Param, "pMessage")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE*")] D3D12Message* pMessage, [NativeName(NativeNameType.Param, "pMessageByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] nuint* pMessageByteLength) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, ulong, D3D12Message*, nuint*, int>)(handle->LpVtbl[5]))(handle, messageIndex, pMessage, pMessageByteLength);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetMessageA")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetMessageA(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "MessageIndex")] [NativeName(NativeNameType.Type, "UINT64")] ulong messageIndex, [NativeName(NativeNameType.Param, "pMessage")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE*")] ref D3D12Message pMessage, [NativeName(NativeNameType.Param, "pMessageByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] nuint* pMessageByteLength) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			fixed (D3D12Message* ppMessage = &pMessage)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, ulong, D3D12Message*, nuint*, int>)(handle->LpVtbl[5]))(handle, messageIndex, (D3D12Message*)ppMessage, pMessageByteLength);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetMessageA")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetMessageA(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "MessageIndex")] [NativeName(NativeNameType.Type, "UINT64")] ulong messageIndex, [NativeName(NativeNameType.Param, "pMessage")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE*")] D3D12Message* pMessage, [NativeName(NativeNameType.Param, "pMessageByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] ref nuint pMessageByteLength) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			fixed (nuint* ppMessageByteLength = &pMessageByteLength)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, ulong, D3D12Message*, nuint*, int>)(handle->LpVtbl[5]))(handle, messageIndex, pMessage, (nuint*)ppMessageByteLength);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetMessageA")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetMessageA(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "MessageIndex")] [NativeName(NativeNameType.Type, "UINT64")] ulong messageIndex, [NativeName(NativeNameType.Param, "pMessage")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE*")] ref D3D12Message pMessage, [NativeName(NativeNameType.Param, "pMessageByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] ref nuint pMessageByteLength) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			fixed (D3D12Message* ppMessage = &pMessage)
			{
				fixed (nuint* ppMessageByteLength = &pMessageByteLength)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, ulong, D3D12Message*, nuint*, int>)(handle->LpVtbl[5]))(handle, messageIndex, (D3D12Message*)ppMessage, (nuint*)ppMessageByteLength);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetNumMessagesAllowedByStorageFilter")]
		[return: NativeName(NativeNameType.Type, "UINT64")]
		public static ulong GetNumMessagesAllowedByStorageFilter(this ComPtr<ID3D12InfoQueue1> comObj) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			ulong ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, ulong>)(handle->LpVtbl[6]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetNumMessagesDeniedByStorageFilter")]
		[return: NativeName(NativeNameType.Type, "UINT64")]
		public static ulong GetNumMessagesDeniedByStorageFilter(this ComPtr<ID3D12InfoQueue1> comObj) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			ulong ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, ulong>)(handle->LpVtbl[7]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetNumStoredMessages")]
		[return: NativeName(NativeNameType.Type, "UINT64")]
		public static ulong GetNumStoredMessages(this ComPtr<ID3D12InfoQueue1> comObj) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			ulong ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, ulong>)(handle->LpVtbl[8]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetNumStoredMessagesAllowedByRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "UINT64")]
		public static ulong GetNumStoredMessagesAllowedByRetrievalFilter(this ComPtr<ID3D12InfoQueue1> comObj) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			ulong ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, ulong>)(handle->LpVtbl[9]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetNumMessagesDiscardedByMessageCountLimit")]
		[return: NativeName(NativeNameType.Type, "UINT64")]
		public static ulong GetNumMessagesDiscardedByMessageCountLimit(this ComPtr<ID3D12InfoQueue1> comObj) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			ulong ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, ulong>)(handle->LpVtbl[10]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetMessageCountLimit")]
		[return: NativeName(NativeNameType.Type, "UINT64")]
		public static ulong GetMessageCountLimit(this ComPtr<ID3D12InfoQueue1> comObj) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			ulong ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, ulong>)(handle->LpVtbl[11]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddStorageFilterEntries")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int AddStorageFilterEntries(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] D3D12InfoQueueFilter* pFilter) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12InfoQueueFilter*, int>)(handle->LpVtbl[12]))(handle, pFilter);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddStorageFilterEntries")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int AddStorageFilterEntries(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] ref D3D12InfoQueueFilter pFilter) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			fixed (D3D12InfoQueueFilter* ppFilter = &pFilter)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12InfoQueueFilter*, int>)(handle->LpVtbl[12]))(handle, (D3D12InfoQueueFilter*)ppFilter);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetStorageFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetStorageFilter(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] D3D12InfoQueueFilter* pFilter, [NativeName(NativeNameType.Param, "pFilterByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] nuint* pFilterByteLength) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12InfoQueueFilter*, nuint*, int>)(handle->LpVtbl[13]))(handle, pFilter, pFilterByteLength);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetStorageFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetStorageFilter(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] ref D3D12InfoQueueFilter pFilter, [NativeName(NativeNameType.Param, "pFilterByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] nuint* pFilterByteLength) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			fixed (D3D12InfoQueueFilter* ppFilter = &pFilter)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12InfoQueueFilter*, nuint*, int>)(handle->LpVtbl[13]))(handle, (D3D12InfoQueueFilter*)ppFilter, pFilterByteLength);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetStorageFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetStorageFilter(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] D3D12InfoQueueFilter* pFilter, [NativeName(NativeNameType.Param, "pFilterByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] ref nuint pFilterByteLength) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			fixed (nuint* ppFilterByteLength = &pFilterByteLength)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12InfoQueueFilter*, nuint*, int>)(handle->LpVtbl[13]))(handle, pFilter, (nuint*)ppFilterByteLength);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetStorageFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetStorageFilter(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] ref D3D12InfoQueueFilter pFilter, [NativeName(NativeNameType.Param, "pFilterByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] ref nuint pFilterByteLength) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			fixed (D3D12InfoQueueFilter* ppFilter = &pFilter)
			{
				fixed (nuint* ppFilterByteLength = &pFilterByteLength)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12InfoQueueFilter*, nuint*, int>)(handle->LpVtbl[13]))(handle, (D3D12InfoQueueFilter*)ppFilter, (nuint*)ppFilterByteLength);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ClearStorageFilter")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ClearStorageFilter(this ComPtr<ID3D12InfoQueue1> comObj) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, void>)(handle->LpVtbl[14]))(handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "PushEmptyStorageFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int PushEmptyStorageFilter(this ComPtr<ID3D12InfoQueue1> comObj) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, int>)(handle->LpVtbl[15]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "PushCopyOfStorageFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int PushCopyOfStorageFilter(this ComPtr<ID3D12InfoQueue1> comObj) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, int>)(handle->LpVtbl[16]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "PushStorageFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int PushStorageFilter(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] D3D12InfoQueueFilter* pFilter) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12InfoQueueFilter*, int>)(handle->LpVtbl[17]))(handle, pFilter);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "PushStorageFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int PushStorageFilter(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] ref D3D12InfoQueueFilter pFilter) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			fixed (D3D12InfoQueueFilter* ppFilter = &pFilter)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12InfoQueueFilter*, int>)(handle->LpVtbl[17]))(handle, (D3D12InfoQueueFilter*)ppFilter);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "PopStorageFilter")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void PopStorageFilter(this ComPtr<ID3D12InfoQueue1> comObj) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, void>)(handle->LpVtbl[18]))(handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetStorageFilterStackSize")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public static uint GetStorageFilterStackSize(this ComPtr<ID3D12InfoQueue1> comObj) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, uint>)(handle->LpVtbl[19]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRetrievalFilterEntries")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int AddRetrievalFilterEntries(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] D3D12InfoQueueFilter* pFilter) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12InfoQueueFilter*, int>)(handle->LpVtbl[20]))(handle, pFilter);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRetrievalFilterEntries")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int AddRetrievalFilterEntries(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] ref D3D12InfoQueueFilter pFilter) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			fixed (D3D12InfoQueueFilter* ppFilter = &pFilter)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12InfoQueueFilter*, int>)(handle->LpVtbl[20]))(handle, (D3D12InfoQueueFilter*)ppFilter);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetRetrievalFilter(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] D3D12InfoQueueFilter* pFilter, [NativeName(NativeNameType.Param, "pFilterByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] nuint* pFilterByteLength) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12InfoQueueFilter*, nuint*, int>)(handle->LpVtbl[21]))(handle, pFilter, pFilterByteLength);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetRetrievalFilter(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] ref D3D12InfoQueueFilter pFilter, [NativeName(NativeNameType.Param, "pFilterByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] nuint* pFilterByteLength) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			fixed (D3D12InfoQueueFilter* ppFilter = &pFilter)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12InfoQueueFilter*, nuint*, int>)(handle->LpVtbl[21]))(handle, (D3D12InfoQueueFilter*)ppFilter, pFilterByteLength);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetRetrievalFilter(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] D3D12InfoQueueFilter* pFilter, [NativeName(NativeNameType.Param, "pFilterByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] ref nuint pFilterByteLength) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			fixed (nuint* ppFilterByteLength = &pFilterByteLength)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12InfoQueueFilter*, nuint*, int>)(handle->LpVtbl[21]))(handle, pFilter, (nuint*)ppFilterByteLength);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetRetrievalFilter(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] ref D3D12InfoQueueFilter pFilter, [NativeName(NativeNameType.Param, "pFilterByteLength")] [NativeName(NativeNameType.Type, "SIZE_T*")] ref nuint pFilterByteLength) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			fixed (D3D12InfoQueueFilter* ppFilter = &pFilter)
			{
				fixed (nuint* ppFilterByteLength = &pFilterByteLength)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12InfoQueueFilter*, nuint*, int>)(handle->LpVtbl[21]))(handle, (D3D12InfoQueueFilter*)ppFilter, (nuint*)ppFilterByteLength);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ClearRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void ClearRetrievalFilter(this ComPtr<ID3D12InfoQueue1> comObj) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, void>)(handle->LpVtbl[22]))(handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "PushEmptyRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int PushEmptyRetrievalFilter(this ComPtr<ID3D12InfoQueue1> comObj) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, int>)(handle->LpVtbl[23]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "PushCopyOfRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int PushCopyOfRetrievalFilter(this ComPtr<ID3D12InfoQueue1> comObj) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, int>)(handle->LpVtbl[24]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "PushRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int PushRetrievalFilter(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] D3D12InfoQueueFilter* pFilter) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12InfoQueueFilter*, int>)(handle->LpVtbl[25]))(handle, pFilter);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "PushRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int PushRetrievalFilter(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "pFilter")] [NativeName(NativeNameType.Type, "D3D12_INFO_QUEUE_FILTER*")] ref D3D12InfoQueueFilter pFilter) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			fixed (D3D12InfoQueueFilter* ppFilter = &pFilter)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12InfoQueueFilter*, int>)(handle->LpVtbl[25]))(handle, (D3D12InfoQueueFilter*)ppFilter);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "PopRetrievalFilter")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void PopRetrievalFilter(this ComPtr<ID3D12InfoQueue1> comObj) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, void>)(handle->LpVtbl[26]))(handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetRetrievalFilterStackSize")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public static uint GetRetrievalFilterStackSize(this ComPtr<ID3D12InfoQueue1> comObj) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, uint>)(handle->LpVtbl[27]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddMessage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int AddMessage(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "Category")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_CATEGORY")] D3D12MessageCategory category, [NativeName(NativeNameType.Param, "Severity")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_SEVERITY")] D3D12MessageSeverity severity, [NativeName(NativeNameType.Param, "ID")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_ID")] D3D12MessageId id, [NativeName(NativeNameType.Param, "pDescription")] [NativeName(NativeNameType.Type, "LPCSTR")] byte* pDescription) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12MessageCategory, D3D12MessageSeverity, D3D12MessageId, byte*, int>)(handle->LpVtbl[28]))(handle, category, severity, id, pDescription);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddMessage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int AddMessage(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "Category")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_CATEGORY")] D3D12MessageCategory category, [NativeName(NativeNameType.Param, "Severity")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_SEVERITY")] D3D12MessageSeverity severity, [NativeName(NativeNameType.Param, "ID")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_ID")] D3D12MessageId id, [NativeName(NativeNameType.Param, "pDescription")] [NativeName(NativeNameType.Type, "LPCSTR")] ReadOnlySpan<byte> pDescription) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			fixed (byte* ppDescription = pDescription)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12MessageCategory, D3D12MessageSeverity, D3D12MessageId, byte*, int>)(handle->LpVtbl[28]))(handle, category, severity, id, (byte*)ppDescription);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddMessage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int AddMessage(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "Category")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_CATEGORY")] D3D12MessageCategory category, [NativeName(NativeNameType.Param, "Severity")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_SEVERITY")] D3D12MessageSeverity severity, [NativeName(NativeNameType.Param, "ID")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_ID")] D3D12MessageId id, [NativeName(NativeNameType.Param, "pDescription")] [NativeName(NativeNameType.Type, "LPCSTR")] string pDescription) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (pDescription != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(pDescription);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(pDescription, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12MessageCategory, D3D12MessageSeverity, D3D12MessageId, byte*, int>)(handle->LpVtbl[28]))(handle, category, severity, id, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddApplicationMessage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int AddApplicationMessage(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "Severity")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_SEVERITY")] D3D12MessageSeverity severity, [NativeName(NativeNameType.Param, "pDescription")] [NativeName(NativeNameType.Type, "LPCSTR")] byte* pDescription) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12MessageSeverity, byte*, int>)(handle->LpVtbl[29]))(handle, severity, pDescription);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddApplicationMessage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int AddApplicationMessage(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "Severity")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_SEVERITY")] D3D12MessageSeverity severity, [NativeName(NativeNameType.Param, "pDescription")] [NativeName(NativeNameType.Type, "LPCSTR")] ReadOnlySpan<byte> pDescription) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			fixed (byte* ppDescription = pDescription)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12MessageSeverity, byte*, int>)(handle->LpVtbl[29]))(handle, severity, (byte*)ppDescription);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddApplicationMessage")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int AddApplicationMessage(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "Severity")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_SEVERITY")] D3D12MessageSeverity severity, [NativeName(NativeNameType.Param, "pDescription")] [NativeName(NativeNameType.Type, "LPCSTR")] string pDescription) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (pDescription != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(pDescription);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(pDescription, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12MessageSeverity, byte*, int>)(handle->LpVtbl[29]))(handle, severity, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetBreakOnCategory")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetBreakOnCategory(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "Category")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_CATEGORY")] D3D12MessageCategory category, [NativeName(NativeNameType.Param, "bEnable")] [NativeName(NativeNameType.Type, "BOOL")] int bEnable) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12MessageCategory, int, int>)(handle->LpVtbl[30]))(handle, category, bEnable);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetBreakOnSeverity")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetBreakOnSeverity(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "Severity")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_SEVERITY")] D3D12MessageSeverity severity, [NativeName(NativeNameType.Param, "bEnable")] [NativeName(NativeNameType.Type, "BOOL")] int bEnable) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12MessageSeverity, int, int>)(handle->LpVtbl[31]))(handle, severity, bEnable);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetBreakOnID")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetBreakOnID(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "ID")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_ID")] D3D12MessageId id, [NativeName(NativeNameType.Param, "bEnable")] [NativeName(NativeNameType.Type, "BOOL")] int bEnable) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12MessageId, int, int>)(handle->LpVtbl[32]))(handle, id, bEnable);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetBreakOnCategory")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public static int GetBreakOnCategory(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "Category")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_CATEGORY")] D3D12MessageCategory category) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12MessageCategory, int>)(handle->LpVtbl[33]))(handle, category);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetBreakOnSeverity")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public static int GetBreakOnSeverity(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "Severity")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_SEVERITY")] D3D12MessageSeverity severity) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12MessageSeverity, int>)(handle->LpVtbl[34]))(handle, severity);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetBreakOnID")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public static int GetBreakOnID(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "ID")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_ID")] D3D12MessageId id) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12MessageId, int>)(handle->LpVtbl[35]))(handle, id);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetMuteDebugOutput")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void SetMuteDebugOutput(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "bMute")] [NativeName(NativeNameType.Type, "BOOL")] int bMute) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, int, void>)(handle->LpVtbl[36]))(handle, bMute);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetMuteDebugOutput")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public static int GetMuteDebugOutput(this ComPtr<ID3D12InfoQueue1> comObj) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, int>)(handle->LpVtbl[37]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RegisterMessageCallback")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RegisterMessageCallback(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "CallbackFunc")] [NativeName(NativeNameType.Type, "D3D12MessageFunc")] D3D12MessageFunc callbackFunc, [NativeName(NativeNameType.Param, "CallbackFilterFlags")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_CALLBACK_FLAGS")] D3D12MessageCallbackFlags callbackFilterFlags, [NativeName(NativeNameType.Param, "pContext")] [NativeName(NativeNameType.Type, "void*")] void* pContext, [NativeName(NativeNameType.Param, "pCallbackCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pCallbackCookie) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12MessageFunc, D3D12MessageCallbackFlags, void*, uint*, int>)(handle->LpVtbl[38]))(handle, callbackFunc, callbackFilterFlags, pContext, pCallbackCookie);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RegisterMessageCallback")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RegisterMessageCallback<T>(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "CallbackFunc")] [NativeName(NativeNameType.Type, "D3D12MessageFunc")] D3D12MessageFunc callbackFunc, [NativeName(NativeNameType.Param, "CallbackFilterFlags")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_CALLBACK_FLAGS")] D3D12MessageCallbackFlags callbackFilterFlags, [NativeName(NativeNameType.Param, "pContext")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pContext, [NativeName(NativeNameType.Param, "pCallbackCookie")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pCallbackCookie) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12MessageFunc, D3D12MessageCallbackFlags, void*, uint*, int>)(handle->LpVtbl[38]))(handle, callbackFunc, callbackFilterFlags, (void*)pContext.Handle, pCallbackCookie);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RegisterMessageCallback")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RegisterMessageCallback(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "CallbackFunc")] [NativeName(NativeNameType.Type, "D3D12MessageFunc")] D3D12MessageFunc callbackFunc, [NativeName(NativeNameType.Param, "CallbackFilterFlags")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_CALLBACK_FLAGS")] D3D12MessageCallbackFlags callbackFilterFlags, [NativeName(NativeNameType.Param, "pContext")] [NativeName(NativeNameType.Type, "void*")] void* pContext, [NativeName(NativeNameType.Param, "pCallbackCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pCallbackCookie) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			fixed (uint* ppCallbackCookie = &pCallbackCookie)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12MessageFunc, D3D12MessageCallbackFlags, void*, uint*, int>)(handle->LpVtbl[38]))(handle, callbackFunc, callbackFilterFlags, pContext, (uint*)ppCallbackCookie);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RegisterMessageCallback")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RegisterMessageCallback<T>(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "CallbackFunc")] [NativeName(NativeNameType.Type, "D3D12MessageFunc")] D3D12MessageFunc callbackFunc, [NativeName(NativeNameType.Param, "CallbackFilterFlags")] [NativeName(NativeNameType.Type, "D3D12_MESSAGE_CALLBACK_FLAGS")] D3D12MessageCallbackFlags callbackFilterFlags, [NativeName(NativeNameType.Param, "pContext")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pContext, [NativeName(NativeNameType.Param, "pCallbackCookie")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pCallbackCookie) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			fixed (uint* ppCallbackCookie = &pCallbackCookie)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, D3D12MessageFunc, D3D12MessageCallbackFlags, void*, uint*, int>)(handle->LpVtbl[38]))(handle, callbackFunc, callbackFilterFlags, (void*)pContext.Handle, (uint*)ppCallbackCookie);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UnregisterMessageCallback")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int UnregisterMessageCallback(this ComPtr<ID3D12InfoQueue1> comObj, [NativeName(NativeNameType.Param, "CallbackCookie")] [NativeName(NativeNameType.Type, "DWORD")] uint callbackCookie) 
		{
			ID3D12InfoQueue1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12InfoQueue1*, uint, int>)(handle->LpVtbl[39]))(handle, callbackCookie);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<ID3D12CompatibilityDevice> comObj) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<ID3D12CompatibilityDevice> comObj) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, pLifetimeTracker, pOwningSwapchain, riid, ppResource);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, pLifetimeTracker, pOwningSwapchain, riid, ppResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ResourceDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, pLifetimeTracker, pOwningSwapchain, riid, ppResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ResourceDesc* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, pLifetimeTracker, pOwningSwapchain, riid, ppResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, pDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, pLifetimeTracker, pOwningSwapchain, riid, ppResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, pLifetimeTracker, pOwningSwapchain, riid, ppResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ResourceDesc* ppDesc = &pDesc)
			{
				fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, pLifetimeTracker, pOwningSwapchain, riid, ppResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ResourceDesc* ppDesc = &pDesc)
				{
					fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, pLifetimeTracker, pOwningSwapchain, riid, ppResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, pLifetimeTracker, pOwningSwapchain, riid, ppResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, pLifetimeTracker, pOwningSwapchain, riid, ppResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ResourceDesc* ppDesc = &pDesc)
			{
				fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, pLifetimeTracker, pOwningSwapchain, riid, ppResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ResourceDesc* ppDesc = &pDesc)
				{
					fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, pLifetimeTracker, pOwningSwapchain, riid, ppResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, pDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, pLifetimeTracker, pOwningSwapchain, riid, ppResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, pLifetimeTracker, pOwningSwapchain, riid, ppResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ResourceDesc* ppDesc = &pDesc)
			{
				fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, pLifetimeTracker, pOwningSwapchain, riid, ppResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ResourceDesc* ppDesc = &pDesc)
				{
					fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, pLifetimeTracker, pOwningSwapchain, riid, ppResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ref ID3D12LifetimeTracker pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (ID3D12LifetimeTracker* ppLifetimeTracker = &pLifetimeTracker)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)ppLifetimeTracker, pOwningSwapchain, riid, ppResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, pOwningSwapchain, riid, ppResource);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ref ID3D12LifetimeTracker pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ID3D12LifetimeTracker* ppLifetimeTracker = &pLifetimeTracker)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)ppLifetimeTracker, pOwningSwapchain, riid, ppResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, pOwningSwapchain, riid, ppResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ref ID3D12LifetimeTracker pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ID3D12LifetimeTracker* ppLifetimeTracker = &pLifetimeTracker)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)ppLifetimeTracker, pOwningSwapchain, riid, ppResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ResourceDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, pOwningSwapchain, riid, ppResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ref ID3D12LifetimeTracker pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ResourceDesc* ppDesc = &pDesc)
				{
					fixed (ID3D12LifetimeTracker* ppLifetimeTracker = &pLifetimeTracker)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)ppLifetimeTracker, pOwningSwapchain, riid, ppResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ResourceDesc* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, pOwningSwapchain, riid, ppResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ref ID3D12LifetimeTracker pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (ID3D12LifetimeTracker* ppLifetimeTracker = &pLifetimeTracker)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, pDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)ppLifetimeTracker, pOwningSwapchain, riid, ppResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, pDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, pOwningSwapchain, riid, ppResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ref ID3D12LifetimeTracker pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (ID3D12LifetimeTracker* ppLifetimeTracker = &pLifetimeTracker)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)ppLifetimeTracker, pOwningSwapchain, riid, ppResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, pOwningSwapchain, riid, ppResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ref ID3D12LifetimeTracker pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ResourceDesc* ppDesc = &pDesc)
			{
				fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (ID3D12LifetimeTracker* ppLifetimeTracker = &pLifetimeTracker)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)ppLifetimeTracker, pOwningSwapchain, riid, ppResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ResourceDesc* ppDesc = &pDesc)
			{
				fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, pOwningSwapchain, riid, ppResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ref ID3D12LifetimeTracker pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ResourceDesc* ppDesc = &pDesc)
				{
					fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						fixed (ID3D12LifetimeTracker* ppLifetimeTracker = &pLifetimeTracker)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)ppLifetimeTracker, pOwningSwapchain, riid, ppResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ResourceDesc* ppDesc = &pDesc)
				{
					fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, pOwningSwapchain, riid, ppResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ref ID3D12LifetimeTracker pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
			{
				fixed (ID3D12LifetimeTracker* ppLifetimeTracker = &pLifetimeTracker)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)ppLifetimeTracker, pOwningSwapchain, riid, ppResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, pOwningSwapchain, riid, ppResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ref ID3D12LifetimeTracker pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
				{
					fixed (ID3D12LifetimeTracker* ppLifetimeTracker = &pLifetimeTracker)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)ppLifetimeTracker, pOwningSwapchain, riid, ppResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, pOwningSwapchain, riid, ppResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ref ID3D12LifetimeTracker pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ResourceDesc* ppDesc = &pDesc)
			{
				fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
				{
					fixed (ID3D12LifetimeTracker* ppLifetimeTracker = &pLifetimeTracker)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)ppLifetimeTracker, pOwningSwapchain, riid, ppResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ResourceDesc* ppDesc = &pDesc)
			{
				fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, pOwningSwapchain, riid, ppResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ref ID3D12LifetimeTracker pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ResourceDesc* ppDesc = &pDesc)
				{
					fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
					{
						fixed (ID3D12LifetimeTracker* ppLifetimeTracker = &pLifetimeTracker)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)ppLifetimeTracker, pOwningSwapchain, riid, ppResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ResourceDesc* ppDesc = &pDesc)
				{
					fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, pOwningSwapchain, riid, ppResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ref ID3D12LifetimeTracker pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
				{
					fixed (ID3D12LifetimeTracker* ppLifetimeTracker = &pLifetimeTracker)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, pDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)ppLifetimeTracker, pOwningSwapchain, riid, ppResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, pDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, pOwningSwapchain, riid, ppResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ref ID3D12LifetimeTracker pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
					{
						fixed (ID3D12LifetimeTracker* ppLifetimeTracker = &pLifetimeTracker)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)ppLifetimeTracker, pOwningSwapchain, riid, ppResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, pOwningSwapchain, riid, ppResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ref ID3D12LifetimeTracker pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ResourceDesc* ppDesc = &pDesc)
			{
				fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
					{
						fixed (ID3D12LifetimeTracker* ppLifetimeTracker = &pLifetimeTracker)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)ppLifetimeTracker, pOwningSwapchain, riid, ppResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ResourceDesc* ppDesc = &pDesc)
			{
				fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, pOwningSwapchain, riid, ppResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ref ID3D12LifetimeTracker pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ResourceDesc* ppDesc = &pDesc)
				{
					fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
						{
							fixed (ID3D12LifetimeTracker* ppLifetimeTracker = &pLifetimeTracker)
							{
								int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)ppLifetimeTracker, pOwningSwapchain, riid, ppResource);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ID3D12SwapChainAssistant* pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ResourceDesc* ppDesc = &pDesc)
				{
					fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, pOwningSwapchain, riid, ppResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ref ID3D12SwapChainAssistant pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (ID3D12SwapChainAssistant* ppOwningSwapchain = &pOwningSwapchain)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)ppOwningSwapchain, riid, ppResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, riid, ppResource);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ref ID3D12SwapChainAssistant pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ID3D12SwapChainAssistant* ppOwningSwapchain = &pOwningSwapchain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)ppOwningSwapchain, riid, ppResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, riid, ppResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ref ID3D12SwapChainAssistant pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ID3D12SwapChainAssistant* ppOwningSwapchain = &pOwningSwapchain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)ppOwningSwapchain, riid, ppResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ResourceDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, riid, ppResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ref ID3D12SwapChainAssistant pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ResourceDesc* ppDesc = &pDesc)
				{
					fixed (ID3D12SwapChainAssistant* ppOwningSwapchain = &pOwningSwapchain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)ppOwningSwapchain, riid, ppResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ResourceDesc* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, riid, ppResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ref ID3D12SwapChainAssistant pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (ID3D12SwapChainAssistant* ppOwningSwapchain = &pOwningSwapchain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, pDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)ppOwningSwapchain, riid, ppResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, pDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, riid, ppResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ref ID3D12SwapChainAssistant pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (ID3D12SwapChainAssistant* ppOwningSwapchain = &pOwningSwapchain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)ppOwningSwapchain, riid, ppResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, riid, ppResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ref ID3D12SwapChainAssistant pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ResourceDesc* ppDesc = &pDesc)
			{
				fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (ID3D12SwapChainAssistant* ppOwningSwapchain = &pOwningSwapchain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)ppOwningSwapchain, riid, ppResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ResourceDesc* ppDesc = &pDesc)
			{
				fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, riid, ppResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ref ID3D12SwapChainAssistant pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ResourceDesc* ppDesc = &pDesc)
				{
					fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						fixed (ID3D12SwapChainAssistant* ppOwningSwapchain = &pOwningSwapchain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)ppOwningSwapchain, riid, ppResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ResourceDesc* ppDesc = &pDesc)
				{
					fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, riid, ppResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ref ID3D12SwapChainAssistant pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
			{
				fixed (ID3D12SwapChainAssistant* ppOwningSwapchain = &pOwningSwapchain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)ppOwningSwapchain, riid, ppResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, riid, ppResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ref ID3D12SwapChainAssistant pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
				{
					fixed (ID3D12SwapChainAssistant* ppOwningSwapchain = &pOwningSwapchain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)ppOwningSwapchain, riid, ppResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, riid, ppResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ref ID3D12SwapChainAssistant pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ResourceDesc* ppDesc = &pDesc)
			{
				fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
				{
					fixed (ID3D12SwapChainAssistant* ppOwningSwapchain = &pOwningSwapchain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)ppOwningSwapchain, riid, ppResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ResourceDesc* ppDesc = &pDesc)
			{
				fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, riid, ppResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ref ID3D12SwapChainAssistant pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ResourceDesc* ppDesc = &pDesc)
				{
					fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
					{
						fixed (ID3D12SwapChainAssistant* ppOwningSwapchain = &pOwningSwapchain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)ppOwningSwapchain, riid, ppResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ResourceDesc* ppDesc = &pDesc)
				{
					fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, riid, ppResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ref ID3D12SwapChainAssistant pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
				{
					fixed (ID3D12SwapChainAssistant* ppOwningSwapchain = &pOwningSwapchain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, pDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)ppOwningSwapchain, riid, ppResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, pDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, riid, ppResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ref ID3D12SwapChainAssistant pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
					{
						fixed (ID3D12SwapChainAssistant* ppOwningSwapchain = &pOwningSwapchain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)ppOwningSwapchain, riid, ppResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, riid, ppResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ref ID3D12SwapChainAssistant pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ResourceDesc* ppDesc = &pDesc)
			{
				fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
					{
						fixed (ID3D12SwapChainAssistant* ppOwningSwapchain = &pOwningSwapchain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)ppOwningSwapchain, riid, ppResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ResourceDesc* ppDesc = &pDesc)
			{
				fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, riid, ppResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ref ID3D12SwapChainAssistant pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ResourceDesc* ppDesc = &pDesc)
				{
					fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
						{
							fixed (ID3D12SwapChainAssistant* ppOwningSwapchain = &pOwningSwapchain)
							{
								int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)ppOwningSwapchain, riid, ppResource);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ResourceDesc* ppDesc = &pDesc)
				{
					fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, riid, ppResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ref ID3D12LifetimeTracker pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ref ID3D12SwapChainAssistant pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (ID3D12LifetimeTracker* ppLifetimeTracker = &pLifetimeTracker)
			{
				fixed (ID3D12SwapChainAssistant* ppOwningSwapchain = &pOwningSwapchain)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)ppLifetimeTracker, (ID3D12SwapChainAssistant*)ppOwningSwapchain, riid, ppResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, riid, ppResource);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ref ID3D12LifetimeTracker pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ref ID3D12SwapChainAssistant pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ID3D12LifetimeTracker* ppLifetimeTracker = &pLifetimeTracker)
				{
					fixed (ID3D12SwapChainAssistant* ppOwningSwapchain = &pOwningSwapchain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)ppLifetimeTracker, (ID3D12SwapChainAssistant*)ppOwningSwapchain, riid, ppResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, riid, ppResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ref ID3D12LifetimeTracker pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ref ID3D12SwapChainAssistant pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ID3D12LifetimeTracker* ppLifetimeTracker = &pLifetimeTracker)
				{
					fixed (ID3D12SwapChainAssistant* ppOwningSwapchain = &pOwningSwapchain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)ppLifetimeTracker, (ID3D12SwapChainAssistant*)ppOwningSwapchain, riid, ppResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ResourceDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, riid, ppResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ref ID3D12LifetimeTracker pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ref ID3D12SwapChainAssistant pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ResourceDesc* ppDesc = &pDesc)
				{
					fixed (ID3D12LifetimeTracker* ppLifetimeTracker = &pLifetimeTracker)
					{
						fixed (ID3D12SwapChainAssistant* ppOwningSwapchain = &pOwningSwapchain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)ppLifetimeTracker, (ID3D12SwapChainAssistant*)ppOwningSwapchain, riid, ppResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ResourceDesc* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, riid, ppResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ref ID3D12LifetimeTracker pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ref ID3D12SwapChainAssistant pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (ID3D12LifetimeTracker* ppLifetimeTracker = &pLifetimeTracker)
				{
					fixed (ID3D12SwapChainAssistant* ppOwningSwapchain = &pOwningSwapchain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, pDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)ppLifetimeTracker, (ID3D12SwapChainAssistant*)ppOwningSwapchain, riid, ppResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, pDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, riid, ppResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ref ID3D12LifetimeTracker pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ref ID3D12SwapChainAssistant pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (ID3D12LifetimeTracker* ppLifetimeTracker = &pLifetimeTracker)
					{
						fixed (ID3D12SwapChainAssistant* ppOwningSwapchain = &pOwningSwapchain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)ppLifetimeTracker, (ID3D12SwapChainAssistant*)ppOwningSwapchain, riid, ppResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, riid, ppResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ref ID3D12LifetimeTracker pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ref ID3D12SwapChainAssistant pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ResourceDesc* ppDesc = &pDesc)
			{
				fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (ID3D12LifetimeTracker* ppLifetimeTracker = &pLifetimeTracker)
					{
						fixed (ID3D12SwapChainAssistant* ppOwningSwapchain = &pOwningSwapchain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)ppLifetimeTracker, (ID3D12SwapChainAssistant*)ppOwningSwapchain, riid, ppResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ResourceDesc* ppDesc = &pDesc)
			{
				fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, riid, ppResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ref ID3D12LifetimeTracker pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ref ID3D12SwapChainAssistant pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ResourceDesc* ppDesc = &pDesc)
				{
					fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						fixed (ID3D12LifetimeTracker* ppLifetimeTracker = &pLifetimeTracker)
						{
							fixed (ID3D12SwapChainAssistant* ppOwningSwapchain = &pOwningSwapchain)
							{
								int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)ppLifetimeTracker, (ID3D12SwapChainAssistant*)ppOwningSwapchain, riid, ppResource);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ResourceDesc* ppDesc = &pDesc)
				{
					fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, riid, ppResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ref ID3D12LifetimeTracker pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ref ID3D12SwapChainAssistant pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
			{
				fixed (ID3D12LifetimeTracker* ppLifetimeTracker = &pLifetimeTracker)
				{
					fixed (ID3D12SwapChainAssistant* ppOwningSwapchain = &pOwningSwapchain)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)ppLifetimeTracker, (ID3D12SwapChainAssistant*)ppOwningSwapchain, riid, ppResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, riid, ppResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ref ID3D12LifetimeTracker pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ref ID3D12SwapChainAssistant pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
				{
					fixed (ID3D12LifetimeTracker* ppLifetimeTracker = &pLifetimeTracker)
					{
						fixed (ID3D12SwapChainAssistant* ppOwningSwapchain = &pOwningSwapchain)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)ppLifetimeTracker, (ID3D12SwapChainAssistant*)ppOwningSwapchain, riid, ppResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] void** ppResource) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, riid, ppResource);
					return ret;
				}
			}
		}
	}
}
