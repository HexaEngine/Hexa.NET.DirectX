// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D12
{
	public static unsafe partial class Extensions
	{

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource<T>(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
					{
						fixed (Guid* priid = &riid)
						{
							ppResource = default;
							int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, (Guid*)priid, (void**)ppResource.GetAddressOf());
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource<T>(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ResourceDesc* ppDesc = &pDesc)
			{
				fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
					{
						fixed (Guid* priid = &riid)
						{
							ppResource = default;
							int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, (Guid*)priid, (void**)ppResource.GetAddressOf());
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource<T>(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ID3D12LifetimeTracker* pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ResourceDesc* ppDesc = &pDesc)
				{
					fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
						{
							fixed (Guid* priid = &riid)
							{
								ppResource = default;
								int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, pLifetimeTracker, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, (Guid*)priid, (void**)ppResource.GetAddressOf());
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource<T>(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppResource = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, (Guid*)priid, (void**)ppResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource<T>(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (Guid* priid = &riid)
				{
					ppResource = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, (Guid*)priid, (void**)ppResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource<T>(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ResourceDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppResource = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, (Guid*)priid, (void**)ppResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource<T>(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ResourceDesc* ppDesc = &pDesc)
				{
					fixed (Guid* priid = &riid)
					{
						ppResource = default;
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, (Guid*)priid, (void**)ppResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource<T>(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (Guid* priid = &riid)
				{
					ppResource = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, pDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, (Guid*)priid, (void**)ppResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource<T>(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priid = &riid)
					{
						ppResource = default;
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, (Guid*)priid, (void**)ppResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource<T>(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ResourceDesc* ppDesc = &pDesc)
			{
				fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priid = &riid)
					{
						ppResource = default;
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, (Guid*)priid, (void**)ppResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource<T>(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] D3D11ResourceFlags* pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ResourceDesc* ppDesc = &pDesc)
				{
					fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						fixed (Guid* priid = &riid)
						{
							ppResource = default;
							int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, pFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, (Guid*)priid, (void**)ppResource.GetAddressOf());
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource<T>(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
			{
				fixed (Guid* priid = &riid)
				{
					ppResource = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, (Guid*)priid, (void**)ppResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource<T>(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
				{
					fixed (Guid* priid = &riid)
					{
						ppResource = default;
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, (Guid*)priid, (void**)ppResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource<T>(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ResourceDesc* ppDesc = &pDesc)
			{
				fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
				{
					fixed (Guid* priid = &riid)
					{
						ppResource = default;
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, (Guid*)priid, (void**)ppResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource<T>(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] D3D12ClearValue* pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ResourceDesc* ppDesc = &pDesc)
				{
					fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
					{
						fixed (Guid* priid = &riid)
						{
							ppResource = default;
							int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, (Guid*)priid, (void**)ppResource.GetAddressOf());
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource<T>(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
				{
					fixed (Guid* priid = &riid)
					{
						ppResource = default;
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, pDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, (Guid*)priid, (void**)ppResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource<T>(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] D3D12ResourceDesc* pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
					{
						fixed (Guid* priid = &riid)
						{
							ppResource = default;
							int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, (Guid*)priid, (void**)ppResource.GetAddressOf());
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource<T>(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] D3D12HeapProperties* pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12ResourceDesc* ppDesc = &pDesc)
			{
				fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
					{
						fixed (Guid* priid = &riid)
						{
							ppResource = default;
							int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, (Guid*)priid, (void**)ppResource.GetAddressOf());
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedResource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedResource<T>(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapProperties")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_PROPERTIES*")] ref D3D12HeapProperties pHeapProperties, [NativeName(NativeNameType.Param, "HeapFlags")] [NativeName(NativeNameType.Type, "D3D12_HEAP_FLAGS")] D3D12HeapFlags heapFlags, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_DESC*")] ref D3D12ResourceDesc pDesc, [NativeName(NativeNameType.Param, "InitialResourceState")] [NativeName(NativeNameType.Type, "D3D12_RESOURCE_STATES")] D3D12ResourceStates initialResourceState, [NativeName(NativeNameType.Param, "pOptimizedClearValue")] [NativeName(NativeNameType.Type, "const D3D12_CLEAR_VALUE*")] ref D3D12ClearValue pOptimizedClearValue, [NativeName(NativeNameType.Param, "pFlags11")] [NativeName(NativeNameType.Type, "const D3D11_RESOURCE_FLAGS*")] ref D3D11ResourceFlags pFlags11, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "pLifetimeTracker")] [NativeName(NativeNameType.Type, "ID3D12LifetimeTracker*")] ComPtr<ID3D12LifetimeTracker> pLifetimeTracker, [NativeName(NativeNameType.Param, "pOwningSwapchain")] [NativeName(NativeNameType.Type, "ID3D12SwapChainAssistant*")] ComPtr<ID3D12SwapChainAssistant> pOwningSwapchain, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResource")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (D3D12ResourceDesc* ppDesc = &pDesc)
				{
					fixed (D3D12ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						fixed (D3D11ResourceFlags* ppFlags11 = &pFlags11)
						{
							fixed (Guid* priid = &riid)
							{
								ppResource = default;
								int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapProperties*, D3D12HeapFlags, D3D12ResourceDesc*, D3D12ResourceStates, D3D12ClearValue*, D3D11ResourceFlags*, D3D12CompatibilitySharedFlags, ID3D12LifetimeTracker*, ID3D12SwapChainAssistant*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (D3D12HeapProperties*)ppHeapProperties, heapFlags, (D3D12ResourceDesc*)ppDesc, initialResourceState, (D3D12ClearValue*)ppOptimizedClearValue, (D3D11ResourceFlags*)ppFlags11, compatibilityFlags, (ID3D12LifetimeTracker*)pLifetimeTracker.Handle, (ID3D12SwapChainAssistant*)pOwningSwapchain.Handle, (Guid*)priid, (void**)ppResource.GetAddressOf());
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedHeap")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedHeap(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapDesc")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_DESC*")] D3D12HeapDesc* pHeapDesc, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppHeap")] [NativeName(NativeNameType.Type, "void**")] void** ppHeap) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapDesc*, D3D12CompatibilitySharedFlags, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, pHeapDesc, compatibilityFlags, riid, ppHeap);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedHeap")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedHeap(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapDesc")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_DESC*")] ref D3D12HeapDesc pHeapDesc, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppHeap")] [NativeName(NativeNameType.Type, "void**")] void** ppHeap) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapDesc* ppHeapDesc = &pHeapDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapDesc*, D3D12CompatibilitySharedFlags, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, (D3D12HeapDesc*)ppHeapDesc, compatibilityFlags, riid, ppHeap);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedHeap")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedHeap(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapDesc")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_DESC*")] D3D12HeapDesc* pHeapDesc, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppHeap")] [NativeName(NativeNameType.Type, "void**")] void** ppHeap) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapDesc*, D3D12CompatibilitySharedFlags, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, pHeapDesc, compatibilityFlags, (Guid*)priid, ppHeap);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedHeap")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedHeap(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapDesc")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_DESC*")] ref D3D12HeapDesc pHeapDesc, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppHeap")] [NativeName(NativeNameType.Type, "void**")] void** ppHeap) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapDesc* ppHeapDesc = &pHeapDesc)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapDesc*, D3D12CompatibilitySharedFlags, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, (D3D12HeapDesc*)ppHeapDesc, compatibilityFlags, (Guid*)priid, ppHeap);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedHeap")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedHeap<T>(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapDesc")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_DESC*")] D3D12HeapDesc* pHeapDesc, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "ppHeap")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			ppHeap = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapDesc*, D3D12CompatibilitySharedFlags, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, pHeapDesc, compatibilityFlags, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppHeap.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedHeap")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedHeap<T>(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapDesc")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_DESC*")] ref D3D12HeapDesc pHeapDesc, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "ppHeap")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapDesc* ppHeapDesc = &pHeapDesc)
			{
				ppHeap = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapDesc*, D3D12CompatibilitySharedFlags, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, (D3D12HeapDesc*)ppHeapDesc, compatibilityFlags, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppHeap.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedHeap")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedHeap<T>(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapDesc")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_DESC*")] D3D12HeapDesc* pHeapDesc, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppHeap")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppHeap = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapDesc*, D3D12CompatibilitySharedFlags, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, pHeapDesc, compatibilityFlags, (Guid*)priid, (void**)ppHeap.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateSharedHeap")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateSharedHeap<T>(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapDesc")] [NativeName(NativeNameType.Type, "const D3D12_HEAP_DESC*")] ref D3D12HeapDesc pHeapDesc, [NativeName(NativeNameType.Param, "CompatibilityFlags")] [NativeName(NativeNameType.Type, "D3D12_COMPATIBILITY_SHARED_FLAGS")] D3D12CompatibilitySharedFlags compatibilityFlags, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppHeap")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (D3D12HeapDesc* ppHeapDesc = &pHeapDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppHeap = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, D3D12HeapDesc*, D3D12CompatibilitySharedFlags, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, (D3D12HeapDesc*)ppHeapDesc, compatibilityFlags, (Guid*)priid, (void**)ppHeap.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ReflectSharedProperties")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int ReflectSharedProperties(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapOrResource")] [NativeName(NativeNameType.Type, "ID3D12Object*")] ID3D12Object* pHeapOrResource, [NativeName(NativeNameType.Param, "ReflectType")] [NativeName(NativeNameType.Type, "D3D12_REFLECT_SHARED_PROPERTY")] D3D12ReflectSharedProperty reflectType, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, ID3D12Object*, D3D12ReflectSharedProperty, void*, uint, int>)(handle->LpVtbl[5]))(handle, pHeapOrResource, reflectType, pData, dataSize);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ReflectSharedProperties")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int ReflectSharedProperties(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapOrResource")] [NativeName(NativeNameType.Type, "ID3D12Object*")] ref ID3D12Object pHeapOrResource, [NativeName(NativeNameType.Param, "ReflectType")] [NativeName(NativeNameType.Type, "D3D12_REFLECT_SHARED_PROPERTY")] D3D12ReflectSharedProperty reflectType, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			fixed (ID3D12Object* ppHeapOrResource = &pHeapOrResource)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, ID3D12Object*, D3D12ReflectSharedProperty, void*, uint, int>)(handle->LpVtbl[5]))(handle, (ID3D12Object*)ppHeapOrResource, reflectType, pData, dataSize);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ReflectSharedProperties")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int ReflectSharedProperties(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapOrResource")] [NativeName(NativeNameType.Type, "ID3D12Object*")] ComPtr<ID3D12Object> pHeapOrResource, [NativeName(NativeNameType.Param, "ReflectType")] [NativeName(NativeNameType.Type, "D3D12_REFLECT_SHARED_PROPERTY")] D3D12ReflectSharedProperty reflectType, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize) 
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, ID3D12Object*, D3D12ReflectSharedProperty, void*, uint, int>)(handle->LpVtbl[5]))(handle, (ID3D12Object*)pHeapOrResource.Handle, reflectType, pData, dataSize);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ReflectSharedProperties")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int ReflectSharedProperties<T>(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapOrResource")] [NativeName(NativeNameType.Type, "ID3D12Object*")] ID3D12Object* pHeapOrResource, [NativeName(NativeNameType.Param, "ReflectType")] [NativeName(NativeNameType.Type, "D3D12_REFLECT_SHARED_PROPERTY")] D3D12ReflectSharedProperty reflectType, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, ID3D12Object*, D3D12ReflectSharedProperty, void*, uint, int>)(handle->LpVtbl[5]))(handle, pHeapOrResource, reflectType, (void*)pData.Handle, dataSize);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ReflectSharedProperties")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int ReflectSharedProperties<T>(this ComPtr<ID3D12CompatibilityDevice> comObj, [NativeName(NativeNameType.Param, "pHeapOrResource")] [NativeName(NativeNameType.Type, "ID3D12Object*")] ComPtr<ID3D12Object> pHeapOrResource, [NativeName(NativeNameType.Param, "ReflectType")] [NativeName(NativeNameType.Type, "D3D12_REFLECT_SHARED_PROPERTY")] D3D12ReflectSharedProperty reflectType, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CompatibilityDevice* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12CompatibilityDevice*, ID3D12Object*, D3D12ReflectSharedProperty, void*, uint, int>)(handle->LpVtbl[5]))(handle, (ID3D12Object*)pHeapOrResource.Handle, reflectType, (void*)pData.Handle, dataSize);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<D3D11On12CreatorID> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			D3D11On12CreatorID* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<D3D11On12CreatorID*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<D3D11On12CreatorID> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			D3D11On12CreatorID* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<D3D11On12CreatorID*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<D3D11On12CreatorID> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			D3D11On12CreatorID* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<D3D11On12CreatorID*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<D3D11On12CreatorID> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			D3D11On12CreatorID* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<D3D11On12CreatorID*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<D3D11On12CreatorID> comObj) 
		{
			D3D11On12CreatorID* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<D3D11On12CreatorID*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<D3D11On12CreatorID> comObj) 
		{
			D3D11On12CreatorID* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<D3D11On12CreatorID*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<D3D9On12CreatorID> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			D3D9On12CreatorID* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<D3D9On12CreatorID*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<D3D9On12CreatorID> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			D3D9On12CreatorID* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<D3D9On12CreatorID*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<D3D9On12CreatorID> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			D3D9On12CreatorID* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<D3D9On12CreatorID*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<D3D9On12CreatorID> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			D3D9On12CreatorID* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<D3D9On12CreatorID*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<D3D9On12CreatorID> comObj) 
		{
			D3D9On12CreatorID* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<D3D9On12CreatorID*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<D3D9On12CreatorID> comObj) 
		{
			D3D9On12CreatorID* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<D3D9On12CreatorID*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<OpenGLOn12CreatorID> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			OpenGLOn12CreatorID* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<OpenGLOn12CreatorID*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<OpenGLOn12CreatorID> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			OpenGLOn12CreatorID* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<OpenGLOn12CreatorID*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<OpenGLOn12CreatorID> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			OpenGLOn12CreatorID* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<OpenGLOn12CreatorID*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<OpenGLOn12CreatorID> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			OpenGLOn12CreatorID* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<OpenGLOn12CreatorID*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<OpenGLOn12CreatorID> comObj) 
		{
			OpenGLOn12CreatorID* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<OpenGLOn12CreatorID*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<OpenGLOn12CreatorID> comObj) 
		{
			OpenGLOn12CreatorID* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<OpenGLOn12CreatorID*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<OpenCLOn12CreatorID> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			OpenCLOn12CreatorID* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<OpenCLOn12CreatorID*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<OpenCLOn12CreatorID> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			OpenCLOn12CreatorID* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<OpenCLOn12CreatorID*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<OpenCLOn12CreatorID> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			OpenCLOn12CreatorID* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<OpenCLOn12CreatorID*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<OpenCLOn12CreatorID> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			OpenCLOn12CreatorID* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<OpenCLOn12CreatorID*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<OpenCLOn12CreatorID> comObj) 
		{
			OpenCLOn12CreatorID* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<OpenCLOn12CreatorID*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<OpenCLOn12CreatorID> comObj) 
		{
			OpenCLOn12CreatorID* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<OpenCLOn12CreatorID*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<DirectMLTensorFlowCreatorID> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			DirectMLTensorFlowCreatorID* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<DirectMLTensorFlowCreatorID*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<DirectMLTensorFlowCreatorID> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			DirectMLTensorFlowCreatorID* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<DirectMLTensorFlowCreatorID*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<DirectMLTensorFlowCreatorID> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			DirectMLTensorFlowCreatorID* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<DirectMLTensorFlowCreatorID*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<DirectMLTensorFlowCreatorID> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			DirectMLTensorFlowCreatorID* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<DirectMLTensorFlowCreatorID*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<DirectMLTensorFlowCreatorID> comObj) 
		{
			DirectMLTensorFlowCreatorID* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<DirectMLTensorFlowCreatorID*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<DirectMLTensorFlowCreatorID> comObj) 
		{
			DirectMLTensorFlowCreatorID* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<DirectMLTensorFlowCreatorID*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<DirectMLPyTorchCreatorID> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			DirectMLPyTorchCreatorID* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<DirectMLPyTorchCreatorID*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<DirectMLPyTorchCreatorID> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			DirectMLPyTorchCreatorID* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<DirectMLPyTorchCreatorID*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<DirectMLPyTorchCreatorID> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			DirectMLPyTorchCreatorID* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<DirectMLPyTorchCreatorID*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<DirectMLPyTorchCreatorID> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			DirectMLPyTorchCreatorID* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<DirectMLPyTorchCreatorID*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<DirectMLPyTorchCreatorID> comObj) 
		{
			DirectMLPyTorchCreatorID* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<DirectMLPyTorchCreatorID*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<DirectMLPyTorchCreatorID> comObj) 
		{
			DirectMLPyTorchCreatorID* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<DirectMLPyTorchCreatorID*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDesc(this ComPtr<ID3D12ShaderReflectionType> comObj, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_SHADER_TYPE_DESC*")] D3D12ShaderTypeDesc* pDesc) 
		{
			ID3D12ShaderReflectionType* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionType*, D3D12ShaderTypeDesc*, int>)(*handle->LpVtbl))(handle, pDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDesc(this ComPtr<ID3D12ShaderReflectionType> comObj, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_SHADER_TYPE_DESC*")] ref D3D12ShaderTypeDesc pDesc) 
		{
			ID3D12ShaderReflectionType* handle = comObj.Handle;
			fixed (D3D12ShaderTypeDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionType*, D3D12ShaderTypeDesc*, int>)(*handle->LpVtbl))(handle, (D3D12ShaderTypeDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetMemberTypeByIndex")]
		[return: NativeName(NativeNameType.Type, "ID3D12ShaderReflectionType*")]
		public static ID3D12ShaderReflectionType* GetMemberTypeByIndex(this ComPtr<ID3D12ShaderReflectionType> comObj, [NativeName(NativeNameType.Param, "Index")] [NativeName(NativeNameType.Type, "UINT")] uint index) 
		{
			ID3D12ShaderReflectionType* handle = comObj.Handle;
			ID3D12ShaderReflectionType* ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionType*, uint, ID3D12ShaderReflectionType*>)(handle->LpVtbl[1]))(handle, index);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetMemberTypeByName")]
		[return: NativeName(NativeNameType.Type, "ID3D12ShaderReflectionType*")]
		public static ID3D12ShaderReflectionType* GetMemberTypeByName(this ComPtr<ID3D12ShaderReflectionType> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] byte* name) 
		{
			ID3D12ShaderReflectionType* handle = comObj.Handle;
			ID3D12ShaderReflectionType* ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionType*, byte*, ID3D12ShaderReflectionType*>)(handle->LpVtbl[2]))(handle, name);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetMemberTypeByName")]
		[return: NativeName(NativeNameType.Type, "ID3D12ShaderReflectionType*")]
		public static ID3D12ShaderReflectionType* GetMemberTypeByName(this ComPtr<ID3D12ShaderReflectionType> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] ReadOnlySpan<byte> name) 
		{
			ID3D12ShaderReflectionType* handle = comObj.Handle;
			fixed (byte* pname = name)
			{
				ID3D12ShaderReflectionType* ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionType*, byte*, ID3D12ShaderReflectionType*>)(handle->LpVtbl[2]))(handle, (byte*)pname);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetMemberTypeByName")]
		[return: NativeName(NativeNameType.Type, "ID3D12ShaderReflectionType*")]
		public static ID3D12ShaderReflectionType* GetMemberTypeByName(this ComPtr<ID3D12ShaderReflectionType> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] string name) 
		{
			ID3D12ShaderReflectionType* handle = comObj.Handle;
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			ID3D12ShaderReflectionType* ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionType*, byte*, ID3D12ShaderReflectionType*>)(handle->LpVtbl[2]))(handle, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetMemberTypeName")]
		[return: NativeName(NativeNameType.Type, "LPCSTR")]
		public static byte* GetMemberTypeName(this ComPtr<ID3D12ShaderReflectionType> comObj, [NativeName(NativeNameType.Param, "Index")] [NativeName(NativeNameType.Type, "UINT")] uint index) 
		{
			ID3D12ShaderReflectionType* handle = comObj.Handle;
			byte* ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionType*, uint, byte*>)(handle->LpVtbl[3]))(handle, index);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetMemberTypeName")]
		[return: NativeName(NativeNameType.Type, "LPCSTR")]
		public static string GetMemberTypeNameS(this ComPtr<ID3D12ShaderReflectionType> comObj, [NativeName(NativeNameType.Param, "Index")] [NativeName(NativeNameType.Type, "UINT")] uint index) 
		{
			ID3D12ShaderReflectionType* handle = comObj.Handle;
			string ret = Utils.DecodeStringUTF8(((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionType*, uint, byte*>)(handle->LpVtbl[3]))(handle, index));
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "IsEqual")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int IsEqual(this ComPtr<ID3D12ShaderReflectionType> comObj, [NativeName(NativeNameType.Param, "pType")] [NativeName(NativeNameType.Type, "ID3D12ShaderReflectionType*")] ID3D12ShaderReflectionType* pType) 
		{
			ID3D12ShaderReflectionType* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionType*, ID3D12ShaderReflectionType*, int>)(handle->LpVtbl[4]))(handle, pType);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "IsEqual")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int IsEqual(this ComPtr<ID3D12ShaderReflectionType> comObj, [NativeName(NativeNameType.Param, "pType")] [NativeName(NativeNameType.Type, "ID3D12ShaderReflectionType*")] ref ID3D12ShaderReflectionType pType) 
		{
			ID3D12ShaderReflectionType* handle = comObj.Handle;
			fixed (ID3D12ShaderReflectionType* ppType = &pType)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionType*, ID3D12ShaderReflectionType*, int>)(handle->LpVtbl[4]))(handle, (ID3D12ShaderReflectionType*)ppType);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "IsEqual")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int IsEqual(this ComPtr<ID3D12ShaderReflectionType> comObj, [NativeName(NativeNameType.Param, "pType")] [NativeName(NativeNameType.Type, "ID3D12ShaderReflectionType*")] ComPtr<ID3D12ShaderReflectionType> pType) 
		{
			ID3D12ShaderReflectionType* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionType*, ID3D12ShaderReflectionType*, int>)(handle->LpVtbl[4]))(handle, (ID3D12ShaderReflectionType*)pType.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetSubType")]
		[return: NativeName(NativeNameType.Type, "ID3D12ShaderReflectionType*")]
		public static ID3D12ShaderReflectionType* GetSubType(this ComPtr<ID3D12ShaderReflectionType> comObj) 
		{
			ID3D12ShaderReflectionType* handle = comObj.Handle;
			ID3D12ShaderReflectionType* ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionType*, ID3D12ShaderReflectionType*>)(handle->LpVtbl[5]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetBaseClass")]
		[return: NativeName(NativeNameType.Type, "ID3D12ShaderReflectionType*")]
		public static ID3D12ShaderReflectionType* GetBaseClass(this ComPtr<ID3D12ShaderReflectionType> comObj) 
		{
			ID3D12ShaderReflectionType* handle = comObj.Handle;
			ID3D12ShaderReflectionType* ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionType*, ID3D12ShaderReflectionType*>)(handle->LpVtbl[6]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetNumInterfaces")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public static uint GetNumInterfaces(this ComPtr<ID3D12ShaderReflectionType> comObj) 
		{
			ID3D12ShaderReflectionType* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionType*, uint>)(handle->LpVtbl[7]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetInterfaceByIndex")]
		[return: NativeName(NativeNameType.Type, "ID3D12ShaderReflectionType*")]
		public static ID3D12ShaderReflectionType* GetInterfaceByIndex(this ComPtr<ID3D12ShaderReflectionType> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT")] uint uIndex) 
		{
			ID3D12ShaderReflectionType* handle = comObj.Handle;
			ID3D12ShaderReflectionType* ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionType*, uint, ID3D12ShaderReflectionType*>)(handle->LpVtbl[8]))(handle, uIndex);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "IsOfType")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int IsOfType(this ComPtr<ID3D12ShaderReflectionType> comObj, [NativeName(NativeNameType.Param, "pType")] [NativeName(NativeNameType.Type, "ID3D12ShaderReflectionType*")] ID3D12ShaderReflectionType* pType) 
		{
			ID3D12ShaderReflectionType* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionType*, ID3D12ShaderReflectionType*, int>)(handle->LpVtbl[9]))(handle, pType);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "IsOfType")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int IsOfType(this ComPtr<ID3D12ShaderReflectionType> comObj, [NativeName(NativeNameType.Param, "pType")] [NativeName(NativeNameType.Type, "ID3D12ShaderReflectionType*")] ref ID3D12ShaderReflectionType pType) 
		{
			ID3D12ShaderReflectionType* handle = comObj.Handle;
			fixed (ID3D12ShaderReflectionType* ppType = &pType)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionType*, ID3D12ShaderReflectionType*, int>)(handle->LpVtbl[9]))(handle, (ID3D12ShaderReflectionType*)ppType);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "IsOfType")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int IsOfType(this ComPtr<ID3D12ShaderReflectionType> comObj, [NativeName(NativeNameType.Param, "pType")] [NativeName(NativeNameType.Type, "ID3D12ShaderReflectionType*")] ComPtr<ID3D12ShaderReflectionType> pType) 
		{
			ID3D12ShaderReflectionType* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionType*, ID3D12ShaderReflectionType*, int>)(handle->LpVtbl[9]))(handle, (ID3D12ShaderReflectionType*)pType.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImplementsInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int ImplementsInterface(this ComPtr<ID3D12ShaderReflectionType> comObj, [NativeName(NativeNameType.Param, "pBase")] [NativeName(NativeNameType.Type, "ID3D12ShaderReflectionType*")] ID3D12ShaderReflectionType* pBase) 
		{
			ID3D12ShaderReflectionType* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionType*, ID3D12ShaderReflectionType*, int>)(handle->LpVtbl[10]))(handle, pBase);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImplementsInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int ImplementsInterface(this ComPtr<ID3D12ShaderReflectionType> comObj, [NativeName(NativeNameType.Param, "pBase")] [NativeName(NativeNameType.Type, "ID3D12ShaderReflectionType*")] ref ID3D12ShaderReflectionType pBase) 
		{
			ID3D12ShaderReflectionType* handle = comObj.Handle;
			fixed (ID3D12ShaderReflectionType* ppBase = &pBase)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionType*, ID3D12ShaderReflectionType*, int>)(handle->LpVtbl[10]))(handle, (ID3D12ShaderReflectionType*)ppBase);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImplementsInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int ImplementsInterface(this ComPtr<ID3D12ShaderReflectionType> comObj, [NativeName(NativeNameType.Param, "pBase")] [NativeName(NativeNameType.Type, "ID3D12ShaderReflectionType*")] ComPtr<ID3D12ShaderReflectionType> pBase) 
		{
			ID3D12ShaderReflectionType* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionType*, ID3D12ShaderReflectionType*, int>)(handle->LpVtbl[10]))(handle, (ID3D12ShaderReflectionType*)pBase.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDesc(this ComPtr<ID3D12ShaderReflectionVariable> comObj, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_SHADER_VARIABLE_DESC*")] D3D12ShaderVariableDesc* pDesc) 
		{
			ID3D12ShaderReflectionVariable* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionVariable*, D3D12ShaderVariableDesc*, int>)(*handle->LpVtbl))(handle, pDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDesc(this ComPtr<ID3D12ShaderReflectionVariable> comObj, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_SHADER_VARIABLE_DESC*")] ref D3D12ShaderVariableDesc pDesc) 
		{
			ID3D12ShaderReflectionVariable* handle = comObj.Handle;
			fixed (D3D12ShaderVariableDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionVariable*, D3D12ShaderVariableDesc*, int>)(*handle->LpVtbl))(handle, (D3D12ShaderVariableDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetType")]
		[return: NativeName(NativeNameType.Type, "ID3D12ShaderReflectionType*")]
		public static ID3D12ShaderReflectionType* GetType(this ComPtr<ID3D12ShaderReflectionVariable> comObj) 
		{
			ID3D12ShaderReflectionVariable* handle = comObj.Handle;
			ID3D12ShaderReflectionType* ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionVariable*, ID3D12ShaderReflectionType*>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetBuffer")]
		[return: NativeName(NativeNameType.Type, "ID3D12ShaderReflectionConstantBuffer*")]
		public static ID3D12ShaderReflectionConstantBuffer* GetBuffer(this ComPtr<ID3D12ShaderReflectionVariable> comObj) 
		{
			ID3D12ShaderReflectionVariable* handle = comObj.Handle;
			ID3D12ShaderReflectionConstantBuffer* ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionVariable*, ID3D12ShaderReflectionConstantBuffer*>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetInterfaceSlot")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public static uint GetInterfaceSlot(this ComPtr<ID3D12ShaderReflectionVariable> comObj, [NativeName(NativeNameType.Param, "uArrayIndex")] [NativeName(NativeNameType.Type, "UINT")] uint uArrayIndex) 
		{
			ID3D12ShaderReflectionVariable* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionVariable*, uint, uint>)(handle->LpVtbl[3]))(handle, uArrayIndex);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDesc(this ComPtr<ID3D12ShaderReflectionConstantBuffer> comObj, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_SHADER_BUFFER_DESC*")] D3D12ShaderBufferDesc* pDesc) 
		{
			ID3D12ShaderReflectionConstantBuffer* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionConstantBuffer*, D3D12ShaderBufferDesc*, int>)(*handle->LpVtbl))(handle, pDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDesc(this ComPtr<ID3D12ShaderReflectionConstantBuffer> comObj, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_SHADER_BUFFER_DESC*")] ref D3D12ShaderBufferDesc pDesc) 
		{
			ID3D12ShaderReflectionConstantBuffer* handle = comObj.Handle;
			fixed (D3D12ShaderBufferDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionConstantBuffer*, D3D12ShaderBufferDesc*, int>)(*handle->LpVtbl))(handle, (D3D12ShaderBufferDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetVariableByIndex")]
		[return: NativeName(NativeNameType.Type, "ID3D12ShaderReflectionVariable*")]
		public static ID3D12ShaderReflectionVariable* GetVariableByIndex(this ComPtr<ID3D12ShaderReflectionConstantBuffer> comObj, [NativeName(NativeNameType.Param, "Index")] [NativeName(NativeNameType.Type, "UINT")] uint index) 
		{
			ID3D12ShaderReflectionConstantBuffer* handle = comObj.Handle;
			ID3D12ShaderReflectionVariable* ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionConstantBuffer*, uint, ID3D12ShaderReflectionVariable*>)(handle->LpVtbl[1]))(handle, index);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetVariableByName")]
		[return: NativeName(NativeNameType.Type, "ID3D12ShaderReflectionVariable*")]
		public static ID3D12ShaderReflectionVariable* GetVariableByName(this ComPtr<ID3D12ShaderReflectionConstantBuffer> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] byte* name) 
		{
			ID3D12ShaderReflectionConstantBuffer* handle = comObj.Handle;
			ID3D12ShaderReflectionVariable* ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionConstantBuffer*, byte*, ID3D12ShaderReflectionVariable*>)(handle->LpVtbl[2]))(handle, name);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetVariableByName")]
		[return: NativeName(NativeNameType.Type, "ID3D12ShaderReflectionVariable*")]
		public static ID3D12ShaderReflectionVariable* GetVariableByName(this ComPtr<ID3D12ShaderReflectionConstantBuffer> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] ReadOnlySpan<byte> name) 
		{
			ID3D12ShaderReflectionConstantBuffer* handle = comObj.Handle;
			fixed (byte* pname = name)
			{
				ID3D12ShaderReflectionVariable* ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionConstantBuffer*, byte*, ID3D12ShaderReflectionVariable*>)(handle->LpVtbl[2]))(handle, (byte*)pname);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetVariableByName")]
		[return: NativeName(NativeNameType.Type, "ID3D12ShaderReflectionVariable*")]
		public static ID3D12ShaderReflectionVariable* GetVariableByName(this ComPtr<ID3D12ShaderReflectionConstantBuffer> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] string name) 
		{
			ID3D12ShaderReflectionConstantBuffer* handle = comObj.Handle;
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			ID3D12ShaderReflectionVariable* ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionConstantBuffer*, byte*, ID3D12ShaderReflectionVariable*>)(handle->LpVtbl[2]))(handle, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<ID3D12ShaderReflection> comObj) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<ID3D12ShaderReflection> comObj) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* iid, [NativeName(NativeNameType.Param, "ppv")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppv) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			fixed (void** pppv = &ppv)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, iid, (void**)pppv);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid iid, [NativeName(NativeNameType.Param, "ppv")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppv) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			fixed (Guid* piid = &iid)
			{
				fixed (void** pppv = &ppv)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (Guid*)piid, (void**)pppv);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDesc(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_SHADER_DESC*")] D3D12ShaderDesc* pDesc) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, D3D12ShaderDesc*, int>)(handle->LpVtbl[4]))(handle, pDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDesc(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_SHADER_DESC*")] ref D3D12ShaderDesc pDesc) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			fixed (D3D12ShaderDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, D3D12ShaderDesc*, int>)(handle->LpVtbl[4]))(handle, (D3D12ShaderDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetConstantBufferByIndex")]
		[return: NativeName(NativeNameType.Type, "ID3D12ShaderReflectionConstantBuffer*")]
		public static ID3D12ShaderReflectionConstantBuffer* GetConstantBufferByIndex(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "Index")] [NativeName(NativeNameType.Type, "UINT")] uint index) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			ID3D12ShaderReflectionConstantBuffer* ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, uint, ID3D12ShaderReflectionConstantBuffer*>)(handle->LpVtbl[5]))(handle, index);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetConstantBufferByName")]
		[return: NativeName(NativeNameType.Type, "ID3D12ShaderReflectionConstantBuffer*")]
		public static ID3D12ShaderReflectionConstantBuffer* GetConstantBufferByName(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] byte* name) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			ID3D12ShaderReflectionConstantBuffer* ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, byte*, ID3D12ShaderReflectionConstantBuffer*>)(handle->LpVtbl[6]))(handle, name);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetConstantBufferByName")]
		[return: NativeName(NativeNameType.Type, "ID3D12ShaderReflectionConstantBuffer*")]
		public static ID3D12ShaderReflectionConstantBuffer* GetConstantBufferByName(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] ReadOnlySpan<byte> name) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			fixed (byte* pname = name)
			{
				ID3D12ShaderReflectionConstantBuffer* ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, byte*, ID3D12ShaderReflectionConstantBuffer*>)(handle->LpVtbl[6]))(handle, (byte*)pname);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetConstantBufferByName")]
		[return: NativeName(NativeNameType.Type, "ID3D12ShaderReflectionConstantBuffer*")]
		public static ID3D12ShaderReflectionConstantBuffer* GetConstantBufferByName(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] string name) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			ID3D12ShaderReflectionConstantBuffer* ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, byte*, ID3D12ShaderReflectionConstantBuffer*>)(handle->LpVtbl[6]))(handle, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetResourceBindingDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetResourceBindingDesc(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "ResourceIndex")] [NativeName(NativeNameType.Type, "UINT")] uint resourceIndex, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_SHADER_INPUT_BIND_DESC*")] D3D12ShaderInputBindDesc* pDesc) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, uint, D3D12ShaderInputBindDesc*, int>)(handle->LpVtbl[7]))(handle, resourceIndex, pDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetResourceBindingDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetResourceBindingDesc(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "ResourceIndex")] [NativeName(NativeNameType.Type, "UINT")] uint resourceIndex, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_SHADER_INPUT_BIND_DESC*")] ref D3D12ShaderInputBindDesc pDesc) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			fixed (D3D12ShaderInputBindDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, uint, D3D12ShaderInputBindDesc*, int>)(handle->LpVtbl[7]))(handle, resourceIndex, (D3D12ShaderInputBindDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetInputParameterDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetInputParameterDesc(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "ParameterIndex")] [NativeName(NativeNameType.Type, "UINT")] uint parameterIndex, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_SIGNATURE_PARAMETER_DESC*")] D3D12SignatureParameterDesc* pDesc) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, uint, D3D12SignatureParameterDesc*, int>)(handle->LpVtbl[8]))(handle, parameterIndex, pDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetInputParameterDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetInputParameterDesc(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "ParameterIndex")] [NativeName(NativeNameType.Type, "UINT")] uint parameterIndex, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_SIGNATURE_PARAMETER_DESC*")] ref D3D12SignatureParameterDesc pDesc) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			fixed (D3D12SignatureParameterDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, uint, D3D12SignatureParameterDesc*, int>)(handle->LpVtbl[8]))(handle, parameterIndex, (D3D12SignatureParameterDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutputParameterDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutputParameterDesc(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "ParameterIndex")] [NativeName(NativeNameType.Type, "UINT")] uint parameterIndex, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_SIGNATURE_PARAMETER_DESC*")] D3D12SignatureParameterDesc* pDesc) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, uint, D3D12SignatureParameterDesc*, int>)(handle->LpVtbl[9]))(handle, parameterIndex, pDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutputParameterDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutputParameterDesc(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "ParameterIndex")] [NativeName(NativeNameType.Type, "UINT")] uint parameterIndex, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_SIGNATURE_PARAMETER_DESC*")] ref D3D12SignatureParameterDesc pDesc) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			fixed (D3D12SignatureParameterDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, uint, D3D12SignatureParameterDesc*, int>)(handle->LpVtbl[9]))(handle, parameterIndex, (D3D12SignatureParameterDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPatchConstantParameterDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPatchConstantParameterDesc(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "ParameterIndex")] [NativeName(NativeNameType.Type, "UINT")] uint parameterIndex, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_SIGNATURE_PARAMETER_DESC*")] D3D12SignatureParameterDesc* pDesc) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, uint, D3D12SignatureParameterDesc*, int>)(handle->LpVtbl[10]))(handle, parameterIndex, pDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPatchConstantParameterDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPatchConstantParameterDesc(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "ParameterIndex")] [NativeName(NativeNameType.Type, "UINT")] uint parameterIndex, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_SIGNATURE_PARAMETER_DESC*")] ref D3D12SignatureParameterDesc pDesc) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			fixed (D3D12SignatureParameterDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, uint, D3D12SignatureParameterDesc*, int>)(handle->LpVtbl[10]))(handle, parameterIndex, (D3D12SignatureParameterDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetVariableByName")]
		[return: NativeName(NativeNameType.Type, "ID3D12ShaderReflectionVariable*")]
		public static ID3D12ShaderReflectionVariable* GetVariableByName(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] byte* name) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			ID3D12ShaderReflectionVariable* ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, byte*, ID3D12ShaderReflectionVariable*>)(handle->LpVtbl[11]))(handle, name);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetVariableByName")]
		[return: NativeName(NativeNameType.Type, "ID3D12ShaderReflectionVariable*")]
		public static ID3D12ShaderReflectionVariable* GetVariableByName(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] ReadOnlySpan<byte> name) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			fixed (byte* pname = name)
			{
				ID3D12ShaderReflectionVariable* ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, byte*, ID3D12ShaderReflectionVariable*>)(handle->LpVtbl[11]))(handle, (byte*)pname);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetVariableByName")]
		[return: NativeName(NativeNameType.Type, "ID3D12ShaderReflectionVariable*")]
		public static ID3D12ShaderReflectionVariable* GetVariableByName(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] string name) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			ID3D12ShaderReflectionVariable* ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, byte*, ID3D12ShaderReflectionVariable*>)(handle->LpVtbl[11]))(handle, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetResourceBindingDescByName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetResourceBindingDescByName(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] byte* name, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_SHADER_INPUT_BIND_DESC*")] D3D12ShaderInputBindDesc* pDesc) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, byte*, D3D12ShaderInputBindDesc*, int>)(handle->LpVtbl[12]))(handle, name, pDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetResourceBindingDescByName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetResourceBindingDescByName(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] ReadOnlySpan<byte> name, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_SHADER_INPUT_BIND_DESC*")] D3D12ShaderInputBindDesc* pDesc) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			fixed (byte* pname = name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, byte*, D3D12ShaderInputBindDesc*, int>)(handle->LpVtbl[12]))(handle, (byte*)pname, pDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetResourceBindingDescByName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetResourceBindingDescByName(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] string name, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_SHADER_INPUT_BIND_DESC*")] D3D12ShaderInputBindDesc* pDesc) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, byte*, D3D12ShaderInputBindDesc*, int>)(handle->LpVtbl[12]))(handle, pStr0, pDesc);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetResourceBindingDescByName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetResourceBindingDescByName(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] byte* name, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_SHADER_INPUT_BIND_DESC*")] ref D3D12ShaderInputBindDesc pDesc) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			fixed (D3D12ShaderInputBindDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, byte*, D3D12ShaderInputBindDesc*, int>)(handle->LpVtbl[12]))(handle, name, (D3D12ShaderInputBindDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetResourceBindingDescByName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetResourceBindingDescByName(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] ReadOnlySpan<byte> name, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_SHADER_INPUT_BIND_DESC*")] ref D3D12ShaderInputBindDesc pDesc) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			fixed (byte* pname = name)
			{
				fixed (D3D12ShaderInputBindDesc* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, byte*, D3D12ShaderInputBindDesc*, int>)(handle->LpVtbl[12]))(handle, (byte*)pname, (D3D12ShaderInputBindDesc*)ppDesc);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetResourceBindingDescByName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetResourceBindingDescByName(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] string name, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_SHADER_INPUT_BIND_DESC*")] ref D3D12ShaderInputBindDesc pDesc) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			fixed (D3D12ShaderInputBindDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, byte*, D3D12ShaderInputBindDesc*, int>)(handle->LpVtbl[12]))(handle, pStr0, (D3D12ShaderInputBindDesc*)ppDesc);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetMovInstructionCount")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public static uint GetMovInstructionCount(this ComPtr<ID3D12ShaderReflection> comObj) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, uint>)(handle->LpVtbl[13]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetMovcInstructionCount")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public static uint GetMovcInstructionCount(this ComPtr<ID3D12ShaderReflection> comObj) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, uint>)(handle->LpVtbl[14]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetConversionInstructionCount")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public static uint GetConversionInstructionCount(this ComPtr<ID3D12ShaderReflection> comObj) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, uint>)(handle->LpVtbl[15]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetBitwiseInstructionCount")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public static uint GetBitwiseInstructionCount(this ComPtr<ID3D12ShaderReflection> comObj) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, uint>)(handle->LpVtbl[16]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetGSInputPrimitive")]
		[return: NativeName(NativeNameType.Type, "D3D_PRIMITIVE")]
		public static D3DPrimitive GetGSInputPrimitive(this ComPtr<ID3D12ShaderReflection> comObj) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			D3DPrimitive ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, D3DPrimitive>)(handle->LpVtbl[17]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "IsSampleFrequencyShader")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public static int IsSampleFrequencyShader(this ComPtr<ID3D12ShaderReflection> comObj) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, int>)(handle->LpVtbl[18]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetNumInterfaceSlots")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public static uint GetNumInterfaceSlots(this ComPtr<ID3D12ShaderReflection> comObj) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, uint>)(handle->LpVtbl[19]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetMinFeatureLevel")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetMinFeatureLevel(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "pLevel")] [NativeName(NativeNameType.Type, "D3D_FEATURE_LEVEL*")] D3DFeatureLevel* pLevel) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, D3DFeatureLevel*, int>)(handle->LpVtbl[20]))(handle, pLevel);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetMinFeatureLevel")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetMinFeatureLevel(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "pLevel")] [NativeName(NativeNameType.Type, "D3D_FEATURE_LEVEL*")] ref D3DFeatureLevel pLevel) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			fixed (D3DFeatureLevel* ppLevel = &pLevel)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, D3DFeatureLevel*, int>)(handle->LpVtbl[20]))(handle, (D3DFeatureLevel*)ppLevel);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetThreadGroupSize")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public static uint GetThreadGroupSize(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "pSizeX")] [NativeName(NativeNameType.Type, "UINT*")] uint* pSizeX, [NativeName(NativeNameType.Param, "pSizeY")] [NativeName(NativeNameType.Type, "UINT*")] uint* pSizeY, [NativeName(NativeNameType.Param, "pSizeZ")] [NativeName(NativeNameType.Type, "UINT*")] uint* pSizeZ) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, uint*, uint*, uint*, uint>)(handle->LpVtbl[21]))(handle, pSizeX, pSizeY, pSizeZ);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetThreadGroupSize")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public static uint GetThreadGroupSize(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "pSizeX")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pSizeX, [NativeName(NativeNameType.Param, "pSizeY")] [NativeName(NativeNameType.Type, "UINT*")] uint* pSizeY, [NativeName(NativeNameType.Param, "pSizeZ")] [NativeName(NativeNameType.Type, "UINT*")] uint* pSizeZ) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			fixed (uint* ppSizeX = &pSizeX)
			{
				uint ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, uint*, uint*, uint*, uint>)(handle->LpVtbl[21]))(handle, (uint*)ppSizeX, pSizeY, pSizeZ);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetThreadGroupSize")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public static uint GetThreadGroupSize(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "pSizeX")] [NativeName(NativeNameType.Type, "UINT*")] uint* pSizeX, [NativeName(NativeNameType.Param, "pSizeY")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pSizeY, [NativeName(NativeNameType.Param, "pSizeZ")] [NativeName(NativeNameType.Type, "UINT*")] uint* pSizeZ) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			fixed (uint* ppSizeY = &pSizeY)
			{
				uint ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, uint*, uint*, uint*, uint>)(handle->LpVtbl[21]))(handle, pSizeX, (uint*)ppSizeY, pSizeZ);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetThreadGroupSize")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public static uint GetThreadGroupSize(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "pSizeX")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pSizeX, [NativeName(NativeNameType.Param, "pSizeY")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pSizeY, [NativeName(NativeNameType.Param, "pSizeZ")] [NativeName(NativeNameType.Type, "UINT*")] uint* pSizeZ) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			fixed (uint* ppSizeX = &pSizeX)
			{
				fixed (uint* ppSizeY = &pSizeY)
				{
					uint ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, uint*, uint*, uint*, uint>)(handle->LpVtbl[21]))(handle, (uint*)ppSizeX, (uint*)ppSizeY, pSizeZ);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetThreadGroupSize")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public static uint GetThreadGroupSize(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "pSizeX")] [NativeName(NativeNameType.Type, "UINT*")] uint* pSizeX, [NativeName(NativeNameType.Param, "pSizeY")] [NativeName(NativeNameType.Type, "UINT*")] uint* pSizeY, [NativeName(NativeNameType.Param, "pSizeZ")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pSizeZ) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			fixed (uint* ppSizeZ = &pSizeZ)
			{
				uint ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, uint*, uint*, uint*, uint>)(handle->LpVtbl[21]))(handle, pSizeX, pSizeY, (uint*)ppSizeZ);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetThreadGroupSize")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public static uint GetThreadGroupSize(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "pSizeX")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pSizeX, [NativeName(NativeNameType.Param, "pSizeY")] [NativeName(NativeNameType.Type, "UINT*")] uint* pSizeY, [NativeName(NativeNameType.Param, "pSizeZ")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pSizeZ) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			fixed (uint* ppSizeX = &pSizeX)
			{
				fixed (uint* ppSizeZ = &pSizeZ)
				{
					uint ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, uint*, uint*, uint*, uint>)(handle->LpVtbl[21]))(handle, (uint*)ppSizeX, pSizeY, (uint*)ppSizeZ);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetThreadGroupSize")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public static uint GetThreadGroupSize(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "pSizeX")] [NativeName(NativeNameType.Type, "UINT*")] uint* pSizeX, [NativeName(NativeNameType.Param, "pSizeY")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pSizeY, [NativeName(NativeNameType.Param, "pSizeZ")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pSizeZ) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			fixed (uint* ppSizeY = &pSizeY)
			{
				fixed (uint* ppSizeZ = &pSizeZ)
				{
					uint ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, uint*, uint*, uint*, uint>)(handle->LpVtbl[21]))(handle, pSizeX, (uint*)ppSizeY, (uint*)ppSizeZ);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetThreadGroupSize")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public static uint GetThreadGroupSize(this ComPtr<ID3D12ShaderReflection> comObj, [NativeName(NativeNameType.Param, "pSizeX")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pSizeX, [NativeName(NativeNameType.Param, "pSizeY")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pSizeY, [NativeName(NativeNameType.Param, "pSizeZ")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pSizeZ) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			fixed (uint* ppSizeX = &pSizeX)
			{
				fixed (uint* ppSizeY = &pSizeY)
				{
					fixed (uint* ppSizeZ = &pSizeZ)
					{
						uint ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, uint*, uint*, uint*, uint>)(handle->LpVtbl[21]))(handle, (uint*)ppSizeX, (uint*)ppSizeY, (uint*)ppSizeZ);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetRequiresFlags")]
		[return: NativeName(NativeNameType.Type, "UINT64")]
		public static ulong GetRequiresFlags(this ComPtr<ID3D12ShaderReflection> comObj) 
		{
			ID3D12ShaderReflection* handle = comObj.Handle;
			ulong ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflection*, ulong>)(handle->LpVtbl[22]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12LibraryReflection> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12LibraryReflection* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12LibraryReflection*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12LibraryReflection> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12LibraryReflection* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12LibraryReflection*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12LibraryReflection> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12LibraryReflection* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12LibraryReflection*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12LibraryReflection> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12LibraryReflection* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12LibraryReflection*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<ID3D12LibraryReflection> comObj) 
		{
			ID3D12LibraryReflection* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12LibraryReflection*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<ID3D12LibraryReflection> comObj) 
		{
			ID3D12LibraryReflection* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12LibraryReflection*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12LibraryReflection> comObj, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* iid, [NativeName(NativeNameType.Param, "ppv")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppv) 
		{
			ID3D12LibraryReflection* handle = comObj.Handle;
			fixed (void** pppv = &ppv)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12LibraryReflection*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, iid, (void**)pppv);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12LibraryReflection> comObj, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid iid, [NativeName(NativeNameType.Param, "ppv")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppv) 
		{
			ID3D12LibraryReflection* handle = comObj.Handle;
			fixed (Guid* piid = &iid)
			{
				fixed (void** pppv = &ppv)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12LibraryReflection*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (Guid*)piid, (void**)pppv);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDesc(this ComPtr<ID3D12LibraryReflection> comObj, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_LIBRARY_DESC*")] D3D12LibraryDesc* pDesc) 
		{
			ID3D12LibraryReflection* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12LibraryReflection*, D3D12LibraryDesc*, int>)(handle->LpVtbl[4]))(handle, pDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDesc(this ComPtr<ID3D12LibraryReflection> comObj, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_LIBRARY_DESC*")] ref D3D12LibraryDesc pDesc) 
		{
			ID3D12LibraryReflection* handle = comObj.Handle;
			fixed (D3D12LibraryDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12LibraryReflection*, D3D12LibraryDesc*, int>)(handle->LpVtbl[4]))(handle, (D3D12LibraryDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetFunctionByIndex")]
		[return: NativeName(NativeNameType.Type, "ID3D12FunctionReflection*")]
		public static ID3D12FunctionReflection* GetFunctionByIndex(this ComPtr<ID3D12LibraryReflection> comObj, [NativeName(NativeNameType.Param, "FunctionIndex")] [NativeName(NativeNameType.Type, "INT")] int functionIndex) 
		{
			ID3D12LibraryReflection* handle = comObj.Handle;
			ID3D12FunctionReflection* ret = ((delegate* unmanaged[Stdcall]<ID3D12LibraryReflection*, int, ID3D12FunctionReflection*>)(handle->LpVtbl[5]))(handle, functionIndex);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDesc(this ComPtr<ID3D12FunctionReflection> comObj, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_FUNCTION_DESC*")] D3D12FunctionDesc* pDesc) 
		{
			ID3D12FunctionReflection* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12FunctionReflection*, D3D12FunctionDesc*, int>)(*handle->LpVtbl))(handle, pDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDesc(this ComPtr<ID3D12FunctionReflection> comObj, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_FUNCTION_DESC*")] ref D3D12FunctionDesc pDesc) 
		{
			ID3D12FunctionReflection* handle = comObj.Handle;
			fixed (D3D12FunctionDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12FunctionReflection*, D3D12FunctionDesc*, int>)(*handle->LpVtbl))(handle, (D3D12FunctionDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetConstantBufferByIndex")]
		[return: NativeName(NativeNameType.Type, "ID3D12ShaderReflectionConstantBuffer*")]
		public static ID3D12ShaderReflectionConstantBuffer* GetConstantBufferByIndex(this ComPtr<ID3D12FunctionReflection> comObj, [NativeName(NativeNameType.Param, "BufferIndex")] [NativeName(NativeNameType.Type, "UINT")] uint bufferIndex) 
		{
			ID3D12FunctionReflection* handle = comObj.Handle;
			ID3D12ShaderReflectionConstantBuffer* ret = ((delegate* unmanaged[Stdcall]<ID3D12FunctionReflection*, uint, ID3D12ShaderReflectionConstantBuffer*>)(handle->LpVtbl[1]))(handle, bufferIndex);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetConstantBufferByName")]
		[return: NativeName(NativeNameType.Type, "ID3D12ShaderReflectionConstantBuffer*")]
		public static ID3D12ShaderReflectionConstantBuffer* GetConstantBufferByName(this ComPtr<ID3D12FunctionReflection> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] byte* name) 
		{
			ID3D12FunctionReflection* handle = comObj.Handle;
			ID3D12ShaderReflectionConstantBuffer* ret = ((delegate* unmanaged[Stdcall]<ID3D12FunctionReflection*, byte*, ID3D12ShaderReflectionConstantBuffer*>)(handle->LpVtbl[2]))(handle, name);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetConstantBufferByName")]
		[return: NativeName(NativeNameType.Type, "ID3D12ShaderReflectionConstantBuffer*")]
		public static ID3D12ShaderReflectionConstantBuffer* GetConstantBufferByName(this ComPtr<ID3D12FunctionReflection> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] ReadOnlySpan<byte> name) 
		{
			ID3D12FunctionReflection* handle = comObj.Handle;
			fixed (byte* pname = name)
			{
				ID3D12ShaderReflectionConstantBuffer* ret = ((delegate* unmanaged[Stdcall]<ID3D12FunctionReflection*, byte*, ID3D12ShaderReflectionConstantBuffer*>)(handle->LpVtbl[2]))(handle, (byte*)pname);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetConstantBufferByName")]
		[return: NativeName(NativeNameType.Type, "ID3D12ShaderReflectionConstantBuffer*")]
		public static ID3D12ShaderReflectionConstantBuffer* GetConstantBufferByName(this ComPtr<ID3D12FunctionReflection> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] string name) 
		{
			ID3D12FunctionReflection* handle = comObj.Handle;
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			ID3D12ShaderReflectionConstantBuffer* ret = ((delegate* unmanaged[Stdcall]<ID3D12FunctionReflection*, byte*, ID3D12ShaderReflectionConstantBuffer*>)(handle->LpVtbl[2]))(handle, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetResourceBindingDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetResourceBindingDesc(this ComPtr<ID3D12FunctionReflection> comObj, [NativeName(NativeNameType.Param, "ResourceIndex")] [NativeName(NativeNameType.Type, "UINT")] uint resourceIndex, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_SHADER_INPUT_BIND_DESC*")] D3D12ShaderInputBindDesc* pDesc) 
		{
			ID3D12FunctionReflection* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12FunctionReflection*, uint, D3D12ShaderInputBindDesc*, int>)(handle->LpVtbl[3]))(handle, resourceIndex, pDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetResourceBindingDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetResourceBindingDesc(this ComPtr<ID3D12FunctionReflection> comObj, [NativeName(NativeNameType.Param, "ResourceIndex")] [NativeName(NativeNameType.Type, "UINT")] uint resourceIndex, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_SHADER_INPUT_BIND_DESC*")] ref D3D12ShaderInputBindDesc pDesc) 
		{
			ID3D12FunctionReflection* handle = comObj.Handle;
			fixed (D3D12ShaderInputBindDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12FunctionReflection*, uint, D3D12ShaderInputBindDesc*, int>)(handle->LpVtbl[3]))(handle, resourceIndex, (D3D12ShaderInputBindDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetVariableByName")]
		[return: NativeName(NativeNameType.Type, "ID3D12ShaderReflectionVariable*")]
		public static ID3D12ShaderReflectionVariable* GetVariableByName(this ComPtr<ID3D12FunctionReflection> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] byte* name) 
		{
			ID3D12FunctionReflection* handle = comObj.Handle;
			ID3D12ShaderReflectionVariable* ret = ((delegate* unmanaged[Stdcall]<ID3D12FunctionReflection*, byte*, ID3D12ShaderReflectionVariable*>)(handle->LpVtbl[4]))(handle, name);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetVariableByName")]
		[return: NativeName(NativeNameType.Type, "ID3D12ShaderReflectionVariable*")]
		public static ID3D12ShaderReflectionVariable* GetVariableByName(this ComPtr<ID3D12FunctionReflection> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] ReadOnlySpan<byte> name) 
		{
			ID3D12FunctionReflection* handle = comObj.Handle;
			fixed (byte* pname = name)
			{
				ID3D12ShaderReflectionVariable* ret = ((delegate* unmanaged[Stdcall]<ID3D12FunctionReflection*, byte*, ID3D12ShaderReflectionVariable*>)(handle->LpVtbl[4]))(handle, (byte*)pname);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetVariableByName")]
		[return: NativeName(NativeNameType.Type, "ID3D12ShaderReflectionVariable*")]
		public static ID3D12ShaderReflectionVariable* GetVariableByName(this ComPtr<ID3D12FunctionReflection> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] string name) 
		{
			ID3D12FunctionReflection* handle = comObj.Handle;
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			ID3D12ShaderReflectionVariable* ret = ((delegate* unmanaged[Stdcall]<ID3D12FunctionReflection*, byte*, ID3D12ShaderReflectionVariable*>)(handle->LpVtbl[4]))(handle, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetResourceBindingDescByName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetResourceBindingDescByName(this ComPtr<ID3D12FunctionReflection> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] byte* name, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_SHADER_INPUT_BIND_DESC*")] D3D12ShaderInputBindDesc* pDesc) 
		{
			ID3D12FunctionReflection* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12FunctionReflection*, byte*, D3D12ShaderInputBindDesc*, int>)(handle->LpVtbl[5]))(handle, name, pDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetResourceBindingDescByName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetResourceBindingDescByName(this ComPtr<ID3D12FunctionReflection> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] ReadOnlySpan<byte> name, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_SHADER_INPUT_BIND_DESC*")] D3D12ShaderInputBindDesc* pDesc) 
		{
			ID3D12FunctionReflection* handle = comObj.Handle;
			fixed (byte* pname = name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12FunctionReflection*, byte*, D3D12ShaderInputBindDesc*, int>)(handle->LpVtbl[5]))(handle, (byte*)pname, pDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetResourceBindingDescByName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetResourceBindingDescByName(this ComPtr<ID3D12FunctionReflection> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] string name, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_SHADER_INPUT_BIND_DESC*")] D3D12ShaderInputBindDesc* pDesc) 
		{
			ID3D12FunctionReflection* handle = comObj.Handle;
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12FunctionReflection*, byte*, D3D12ShaderInputBindDesc*, int>)(handle->LpVtbl[5]))(handle, pStr0, pDesc);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetResourceBindingDescByName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetResourceBindingDescByName(this ComPtr<ID3D12FunctionReflection> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] byte* name, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_SHADER_INPUT_BIND_DESC*")] ref D3D12ShaderInputBindDesc pDesc) 
		{
			ID3D12FunctionReflection* handle = comObj.Handle;
			fixed (D3D12ShaderInputBindDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12FunctionReflection*, byte*, D3D12ShaderInputBindDesc*, int>)(handle->LpVtbl[5]))(handle, name, (D3D12ShaderInputBindDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetResourceBindingDescByName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetResourceBindingDescByName(this ComPtr<ID3D12FunctionReflection> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] ReadOnlySpan<byte> name, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_SHADER_INPUT_BIND_DESC*")] ref D3D12ShaderInputBindDesc pDesc) 
		{
			ID3D12FunctionReflection* handle = comObj.Handle;
			fixed (byte* pname = name)
			{
				fixed (D3D12ShaderInputBindDesc* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12FunctionReflection*, byte*, D3D12ShaderInputBindDesc*, int>)(handle->LpVtbl[5]))(handle, (byte*)pname, (D3D12ShaderInputBindDesc*)ppDesc);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetResourceBindingDescByName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetResourceBindingDescByName(this ComPtr<ID3D12FunctionReflection> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] string name, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_SHADER_INPUT_BIND_DESC*")] ref D3D12ShaderInputBindDesc pDesc) 
		{
			ID3D12FunctionReflection* handle = comObj.Handle;
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			fixed (D3D12ShaderInputBindDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12FunctionReflection*, byte*, D3D12ShaderInputBindDesc*, int>)(handle->LpVtbl[5]))(handle, pStr0, (D3D12ShaderInputBindDesc*)ppDesc);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetFunctionParameter")]
		[return: NativeName(NativeNameType.Type, "ID3D12FunctionParameterReflection*")]
		public static ID3D12FunctionParameterReflection* GetFunctionParameter(this ComPtr<ID3D12FunctionReflection> comObj, [NativeName(NativeNameType.Param, "ParameterIndex")] [NativeName(NativeNameType.Type, "INT")] int parameterIndex) 
		{
			ID3D12FunctionReflection* handle = comObj.Handle;
			ID3D12FunctionParameterReflection* ret = ((delegate* unmanaged[Stdcall]<ID3D12FunctionReflection*, int, ID3D12FunctionParameterReflection*>)(handle->LpVtbl[6]))(handle, parameterIndex);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDesc(this ComPtr<ID3D12FunctionParameterReflection> comObj, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_PARAMETER_DESC*")] D3D12ParameterDesc* pDesc) 
		{
			ID3D12FunctionParameterReflection* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12FunctionParameterReflection*, D3D12ParameterDesc*, int>)(*handle->LpVtbl))(handle, pDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDesc(this ComPtr<ID3D12FunctionParameterReflection> comObj, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D12_PARAMETER_DESC*")] ref D3D12ParameterDesc pDesc) 
		{
			ID3D12FunctionParameterReflection* handle = comObj.Handle;
			fixed (D3D12ParameterDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12FunctionParameterReflection*, D3D12ParameterDesc*, int>)(*handle->LpVtbl))(handle, (D3D12ParameterDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12VideoDecoderHeap> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12VideoDecoderHeap* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoderHeap*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12VideoDecoderHeap> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12VideoDecoderHeap* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoderHeap*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12VideoDecoderHeap> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecoderHeap* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoderHeap*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12VideoDecoderHeap> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecoderHeap* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoderHeap*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<ID3D12VideoDecoderHeap> comObj) 
		{
			ID3D12VideoDecoderHeap* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoderHeap*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<ID3D12VideoDecoderHeap> comObj) 
		{
			ID3D12VideoDecoderHeap* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoderHeap*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData(this ComPtr<ID3D12VideoDecoderHeap> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			ID3D12VideoDecoderHeap* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoderHeap*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData(this ComPtr<ID3D12VideoDecoderHeap> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			ID3D12VideoDecoderHeap* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoderHeap*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData(this ComPtr<ID3D12VideoDecoderHeap> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			ID3D12VideoDecoderHeap* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoderHeap*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData(this ComPtr<ID3D12VideoDecoderHeap> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			ID3D12VideoDecoderHeap* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoderHeap*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData<T>(this ComPtr<ID3D12VideoDecoderHeap> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecoderHeap* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoderHeap*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData<T>(this ComPtr<ID3D12VideoDecoderHeap> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecoderHeap* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoderHeap*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData<T>(this ComPtr<ID3D12VideoDecoderHeap> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecoderHeap* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoderHeap*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData<T>(this ComPtr<ID3D12VideoDecoderHeap> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecoderHeap* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoderHeap*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetPrivateData(this ComPtr<ID3D12VideoDecoderHeap> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			ID3D12VideoDecoderHeap* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoderHeap*, Guid*, uint, void*, int>)(handle->LpVtbl[4]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetPrivateData(this ComPtr<ID3D12VideoDecoderHeap> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			ID3D12VideoDecoderHeap* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoderHeap*, Guid*, uint, void*, int>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoDecoderHeap> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pData) 
		{
			ID3D12VideoDecoderHeap* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoderHeap*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoDecoderHeap> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pData) 
		{
			ID3D12VideoDecoderHeap* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoderHeap*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoDecoderHeap> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pData) 
		{
			ID3D12VideoDecoderHeap* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoderHeap*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoDecoderHeap> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pData) 
		{
			ID3D12VideoDecoderHeap* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoderHeap*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoDecoderHeap> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pData) 
		{
			ID3D12VideoDecoderHeap* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoderHeap*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoDecoderHeap> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pData) 
		{
			ID3D12VideoDecoderHeap* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoderHeap*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetName(this ComPtr<ID3D12VideoDecoderHeap> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* name) 
		{
			ID3D12VideoDecoderHeap* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoderHeap*, char*, int>)(handle->LpVtbl[6]))(handle, name);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetName(this ComPtr<ID3D12VideoDecoderHeap> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCWSTR")] ReadOnlySpan<char> name) 
		{
			ID3D12VideoDecoderHeap* handle = comObj.Handle;
			fixed (char* pname = name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoderHeap*, char*, int>)(handle->LpVtbl[6]))(handle, (char*)pname);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetName(this ComPtr<ID3D12VideoDecoderHeap> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCWSTR")] string name) 
		{
			ID3D12VideoDecoderHeap* handle = comObj.Handle;
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoderHeap*, char*, int>)(handle->LpVtbl[6]))(handle, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDevice(this ComPtr<ID3D12VideoDecoderHeap> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppvDevice) 
		{
			ID3D12VideoDecoderHeap* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoderHeap*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, riid, ppvDevice);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDevice(this ComPtr<ID3D12VideoDecoderHeap> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppvDevice) 
		{
			ID3D12VideoDecoderHeap* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoderHeap*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (Guid*)priid, ppvDevice);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDevice<T>(this ComPtr<ID3D12VideoDecoderHeap> comObj, [NativeName(NativeNameType.Param, "ppvDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecoderHeap* handle = comObj.Handle;
			ppvDevice = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoderHeap*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvDevice.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDevice<T>(this ComPtr<ID3D12VideoDecoderHeap> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecoderHeap* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvDevice = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoderHeap*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (Guid*)priid, (void**)ppvDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "D3D12_VIDEO_DECODER_HEAP_DESC")]
		public static D3D12VideoDecoderHeapDesc GetDesc(this ComPtr<ID3D12VideoDecoderHeap> comObj) 
		{
			ID3D12VideoDecoderHeap* handle = comObj.Handle;
			D3D12VideoDecoderHeapDesc ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoderHeap*, D3D12VideoDecoderHeapDesc>)(handle->LpVtbl[8]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<ID3D12VideoDevice> comObj) 
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<ID3D12VideoDevice> comObj) 
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CheckFeatureSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CheckFeatureSupport(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "FeatureVideo")] [NativeName(NativeNameType.Type, "D3D12_FEATURE_VIDEO")] D3D12FeatureVideo featureVideo, [NativeName(NativeNameType.Param, "pFeatureSupportData")] [NativeName(NativeNameType.Type, "void*")] void* pFeatureSupportData, [NativeName(NativeNameType.Param, "FeatureSupportDataSize")] [NativeName(NativeNameType.Type, "UINT")] uint featureSupportDataSize) 
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, D3D12FeatureVideo, void*, uint, int>)(handle->LpVtbl[3]))(handle, featureVideo, pFeatureSupportData, featureSupportDataSize);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CheckFeatureSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CheckFeatureSupport<T>(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "FeatureVideo")] [NativeName(NativeNameType.Type, "D3D12_FEATURE_VIDEO")] D3D12FeatureVideo featureVideo, [NativeName(NativeNameType.Param, "pFeatureSupportData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pFeatureSupportData, [NativeName(NativeNameType.Param, "FeatureSupportDataSize")] [NativeName(NativeNameType.Type, "UINT")] uint featureSupportDataSize) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, D3D12FeatureVideo, void*, uint, int>)(handle->LpVtbl[3]))(handle, featureVideo, (void*)pFeatureSupportData.Handle, featureSupportDataSize);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoDecoder")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoDecoder(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODER_DESC*")] D3D12VideoDecoderDesc* pDesc, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppVideoDecoder")] [NativeName(NativeNameType.Type, "void**")] void** ppVideoDecoder) 
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, D3D12VideoDecoderDesc*, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, pDesc, riid, ppVideoDecoder);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoDecoder")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoDecoder(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODER_DESC*")] ref D3D12VideoDecoderDesc pDesc, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppVideoDecoder")] [NativeName(NativeNameType.Type, "void**")] void** ppVideoDecoder) 
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			fixed (D3D12VideoDecoderDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, D3D12VideoDecoderDesc*, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, (D3D12VideoDecoderDesc*)ppDesc, riid, ppVideoDecoder);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoDecoder")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoDecoder(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODER_DESC*")] D3D12VideoDecoderDesc* pDesc, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppVideoDecoder")] [NativeName(NativeNameType.Type, "void**")] void** ppVideoDecoder) 
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, D3D12VideoDecoderDesc*, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, pDesc, (Guid*)priid, ppVideoDecoder);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoDecoder")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoDecoder(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODER_DESC*")] ref D3D12VideoDecoderDesc pDesc, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppVideoDecoder")] [NativeName(NativeNameType.Type, "void**")] void** ppVideoDecoder) 
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			fixed (D3D12VideoDecoderDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, D3D12VideoDecoderDesc*, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, (D3D12VideoDecoderDesc*)ppDesc, (Guid*)priid, ppVideoDecoder);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoDecoder")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoDecoder<T>(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODER_DESC*")] D3D12VideoDecoderDesc* pDesc, [NativeName(NativeNameType.Param, "ppVideoDecoder")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppVideoDecoder) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			ppVideoDecoder = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, D3D12VideoDecoderDesc*, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, pDesc, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoDecoder.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoDecoder")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoDecoder<T>(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODER_DESC*")] ref D3D12VideoDecoderDesc pDesc, [NativeName(NativeNameType.Param, "ppVideoDecoder")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppVideoDecoder) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			fixed (D3D12VideoDecoderDesc* ppDesc = &pDesc)
			{
				ppVideoDecoder = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, D3D12VideoDecoderDesc*, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, (D3D12VideoDecoderDesc*)ppDesc, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoDecoder.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoDecoder")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoDecoder<T>(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODER_DESC*")] D3D12VideoDecoderDesc* pDesc, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppVideoDecoder")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppVideoDecoder) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppVideoDecoder = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, D3D12VideoDecoderDesc*, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, pDesc, (Guid*)priid, (void**)ppVideoDecoder.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoDecoder")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoDecoder<T>(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODER_DESC*")] ref D3D12VideoDecoderDesc pDesc, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppVideoDecoder")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppVideoDecoder) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			fixed (D3D12VideoDecoderDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppVideoDecoder = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, D3D12VideoDecoderDesc*, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, (D3D12VideoDecoderDesc*)ppDesc, (Guid*)priid, (void**)ppVideoDecoder.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoDecoderHeap")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoDecoderHeap(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "pVideoDecoderHeapDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODER_HEAP_DESC*")] D3D12VideoDecoderHeapDesc* pVideoDecoderHeapDesc, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppVideoDecoderHeap")] [NativeName(NativeNameType.Type, "void**")] void** ppVideoDecoderHeap) 
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, D3D12VideoDecoderHeapDesc*, Guid*, void**, int>)(handle->LpVtbl[5]))(handle, pVideoDecoderHeapDesc, riid, ppVideoDecoderHeap);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoDecoderHeap")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoDecoderHeap(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "pVideoDecoderHeapDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODER_HEAP_DESC*")] ref D3D12VideoDecoderHeapDesc pVideoDecoderHeapDesc, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppVideoDecoderHeap")] [NativeName(NativeNameType.Type, "void**")] void** ppVideoDecoderHeap) 
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			fixed (D3D12VideoDecoderHeapDesc* ppVideoDecoderHeapDesc = &pVideoDecoderHeapDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, D3D12VideoDecoderHeapDesc*, Guid*, void**, int>)(handle->LpVtbl[5]))(handle, (D3D12VideoDecoderHeapDesc*)ppVideoDecoderHeapDesc, riid, ppVideoDecoderHeap);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoDecoderHeap")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoDecoderHeap(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "pVideoDecoderHeapDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODER_HEAP_DESC*")] D3D12VideoDecoderHeapDesc* pVideoDecoderHeapDesc, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppVideoDecoderHeap")] [NativeName(NativeNameType.Type, "void**")] void** ppVideoDecoderHeap) 
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, D3D12VideoDecoderHeapDesc*, Guid*, void**, int>)(handle->LpVtbl[5]))(handle, pVideoDecoderHeapDesc, (Guid*)priid, ppVideoDecoderHeap);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoDecoderHeap")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoDecoderHeap(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "pVideoDecoderHeapDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODER_HEAP_DESC*")] ref D3D12VideoDecoderHeapDesc pVideoDecoderHeapDesc, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppVideoDecoderHeap")] [NativeName(NativeNameType.Type, "void**")] void** ppVideoDecoderHeap) 
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			fixed (D3D12VideoDecoderHeapDesc* ppVideoDecoderHeapDesc = &pVideoDecoderHeapDesc)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, D3D12VideoDecoderHeapDesc*, Guid*, void**, int>)(handle->LpVtbl[5]))(handle, (D3D12VideoDecoderHeapDesc*)ppVideoDecoderHeapDesc, (Guid*)priid, ppVideoDecoderHeap);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoDecoderHeap")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoDecoderHeap<T>(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "pVideoDecoderHeapDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODER_HEAP_DESC*")] D3D12VideoDecoderHeapDesc* pVideoDecoderHeapDesc, [NativeName(NativeNameType.Param, "ppVideoDecoderHeap")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppVideoDecoderHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			ppVideoDecoderHeap = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, D3D12VideoDecoderHeapDesc*, Guid*, void**, int>)(handle->LpVtbl[5]))(handle, pVideoDecoderHeapDesc, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoDecoderHeap.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoDecoderHeap")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoDecoderHeap<T>(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "pVideoDecoderHeapDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODER_HEAP_DESC*")] ref D3D12VideoDecoderHeapDesc pVideoDecoderHeapDesc, [NativeName(NativeNameType.Param, "ppVideoDecoderHeap")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppVideoDecoderHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			fixed (D3D12VideoDecoderHeapDesc* ppVideoDecoderHeapDesc = &pVideoDecoderHeapDesc)
			{
				ppVideoDecoderHeap = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, D3D12VideoDecoderHeapDesc*, Guid*, void**, int>)(handle->LpVtbl[5]))(handle, (D3D12VideoDecoderHeapDesc*)ppVideoDecoderHeapDesc, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoDecoderHeap.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoDecoderHeap")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoDecoderHeap<T>(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "pVideoDecoderHeapDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODER_HEAP_DESC*")] D3D12VideoDecoderHeapDesc* pVideoDecoderHeapDesc, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppVideoDecoderHeap")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppVideoDecoderHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppVideoDecoderHeap = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, D3D12VideoDecoderHeapDesc*, Guid*, void**, int>)(handle->LpVtbl[5]))(handle, pVideoDecoderHeapDesc, (Guid*)priid, (void**)ppVideoDecoderHeap.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoDecoderHeap")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoDecoderHeap<T>(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "pVideoDecoderHeapDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODER_HEAP_DESC*")] ref D3D12VideoDecoderHeapDesc pVideoDecoderHeapDesc, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppVideoDecoderHeap")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppVideoDecoderHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			fixed (D3D12VideoDecoderHeapDesc* ppVideoDecoderHeapDesc = &pVideoDecoderHeapDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppVideoDecoderHeap = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, D3D12VideoDecoderHeapDesc*, Guid*, void**, int>)(handle->LpVtbl[5]))(handle, (D3D12VideoDecoderHeapDesc*)ppVideoDecoderHeapDesc, (Guid*)priid, (void**)ppVideoDecoderHeap.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoProcessor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoProcessor(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "NodeMask")] [NativeName(NativeNameType.Type, "UINT")] uint nodeMask, [NativeName(NativeNameType.Param, "pOutputStreamDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_OUTPUT_STREAM_DESC*")] D3D12VideoProcessOutputStreamDesc* pOutputStreamDesc, [NativeName(NativeNameType.Param, "NumInputStreamDescs")] [NativeName(NativeNameType.Type, "UINT")] uint numInputStreamDescs, [NativeName(NativeNameType.Param, "pInputStreamDescs")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC*")] D3D12VideoProcessInputStreamDesc* pInputStreamDescs, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppVideoProcessor")] [NativeName(NativeNameType.Type, "void**")] void** ppVideoProcessor) 
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, uint, D3D12VideoProcessOutputStreamDesc*, uint, D3D12VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, riid, ppVideoProcessor);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoProcessor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoProcessor(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "NodeMask")] [NativeName(NativeNameType.Type, "UINT")] uint nodeMask, [NativeName(NativeNameType.Param, "pOutputStreamDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_OUTPUT_STREAM_DESC*")] ref D3D12VideoProcessOutputStreamDesc pOutputStreamDesc, [NativeName(NativeNameType.Param, "NumInputStreamDescs")] [NativeName(NativeNameType.Type, "UINT")] uint numInputStreamDescs, [NativeName(NativeNameType.Param, "pInputStreamDescs")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC*")] D3D12VideoProcessInputStreamDesc* pInputStreamDescs, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppVideoProcessor")] [NativeName(NativeNameType.Type, "void**")] void** ppVideoProcessor) 
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			fixed (D3D12VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, uint, D3D12VideoProcessOutputStreamDesc*, uint, D3D12VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, (D3D12VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, riid, ppVideoProcessor);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoProcessor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoProcessor(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "NodeMask")] [NativeName(NativeNameType.Type, "UINT")] uint nodeMask, [NativeName(NativeNameType.Param, "pOutputStreamDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_OUTPUT_STREAM_DESC*")] D3D12VideoProcessOutputStreamDesc* pOutputStreamDesc, [NativeName(NativeNameType.Param, "NumInputStreamDescs")] [NativeName(NativeNameType.Type, "UINT")] uint numInputStreamDescs, [NativeName(NativeNameType.Param, "pInputStreamDescs")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC*")] ref D3D12VideoProcessInputStreamDesc pInputStreamDescs, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppVideoProcessor")] [NativeName(NativeNameType.Type, "void**")] void** ppVideoProcessor) 
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			fixed (D3D12VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, uint, D3D12VideoProcessOutputStreamDesc*, uint, D3D12VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, (D3D12VideoProcessInputStreamDesc*)ppInputStreamDescs, riid, ppVideoProcessor);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoProcessor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoProcessor(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "NodeMask")] [NativeName(NativeNameType.Type, "UINT")] uint nodeMask, [NativeName(NativeNameType.Param, "pOutputStreamDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_OUTPUT_STREAM_DESC*")] ref D3D12VideoProcessOutputStreamDesc pOutputStreamDesc, [NativeName(NativeNameType.Param, "NumInputStreamDescs")] [NativeName(NativeNameType.Type, "UINT")] uint numInputStreamDescs, [NativeName(NativeNameType.Param, "pInputStreamDescs")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC*")] ref D3D12VideoProcessInputStreamDesc pInputStreamDescs, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppVideoProcessor")] [NativeName(NativeNameType.Type, "void**")] void** ppVideoProcessor) 
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			fixed (D3D12VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				fixed (D3D12VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, uint, D3D12VideoProcessOutputStreamDesc*, uint, D3D12VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, (D3D12VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, (D3D12VideoProcessInputStreamDesc*)ppInputStreamDescs, riid, ppVideoProcessor);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoProcessor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoProcessor(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "NodeMask")] [NativeName(NativeNameType.Type, "UINT")] uint nodeMask, [NativeName(NativeNameType.Param, "pOutputStreamDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_OUTPUT_STREAM_DESC*")] D3D12VideoProcessOutputStreamDesc* pOutputStreamDesc, [NativeName(NativeNameType.Param, "NumInputStreamDescs")] [NativeName(NativeNameType.Type, "UINT")] uint numInputStreamDescs, [NativeName(NativeNameType.Param, "pInputStreamDescs")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC*")] D3D12VideoProcessInputStreamDesc* pInputStreamDescs, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppVideoProcessor")] [NativeName(NativeNameType.Type, "void**")] void** ppVideoProcessor) 
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, uint, D3D12VideoProcessOutputStreamDesc*, uint, D3D12VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, (Guid*)priid, ppVideoProcessor);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoProcessor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoProcessor(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "NodeMask")] [NativeName(NativeNameType.Type, "UINT")] uint nodeMask, [NativeName(NativeNameType.Param, "pOutputStreamDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_OUTPUT_STREAM_DESC*")] ref D3D12VideoProcessOutputStreamDesc pOutputStreamDesc, [NativeName(NativeNameType.Param, "NumInputStreamDescs")] [NativeName(NativeNameType.Type, "UINT")] uint numInputStreamDescs, [NativeName(NativeNameType.Param, "pInputStreamDescs")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC*")] D3D12VideoProcessInputStreamDesc* pInputStreamDescs, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppVideoProcessor")] [NativeName(NativeNameType.Type, "void**")] void** ppVideoProcessor) 
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			fixed (D3D12VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, uint, D3D12VideoProcessOutputStreamDesc*, uint, D3D12VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, (D3D12VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, (Guid*)priid, ppVideoProcessor);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoProcessor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoProcessor(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "NodeMask")] [NativeName(NativeNameType.Type, "UINT")] uint nodeMask, [NativeName(NativeNameType.Param, "pOutputStreamDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_OUTPUT_STREAM_DESC*")] D3D12VideoProcessOutputStreamDesc* pOutputStreamDesc, [NativeName(NativeNameType.Param, "NumInputStreamDescs")] [NativeName(NativeNameType.Type, "UINT")] uint numInputStreamDescs, [NativeName(NativeNameType.Param, "pInputStreamDescs")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC*")] ref D3D12VideoProcessInputStreamDesc pInputStreamDescs, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppVideoProcessor")] [NativeName(NativeNameType.Type, "void**")] void** ppVideoProcessor) 
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			fixed (D3D12VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, uint, D3D12VideoProcessOutputStreamDesc*, uint, D3D12VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, (D3D12VideoProcessInputStreamDesc*)ppInputStreamDescs, (Guid*)priid, ppVideoProcessor);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoProcessor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoProcessor(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "NodeMask")] [NativeName(NativeNameType.Type, "UINT")] uint nodeMask, [NativeName(NativeNameType.Param, "pOutputStreamDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_OUTPUT_STREAM_DESC*")] ref D3D12VideoProcessOutputStreamDesc pOutputStreamDesc, [NativeName(NativeNameType.Param, "NumInputStreamDescs")] [NativeName(NativeNameType.Type, "UINT")] uint numInputStreamDescs, [NativeName(NativeNameType.Param, "pInputStreamDescs")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC*")] ref D3D12VideoProcessInputStreamDesc pInputStreamDescs, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppVideoProcessor")] [NativeName(NativeNameType.Type, "void**")] void** ppVideoProcessor) 
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			fixed (D3D12VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				fixed (D3D12VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
				{
					fixed (Guid* priid = &riid)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, uint, D3D12VideoProcessOutputStreamDesc*, uint, D3D12VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, (D3D12VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, (D3D12VideoProcessInputStreamDesc*)ppInputStreamDescs, (Guid*)priid, ppVideoProcessor);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoProcessor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoProcessor<T>(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "NodeMask")] [NativeName(NativeNameType.Type, "UINT")] uint nodeMask, [NativeName(NativeNameType.Param, "pOutputStreamDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_OUTPUT_STREAM_DESC*")] D3D12VideoProcessOutputStreamDesc* pOutputStreamDesc, [NativeName(NativeNameType.Param, "NumInputStreamDescs")] [NativeName(NativeNameType.Type, "UINT")] uint numInputStreamDescs, [NativeName(NativeNameType.Param, "pInputStreamDescs")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC*")] D3D12VideoProcessInputStreamDesc* pInputStreamDescs, [NativeName(NativeNameType.Param, "ppVideoProcessor")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			ppVideoProcessor = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, uint, D3D12VideoProcessOutputStreamDesc*, uint, D3D12VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoProcessor.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoProcessor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoProcessor<T>(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "NodeMask")] [NativeName(NativeNameType.Type, "UINT")] uint nodeMask, [NativeName(NativeNameType.Param, "pOutputStreamDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_OUTPUT_STREAM_DESC*")] ref D3D12VideoProcessOutputStreamDesc pOutputStreamDesc, [NativeName(NativeNameType.Param, "NumInputStreamDescs")] [NativeName(NativeNameType.Type, "UINT")] uint numInputStreamDescs, [NativeName(NativeNameType.Param, "pInputStreamDescs")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC*")] D3D12VideoProcessInputStreamDesc* pInputStreamDescs, [NativeName(NativeNameType.Param, "ppVideoProcessor")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			fixed (D3D12VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				ppVideoProcessor = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, uint, D3D12VideoProcessOutputStreamDesc*, uint, D3D12VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, (D3D12VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoProcessor.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoProcessor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoProcessor<T>(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "NodeMask")] [NativeName(NativeNameType.Type, "UINT")] uint nodeMask, [NativeName(NativeNameType.Param, "pOutputStreamDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_OUTPUT_STREAM_DESC*")] D3D12VideoProcessOutputStreamDesc* pOutputStreamDesc, [NativeName(NativeNameType.Param, "NumInputStreamDescs")] [NativeName(NativeNameType.Type, "UINT")] uint numInputStreamDescs, [NativeName(NativeNameType.Param, "pInputStreamDescs")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC*")] ref D3D12VideoProcessInputStreamDesc pInputStreamDescs, [NativeName(NativeNameType.Param, "ppVideoProcessor")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			fixed (D3D12VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
			{
				ppVideoProcessor = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, uint, D3D12VideoProcessOutputStreamDesc*, uint, D3D12VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, (D3D12VideoProcessInputStreamDesc*)ppInputStreamDescs, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoProcessor.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoProcessor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoProcessor<T>(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "NodeMask")] [NativeName(NativeNameType.Type, "UINT")] uint nodeMask, [NativeName(NativeNameType.Param, "pOutputStreamDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_OUTPUT_STREAM_DESC*")] ref D3D12VideoProcessOutputStreamDesc pOutputStreamDesc, [NativeName(NativeNameType.Param, "NumInputStreamDescs")] [NativeName(NativeNameType.Type, "UINT")] uint numInputStreamDescs, [NativeName(NativeNameType.Param, "pInputStreamDescs")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC*")] ref D3D12VideoProcessInputStreamDesc pInputStreamDescs, [NativeName(NativeNameType.Param, "ppVideoProcessor")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			fixed (D3D12VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				fixed (D3D12VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
				{
					ppVideoProcessor = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, uint, D3D12VideoProcessOutputStreamDesc*, uint, D3D12VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, (D3D12VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, (D3D12VideoProcessInputStreamDesc*)ppInputStreamDescs, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppVideoProcessor.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoProcessor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoProcessor<T>(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "NodeMask")] [NativeName(NativeNameType.Type, "UINT")] uint nodeMask, [NativeName(NativeNameType.Param, "pOutputStreamDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_OUTPUT_STREAM_DESC*")] D3D12VideoProcessOutputStreamDesc* pOutputStreamDesc, [NativeName(NativeNameType.Param, "NumInputStreamDescs")] [NativeName(NativeNameType.Type, "UINT")] uint numInputStreamDescs, [NativeName(NativeNameType.Param, "pInputStreamDescs")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC*")] D3D12VideoProcessInputStreamDesc* pInputStreamDescs, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppVideoProcessor")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppVideoProcessor = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, uint, D3D12VideoProcessOutputStreamDesc*, uint, D3D12VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, (Guid*)priid, (void**)ppVideoProcessor.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoProcessor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoProcessor<T>(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "NodeMask")] [NativeName(NativeNameType.Type, "UINT")] uint nodeMask, [NativeName(NativeNameType.Param, "pOutputStreamDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_OUTPUT_STREAM_DESC*")] ref D3D12VideoProcessOutputStreamDesc pOutputStreamDesc, [NativeName(NativeNameType.Param, "NumInputStreamDescs")] [NativeName(NativeNameType.Type, "UINT")] uint numInputStreamDescs, [NativeName(NativeNameType.Param, "pInputStreamDescs")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC*")] D3D12VideoProcessInputStreamDesc* pInputStreamDescs, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppVideoProcessor")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			fixed (D3D12VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppVideoProcessor = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, uint, D3D12VideoProcessOutputStreamDesc*, uint, D3D12VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, (D3D12VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, pInputStreamDescs, (Guid*)priid, (void**)ppVideoProcessor.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoProcessor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoProcessor<T>(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "NodeMask")] [NativeName(NativeNameType.Type, "UINT")] uint nodeMask, [NativeName(NativeNameType.Param, "pOutputStreamDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_OUTPUT_STREAM_DESC*")] D3D12VideoProcessOutputStreamDesc* pOutputStreamDesc, [NativeName(NativeNameType.Param, "NumInputStreamDescs")] [NativeName(NativeNameType.Type, "UINT")] uint numInputStreamDescs, [NativeName(NativeNameType.Param, "pInputStreamDescs")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC*")] ref D3D12VideoProcessInputStreamDesc pInputStreamDescs, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppVideoProcessor")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			fixed (D3D12VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
			{
				fixed (Guid* priid = &riid)
				{
					ppVideoProcessor = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, uint, D3D12VideoProcessOutputStreamDesc*, uint, D3D12VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, pOutputStreamDesc, numInputStreamDescs, (D3D12VideoProcessInputStreamDesc*)ppInputStreamDescs, (Guid*)priid, (void**)ppVideoProcessor.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateVideoProcessor")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateVideoProcessor<T>(this ComPtr<ID3D12VideoDevice> comObj, [NativeName(NativeNameType.Param, "NodeMask")] [NativeName(NativeNameType.Type, "UINT")] uint nodeMask, [NativeName(NativeNameType.Param, "pOutputStreamDesc")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_OUTPUT_STREAM_DESC*")] ref D3D12VideoProcessOutputStreamDesc pOutputStreamDesc, [NativeName(NativeNameType.Param, "NumInputStreamDescs")] [NativeName(NativeNameType.Type, "UINT")] uint numInputStreamDescs, [NativeName(NativeNameType.Param, "pInputStreamDescs")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC*")] ref D3D12VideoProcessInputStreamDesc pInputStreamDescs, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppVideoProcessor")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppVideoProcessor) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDevice* handle = comObj.Handle;
			fixed (D3D12VideoProcessOutputStreamDesc* ppOutputStreamDesc = &pOutputStreamDesc)
			{
				fixed (D3D12VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
				{
					fixed (Guid* priid = &riid)
					{
						ppVideoProcessor = default;
						int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDevice*, uint, D3D12VideoProcessOutputStreamDesc*, uint, D3D12VideoProcessInputStreamDesc*, Guid*, void**, int>)(handle->LpVtbl[6]))(handle, nodeMask, (D3D12VideoProcessOutputStreamDesc*)ppOutputStreamDesc, numInputStreamDescs, (D3D12VideoProcessInputStreamDesc*)ppInputStreamDescs, (Guid*)priid, (void**)ppVideoProcessor.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12VideoDecoder> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12VideoDecoder* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoder*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12VideoDecoder> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12VideoDecoder* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoder*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12VideoDecoder> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecoder* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoder*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12VideoDecoder> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecoder* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoder*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<ID3D12VideoDecoder> comObj) 
		{
			ID3D12VideoDecoder* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoder*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<ID3D12VideoDecoder> comObj) 
		{
			ID3D12VideoDecoder* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoder*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData(this ComPtr<ID3D12VideoDecoder> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			ID3D12VideoDecoder* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoder*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData(this ComPtr<ID3D12VideoDecoder> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			ID3D12VideoDecoder* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoder*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData(this ComPtr<ID3D12VideoDecoder> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			ID3D12VideoDecoder* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoder*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData(this ComPtr<ID3D12VideoDecoder> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			ID3D12VideoDecoder* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoder*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData<T>(this ComPtr<ID3D12VideoDecoder> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecoder* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoder*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData<T>(this ComPtr<ID3D12VideoDecoder> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecoder* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoder*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData<T>(this ComPtr<ID3D12VideoDecoder> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecoder* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoder*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData<T>(this ComPtr<ID3D12VideoDecoder> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecoder* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoder*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetPrivateData(this ComPtr<ID3D12VideoDecoder> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			ID3D12VideoDecoder* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoder*, Guid*, uint, void*, int>)(handle->LpVtbl[4]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetPrivateData(this ComPtr<ID3D12VideoDecoder> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			ID3D12VideoDecoder* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoder*, Guid*, uint, void*, int>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoDecoder> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pData) 
		{
			ID3D12VideoDecoder* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoder*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoDecoder> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pData) 
		{
			ID3D12VideoDecoder* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoder*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoDecoder> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pData) 
		{
			ID3D12VideoDecoder* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoder*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoDecoder> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pData) 
		{
			ID3D12VideoDecoder* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoder*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoDecoder> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pData) 
		{
			ID3D12VideoDecoder* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoder*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoDecoder> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pData) 
		{
			ID3D12VideoDecoder* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoder*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetName(this ComPtr<ID3D12VideoDecoder> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* name) 
		{
			ID3D12VideoDecoder* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoder*, char*, int>)(handle->LpVtbl[6]))(handle, name);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetName(this ComPtr<ID3D12VideoDecoder> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCWSTR")] ReadOnlySpan<char> name) 
		{
			ID3D12VideoDecoder* handle = comObj.Handle;
			fixed (char* pname = name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoder*, char*, int>)(handle->LpVtbl[6]))(handle, (char*)pname);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetName(this ComPtr<ID3D12VideoDecoder> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCWSTR")] string name) 
		{
			ID3D12VideoDecoder* handle = comObj.Handle;
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoder*, char*, int>)(handle->LpVtbl[6]))(handle, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDevice(this ComPtr<ID3D12VideoDecoder> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppvDevice) 
		{
			ID3D12VideoDecoder* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoder*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, riid, ppvDevice);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDevice(this ComPtr<ID3D12VideoDecoder> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppvDevice) 
		{
			ID3D12VideoDecoder* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoder*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (Guid*)priid, ppvDevice);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDevice<T>(this ComPtr<ID3D12VideoDecoder> comObj, [NativeName(NativeNameType.Param, "ppvDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecoder* handle = comObj.Handle;
			ppvDevice = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoder*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvDevice.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDevice<T>(this ComPtr<ID3D12VideoDecoder> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecoder* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvDevice = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoder*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (Guid*)priid, (void**)ppvDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "D3D12_VIDEO_DECODER_DESC")]
		public static D3D12VideoDecoderDesc GetDesc(this ComPtr<ID3D12VideoDecoder> comObj) 
		{
			ID3D12VideoDecoder* handle = comObj.Handle;
			D3D12VideoDecoderDesc ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecoder*, D3D12VideoDecoderDesc>)(handle->LpVtbl[8]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12VideoProcessor> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12VideoProcessor> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12VideoProcessor> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12VideoProcessor> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<ID3D12VideoProcessor> comObj) 
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<ID3D12VideoProcessor> comObj) 
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData(this ComPtr<ID3D12VideoProcessor> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData(this ComPtr<ID3D12VideoProcessor> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData(this ComPtr<ID3D12VideoProcessor> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData(this ComPtr<ID3D12VideoProcessor> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData<T>(this ComPtr<ID3D12VideoProcessor> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData<T>(this ComPtr<ID3D12VideoProcessor> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData<T>(this ComPtr<ID3D12VideoProcessor> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData<T>(this ComPtr<ID3D12VideoProcessor> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetPrivateData(this ComPtr<ID3D12VideoProcessor> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, Guid*, uint, void*, int>)(handle->LpVtbl[4]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetPrivateData(this ComPtr<ID3D12VideoProcessor> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, Guid*, uint, void*, int>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoProcessor> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pData) 
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoProcessor> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pData) 
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoProcessor> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pData) 
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoProcessor> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pData) 
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoProcessor> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pData) 
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetPrivateDataInterface(this ComPtr<ID3D12VideoProcessor> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pData) 
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, Guid*, IUnknown*, int>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetName(this ComPtr<ID3D12VideoProcessor> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* name) 
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, char*, int>)(handle->LpVtbl[6]))(handle, name);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetName(this ComPtr<ID3D12VideoProcessor> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCWSTR")] ReadOnlySpan<char> name) 
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			fixed (char* pname = name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, char*, int>)(handle->LpVtbl[6]))(handle, (char*)pname);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetName(this ComPtr<ID3D12VideoProcessor> comObj, [NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCWSTR")] string name) 
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, char*, int>)(handle->LpVtbl[6]))(handle, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDevice(this ComPtr<ID3D12VideoProcessor> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppvDevice) 
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, riid, ppvDevice);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDevice(this ComPtr<ID3D12VideoProcessor> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppvDevice) 
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (Guid*)priid, ppvDevice);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDevice<T>(this ComPtr<ID3D12VideoProcessor> comObj, [NativeName(NativeNameType.Param, "ppvDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			ppvDevice = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvDevice.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDevice<T>(this ComPtr<ID3D12VideoProcessor> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvDevice = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, Guid*, void**, int>)(handle->LpVtbl[7]))(handle, (Guid*)priid, (void**)ppvDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetNodeMask")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public static uint GetNodeMask(this ComPtr<ID3D12VideoProcessor> comObj) 
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, uint>)(handle->LpVtbl[8]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetNumInputStreamDescs")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public static uint GetNumInputStreamDescs(this ComPtr<ID3D12VideoProcessor> comObj) 
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, uint>)(handle->LpVtbl[9]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetInputStreamDescs")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetInputStreamDescs(this ComPtr<ID3D12VideoProcessor> comObj, [NativeName(NativeNameType.Param, "NumInputStreamDescs")] [NativeName(NativeNameType.Type, "UINT")] uint numInputStreamDescs, [NativeName(NativeNameType.Param, "pInputStreamDescs")] [NativeName(NativeNameType.Type, "D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC*")] D3D12VideoProcessInputStreamDesc* pInputStreamDescs) 
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, uint, D3D12VideoProcessInputStreamDesc*, int>)(handle->LpVtbl[10]))(handle, numInputStreamDescs, pInputStreamDescs);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetInputStreamDescs")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetInputStreamDescs(this ComPtr<ID3D12VideoProcessor> comObj, [NativeName(NativeNameType.Param, "NumInputStreamDescs")] [NativeName(NativeNameType.Type, "UINT")] uint numInputStreamDescs, [NativeName(NativeNameType.Param, "pInputStreamDescs")] [NativeName(NativeNameType.Type, "D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC*")] ref D3D12VideoProcessInputStreamDesc pInputStreamDescs) 
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			fixed (D3D12VideoProcessInputStreamDesc* ppInputStreamDescs = &pInputStreamDescs)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, uint, D3D12VideoProcessInputStreamDesc*, int>)(handle->LpVtbl[10]))(handle, numInputStreamDescs, (D3D12VideoProcessInputStreamDesc*)ppInputStreamDescs);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutputStreamDesc")]
		[return: NativeName(NativeNameType.Type, "D3D12_VIDEO_PROCESS_OUTPUT_STREAM_DESC")]
		public static D3D12VideoProcessOutputStreamDesc GetOutputStreamDesc(this ComPtr<ID3D12VideoProcessor> comObj) 
		{
			ID3D12VideoProcessor* handle = comObj.Handle;
			D3D12VideoProcessOutputStreamDesc ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoProcessor*, D3D12VideoProcessOutputStreamDesc>)(handle->LpVtbl[11]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12VideoDecodeCommandList> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12VideoDecodeCommandList* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<ID3D12VideoDecodeCommandList> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12VideoDecodeCommandList* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12VideoDecodeCommandList> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecodeCommandList* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<ID3D12VideoDecodeCommandList> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecodeCommandList* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<ID3D12VideoDecodeCommandList> comObj) 
		{
			ID3D12VideoDecodeCommandList* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<ID3D12VideoDecodeCommandList> comObj) 
		{
			ID3D12VideoDecodeCommandList* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData(this ComPtr<ID3D12VideoDecodeCommandList> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			ID3D12VideoDecodeCommandList* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData(this ComPtr<ID3D12VideoDecodeCommandList> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			ID3D12VideoDecodeCommandList* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData(this ComPtr<ID3D12VideoDecodeCommandList> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			ID3D12VideoDecodeCommandList* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData(this ComPtr<ID3D12VideoDecodeCommandList> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			ID3D12VideoDecodeCommandList* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData<T>(this ComPtr<ID3D12VideoDecodeCommandList> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecodeCommandList* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData<T>(this ComPtr<ID3D12VideoDecodeCommandList> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecodeCommandList* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPrivateData<T>(this ComPtr<ID3D12VideoDecodeCommandList> comObj, [NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecodeCommandList* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList*, Guid*, uint*, void*, int>)(handle->LpVtbl[3]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}
	}
}
