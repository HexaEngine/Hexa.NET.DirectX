// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D12
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct FunctionDesc
	{
		/// <summary>
		/// Shader version<br/>
		/// </summary>
		public uint Version;

		/// <summary>
		/// Creator string<br/>
		/// </summary>
		public unsafe byte* Creator;

		/// <summary>
		/// Shader compilation/parse flags<br/>
		/// </summary>
		public uint Flags;

		/// <summary>
		/// Number of constant buffers<br/>
		/// </summary>
		public uint ConstantBuffers;

		/// <summary>
		/// Number of bound resources<br/>
		/// </summary>
		public uint BoundResources;

		/// <summary>
		/// Number of emitted instructions<br/>
		/// </summary>
		public uint InstructionCount;

		/// <summary>
		/// Number of temporary registers used <br/>
		/// </summary>
		public uint TempRegisterCount;

		/// <summary>
		/// Number of temporary arrays used<br/>
		/// </summary>
		public uint TempArrayCount;

		/// <summary>
		/// Number of constant defines <br/>
		/// </summary>
		public uint DefCount;

		/// <summary>
		/// Number of declarations (input + output)<br/>
		/// </summary>
		public uint DclCount;

		/// <summary>
		/// Number of non-categorized texture instructions<br/>
		/// </summary>
		public uint TextureNormalInstructions;

		/// <summary>
		/// Number of texture load instructions<br/>
		/// </summary>
		public uint TextureLoadInstructions;

		/// <summary>
		/// Number of texture comparison instructions<br/>
		/// </summary>
		public uint TextureCompInstructions;

		/// <summary>
		/// Number of texture bias instructions<br/>
		/// </summary>
		public uint TextureBiasInstructions;

		/// <summary>
		/// Number of texture gradient instructions<br/>
		/// </summary>
		public uint TextureGradientInstructions;

		/// <summary>
		/// Number of floating point arithmetic instructions used<br/>
		/// </summary>
		public uint FloatInstructionCount;

		/// <summary>
		/// Number of signed integer arithmetic instructions used<br/>
		/// </summary>
		public uint IntInstructionCount;

		/// <summary>
		/// Number of unsigned integer arithmetic instructions used<br/>
		/// </summary>
		public uint UintInstructionCount;

		/// <summary>
		/// Number of static flow control instructions used<br/>
		/// </summary>
		public uint StaticFlowControlCount;

		/// <summary>
		/// Number of dynamic flow control instructions used<br/>
		/// </summary>
		public uint DynamicFlowControlCount;

		/// <summary>
		/// Number of macro instructions used<br/>
		/// </summary>
		public uint MacroInstructionCount;

		/// <summary>
		/// Number of array instructions used<br/>
		/// </summary>
		public uint ArrayInstructionCount;

		/// <summary>
		/// Number of mov instructions used<br/>
		/// </summary>
		public uint MovInstructionCount;

		/// <summary>
		/// Number of movc instructions used<br/>
		/// </summary>
		public uint MovcInstructionCount;

		/// <summary>
		/// Number of type conversion instructions used<br/>
		/// </summary>
		public uint ConversionInstructionCount;

		/// <summary>
		/// Number of bitwise arithmetic instructions used<br/>
		/// </summary>
		public uint BitwiseInstructionCount;

		/// <summary>
		/// Min target of the function byte code<br/>
		/// </summary>
		public FeatureLevel MinFeatureLevel;

		/// <summary>
		/// Required feature flags<br/>
		/// </summary>
		public ulong RequiredFeatureFlags;

		/// <summary>
		/// Function name<br/>
		/// </summary>
		public unsafe byte* Name;

		/// <summary>
		/// Number of logical parameters in the function signature (not including return)<br/>
		/// </summary>
		public int FunctionParameterCount;

		/// <summary>
		/// TRUE, if function returns a value, false - it is a subroutine<br/>
		/// </summary>
		public int HasReturn;

		/// <summary>
		/// TRUE, if there is a 10L9 VS blob<br/>
		/// </summary>
		public int Has10Level9VertexShader;

		/// <summary>
		/// TRUE, if there is a 10L9 PS blob<br/>
		/// </summary>
		public int Has10Level9PixelShader;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe FunctionDesc(uint version = default, byte* creator = default, uint flags = default, uint constantBuffers = default, uint boundResources = default, uint instructionCount = default, uint tempRegisterCount = default, uint tempArrayCount = default, uint defCount = default, uint dclCount = default, uint textureNormalInstructions = default, uint textureLoadInstructions = default, uint textureCompInstructions = default, uint textureBiasInstructions = default, uint textureGradientInstructions = default, uint floatInstructionCount = default, uint intInstructionCount = default, uint uintInstructionCount = default, uint staticFlowControlCount = default, uint dynamicFlowControlCount = default, uint macroInstructionCount = default, uint arrayInstructionCount = default, uint movInstructionCount = default, uint movcInstructionCount = default, uint conversionInstructionCount = default, uint bitwiseInstructionCount = default, FeatureLevel minFeatureLevel = default, ulong requiredFeatureFlags = default, byte* name = default, int functionParameterCount = default, int hasReturn = default, int has10Level9VertexShader = default, int has10Level9PixelShader = default)
		{
			Version = version;
			Creator = creator;
			Flags = flags;
			ConstantBuffers = constantBuffers;
			BoundResources = boundResources;
			InstructionCount = instructionCount;
			TempRegisterCount = tempRegisterCount;
			TempArrayCount = tempArrayCount;
			DefCount = defCount;
			DclCount = dclCount;
			TextureNormalInstructions = textureNormalInstructions;
			TextureLoadInstructions = textureLoadInstructions;
			TextureCompInstructions = textureCompInstructions;
			TextureBiasInstructions = textureBiasInstructions;
			TextureGradientInstructions = textureGradientInstructions;
			FloatInstructionCount = floatInstructionCount;
			IntInstructionCount = intInstructionCount;
			UintInstructionCount = uintInstructionCount;
			StaticFlowControlCount = staticFlowControlCount;
			DynamicFlowControlCount = dynamicFlowControlCount;
			MacroInstructionCount = macroInstructionCount;
			ArrayInstructionCount = arrayInstructionCount;
			MovInstructionCount = movInstructionCount;
			MovcInstructionCount = movcInstructionCount;
			ConversionInstructionCount = conversionInstructionCount;
			BitwiseInstructionCount = bitwiseInstructionCount;
			MinFeatureLevel = minFeatureLevel;
			RequiredFeatureFlags = requiredFeatureFlags;
			Name = name;
			FunctionParameterCount = functionParameterCount;
			HasReturn = hasReturn;
			Has10Level9VertexShader = has10Level9VertexShader;
			Has10Level9PixelShader = has10Level9PixelShader;
		}


	}

}
