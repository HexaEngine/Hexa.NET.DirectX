// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D12
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("d52f011b-b56e-453c-a05a-a7f311c8f472")]
	[NativeName(NativeNameType.StructOrClass, "ID3D12VideoDecodeCommandList1")]
	public partial struct ID3D12VideoDecodeCommandList1 : IComObject, IComObject<ID3D12VideoDecodeCommandList1>, IComObject<ID3D12VideoDecodeCommandList>, IComObject<ID3D12CommandList>, IComObject<ID3D12DeviceChild>, IComObject<ID3D12Object>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("d52f011b-b56e-453c-a05a-a7f311c8f472");

		public unsafe ID3D12VideoDecodeCommandList1 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, Guid*, void**, int>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetPrivateData([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, Guid*, uint*, void*, int>)(LpVtbl[3]))(ptr, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetPrivateData([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, Guid*, uint*, void*, int>)(LpVtbl[3]))(ptr, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetPrivateData([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, Guid*, uint*, void*, int>)(LpVtbl[3]))(ptr, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetPrivateData([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, Guid*, uint*, void*, int>)(LpVtbl[3]))(ptr, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetPrivateData<T>([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, Guid*, uint*, void*, int>)(LpVtbl[3]))(ptr, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetPrivateData<T>([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, Guid*, uint*, void*, int>)(LpVtbl[3]))(ptr, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetPrivateData<T>([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, Guid*, uint*, void*, int>)(LpVtbl[3]))(ptr, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetPrivateData<T>([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, Guid*, uint*, void*, int>)(LpVtbl[3]))(ptr, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int SetPrivateData([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, Guid*, uint, void*, int>)(LpVtbl[4]))(ptr, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int SetPrivateData([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, Guid*, uint, void*, int>)(LpVtbl[4]))(ptr, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int SetPrivateDataInterface([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pData) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, Guid*, IUnknown*, int>)(LpVtbl[5]))(ptr, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int SetPrivateDataInterface([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pData) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, Guid*, IUnknown*, int>)(LpVtbl[5]))(ptr, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int SetPrivateDataInterface([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pData) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppData = &pData)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, Guid*, IUnknown*, int>)(LpVtbl[5]))(ptr, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int SetPrivateDataInterface([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pData) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, Guid*, IUnknown*, int>)(LpVtbl[5]))(ptr, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int SetPrivateDataInterface([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pData) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, Guid*, IUnknown*, int>)(LpVtbl[5]))(ptr, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int SetPrivateDataInterface([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pData) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, Guid*, IUnknown*, int>)(LpVtbl[5]))(ptr, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int SetName([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* name) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, char*, int>)(LpVtbl[6]))(ptr, name);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int SetName([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCWSTR")] ReadOnlySpan<char> name) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (char* pname = name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, char*, int>)(LpVtbl[6]))(ptr, (char*)pname);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int SetName([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCWSTR")] string name) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, char*, int>)(LpVtbl[6]))(ptr, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetDevice([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppvDevice) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, Guid*, void**, int>)(LpVtbl[7]))(ptr, riid, ppvDevice);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetDevice([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppvDevice) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, Guid*, void**, int>)(LpVtbl[7]))(ptr, (Guid*)priid, ppvDevice);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetDevice<T>([NativeName(NativeNameType.Param, "ppvDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvDevice = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, Guid*, void**, int>)(LpVtbl[7]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvDevice.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetDevice<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvDevice = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, Guid*, void**, int>)(LpVtbl[7]))(ptr, (Guid*)priid, (void**)ppvDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetType")]
		[return: NativeName(NativeNameType.Type, "D3D12_COMMAND_LIST_TYPE")]
		public readonly unsafe D3D12CommandListType GetType() 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			D3D12CommandListType ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, D3D12CommandListType>)(LpVtbl[8]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Close")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int Close() 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, int>)(LpVtbl[9]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Reset")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int Reset([NativeName(NativeNameType.Param, "pAllocator")] [NativeName(NativeNameType.Type, "ID3D12CommandAllocator*")] ID3D12CommandAllocator* pAllocator) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12CommandAllocator*, int>)(LpVtbl[10]))(ptr, pAllocator);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Reset")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int Reset([NativeName(NativeNameType.Param, "pAllocator")] [NativeName(NativeNameType.Type, "ID3D12CommandAllocator*")] ref ID3D12CommandAllocator pAllocator) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12CommandAllocator* ppAllocator = &pAllocator)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12CommandAllocator*, int>)(LpVtbl[10]))(ptr, (ID3D12CommandAllocator*)ppAllocator);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Reset")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int Reset([NativeName(NativeNameType.Param, "pAllocator")] [NativeName(NativeNameType.Type, "ID3D12CommandAllocator*")] ComPtr<ID3D12CommandAllocator> pAllocator) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12CommandAllocator*, int>)(LpVtbl[10]))(ptr, (ID3D12CommandAllocator*)pAllocator.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ClearState")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void ClearState() 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, void>)(LpVtbl[11]))(ptr);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ResourceBarrier")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void ResourceBarrier([NativeName(NativeNameType.Param, "NumBarriers")] [NativeName(NativeNameType.Type, "UINT")] uint numBarriers, [NativeName(NativeNameType.Param, "pBarriers")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_BARRIER*")] D3D12ResourceBarrier* pBarriers) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, uint, D3D12ResourceBarrier*, void>)(LpVtbl[12]))(ptr, numBarriers, pBarriers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ResourceBarrier")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void ResourceBarrier([NativeName(NativeNameType.Param, "NumBarriers")] [NativeName(NativeNameType.Type, "UINT")] uint numBarriers, [NativeName(NativeNameType.Param, "pBarriers")] [NativeName(NativeNameType.Type, "const D3D12_RESOURCE_BARRIER*")] ref D3D12ResourceBarrier pBarriers) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12ResourceBarrier* ppBarriers = &pBarriers)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, uint, D3D12ResourceBarrier*, void>)(LpVtbl[12]))(ptr, numBarriers, (D3D12ResourceBarrier*)ppBarriers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DiscardResource")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DiscardResource([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "pRegion")] [NativeName(NativeNameType.Type, "const D3D12_DISCARD_REGION*")] D3D12DiscardRegion* pRegion) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12Resource*, D3D12DiscardRegion*, void>)(LpVtbl[13]))(ptr, pResource, pRegion);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DiscardResource")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DiscardResource([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "pRegion")] [NativeName(NativeNameType.Type, "const D3D12_DISCARD_REGION*")] D3D12DiscardRegion* pRegion) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12Resource*, D3D12DiscardRegion*, void>)(LpVtbl[13]))(ptr, (ID3D12Resource*)ppResource, pRegion);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DiscardResource")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DiscardResource([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "pRegion")] [NativeName(NativeNameType.Type, "const D3D12_DISCARD_REGION*")] D3D12DiscardRegion* pRegion) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12Resource*, D3D12DiscardRegion*, void>)(LpVtbl[13]))(ptr, (ID3D12Resource*)pResource.Handle, pRegion);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DiscardResource")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DiscardResource([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "pRegion")] [NativeName(NativeNameType.Type, "const D3D12_DISCARD_REGION*")] ref D3D12DiscardRegion pRegion) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12DiscardRegion* ppRegion = &pRegion)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12Resource*, D3D12DiscardRegion*, void>)(LpVtbl[13]))(ptr, pResource, (D3D12DiscardRegion*)ppRegion);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DiscardResource")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DiscardResource([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "pRegion")] [NativeName(NativeNameType.Type, "const D3D12_DISCARD_REGION*")] ref D3D12DiscardRegion pRegion) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12DiscardRegion* ppRegion = &pRegion)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12Resource*, D3D12DiscardRegion*, void>)(LpVtbl[13]))(ptr, (ID3D12Resource*)ppResource, (D3D12DiscardRegion*)ppRegion);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DiscardResource")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DiscardResource([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "pRegion")] [NativeName(NativeNameType.Type, "const D3D12_DISCARD_REGION*")] ref D3D12DiscardRegion pRegion) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12DiscardRegion* ppRegion = &pRegion)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12Resource*, D3D12DiscardRegion*, void>)(LpVtbl[13]))(ptr, (ID3D12Resource*)pResource.Handle, (D3D12DiscardRegion*)ppRegion);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BeginQuery")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void BeginQuery([NativeName(NativeNameType.Param, "pQueryHeap")] [NativeName(NativeNameType.Type, "ID3D12QueryHeap*")] ID3D12QueryHeap* pQueryHeap, [NativeName(NativeNameType.Param, "Type")] [NativeName(NativeNameType.Type, "D3D12_QUERY_TYPE")] D3D12QueryType type, [NativeName(NativeNameType.Param, "Index")] [NativeName(NativeNameType.Type, "UINT")] uint index) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12QueryHeap*, D3D12QueryType, uint, void>)(LpVtbl[14]))(ptr, pQueryHeap, type, index);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BeginQuery")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void BeginQuery([NativeName(NativeNameType.Param, "pQueryHeap")] [NativeName(NativeNameType.Type, "ID3D12QueryHeap*")] ref ID3D12QueryHeap pQueryHeap, [NativeName(NativeNameType.Param, "Type")] [NativeName(NativeNameType.Type, "D3D12_QUERY_TYPE")] D3D12QueryType type, [NativeName(NativeNameType.Param, "Index")] [NativeName(NativeNameType.Type, "UINT")] uint index) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12QueryHeap* ppQueryHeap = &pQueryHeap)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12QueryHeap*, D3D12QueryType, uint, void>)(LpVtbl[14]))(ptr, (ID3D12QueryHeap*)ppQueryHeap, type, index);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "EndQuery")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void EndQuery([NativeName(NativeNameType.Param, "pQueryHeap")] [NativeName(NativeNameType.Type, "ID3D12QueryHeap*")] ID3D12QueryHeap* pQueryHeap, [NativeName(NativeNameType.Param, "Type")] [NativeName(NativeNameType.Type, "D3D12_QUERY_TYPE")] D3D12QueryType type, [NativeName(NativeNameType.Param, "Index")] [NativeName(NativeNameType.Type, "UINT")] uint index) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12QueryHeap*, D3D12QueryType, uint, void>)(LpVtbl[15]))(ptr, pQueryHeap, type, index);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "EndQuery")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void EndQuery([NativeName(NativeNameType.Param, "pQueryHeap")] [NativeName(NativeNameType.Type, "ID3D12QueryHeap*")] ref ID3D12QueryHeap pQueryHeap, [NativeName(NativeNameType.Param, "Type")] [NativeName(NativeNameType.Type, "D3D12_QUERY_TYPE")] D3D12QueryType type, [NativeName(NativeNameType.Param, "Index")] [NativeName(NativeNameType.Type, "UINT")] uint index) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12QueryHeap* ppQueryHeap = &pQueryHeap)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12QueryHeap*, D3D12QueryType, uint, void>)(LpVtbl[15]))(ptr, (ID3D12QueryHeap*)ppQueryHeap, type, index);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ResolveQueryData")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void ResolveQueryData([NativeName(NativeNameType.Param, "pQueryHeap")] [NativeName(NativeNameType.Type, "ID3D12QueryHeap*")] ID3D12QueryHeap* pQueryHeap, [NativeName(NativeNameType.Param, "Type")] [NativeName(NativeNameType.Type, "D3D12_QUERY_TYPE")] D3D12QueryType type, [NativeName(NativeNameType.Param, "StartIndex")] [NativeName(NativeNameType.Type, "UINT")] uint startIndex, [NativeName(NativeNameType.Param, "NumQueries")] [NativeName(NativeNameType.Type, "UINT")] uint numQueries, [NativeName(NativeNameType.Param, "pDestinationBuffer")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pDestinationBuffer, [NativeName(NativeNameType.Param, "AlignedDestinationBufferOffset")] [NativeName(NativeNameType.Type, "UINT64")] ulong alignedDestinationBufferOffset) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12QueryHeap*, D3D12QueryType, uint, uint, ID3D12Resource*, ulong, void>)(LpVtbl[16]))(ptr, pQueryHeap, type, startIndex, numQueries, pDestinationBuffer, alignedDestinationBufferOffset);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ResolveQueryData")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void ResolveQueryData([NativeName(NativeNameType.Param, "pQueryHeap")] [NativeName(NativeNameType.Type, "ID3D12QueryHeap*")] ref ID3D12QueryHeap pQueryHeap, [NativeName(NativeNameType.Param, "Type")] [NativeName(NativeNameType.Type, "D3D12_QUERY_TYPE")] D3D12QueryType type, [NativeName(NativeNameType.Param, "StartIndex")] [NativeName(NativeNameType.Type, "UINT")] uint startIndex, [NativeName(NativeNameType.Param, "NumQueries")] [NativeName(NativeNameType.Type, "UINT")] uint numQueries, [NativeName(NativeNameType.Param, "pDestinationBuffer")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pDestinationBuffer, [NativeName(NativeNameType.Param, "AlignedDestinationBufferOffset")] [NativeName(NativeNameType.Type, "UINT64")] ulong alignedDestinationBufferOffset) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12QueryHeap* ppQueryHeap = &pQueryHeap)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12QueryHeap*, D3D12QueryType, uint, uint, ID3D12Resource*, ulong, void>)(LpVtbl[16]))(ptr, (ID3D12QueryHeap*)ppQueryHeap, type, startIndex, numQueries, pDestinationBuffer, alignedDestinationBufferOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ResolveQueryData")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void ResolveQueryData([NativeName(NativeNameType.Param, "pQueryHeap")] [NativeName(NativeNameType.Type, "ID3D12QueryHeap*")] ID3D12QueryHeap* pQueryHeap, [NativeName(NativeNameType.Param, "Type")] [NativeName(NativeNameType.Type, "D3D12_QUERY_TYPE")] D3D12QueryType type, [NativeName(NativeNameType.Param, "StartIndex")] [NativeName(NativeNameType.Type, "UINT")] uint startIndex, [NativeName(NativeNameType.Param, "NumQueries")] [NativeName(NativeNameType.Type, "UINT")] uint numQueries, [NativeName(NativeNameType.Param, "pDestinationBuffer")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pDestinationBuffer, [NativeName(NativeNameType.Param, "AlignedDestinationBufferOffset")] [NativeName(NativeNameType.Type, "UINT64")] ulong alignedDestinationBufferOffset) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDestinationBuffer = &pDestinationBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12QueryHeap*, D3D12QueryType, uint, uint, ID3D12Resource*, ulong, void>)(LpVtbl[16]))(ptr, pQueryHeap, type, startIndex, numQueries, (ID3D12Resource*)ppDestinationBuffer, alignedDestinationBufferOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ResolveQueryData")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void ResolveQueryData([NativeName(NativeNameType.Param, "pQueryHeap")] [NativeName(NativeNameType.Type, "ID3D12QueryHeap*")] ID3D12QueryHeap* pQueryHeap, [NativeName(NativeNameType.Param, "Type")] [NativeName(NativeNameType.Type, "D3D12_QUERY_TYPE")] D3D12QueryType type, [NativeName(NativeNameType.Param, "StartIndex")] [NativeName(NativeNameType.Type, "UINT")] uint startIndex, [NativeName(NativeNameType.Param, "NumQueries")] [NativeName(NativeNameType.Type, "UINT")] uint numQueries, [NativeName(NativeNameType.Param, "pDestinationBuffer")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pDestinationBuffer, [NativeName(NativeNameType.Param, "AlignedDestinationBufferOffset")] [NativeName(NativeNameType.Type, "UINT64")] ulong alignedDestinationBufferOffset) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12QueryHeap*, D3D12QueryType, uint, uint, ID3D12Resource*, ulong, void>)(LpVtbl[16]))(ptr, pQueryHeap, type, startIndex, numQueries, (ID3D12Resource*)pDestinationBuffer.Handle, alignedDestinationBufferOffset);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ResolveQueryData")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void ResolveQueryData([NativeName(NativeNameType.Param, "pQueryHeap")] [NativeName(NativeNameType.Type, "ID3D12QueryHeap*")] ref ID3D12QueryHeap pQueryHeap, [NativeName(NativeNameType.Param, "Type")] [NativeName(NativeNameType.Type, "D3D12_QUERY_TYPE")] D3D12QueryType type, [NativeName(NativeNameType.Param, "StartIndex")] [NativeName(NativeNameType.Type, "UINT")] uint startIndex, [NativeName(NativeNameType.Param, "NumQueries")] [NativeName(NativeNameType.Type, "UINT")] uint numQueries, [NativeName(NativeNameType.Param, "pDestinationBuffer")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pDestinationBuffer, [NativeName(NativeNameType.Param, "AlignedDestinationBufferOffset")] [NativeName(NativeNameType.Type, "UINT64")] ulong alignedDestinationBufferOffset) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12QueryHeap* ppQueryHeap = &pQueryHeap)
			{
				fixed (ID3D12Resource* ppDestinationBuffer = &pDestinationBuffer)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12QueryHeap*, D3D12QueryType, uint, uint, ID3D12Resource*, ulong, void>)(LpVtbl[16]))(ptr, (ID3D12QueryHeap*)ppQueryHeap, type, startIndex, numQueries, (ID3D12Resource*)ppDestinationBuffer, alignedDestinationBufferOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ResolveQueryData")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void ResolveQueryData([NativeName(NativeNameType.Param, "pQueryHeap")] [NativeName(NativeNameType.Type, "ID3D12QueryHeap*")] ref ID3D12QueryHeap pQueryHeap, [NativeName(NativeNameType.Param, "Type")] [NativeName(NativeNameType.Type, "D3D12_QUERY_TYPE")] D3D12QueryType type, [NativeName(NativeNameType.Param, "StartIndex")] [NativeName(NativeNameType.Type, "UINT")] uint startIndex, [NativeName(NativeNameType.Param, "NumQueries")] [NativeName(NativeNameType.Type, "UINT")] uint numQueries, [NativeName(NativeNameType.Param, "pDestinationBuffer")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pDestinationBuffer, [NativeName(NativeNameType.Param, "AlignedDestinationBufferOffset")] [NativeName(NativeNameType.Type, "UINT64")] ulong alignedDestinationBufferOffset) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12QueryHeap* ppQueryHeap = &pQueryHeap)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12QueryHeap*, D3D12QueryType, uint, uint, ID3D12Resource*, ulong, void>)(LpVtbl[16]))(ptr, (ID3D12QueryHeap*)ppQueryHeap, type, startIndex, numQueries, (ID3D12Resource*)pDestinationBuffer.Handle, alignedDestinationBufferOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPredication")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void SetPredication([NativeName(NativeNameType.Param, "pBuffer")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pBuffer, [NativeName(NativeNameType.Param, "AlignedBufferOffset")] [NativeName(NativeNameType.Type, "UINT64")] ulong alignedBufferOffset, [NativeName(NativeNameType.Param, "Operation")] [NativeName(NativeNameType.Type, "D3D12_PREDICATION_OP")] D3D12PredicationOp operation) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12Resource*, ulong, D3D12PredicationOp, void>)(LpVtbl[17]))(ptr, pBuffer, alignedBufferOffset, operation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPredication")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void SetPredication([NativeName(NativeNameType.Param, "pBuffer")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pBuffer, [NativeName(NativeNameType.Param, "AlignedBufferOffset")] [NativeName(NativeNameType.Type, "UINT64")] ulong alignedBufferOffset, [NativeName(NativeNameType.Param, "Operation")] [NativeName(NativeNameType.Type, "D3D12_PREDICATION_OP")] D3D12PredicationOp operation) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppBuffer = &pBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12Resource*, ulong, D3D12PredicationOp, void>)(LpVtbl[17]))(ptr, (ID3D12Resource*)ppBuffer, alignedBufferOffset, operation);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPredication")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void SetPredication([NativeName(NativeNameType.Param, "pBuffer")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pBuffer, [NativeName(NativeNameType.Param, "AlignedBufferOffset")] [NativeName(NativeNameType.Type, "UINT64")] ulong alignedBufferOffset, [NativeName(NativeNameType.Param, "Operation")] [NativeName(NativeNameType.Type, "D3D12_PREDICATION_OP")] D3D12PredicationOp operation) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12Resource*, ulong, D3D12PredicationOp, void>)(LpVtbl[17]))(ptr, (ID3D12Resource*)pBuffer.Handle, alignedBufferOffset, operation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetMarker")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void SetMarker([NativeName(NativeNameType.Param, "Metadata")] [NativeName(NativeNameType.Type, "UINT")] uint metadata, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData, [NativeName(NativeNameType.Param, "Size")] [NativeName(NativeNameType.Type, "UINT")] uint size) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, uint, void*, uint, void>)(LpVtbl[18]))(ptr, metadata, pData, size);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BeginEvent")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void BeginEvent([NativeName(NativeNameType.Param, "Metadata")] [NativeName(NativeNameType.Type, "UINT")] uint metadata, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData, [NativeName(NativeNameType.Param, "Size")] [NativeName(NativeNameType.Type, "UINT")] uint size) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, uint, void*, uint, void>)(LpVtbl[19]))(ptr, metadata, pData, size);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "EndEvent")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void EndEvent() 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, void>)(LpVtbl[20]))(ptr);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DecodeFrame")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DecodeFrame([NativeName(NativeNameType.Param, "pDecoder")] [NativeName(NativeNameType.Type, "ID3D12VideoDecoder*")] ID3D12VideoDecoder* pDecoder, [NativeName(NativeNameType.Param, "pOutputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS*")] D3D12VideoDecodeOutputStreamArguments* pOutputArguments, [NativeName(NativeNameType.Param, "pInputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS*")] D3D12VideoDecodeInputStreamArguments* pInputArguments) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12VideoDecoder*, D3D12VideoDecodeOutputStreamArguments*, D3D12VideoDecodeInputStreamArguments*, void>)(LpVtbl[21]))(ptr, pDecoder, pOutputArguments, pInputArguments);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DecodeFrame")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DecodeFrame([NativeName(NativeNameType.Param, "pDecoder")] [NativeName(NativeNameType.Type, "ID3D12VideoDecoder*")] ref ID3D12VideoDecoder pDecoder, [NativeName(NativeNameType.Param, "pOutputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS*")] D3D12VideoDecodeOutputStreamArguments* pOutputArguments, [NativeName(NativeNameType.Param, "pInputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS*")] D3D12VideoDecodeInputStreamArguments* pInputArguments) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12VideoDecoder* ppDecoder = &pDecoder)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12VideoDecoder*, D3D12VideoDecodeOutputStreamArguments*, D3D12VideoDecodeInputStreamArguments*, void>)(LpVtbl[21]))(ptr, (ID3D12VideoDecoder*)ppDecoder, pOutputArguments, pInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DecodeFrame")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DecodeFrame([NativeName(NativeNameType.Param, "pDecoder")] [NativeName(NativeNameType.Type, "ID3D12VideoDecoder*")] ComPtr<ID3D12VideoDecoder> pDecoder, [NativeName(NativeNameType.Param, "pOutputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS*")] D3D12VideoDecodeOutputStreamArguments* pOutputArguments, [NativeName(NativeNameType.Param, "pInputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS*")] D3D12VideoDecodeInputStreamArguments* pInputArguments) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12VideoDecoder*, D3D12VideoDecodeOutputStreamArguments*, D3D12VideoDecodeInputStreamArguments*, void>)(LpVtbl[21]))(ptr, (ID3D12VideoDecoder*)pDecoder.Handle, pOutputArguments, pInputArguments);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DecodeFrame")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DecodeFrame([NativeName(NativeNameType.Param, "pDecoder")] [NativeName(NativeNameType.Type, "ID3D12VideoDecoder*")] ID3D12VideoDecoder* pDecoder, [NativeName(NativeNameType.Param, "pOutputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS*")] ref D3D12VideoDecodeOutputStreamArguments pOutputArguments, [NativeName(NativeNameType.Param, "pInputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS*")] D3D12VideoDecodeInputStreamArguments* pInputArguments) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12VideoDecodeOutputStreamArguments* ppOutputArguments = &pOutputArguments)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12VideoDecoder*, D3D12VideoDecodeOutputStreamArguments*, D3D12VideoDecodeInputStreamArguments*, void>)(LpVtbl[21]))(ptr, pDecoder, (D3D12VideoDecodeOutputStreamArguments*)ppOutputArguments, pInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DecodeFrame")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DecodeFrame([NativeName(NativeNameType.Param, "pDecoder")] [NativeName(NativeNameType.Type, "ID3D12VideoDecoder*")] ref ID3D12VideoDecoder pDecoder, [NativeName(NativeNameType.Param, "pOutputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS*")] ref D3D12VideoDecodeOutputStreamArguments pOutputArguments, [NativeName(NativeNameType.Param, "pInputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS*")] D3D12VideoDecodeInputStreamArguments* pInputArguments) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (D3D12VideoDecodeOutputStreamArguments* ppOutputArguments = &pOutputArguments)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12VideoDecoder*, D3D12VideoDecodeOutputStreamArguments*, D3D12VideoDecodeInputStreamArguments*, void>)(LpVtbl[21]))(ptr, (ID3D12VideoDecoder*)ppDecoder, (D3D12VideoDecodeOutputStreamArguments*)ppOutputArguments, pInputArguments);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DecodeFrame")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DecodeFrame([NativeName(NativeNameType.Param, "pDecoder")] [NativeName(NativeNameType.Type, "ID3D12VideoDecoder*")] ComPtr<ID3D12VideoDecoder> pDecoder, [NativeName(NativeNameType.Param, "pOutputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS*")] ref D3D12VideoDecodeOutputStreamArguments pOutputArguments, [NativeName(NativeNameType.Param, "pInputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS*")] D3D12VideoDecodeInputStreamArguments* pInputArguments) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12VideoDecodeOutputStreamArguments* ppOutputArguments = &pOutputArguments)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12VideoDecoder*, D3D12VideoDecodeOutputStreamArguments*, D3D12VideoDecodeInputStreamArguments*, void>)(LpVtbl[21]))(ptr, (ID3D12VideoDecoder*)pDecoder.Handle, (D3D12VideoDecodeOutputStreamArguments*)ppOutputArguments, pInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DecodeFrame")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DecodeFrame([NativeName(NativeNameType.Param, "pDecoder")] [NativeName(NativeNameType.Type, "ID3D12VideoDecoder*")] ID3D12VideoDecoder* pDecoder, [NativeName(NativeNameType.Param, "pOutputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS*")] D3D12VideoDecodeOutputStreamArguments* pOutputArguments, [NativeName(NativeNameType.Param, "pInputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS*")] ref D3D12VideoDecodeInputStreamArguments pInputArguments) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12VideoDecodeInputStreamArguments* ppInputArguments = &pInputArguments)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12VideoDecoder*, D3D12VideoDecodeOutputStreamArguments*, D3D12VideoDecodeInputStreamArguments*, void>)(LpVtbl[21]))(ptr, pDecoder, pOutputArguments, (D3D12VideoDecodeInputStreamArguments*)ppInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DecodeFrame")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DecodeFrame([NativeName(NativeNameType.Param, "pDecoder")] [NativeName(NativeNameType.Type, "ID3D12VideoDecoder*")] ref ID3D12VideoDecoder pDecoder, [NativeName(NativeNameType.Param, "pOutputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS*")] D3D12VideoDecodeOutputStreamArguments* pOutputArguments, [NativeName(NativeNameType.Param, "pInputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS*")] ref D3D12VideoDecodeInputStreamArguments pInputArguments) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (D3D12VideoDecodeInputStreamArguments* ppInputArguments = &pInputArguments)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12VideoDecoder*, D3D12VideoDecodeOutputStreamArguments*, D3D12VideoDecodeInputStreamArguments*, void>)(LpVtbl[21]))(ptr, (ID3D12VideoDecoder*)ppDecoder, pOutputArguments, (D3D12VideoDecodeInputStreamArguments*)ppInputArguments);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DecodeFrame")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DecodeFrame([NativeName(NativeNameType.Param, "pDecoder")] [NativeName(NativeNameType.Type, "ID3D12VideoDecoder*")] ComPtr<ID3D12VideoDecoder> pDecoder, [NativeName(NativeNameType.Param, "pOutputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS*")] D3D12VideoDecodeOutputStreamArguments* pOutputArguments, [NativeName(NativeNameType.Param, "pInputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS*")] ref D3D12VideoDecodeInputStreamArguments pInputArguments) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12VideoDecodeInputStreamArguments* ppInputArguments = &pInputArguments)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12VideoDecoder*, D3D12VideoDecodeOutputStreamArguments*, D3D12VideoDecodeInputStreamArguments*, void>)(LpVtbl[21]))(ptr, (ID3D12VideoDecoder*)pDecoder.Handle, pOutputArguments, (D3D12VideoDecodeInputStreamArguments*)ppInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DecodeFrame")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DecodeFrame([NativeName(NativeNameType.Param, "pDecoder")] [NativeName(NativeNameType.Type, "ID3D12VideoDecoder*")] ID3D12VideoDecoder* pDecoder, [NativeName(NativeNameType.Param, "pOutputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS*")] ref D3D12VideoDecodeOutputStreamArguments pOutputArguments, [NativeName(NativeNameType.Param, "pInputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS*")] ref D3D12VideoDecodeInputStreamArguments pInputArguments) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12VideoDecodeOutputStreamArguments* ppOutputArguments = &pOutputArguments)
			{
				fixed (D3D12VideoDecodeInputStreamArguments* ppInputArguments = &pInputArguments)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12VideoDecoder*, D3D12VideoDecodeOutputStreamArguments*, D3D12VideoDecodeInputStreamArguments*, void>)(LpVtbl[21]))(ptr, pDecoder, (D3D12VideoDecodeOutputStreamArguments*)ppOutputArguments, (D3D12VideoDecodeInputStreamArguments*)ppInputArguments);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DecodeFrame")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DecodeFrame([NativeName(NativeNameType.Param, "pDecoder")] [NativeName(NativeNameType.Type, "ID3D12VideoDecoder*")] ref ID3D12VideoDecoder pDecoder, [NativeName(NativeNameType.Param, "pOutputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS*")] ref D3D12VideoDecodeOutputStreamArguments pOutputArguments, [NativeName(NativeNameType.Param, "pInputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS*")] ref D3D12VideoDecodeInputStreamArguments pInputArguments) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (D3D12VideoDecodeOutputStreamArguments* ppOutputArguments = &pOutputArguments)
				{
					fixed (D3D12VideoDecodeInputStreamArguments* ppInputArguments = &pInputArguments)
					{
						((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12VideoDecoder*, D3D12VideoDecodeOutputStreamArguments*, D3D12VideoDecodeInputStreamArguments*, void>)(LpVtbl[21]))(ptr, (ID3D12VideoDecoder*)ppDecoder, (D3D12VideoDecodeOutputStreamArguments*)ppOutputArguments, (D3D12VideoDecodeInputStreamArguments*)ppInputArguments);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DecodeFrame")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DecodeFrame([NativeName(NativeNameType.Param, "pDecoder")] [NativeName(NativeNameType.Type, "ID3D12VideoDecoder*")] ComPtr<ID3D12VideoDecoder> pDecoder, [NativeName(NativeNameType.Param, "pOutputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS*")] ref D3D12VideoDecodeOutputStreamArguments pOutputArguments, [NativeName(NativeNameType.Param, "pInputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS*")] ref D3D12VideoDecodeInputStreamArguments pInputArguments) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12VideoDecodeOutputStreamArguments* ppOutputArguments = &pOutputArguments)
			{
				fixed (D3D12VideoDecodeInputStreamArguments* ppInputArguments = &pInputArguments)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12VideoDecoder*, D3D12VideoDecodeOutputStreamArguments*, D3D12VideoDecodeInputStreamArguments*, void>)(LpVtbl[21]))(ptr, (ID3D12VideoDecoder*)pDecoder.Handle, (D3D12VideoDecodeOutputStreamArguments*)ppOutputArguments, (D3D12VideoDecodeInputStreamArguments*)ppInputArguments);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "WriteBufferImmediate")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void WriteBufferImmediate([NativeName(NativeNameType.Param, "Count")] [NativeName(NativeNameType.Type, "UINT")] uint count, [NativeName(NativeNameType.Param, "pParams")] [NativeName(NativeNameType.Type, "const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*")] D3D12WritebufferimmediateParameter* pParams, [NativeName(NativeNameType.Param, "pModes")] [NativeName(NativeNameType.Type, "const D3D12_WRITEBUFFERIMMEDIATE_MODE*")] D3D12WritebufferimmediateMode* pModes) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, uint, D3D12WritebufferimmediateParameter*, D3D12WritebufferimmediateMode*, void>)(LpVtbl[22]))(ptr, count, pParams, pModes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "WriteBufferImmediate")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void WriteBufferImmediate([NativeName(NativeNameType.Param, "Count")] [NativeName(NativeNameType.Type, "UINT")] uint count, [NativeName(NativeNameType.Param, "pParams")] [NativeName(NativeNameType.Type, "const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*")] ref D3D12WritebufferimmediateParameter pParams, [NativeName(NativeNameType.Param, "pModes")] [NativeName(NativeNameType.Type, "const D3D12_WRITEBUFFERIMMEDIATE_MODE*")] D3D12WritebufferimmediateMode* pModes) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12WritebufferimmediateParameter* ppParams = &pParams)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, uint, D3D12WritebufferimmediateParameter*, D3D12WritebufferimmediateMode*, void>)(LpVtbl[22]))(ptr, count, (D3D12WritebufferimmediateParameter*)ppParams, pModes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "WriteBufferImmediate")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void WriteBufferImmediate([NativeName(NativeNameType.Param, "Count")] [NativeName(NativeNameType.Type, "UINT")] uint count, [NativeName(NativeNameType.Param, "pParams")] [NativeName(NativeNameType.Type, "const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*")] D3D12WritebufferimmediateParameter* pParams, [NativeName(NativeNameType.Param, "pModes")] [NativeName(NativeNameType.Type, "const D3D12_WRITEBUFFERIMMEDIATE_MODE*")] ref D3D12WritebufferimmediateMode pModes) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12WritebufferimmediateMode* ppModes = &pModes)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, uint, D3D12WritebufferimmediateParameter*, D3D12WritebufferimmediateMode*, void>)(LpVtbl[22]))(ptr, count, pParams, (D3D12WritebufferimmediateMode*)ppModes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "WriteBufferImmediate")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void WriteBufferImmediate([NativeName(NativeNameType.Param, "Count")] [NativeName(NativeNameType.Type, "UINT")] uint count, [NativeName(NativeNameType.Param, "pParams")] [NativeName(NativeNameType.Type, "const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*")] ref D3D12WritebufferimmediateParameter pParams, [NativeName(NativeNameType.Param, "pModes")] [NativeName(NativeNameType.Type, "const D3D12_WRITEBUFFERIMMEDIATE_MODE*")] ref D3D12WritebufferimmediateMode pModes) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12WritebufferimmediateParameter* ppParams = &pParams)
			{
				fixed (D3D12WritebufferimmediateMode* ppModes = &pModes)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, uint, D3D12WritebufferimmediateParameter*, D3D12WritebufferimmediateMode*, void>)(LpVtbl[22]))(ptr, count, (D3D12WritebufferimmediateParameter*)ppParams, (D3D12WritebufferimmediateMode*)ppModes);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DecodeFrame1")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DecodeFrame1([NativeName(NativeNameType.Param, "pDecoder")] [NativeName(NativeNameType.Type, "ID3D12VideoDecoder*")] ID3D12VideoDecoder* pDecoder, [NativeName(NativeNameType.Param, "pOutputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS1*")] D3D12VideoDecodeOutputStreamArguments1* pOutputArguments, [NativeName(NativeNameType.Param, "pInputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS*")] D3D12VideoDecodeInputStreamArguments* pInputArguments) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12VideoDecoder*, D3D12VideoDecodeOutputStreamArguments1*, D3D12VideoDecodeInputStreamArguments*, void>)(LpVtbl[23]))(ptr, pDecoder, pOutputArguments, pInputArguments);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DecodeFrame1")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DecodeFrame1([NativeName(NativeNameType.Param, "pDecoder")] [NativeName(NativeNameType.Type, "ID3D12VideoDecoder*")] ref ID3D12VideoDecoder pDecoder, [NativeName(NativeNameType.Param, "pOutputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS1*")] D3D12VideoDecodeOutputStreamArguments1* pOutputArguments, [NativeName(NativeNameType.Param, "pInputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS*")] D3D12VideoDecodeInputStreamArguments* pInputArguments) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12VideoDecoder* ppDecoder = &pDecoder)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12VideoDecoder*, D3D12VideoDecodeOutputStreamArguments1*, D3D12VideoDecodeInputStreamArguments*, void>)(LpVtbl[23]))(ptr, (ID3D12VideoDecoder*)ppDecoder, pOutputArguments, pInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DecodeFrame1")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DecodeFrame1([NativeName(NativeNameType.Param, "pDecoder")] [NativeName(NativeNameType.Type, "ID3D12VideoDecoder*")] ComPtr<ID3D12VideoDecoder> pDecoder, [NativeName(NativeNameType.Param, "pOutputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS1*")] D3D12VideoDecodeOutputStreamArguments1* pOutputArguments, [NativeName(NativeNameType.Param, "pInputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS*")] D3D12VideoDecodeInputStreamArguments* pInputArguments) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12VideoDecoder*, D3D12VideoDecodeOutputStreamArguments1*, D3D12VideoDecodeInputStreamArguments*, void>)(LpVtbl[23]))(ptr, (ID3D12VideoDecoder*)pDecoder.Handle, pOutputArguments, pInputArguments);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DecodeFrame1")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DecodeFrame1([NativeName(NativeNameType.Param, "pDecoder")] [NativeName(NativeNameType.Type, "ID3D12VideoDecoder*")] ID3D12VideoDecoder* pDecoder, [NativeName(NativeNameType.Param, "pOutputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS1*")] ref D3D12VideoDecodeOutputStreamArguments1 pOutputArguments, [NativeName(NativeNameType.Param, "pInputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS*")] D3D12VideoDecodeInputStreamArguments* pInputArguments) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12VideoDecodeOutputStreamArguments1* ppOutputArguments = &pOutputArguments)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12VideoDecoder*, D3D12VideoDecodeOutputStreamArguments1*, D3D12VideoDecodeInputStreamArguments*, void>)(LpVtbl[23]))(ptr, pDecoder, (D3D12VideoDecodeOutputStreamArguments1*)ppOutputArguments, pInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DecodeFrame1")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DecodeFrame1([NativeName(NativeNameType.Param, "pDecoder")] [NativeName(NativeNameType.Type, "ID3D12VideoDecoder*")] ref ID3D12VideoDecoder pDecoder, [NativeName(NativeNameType.Param, "pOutputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS1*")] ref D3D12VideoDecodeOutputStreamArguments1 pOutputArguments, [NativeName(NativeNameType.Param, "pInputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS*")] D3D12VideoDecodeInputStreamArguments* pInputArguments) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (D3D12VideoDecodeOutputStreamArguments1* ppOutputArguments = &pOutputArguments)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12VideoDecoder*, D3D12VideoDecodeOutputStreamArguments1*, D3D12VideoDecodeInputStreamArguments*, void>)(LpVtbl[23]))(ptr, (ID3D12VideoDecoder*)ppDecoder, (D3D12VideoDecodeOutputStreamArguments1*)ppOutputArguments, pInputArguments);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DecodeFrame1")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DecodeFrame1([NativeName(NativeNameType.Param, "pDecoder")] [NativeName(NativeNameType.Type, "ID3D12VideoDecoder*")] ComPtr<ID3D12VideoDecoder> pDecoder, [NativeName(NativeNameType.Param, "pOutputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS1*")] ref D3D12VideoDecodeOutputStreamArguments1 pOutputArguments, [NativeName(NativeNameType.Param, "pInputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS*")] D3D12VideoDecodeInputStreamArguments* pInputArguments) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12VideoDecodeOutputStreamArguments1* ppOutputArguments = &pOutputArguments)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12VideoDecoder*, D3D12VideoDecodeOutputStreamArguments1*, D3D12VideoDecodeInputStreamArguments*, void>)(LpVtbl[23]))(ptr, (ID3D12VideoDecoder*)pDecoder.Handle, (D3D12VideoDecodeOutputStreamArguments1*)ppOutputArguments, pInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DecodeFrame1")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DecodeFrame1([NativeName(NativeNameType.Param, "pDecoder")] [NativeName(NativeNameType.Type, "ID3D12VideoDecoder*")] ID3D12VideoDecoder* pDecoder, [NativeName(NativeNameType.Param, "pOutputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS1*")] D3D12VideoDecodeOutputStreamArguments1* pOutputArguments, [NativeName(NativeNameType.Param, "pInputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS*")] ref D3D12VideoDecodeInputStreamArguments pInputArguments) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12VideoDecodeInputStreamArguments* ppInputArguments = &pInputArguments)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12VideoDecoder*, D3D12VideoDecodeOutputStreamArguments1*, D3D12VideoDecodeInputStreamArguments*, void>)(LpVtbl[23]))(ptr, pDecoder, pOutputArguments, (D3D12VideoDecodeInputStreamArguments*)ppInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DecodeFrame1")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DecodeFrame1([NativeName(NativeNameType.Param, "pDecoder")] [NativeName(NativeNameType.Type, "ID3D12VideoDecoder*")] ref ID3D12VideoDecoder pDecoder, [NativeName(NativeNameType.Param, "pOutputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS1*")] D3D12VideoDecodeOutputStreamArguments1* pOutputArguments, [NativeName(NativeNameType.Param, "pInputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS*")] ref D3D12VideoDecodeInputStreamArguments pInputArguments) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (D3D12VideoDecodeInputStreamArguments* ppInputArguments = &pInputArguments)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12VideoDecoder*, D3D12VideoDecodeOutputStreamArguments1*, D3D12VideoDecodeInputStreamArguments*, void>)(LpVtbl[23]))(ptr, (ID3D12VideoDecoder*)ppDecoder, pOutputArguments, (D3D12VideoDecodeInputStreamArguments*)ppInputArguments);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DecodeFrame1")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DecodeFrame1([NativeName(NativeNameType.Param, "pDecoder")] [NativeName(NativeNameType.Type, "ID3D12VideoDecoder*")] ComPtr<ID3D12VideoDecoder> pDecoder, [NativeName(NativeNameType.Param, "pOutputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS1*")] D3D12VideoDecodeOutputStreamArguments1* pOutputArguments, [NativeName(NativeNameType.Param, "pInputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS*")] ref D3D12VideoDecodeInputStreamArguments pInputArguments) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12VideoDecodeInputStreamArguments* ppInputArguments = &pInputArguments)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12VideoDecoder*, D3D12VideoDecodeOutputStreamArguments1*, D3D12VideoDecodeInputStreamArguments*, void>)(LpVtbl[23]))(ptr, (ID3D12VideoDecoder*)pDecoder.Handle, pOutputArguments, (D3D12VideoDecodeInputStreamArguments*)ppInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DecodeFrame1")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DecodeFrame1([NativeName(NativeNameType.Param, "pDecoder")] [NativeName(NativeNameType.Type, "ID3D12VideoDecoder*")] ID3D12VideoDecoder* pDecoder, [NativeName(NativeNameType.Param, "pOutputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS1*")] ref D3D12VideoDecodeOutputStreamArguments1 pOutputArguments, [NativeName(NativeNameType.Param, "pInputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS*")] ref D3D12VideoDecodeInputStreamArguments pInputArguments) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12VideoDecodeOutputStreamArguments1* ppOutputArguments = &pOutputArguments)
			{
				fixed (D3D12VideoDecodeInputStreamArguments* ppInputArguments = &pInputArguments)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12VideoDecoder*, D3D12VideoDecodeOutputStreamArguments1*, D3D12VideoDecodeInputStreamArguments*, void>)(LpVtbl[23]))(ptr, pDecoder, (D3D12VideoDecodeOutputStreamArguments1*)ppOutputArguments, (D3D12VideoDecodeInputStreamArguments*)ppInputArguments);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DecodeFrame1")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DecodeFrame1([NativeName(NativeNameType.Param, "pDecoder")] [NativeName(NativeNameType.Type, "ID3D12VideoDecoder*")] ref ID3D12VideoDecoder pDecoder, [NativeName(NativeNameType.Param, "pOutputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS1*")] ref D3D12VideoDecodeOutputStreamArguments1 pOutputArguments, [NativeName(NativeNameType.Param, "pInputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS*")] ref D3D12VideoDecodeInputStreamArguments pInputArguments) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (D3D12VideoDecodeOutputStreamArguments1* ppOutputArguments = &pOutputArguments)
				{
					fixed (D3D12VideoDecodeInputStreamArguments* ppInputArguments = &pInputArguments)
					{
						((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12VideoDecoder*, D3D12VideoDecodeOutputStreamArguments1*, D3D12VideoDecodeInputStreamArguments*, void>)(LpVtbl[23]))(ptr, (ID3D12VideoDecoder*)ppDecoder, (D3D12VideoDecodeOutputStreamArguments1*)ppOutputArguments, (D3D12VideoDecodeInputStreamArguments*)ppInputArguments);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DecodeFrame1")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DecodeFrame1([NativeName(NativeNameType.Param, "pDecoder")] [NativeName(NativeNameType.Type, "ID3D12VideoDecoder*")] ComPtr<ID3D12VideoDecoder> pDecoder, [NativeName(NativeNameType.Param, "pOutputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS1*")] ref D3D12VideoDecodeOutputStreamArguments1 pOutputArguments, [NativeName(NativeNameType.Param, "pInputArguments")] [NativeName(NativeNameType.Type, "const D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS*")] ref D3D12VideoDecodeInputStreamArguments pInputArguments) 
		{
			ID3D12VideoDecodeCommandList1* ptr = (ID3D12VideoDecodeCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12VideoDecodeOutputStreamArguments1* ppOutputArguments = &pOutputArguments)
			{
				fixed (D3D12VideoDecodeInputStreamArguments* ppInputArguments = &pInputArguments)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList1*, ID3D12VideoDecoder*, D3D12VideoDecodeOutputStreamArguments1*, D3D12VideoDecodeInputStreamArguments*, void>)(LpVtbl[23]))(ptr, (ID3D12VideoDecoder*)pDecoder.Handle, (D3D12VideoDecodeOutputStreamArguments1*)ppOutputArguments, (D3D12VideoDecodeInputStreamArguments*)ppInputArguments);
				}
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator ID3D12VideoDecodeCommandList (ID3D12VideoDecodeCommandList1 value)
		{
			return Unsafe.As<ID3D12VideoDecodeCommandList1, ID3D12VideoDecodeCommandList>(ref value);
		}

		public unsafe static implicit operator ID3D12CommandList (ID3D12VideoDecodeCommandList1 value)
		{
			return Unsafe.As<ID3D12VideoDecodeCommandList1, ID3D12CommandList>(ref value);
		}

		public unsafe static implicit operator ID3D12DeviceChild (ID3D12VideoDecodeCommandList1 value)
		{
			return Unsafe.As<ID3D12VideoDecodeCommandList1, ID3D12DeviceChild>(ref value);
		}

		public unsafe static implicit operator ID3D12Object (ID3D12VideoDecodeCommandList1 value)
		{
			return Unsafe.As<ID3D12VideoDecodeCommandList1, ID3D12Object>(ref value);
		}

		public unsafe static implicit operator IUnknown (ID3D12VideoDecodeCommandList1 value)
		{
			return Unsafe.As<ID3D12VideoDecodeCommandList1, IUnknown>(ref value);
		}

	}

}
