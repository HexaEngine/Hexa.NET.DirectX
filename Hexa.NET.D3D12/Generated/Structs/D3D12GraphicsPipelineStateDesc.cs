// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D12
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "D3D12_GRAPHICS_PIPELINE_STATE_DESC")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct D3D12GraphicsPipelineStateDesc
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "pRootSignature")]
		[NativeName(NativeNameType.Type, "ID3D12RootSignature*")]
		public unsafe ID3D12RootSignature* PRootSignature;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "VS")]
		[NativeName(NativeNameType.Type, "D3D12_SHADER_BYTECODE")]
		public D3D12ShaderBytecode VS;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "PS")]
		[NativeName(NativeNameType.Type, "D3D12_SHADER_BYTECODE")]
		public D3D12ShaderBytecode PS;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DS")]
		[NativeName(NativeNameType.Type, "D3D12_SHADER_BYTECODE")]
		public D3D12ShaderBytecode DS;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "HS")]
		[NativeName(NativeNameType.Type, "D3D12_SHADER_BYTECODE")]
		public D3D12ShaderBytecode HS;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "GS")]
		[NativeName(NativeNameType.Type, "D3D12_SHADER_BYTECODE")]
		public D3D12ShaderBytecode GS;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "StreamOutput")]
		[NativeName(NativeNameType.Type, "D3D12_STREAM_OUTPUT_DESC")]
		public D3D12StreamOutputDesc StreamOutput;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "BlendState")]
		[NativeName(NativeNameType.Type, "D3D12_BLEND_DESC")]
		public D3D12BlendDesc BlendState;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SampleMask")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint SampleMask;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RasterizerState")]
		[NativeName(NativeNameType.Type, "D3D12_RASTERIZER_DESC")]
		public D3D12RasterizerDesc RasterizerState;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DepthStencilState")]
		[NativeName(NativeNameType.Type, "D3D12_DEPTH_STENCIL_DESC")]
		public D3D12DepthStencilDesc DepthStencilState;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "InputLayout")]
		[NativeName(NativeNameType.Type, "D3D12_INPUT_LAYOUT_DESC")]
		public D3D12InputLayoutDesc InputLayout;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IBStripCutValue")]
		[NativeName(NativeNameType.Type, "D3D12_INDEX_BUFFER_STRIP_CUT_VALUE")]
		public D3D12IndexBufferStripCutValue IBStripCutValue;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "PrimitiveTopologyType")]
		[NativeName(NativeNameType.Type, "D3D12_PRIMITIVE_TOPOLOGY_TYPE")]
		public D3D12PrimitiveTopologyType PrimitiveTopologyType;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "NumRenderTargets")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint NumRenderTargets;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RTVFormats")]
		[NativeName(NativeNameType.Type, "DXGI_FORMAT[8]")]
		public DxgiFormat RTVFormats_0;
		public DxgiFormat RTVFormats_1;
		public DxgiFormat RTVFormats_2;
		public DxgiFormat RTVFormats_3;
		public DxgiFormat RTVFormats_4;
		public DxgiFormat RTVFormats_5;
		public DxgiFormat RTVFormats_6;
		public DxgiFormat RTVFormats_7;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DSVFormat")]
		[NativeName(NativeNameType.Type, "DXGI_FORMAT")]
		public DxgiFormat DSVFormat;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "SampleDesc")]
		[NativeName(NativeNameType.Type, "DXGI_SAMPLE_DESC")]
		public DxgiSampleDesc SampleDesc;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "NodeMask")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint NodeMask;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CachedPSO")]
		[NativeName(NativeNameType.Type, "D3D12_CACHED_PIPELINE_STATE")]
		public D3D12CachedPipelineState CachedPSO;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Flags")]
		[NativeName(NativeNameType.Type, "D3D12_PIPELINE_STATE_FLAGS")]
		public D3D12PipelineStateFlags Flags;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe D3D12GraphicsPipelineStateDesc(ID3D12RootSignature* pRootSignature = default, D3D12ShaderBytecode vs = default, D3D12ShaderBytecode ps = default, D3D12ShaderBytecode ds = default, D3D12ShaderBytecode hs = default, D3D12ShaderBytecode gs = default, D3D12StreamOutputDesc streamOutput = default, D3D12BlendDesc blendState = default, uint sampleMask = default, D3D12RasterizerDesc rasterizerState = default, D3D12DepthStencilDesc depthStencilState = default, D3D12InputLayoutDesc inputLayout = default, D3D12IndexBufferStripCutValue ibStripCutValue = default, D3D12PrimitiveTopologyType primitiveTopologyType = default, uint numRenderTargets = default, DxgiFormat* rtvFormats = default, DxgiFormat dsvFormat = default, DxgiSampleDesc sampleDesc = default, uint nodeMask = default, D3D12CachedPipelineState cachedPso = default, D3D12PipelineStateFlags flags = default)
		{
			PRootSignature = pRootSignature;
			VS = vs;
			PS = ps;
			DS = ds;
			HS = hs;
			GS = gs;
			StreamOutput = streamOutput;
			BlendState = blendState;
			SampleMask = sampleMask;
			RasterizerState = rasterizerState;
			DepthStencilState = depthStencilState;
			InputLayout = inputLayout;
			IBStripCutValue = ibStripCutValue;
			PrimitiveTopologyType = primitiveTopologyType;
			NumRenderTargets = numRenderTargets;
			if (rtvFormats != default(DxgiFormat*))
			{
				RTVFormats_0 = rtvFormats[0];
				RTVFormats_1 = rtvFormats[1];
				RTVFormats_2 = rtvFormats[2];
				RTVFormats_3 = rtvFormats[3];
				RTVFormats_4 = rtvFormats[4];
				RTVFormats_5 = rtvFormats[5];
				RTVFormats_6 = rtvFormats[6];
				RTVFormats_7 = rtvFormats[7];
			}
			DSVFormat = dsvFormat;
			SampleDesc = sampleDesc;
			NodeMask = nodeMask;
			CachedPSO = cachedPso;
			Flags = flags;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe D3D12GraphicsPipelineStateDesc(ID3D12RootSignature* pRootSignature = default, D3D12ShaderBytecode vs = default, D3D12ShaderBytecode ps = default, D3D12ShaderBytecode ds = default, D3D12ShaderBytecode hs = default, D3D12ShaderBytecode gs = default, D3D12StreamOutputDesc streamOutput = default, D3D12BlendDesc blendState = default, uint sampleMask = default, D3D12RasterizerDesc rasterizerState = default, D3D12DepthStencilDesc depthStencilState = default, D3D12InputLayoutDesc inputLayout = default, D3D12IndexBufferStripCutValue ibStripCutValue = default, D3D12PrimitiveTopologyType primitiveTopologyType = default, uint numRenderTargets = default, Span<DxgiFormat> rtvFormats = default, DxgiFormat dsvFormat = default, DxgiSampleDesc sampleDesc = default, uint nodeMask = default, D3D12CachedPipelineState cachedPso = default, D3D12PipelineStateFlags flags = default)
		{
			PRootSignature = pRootSignature;
			VS = vs;
			PS = ps;
			DS = ds;
			HS = hs;
			GS = gs;
			StreamOutput = streamOutput;
			BlendState = blendState;
			SampleMask = sampleMask;
			RasterizerState = rasterizerState;
			DepthStencilState = depthStencilState;
			InputLayout = inputLayout;
			IBStripCutValue = ibStripCutValue;
			PrimitiveTopologyType = primitiveTopologyType;
			NumRenderTargets = numRenderTargets;
			if (rtvFormats != default(Span<DxgiFormat>))
			{
				RTVFormats_0 = rtvFormats[0];
				RTVFormats_1 = rtvFormats[1];
				RTVFormats_2 = rtvFormats[2];
				RTVFormats_3 = rtvFormats[3];
				RTVFormats_4 = rtvFormats[4];
				RTVFormats_5 = rtvFormats[5];
				RTVFormats_6 = rtvFormats[6];
				RTVFormats_7 = rtvFormats[7];
			}
			DSVFormat = dsvFormat;
			SampleDesc = sampleDesc;
			NodeMask = nodeMask;
			CachedPSO = cachedPso;
			Flags = flags;
		}


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe Span<DxgiFormat> RTVFormats
		
		{
			get
			{
				fixed (DxgiFormat* p = &this.RTVFormats_0)
				{
					return new Span<DxgiFormat>(p, 8);
				}
			}
		}
	}

}
