// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D12
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VideoEncoderDesc
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		public uint NodeMask;

		/// <summary>
		/// To be documented.
		/// </summary>
		public VideoEncoderFlags Flags;

		/// <summary>
		/// To be documented.
		/// </summary>
		public VideoEncoderCodec EncodeCodec;

		/// <summary>
		/// To be documented.
		/// </summary>
		public VideoEncoderProfileDesc EncodeProfile;

		/// <summary>
		/// To be documented.
		/// </summary>
		public Format InputFormat;

		/// <summary>
		/// To be documented.
		/// </summary>
		public VideoEncoderCodecConfiguration CodecConfiguration;

		/// <summary>
		/// To be documented.
		/// </summary>
		public VideoEncoderMotionEstimationPrecisionMode MaxMotionEstimationPrecision;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe VideoEncoderDesc(uint nodeMask = default, VideoEncoderFlags flags = default, VideoEncoderCodec encodeCodec = default, VideoEncoderProfileDesc encodeProfile = default, Format inputFormat = default, VideoEncoderCodecConfiguration codecConfiguration = default, VideoEncoderMotionEstimationPrecisionMode maxMotionEstimationPrecision = default)
		{
			NodeMask = nodeMask;
			Flags = flags;
			EncodeCodec = encodeCodec;
			EncodeProfile = encodeProfile;
			InputFormat = inputFormat;
			CodecConfiguration = codecConfiguration;
			MaxMotionEstimationPrecision = maxMotionEstimationPrecision;
		}


	}

}
