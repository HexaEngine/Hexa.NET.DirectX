// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D12
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "D3D12_STATIC_SAMPLER_DESC")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct D3D12StaticSamplerDesc
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Filter")]
		[NativeName(NativeNameType.Type, "D3D12_FILTER")]
		public D3D12Filter Filter;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "AddressU")]
		[NativeName(NativeNameType.Type, "D3D12_TEXTURE_ADDRESS_MODE")]
		public D3D12TextureAddressMode AddressU;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "AddressV")]
		[NativeName(NativeNameType.Type, "D3D12_TEXTURE_ADDRESS_MODE")]
		public D3D12TextureAddressMode AddressV;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "AddressW")]
		[NativeName(NativeNameType.Type, "D3D12_TEXTURE_ADDRESS_MODE")]
		public D3D12TextureAddressMode AddressW;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "MipLODBias")]
		[NativeName(NativeNameType.Type, "FLOAT")]
		public float MipLODBias;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "MaxAnisotropy")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint MaxAnisotropy;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ComparisonFunc")]
		[NativeName(NativeNameType.Type, "D3D12_COMPARISON_FUNC")]
		public D3D12ComparisonFunc ComparisonFunc;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "BorderColor")]
		[NativeName(NativeNameType.Type, "D3D12_STATIC_BORDER_COLOR")]
		public D3D12StaticBorderColor BorderColor;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "MinLOD")]
		[NativeName(NativeNameType.Type, "FLOAT")]
		public float MinLOD;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "MaxLOD")]
		[NativeName(NativeNameType.Type, "FLOAT")]
		public float MaxLOD;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ShaderRegister")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint ShaderRegister;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RegisterSpace")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint RegisterSpace;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ShaderVisibility")]
		[NativeName(NativeNameType.Type, "D3D12_SHADER_VISIBILITY")]
		public D3D12ShaderVisibility ShaderVisibility;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe D3D12StaticSamplerDesc(D3D12Filter filter = default, D3D12TextureAddressMode addressU = default, D3D12TextureAddressMode addressV = default, D3D12TextureAddressMode addressW = default, float mipLodBias = default, uint maxAnisotropy = default, D3D12ComparisonFunc comparisonFunc = default, D3D12StaticBorderColor borderColor = default, float minLod = default, float maxLod = default, uint shaderRegister = default, uint registerSpace = default, D3D12ShaderVisibility shaderVisibility = default)
		{
			Filter = filter;
			AddressU = addressU;
			AddressV = addressV;
			AddressW = addressW;
			MipLODBias = mipLodBias;
			MaxAnisotropy = maxAnisotropy;
			ComparisonFunc = comparisonFunc;
			BorderColor = borderColor;
			MinLOD = minLod;
			MaxLOD = maxLod;
			ShaderRegister = shaderRegister;
			RegisterSpace = registerSpace;
			ShaderVisibility = shaderVisibility;
		}


	}

}
