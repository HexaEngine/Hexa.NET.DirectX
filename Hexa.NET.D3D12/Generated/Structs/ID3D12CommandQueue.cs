// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D12
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("0ec870a6-5d7e-4c22-8cfc-5baae07616ed")]
	[NativeName(NativeNameType.StructOrClass, "ID3D12CommandQueue")]
	public partial struct ID3D12CommandQueue : IComObject, IComObject<ID3D12CommandQueue>, IComObject<ID3D12Pageable>, IComObject<ID3D12DeviceChild>, IComObject<ID3D12Object>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("0ec870a6-5d7e-4c22-8cfc-5baae07616ed");

		public unsafe ID3D12CommandQueue (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, Guid*, void**, int>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int QueryInterface<T>([NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int QueryInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef() 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release() 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetPrivateData([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, Guid*, uint*, void*, int>)(LpVtbl[3]))(ptr, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetPrivateData([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, Guid*, uint*, void*, int>)(LpVtbl[3]))(ptr, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetPrivateData([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, Guid*, uint*, void*, int>)(LpVtbl[3]))(ptr, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetPrivateData([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] void* pData) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, Guid*, uint*, void*, int>)(LpVtbl[3]))(ptr, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetPrivateData<T>([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, Guid*, uint*, void*, int>)(LpVtbl[3]))(ptr, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetPrivateData<T>([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] uint* pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, Guid*, uint*, void*, int>)(LpVtbl[3]))(ptr, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetPrivateData<T>([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, Guid*, uint*, void*, int>)(LpVtbl[3]))(ptr, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetPrivateData<T>([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pDataSize")] [NativeName(NativeNameType.Type, "UINT*")] ref uint pDataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "void*")] ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, Guid*, uint*, void*, int>)(LpVtbl[3]))(ptr, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int SetPrivateData([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, Guid*, uint, void*, int>)(LpVtbl[4]))(ptr, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateData")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int SetPrivateData([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "DataSize")] [NativeName(NativeNameType.Type, "UINT")] uint dataSize, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, Guid*, uint, void*, int>)(LpVtbl[4]))(ptr, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int SetPrivateDataInterface([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pData) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, Guid*, IUnknown*, int>)(LpVtbl[5]))(ptr, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int SetPrivateDataInterface([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] IUnknown* pData) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, Guid*, IUnknown*, int>)(LpVtbl[5]))(ptr, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int SetPrivateDataInterface([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pData) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppData = &pData)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, Guid*, IUnknown*, int>)(LpVtbl[5]))(ptr, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int SetPrivateDataInterface([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] Guid* guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pData) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, Guid*, IUnknown*, int>)(LpVtbl[5]))(ptr, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int SetPrivateDataInterface([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] ref IUnknown pData) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, Guid*, IUnknown*, int>)(LpVtbl[5]))(ptr, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetPrivateDataInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int SetPrivateDataInterface([NativeName(NativeNameType.Param, "guid")] [NativeName(NativeNameType.Type, "const GUID&")] ref Guid guid, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const IUnknown*")] ComPtr<IUnknown> pData) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, Guid*, IUnknown*, int>)(LpVtbl[5]))(ptr, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int SetName([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* name) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, char*, int>)(LpVtbl[6]))(ptr, name);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int SetName([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCWSTR")] ReadOnlySpan<char> name) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (char* pname = name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, char*, int>)(LpVtbl[6]))(ptr, (char*)pname);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int SetName([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCWSTR")] string name) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, char*, int>)(LpVtbl[6]))(ptr, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetDevice([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppvDevice) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, Guid*, void**, int>)(LpVtbl[7]))(ptr, riid, ppvDevice);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetDevice([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvDevice")] [NativeName(NativeNameType.Type, "void**")] void** ppvDevice) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, Guid*, void**, int>)(LpVtbl[7]))(ptr, (Guid*)priid, ppvDevice);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetDevice<T>([NativeName(NativeNameType.Param, "ppvDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvDevice = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, Guid*, void**, int>)(LpVtbl[7]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvDevice.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDevice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetDevice<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvDevice")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvDevice = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, Guid*, void**, int>)(LpVtbl[7]))(ptr, (Guid*)priid, (void**)ppvDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Heap* ppHeap = &pHeap)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (ID3D12Heap* ppHeap = &pHeap)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (ID3D12Heap* ppHeap = &pHeap)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (ID3D12Heap* ppHeap = &pHeap)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (ID3D12Heap* ppHeap = &pHeap)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (ID3D12Heap* ppHeap = &pHeap)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (ID3D12Heap* ppHeap = &pHeap)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
					{
						fixed (ID3D12Heap* ppHeap = &pHeap)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
					{
						fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Heap* ppHeap = &pHeap)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (ID3D12Heap* ppHeap = &pHeap)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (ID3D12Heap* ppHeap = &pHeap)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (ID3D12Heap* ppHeap = &pHeap)
					{
						fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (ID3D12Heap* ppHeap = &pHeap)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (ID3D12Heap* ppHeap = &pHeap)
					{
						fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (ID3D12Heap* ppHeap = &pHeap)
					{
						fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
					{
						fixed (ID3D12Heap* ppHeap = &pHeap)
						{
							fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
							{
								((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
					{
						fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Heap* ppHeap = &pHeap)
			{
				fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (ID3D12Heap* ppHeap = &pHeap)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (ID3D12Heap* ppHeap = &pHeap)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (ID3D12Heap* ppHeap = &pHeap)
					{
						fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (ID3D12Heap* ppHeap = &pHeap)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (ID3D12Heap* ppHeap = &pHeap)
					{
						fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (ID3D12Heap* ppHeap = &pHeap)
					{
						fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
					{
						fixed (ID3D12Heap* ppHeap = &pHeap)
						{
							fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
							{
								((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
			{
				fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
			{
				fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
					{
						fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
						{
							fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
							{
								((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Heap* ppHeap = &pHeap)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
			{
				fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (ID3D12Heap* ppHeap = &pHeap)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
			{
				fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (ID3D12Heap* ppHeap = &pHeap)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (ID3D12Heap* ppHeap = &pHeap)
					{
						fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
						{
							fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
							{
								((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (ID3D12Heap* ppHeap = &pHeap)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (ID3D12Heap* ppHeap = &pHeap)
					{
						fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
						{
							fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
							{
								((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (ID3D12Heap* ppHeap = &pHeap)
					{
						fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
						{
							fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
							{
								((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
					{
						fixed (ID3D12Heap* ppHeap = &pHeap)
						{
							fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
							{
								fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
								{
									((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
								}
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, pRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Heap* ppHeap = &pHeap)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (ID3D12Heap* ppHeap = &pHeap)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (ID3D12Heap* ppHeap = &pHeap)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (ID3D12Heap* ppHeap = &pHeap)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (ID3D12Heap* ppHeap = &pHeap)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (ID3D12Heap* ppHeap = &pHeap)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (ID3D12Heap* ppHeap = &pHeap)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
					{
						fixed (ID3D12Heap* ppHeap = &pHeap)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
					{
						fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Heap* ppHeap = &pHeap)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (ID3D12Heap* ppHeap = &pHeap)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (ID3D12Heap* ppHeap = &pHeap)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (ID3D12Heap* ppHeap = &pHeap)
					{
						fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (ID3D12Heap* ppHeap = &pHeap)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (ID3D12Heap* ppHeap = &pHeap)
					{
						fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (ID3D12Heap* ppHeap = &pHeap)
					{
						fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
					{
						fixed (ID3D12Heap* ppHeap = &pHeap)
						{
							fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
							{
								fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
								{
									((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
								}
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] uint* pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, pHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
					{
						fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Heap* ppHeap = &pHeap)
			{
				fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (ID3D12Heap* ppHeap = &pHeap)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (ID3D12Heap* ppHeap = &pHeap)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (ID3D12Heap* ppHeap = &pHeap)
					{
						fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (ID3D12Heap* ppHeap = &pHeap)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (ID3D12Heap* ppHeap = &pHeap)
					{
						fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (ID3D12Heap* ppHeap = &pHeap)
					{
						fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
					{
						fixed (ID3D12Heap* ppHeap = &pHeap)
						{
							fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
							{
								fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
								{
									((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
								}
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] D3D12TileRangeFlags* pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, pRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
			{
				fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
			{
				fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
					{
						fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
						{
							fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
							{
								fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
								{
									((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
								}
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ID3D12Heap* pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, pHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Heap* ppHeap = &pHeap)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
			{
				fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (ID3D12Heap* ppHeap = &pHeap)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
			{
				fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (ID3D12Heap* ppHeap = &pHeap)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (ID3D12Heap* ppHeap = &pHeap)
					{
						fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
						{
							fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
							{
								fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
								{
									((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
								}
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, pResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (ID3D12Heap* ppHeap = &pHeap)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (ID3D12Heap* ppHeap = &pHeap)
					{
						fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
						{
							fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
							{
								fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
								{
									((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
								}
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
			{
				fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, pResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (ID3D12Heap* ppHeap = &pHeap)
					{
						fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
						{
							fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
							{
								fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
								{
									((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
								}
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, pResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ref ID3D12Heap pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
				{
					fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
					{
						fixed (ID3D12Heap* ppHeap = &pHeap)
						{
							fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
							{
								fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
								{
									fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
									{
										((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)ppResource, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)ppHeap, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
									}
								}
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "UpdateTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UpdateTileMappings([NativeName(NativeNameType.Param, "pResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pResource, [NativeName(NativeNameType.Param, "NumResourceRegions")] [NativeName(NativeNameType.Type, "UINT")] uint numResourceRegions, [NativeName(NativeNameType.Param, "pResourceRegionStartCoordinates")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pResourceRegionStartCoordinates, [NativeName(NativeNameType.Param, "pResourceRegionSizes")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pResourceRegionSizes, [NativeName(NativeNameType.Param, "pHeap")] [NativeName(NativeNameType.Type, "ID3D12Heap*")] ComPtr<ID3D12Heap> pHeap, [NativeName(NativeNameType.Param, "NumRanges")] [NativeName(NativeNameType.Type, "UINT")] uint numRanges, [NativeName(NativeNameType.Param, "pRangeFlags")] [NativeName(NativeNameType.Type, "const D3D12_TILE_RANGE_FLAGS*")] ref D3D12TileRangeFlags pRangeFlags, [NativeName(NativeNameType.Param, "pHeapRangeStartOffsets")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pHeapRangeStartOffsets, [NativeName(NativeNameType.Param, "pRangeTileCounts")] [NativeName(NativeNameType.Type, "const UINT*")] ref uint pRangeTileCounts, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppResourceRegionStartCoordinates = &pResourceRegionStartCoordinates)
			{
				fixed (D3D12TileRegionSize* ppResourceRegionSizes = &pResourceRegionSizes)
				{
					fixed (D3D12TileRangeFlags* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppHeapRangeStartOffsets = &pHeapRangeStartOffsets)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, uint, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, ID3D12Heap*, uint, D3D12TileRangeFlags*, uint*, uint*, D3D12TileMappingFlags, void>)(LpVtbl[8]))(ptr, (ID3D12Resource*)pResource.Handle, numResourceRegions, (D3D12TiledResourceCoordinate*)ppResourceRegionStartCoordinates, (D3D12TileRegionSize*)ppResourceRegionSizes, (ID3D12Heap*)pHeap.Handle, numRanges, (D3D12TileRangeFlags*)ppRangeFlags, (uint*)ppHeapRangeStartOffsets, (uint*)ppRangeTileCounts, flags);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, pDstResource, pDstRegionStartCoordinate, pSrcResource, pSrcRegionStartCoordinate, pRegionSize, flags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)ppDstResource, pDstRegionStartCoordinate, pSrcResource, pSrcRegionStartCoordinate, pRegionSize, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)pDstResource.Handle, pDstRegionStartCoordinate, pSrcResource, pSrcRegionStartCoordinate, pRegionSize, flags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppDstRegionStartCoordinate = &pDstRegionStartCoordinate)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, pDstResource, (D3D12TiledResourceCoordinate*)ppDstRegionStartCoordinate, pSrcResource, pSrcRegionStartCoordinate, pRegionSize, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppDstRegionStartCoordinate = &pDstRegionStartCoordinate)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)ppDstResource, (D3D12TiledResourceCoordinate*)ppDstRegionStartCoordinate, pSrcResource, pSrcRegionStartCoordinate, pRegionSize, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppDstRegionStartCoordinate = &pDstRegionStartCoordinate)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)pDstResource.Handle, (D3D12TiledResourceCoordinate*)ppDstRegionStartCoordinate, pSrcResource, pSrcRegionStartCoordinate, pRegionSize, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, pDstResource, pDstRegionStartCoordinate, (ID3D12Resource*)ppSrcResource, pSrcRegionStartCoordinate, pRegionSize, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, pDstResource, pDstRegionStartCoordinate, (ID3D12Resource*)pSrcResource.Handle, pSrcRegionStartCoordinate, pRegionSize, flags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)ppDstResource, pDstRegionStartCoordinate, (ID3D12Resource*)ppSrcResource, pSrcRegionStartCoordinate, pRegionSize, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)pDstResource.Handle, pDstRegionStartCoordinate, (ID3D12Resource*)pSrcResource.Handle, pSrcRegionStartCoordinate, pRegionSize, flags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppDstRegionStartCoordinate = &pDstRegionStartCoordinate)
			{
				fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, pDstResource, (D3D12TiledResourceCoordinate*)ppDstRegionStartCoordinate, (ID3D12Resource*)ppSrcResource, pSrcRegionStartCoordinate, pRegionSize, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppDstRegionStartCoordinate = &pDstRegionStartCoordinate)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, pDstResource, (D3D12TiledResourceCoordinate*)ppDstRegionStartCoordinate, (ID3D12Resource*)pSrcResource.Handle, pSrcRegionStartCoordinate, pRegionSize, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppDstRegionStartCoordinate = &pDstRegionStartCoordinate)
				{
					fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)ppDstResource, (D3D12TiledResourceCoordinate*)ppDstRegionStartCoordinate, (ID3D12Resource*)ppSrcResource, pSrcRegionStartCoordinate, pRegionSize, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppDstRegionStartCoordinate = &pDstRegionStartCoordinate)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)pDstResource.Handle, (D3D12TiledResourceCoordinate*)ppDstRegionStartCoordinate, (ID3D12Resource*)pSrcResource.Handle, pSrcRegionStartCoordinate, pRegionSize, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppSrcRegionStartCoordinate = &pSrcRegionStartCoordinate)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, pDstResource, pDstRegionStartCoordinate, pSrcResource, (D3D12TiledResourceCoordinate*)ppSrcRegionStartCoordinate, pRegionSize, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppSrcRegionStartCoordinate = &pSrcRegionStartCoordinate)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)ppDstResource, pDstRegionStartCoordinate, pSrcResource, (D3D12TiledResourceCoordinate*)ppSrcRegionStartCoordinate, pRegionSize, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppSrcRegionStartCoordinate = &pSrcRegionStartCoordinate)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)pDstResource.Handle, pDstRegionStartCoordinate, pSrcResource, (D3D12TiledResourceCoordinate*)ppSrcRegionStartCoordinate, pRegionSize, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppDstRegionStartCoordinate = &pDstRegionStartCoordinate)
			{
				fixed (D3D12TiledResourceCoordinate* ppSrcRegionStartCoordinate = &pSrcRegionStartCoordinate)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, pDstResource, (D3D12TiledResourceCoordinate*)ppDstRegionStartCoordinate, pSrcResource, (D3D12TiledResourceCoordinate*)ppSrcRegionStartCoordinate, pRegionSize, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppDstRegionStartCoordinate = &pDstRegionStartCoordinate)
				{
					fixed (D3D12TiledResourceCoordinate* ppSrcRegionStartCoordinate = &pSrcRegionStartCoordinate)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)ppDstResource, (D3D12TiledResourceCoordinate*)ppDstRegionStartCoordinate, pSrcResource, (D3D12TiledResourceCoordinate*)ppSrcRegionStartCoordinate, pRegionSize, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppDstRegionStartCoordinate = &pDstRegionStartCoordinate)
			{
				fixed (D3D12TiledResourceCoordinate* ppSrcRegionStartCoordinate = &pSrcRegionStartCoordinate)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)pDstResource.Handle, (D3D12TiledResourceCoordinate*)ppDstRegionStartCoordinate, pSrcResource, (D3D12TiledResourceCoordinate*)ppSrcRegionStartCoordinate, pRegionSize, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppSrcRegionStartCoordinate = &pSrcRegionStartCoordinate)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, pDstResource, pDstRegionStartCoordinate, (ID3D12Resource*)ppSrcResource, (D3D12TiledResourceCoordinate*)ppSrcRegionStartCoordinate, pRegionSize, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppSrcRegionStartCoordinate = &pSrcRegionStartCoordinate)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, pDstResource, pDstRegionStartCoordinate, (ID3D12Resource*)pSrcResource.Handle, (D3D12TiledResourceCoordinate*)ppSrcRegionStartCoordinate, pRegionSize, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
				{
					fixed (D3D12TiledResourceCoordinate* ppSrcRegionStartCoordinate = &pSrcRegionStartCoordinate)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)ppDstResource, pDstRegionStartCoordinate, (ID3D12Resource*)ppSrcResource, (D3D12TiledResourceCoordinate*)ppSrcRegionStartCoordinate, pRegionSize, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppSrcRegionStartCoordinate = &pSrcRegionStartCoordinate)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)pDstResource.Handle, pDstRegionStartCoordinate, (ID3D12Resource*)pSrcResource.Handle, (D3D12TiledResourceCoordinate*)ppSrcRegionStartCoordinate, pRegionSize, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppDstRegionStartCoordinate = &pDstRegionStartCoordinate)
			{
				fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
				{
					fixed (D3D12TiledResourceCoordinate* ppSrcRegionStartCoordinate = &pSrcRegionStartCoordinate)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, pDstResource, (D3D12TiledResourceCoordinate*)ppDstRegionStartCoordinate, (ID3D12Resource*)ppSrcResource, (D3D12TiledResourceCoordinate*)ppSrcRegionStartCoordinate, pRegionSize, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppDstRegionStartCoordinate = &pDstRegionStartCoordinate)
			{
				fixed (D3D12TiledResourceCoordinate* ppSrcRegionStartCoordinate = &pSrcRegionStartCoordinate)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, pDstResource, (D3D12TiledResourceCoordinate*)ppDstRegionStartCoordinate, (ID3D12Resource*)pSrcResource.Handle, (D3D12TiledResourceCoordinate*)ppSrcRegionStartCoordinate, pRegionSize, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppDstRegionStartCoordinate = &pDstRegionStartCoordinate)
				{
					fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
					{
						fixed (D3D12TiledResourceCoordinate* ppSrcRegionStartCoordinate = &pSrcRegionStartCoordinate)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)ppDstResource, (D3D12TiledResourceCoordinate*)ppDstRegionStartCoordinate, (ID3D12Resource*)ppSrcResource, (D3D12TiledResourceCoordinate*)ppSrcRegionStartCoordinate, pRegionSize, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] D3D12TileRegionSize* pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppDstRegionStartCoordinate = &pDstRegionStartCoordinate)
			{
				fixed (D3D12TiledResourceCoordinate* ppSrcRegionStartCoordinate = &pSrcRegionStartCoordinate)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)pDstResource.Handle, (D3D12TiledResourceCoordinate*)ppDstRegionStartCoordinate, (ID3D12Resource*)pSrcResource.Handle, (D3D12TiledResourceCoordinate*)ppSrcRegionStartCoordinate, pRegionSize, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppRegionSize = &pRegionSize)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, pDstResource, pDstRegionStartCoordinate, pSrcResource, pSrcRegionStartCoordinate, (D3D12TileRegionSize*)ppRegionSize, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				fixed (D3D12TileRegionSize* ppRegionSize = &pRegionSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)ppDstResource, pDstRegionStartCoordinate, pSrcResource, pSrcRegionStartCoordinate, (D3D12TileRegionSize*)ppRegionSize, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppRegionSize = &pRegionSize)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)pDstResource.Handle, pDstRegionStartCoordinate, pSrcResource, pSrcRegionStartCoordinate, (D3D12TileRegionSize*)ppRegionSize, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppDstRegionStartCoordinate = &pDstRegionStartCoordinate)
			{
				fixed (D3D12TileRegionSize* ppRegionSize = &pRegionSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, pDstResource, (D3D12TiledResourceCoordinate*)ppDstRegionStartCoordinate, pSrcResource, pSrcRegionStartCoordinate, (D3D12TileRegionSize*)ppRegionSize, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppDstRegionStartCoordinate = &pDstRegionStartCoordinate)
				{
					fixed (D3D12TileRegionSize* ppRegionSize = &pRegionSize)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)ppDstResource, (D3D12TiledResourceCoordinate*)ppDstRegionStartCoordinate, pSrcResource, pSrcRegionStartCoordinate, (D3D12TileRegionSize*)ppRegionSize, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppDstRegionStartCoordinate = &pDstRegionStartCoordinate)
			{
				fixed (D3D12TileRegionSize* ppRegionSize = &pRegionSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)pDstResource.Handle, (D3D12TiledResourceCoordinate*)ppDstRegionStartCoordinate, pSrcResource, pSrcRegionStartCoordinate, (D3D12TileRegionSize*)ppRegionSize, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
			{
				fixed (D3D12TileRegionSize* ppRegionSize = &pRegionSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, pDstResource, pDstRegionStartCoordinate, (ID3D12Resource*)ppSrcResource, pSrcRegionStartCoordinate, (D3D12TileRegionSize*)ppRegionSize, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppRegionSize = &pRegionSize)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, pDstResource, pDstRegionStartCoordinate, (ID3D12Resource*)pSrcResource.Handle, pSrcRegionStartCoordinate, (D3D12TileRegionSize*)ppRegionSize, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
				{
					fixed (D3D12TileRegionSize* ppRegionSize = &pRegionSize)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)ppDstResource, pDstRegionStartCoordinate, (ID3D12Resource*)ppSrcResource, pSrcRegionStartCoordinate, (D3D12TileRegionSize*)ppRegionSize, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TileRegionSize* ppRegionSize = &pRegionSize)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)pDstResource.Handle, pDstRegionStartCoordinate, (ID3D12Resource*)pSrcResource.Handle, pSrcRegionStartCoordinate, (D3D12TileRegionSize*)ppRegionSize, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppDstRegionStartCoordinate = &pDstRegionStartCoordinate)
			{
				fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
				{
					fixed (D3D12TileRegionSize* ppRegionSize = &pRegionSize)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, pDstResource, (D3D12TiledResourceCoordinate*)ppDstRegionStartCoordinate, (ID3D12Resource*)ppSrcResource, pSrcRegionStartCoordinate, (D3D12TileRegionSize*)ppRegionSize, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppDstRegionStartCoordinate = &pDstRegionStartCoordinate)
			{
				fixed (D3D12TileRegionSize* ppRegionSize = &pRegionSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, pDstResource, (D3D12TiledResourceCoordinate*)ppDstRegionStartCoordinate, (ID3D12Resource*)pSrcResource.Handle, pSrcRegionStartCoordinate, (D3D12TileRegionSize*)ppRegionSize, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppDstRegionStartCoordinate = &pDstRegionStartCoordinate)
				{
					fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
					{
						fixed (D3D12TileRegionSize* ppRegionSize = &pRegionSize)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)ppDstResource, (D3D12TiledResourceCoordinate*)ppDstRegionStartCoordinate, (ID3D12Resource*)ppSrcResource, pSrcRegionStartCoordinate, (D3D12TileRegionSize*)ppRegionSize, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppDstRegionStartCoordinate = &pDstRegionStartCoordinate)
			{
				fixed (D3D12TileRegionSize* ppRegionSize = &pRegionSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)pDstResource.Handle, (D3D12TiledResourceCoordinate*)ppDstRegionStartCoordinate, (ID3D12Resource*)pSrcResource.Handle, pSrcRegionStartCoordinate, (D3D12TileRegionSize*)ppRegionSize, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppSrcRegionStartCoordinate = &pSrcRegionStartCoordinate)
			{
				fixed (D3D12TileRegionSize* ppRegionSize = &pRegionSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, pDstResource, pDstRegionStartCoordinate, pSrcResource, (D3D12TiledResourceCoordinate*)ppSrcRegionStartCoordinate, (D3D12TileRegionSize*)ppRegionSize, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppSrcRegionStartCoordinate = &pSrcRegionStartCoordinate)
				{
					fixed (D3D12TileRegionSize* ppRegionSize = &pRegionSize)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)ppDstResource, pDstRegionStartCoordinate, pSrcResource, (D3D12TiledResourceCoordinate*)ppSrcRegionStartCoordinate, (D3D12TileRegionSize*)ppRegionSize, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppSrcRegionStartCoordinate = &pSrcRegionStartCoordinate)
			{
				fixed (D3D12TileRegionSize* ppRegionSize = &pRegionSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)pDstResource.Handle, pDstRegionStartCoordinate, pSrcResource, (D3D12TiledResourceCoordinate*)ppSrcRegionStartCoordinate, (D3D12TileRegionSize*)ppRegionSize, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppDstRegionStartCoordinate = &pDstRegionStartCoordinate)
			{
				fixed (D3D12TiledResourceCoordinate* ppSrcRegionStartCoordinate = &pSrcRegionStartCoordinate)
				{
					fixed (D3D12TileRegionSize* ppRegionSize = &pRegionSize)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, pDstResource, (D3D12TiledResourceCoordinate*)ppDstRegionStartCoordinate, pSrcResource, (D3D12TiledResourceCoordinate*)ppSrcRegionStartCoordinate, (D3D12TileRegionSize*)ppRegionSize, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppDstRegionStartCoordinate = &pDstRegionStartCoordinate)
				{
					fixed (D3D12TiledResourceCoordinate* ppSrcRegionStartCoordinate = &pSrcRegionStartCoordinate)
					{
						fixed (D3D12TileRegionSize* ppRegionSize = &pRegionSize)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)ppDstResource, (D3D12TiledResourceCoordinate*)ppDstRegionStartCoordinate, pSrcResource, (D3D12TiledResourceCoordinate*)ppSrcRegionStartCoordinate, (D3D12TileRegionSize*)ppRegionSize, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppDstRegionStartCoordinate = &pDstRegionStartCoordinate)
			{
				fixed (D3D12TiledResourceCoordinate* ppSrcRegionStartCoordinate = &pSrcRegionStartCoordinate)
				{
					fixed (D3D12TileRegionSize* ppRegionSize = &pRegionSize)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)pDstResource.Handle, (D3D12TiledResourceCoordinate*)ppDstRegionStartCoordinate, pSrcResource, (D3D12TiledResourceCoordinate*)ppSrcRegionStartCoordinate, (D3D12TileRegionSize*)ppRegionSize, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppSrcRegionStartCoordinate = &pSrcRegionStartCoordinate)
				{
					fixed (D3D12TileRegionSize* ppRegionSize = &pRegionSize)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, pDstResource, pDstRegionStartCoordinate, (ID3D12Resource*)ppSrcResource, (D3D12TiledResourceCoordinate*)ppSrcRegionStartCoordinate, (D3D12TileRegionSize*)ppRegionSize, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppSrcRegionStartCoordinate = &pSrcRegionStartCoordinate)
			{
				fixed (D3D12TileRegionSize* ppRegionSize = &pRegionSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, pDstResource, pDstRegionStartCoordinate, (ID3D12Resource*)pSrcResource.Handle, (D3D12TiledResourceCoordinate*)ppSrcRegionStartCoordinate, (D3D12TileRegionSize*)ppRegionSize, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
				{
					fixed (D3D12TiledResourceCoordinate* ppSrcRegionStartCoordinate = &pSrcRegionStartCoordinate)
					{
						fixed (D3D12TileRegionSize* ppRegionSize = &pRegionSize)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)ppDstResource, pDstRegionStartCoordinate, (ID3D12Resource*)ppSrcResource, (D3D12TiledResourceCoordinate*)ppSrcRegionStartCoordinate, (D3D12TileRegionSize*)ppRegionSize, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] D3D12TiledResourceCoordinate* pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppSrcRegionStartCoordinate = &pSrcRegionStartCoordinate)
			{
				fixed (D3D12TileRegionSize* ppRegionSize = &pRegionSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)pDstResource.Handle, pDstRegionStartCoordinate, (ID3D12Resource*)pSrcResource.Handle, (D3D12TiledResourceCoordinate*)ppSrcRegionStartCoordinate, (D3D12TileRegionSize*)ppRegionSize, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppDstRegionStartCoordinate = &pDstRegionStartCoordinate)
			{
				fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
				{
					fixed (D3D12TiledResourceCoordinate* ppSrcRegionStartCoordinate = &pSrcRegionStartCoordinate)
					{
						fixed (D3D12TileRegionSize* ppRegionSize = &pRegionSize)
						{
							((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, pDstResource, (D3D12TiledResourceCoordinate*)ppDstRegionStartCoordinate, (ID3D12Resource*)ppSrcResource, (D3D12TiledResourceCoordinate*)ppSrcRegionStartCoordinate, (D3D12TileRegionSize*)ppRegionSize, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ID3D12Resource* pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppDstRegionStartCoordinate = &pDstRegionStartCoordinate)
			{
				fixed (D3D12TiledResourceCoordinate* ppSrcRegionStartCoordinate = &pSrcRegionStartCoordinate)
				{
					fixed (D3D12TileRegionSize* ppRegionSize = &pRegionSize)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, pDstResource, (D3D12TiledResourceCoordinate*)ppDstRegionStartCoordinate, (ID3D12Resource*)pSrcResource.Handle, (D3D12TiledResourceCoordinate*)ppSrcRegionStartCoordinate, (D3D12TileRegionSize*)ppRegionSize, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ref ID3D12Resource pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				fixed (D3D12TiledResourceCoordinate* ppDstRegionStartCoordinate = &pDstRegionStartCoordinate)
				{
					fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
					{
						fixed (D3D12TiledResourceCoordinate* ppSrcRegionStartCoordinate = &pSrcRegionStartCoordinate)
						{
							fixed (D3D12TileRegionSize* ppRegionSize = &pRegionSize)
							{
								((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)ppDstResource, (D3D12TiledResourceCoordinate*)ppDstRegionStartCoordinate, (ID3D12Resource*)ppSrcResource, (D3D12TiledResourceCoordinate*)ppSrcRegionStartCoordinate, (D3D12TileRegionSize*)ppRegionSize, flags);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CopyTileMappings")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void CopyTileMappings([NativeName(NativeNameType.Param, "pDstResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pDstResource, [NativeName(NativeNameType.Param, "pDstRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pDstRegionStartCoordinate, [NativeName(NativeNameType.Param, "pSrcResource")] [NativeName(NativeNameType.Type, "ID3D12Resource*")] ComPtr<ID3D12Resource> pSrcResource, [NativeName(NativeNameType.Param, "pSrcRegionStartCoordinate")] [NativeName(NativeNameType.Type, "const D3D12_TILED_RESOURCE_COORDINATE*")] ref D3D12TiledResourceCoordinate pSrcRegionStartCoordinate, [NativeName(NativeNameType.Param, "pRegionSize")] [NativeName(NativeNameType.Type, "const D3D12_TILE_REGION_SIZE*")] ref D3D12TileRegionSize pRegionSize, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "D3D12_TILE_MAPPING_FLAGS")] D3D12TileMappingFlags flags) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D12TiledResourceCoordinate* ppDstRegionStartCoordinate = &pDstRegionStartCoordinate)
			{
				fixed (D3D12TiledResourceCoordinate* ppSrcRegionStartCoordinate = &pSrcRegionStartCoordinate)
				{
					fixed (D3D12TileRegionSize* ppRegionSize = &pRegionSize)
					{
						((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Resource*, D3D12TiledResourceCoordinate*, ID3D12Resource*, D3D12TiledResourceCoordinate*, D3D12TileRegionSize*, D3D12TileMappingFlags, void>)(LpVtbl[9]))(ptr, (ID3D12Resource*)pDstResource.Handle, (D3D12TiledResourceCoordinate*)ppDstRegionStartCoordinate, (ID3D12Resource*)pSrcResource.Handle, (D3D12TiledResourceCoordinate*)ppSrcRegionStartCoordinate, (D3D12TileRegionSize*)ppRegionSize, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ExecuteCommandLists")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void ExecuteCommandLists([NativeName(NativeNameType.Param, "NumCommandLists")] [NativeName(NativeNameType.Type, "UINT")] uint numCommandLists, [NativeName(NativeNameType.Param, "ppCommandLists")] [NativeName(NativeNameType.Type, "const ID3D12CommandList**")] ID3D12CommandList** ppCommandLists) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, uint, ID3D12CommandList**, void>)(LpVtbl[10]))(ptr, numCommandLists, ppCommandLists);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ExecuteCommandLists")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void ExecuteCommandLists([NativeName(NativeNameType.Param, "NumCommandLists")] [NativeName(NativeNameType.Type, "UINT")] uint numCommandLists, [NativeName(NativeNameType.Param, "ppCommandLists")] [NativeName(NativeNameType.Type, "const ID3D12CommandList**")] ref ID3D12CommandList* ppCommandLists) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12CommandList** pppCommandLists = &ppCommandLists)
			{
				((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, uint, ID3D12CommandList**, void>)(LpVtbl[10]))(ptr, numCommandLists, (ID3D12CommandList**)pppCommandLists);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ExecuteCommandLists")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void ExecuteCommandLists([NativeName(NativeNameType.Param, "NumCommandLists")] [NativeName(NativeNameType.Type, "UINT")] uint numCommandLists, [NativeName(NativeNameType.Param, "ppCommandLists")] [NativeName(NativeNameType.Type, "const ID3D12CommandList**")] ComPtr<ID3D12CommandList> ppCommandLists) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, uint, ID3D12CommandList**, void>)(LpVtbl[10]))(ptr, numCommandLists, (ID3D12CommandList**)ppCommandLists.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetMarker")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void SetMarker([NativeName(NativeNameType.Param, "Metadata")] [NativeName(NativeNameType.Type, "UINT")] uint metadata, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData, [NativeName(NativeNameType.Param, "Size")] [NativeName(NativeNameType.Type, "UINT")] uint size) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, uint, void*, uint, void>)(LpVtbl[11]))(ptr, metadata, pData, size);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BeginEvent")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void BeginEvent([NativeName(NativeNameType.Param, "Metadata")] [NativeName(NativeNameType.Type, "UINT")] uint metadata, [NativeName(NativeNameType.Param, "pData")] [NativeName(NativeNameType.Type, "const void*")] void* pData, [NativeName(NativeNameType.Param, "Size")] [NativeName(NativeNameType.Type, "UINT")] uint size) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, uint, void*, uint, void>)(LpVtbl[12]))(ptr, metadata, pData, size);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "EndEvent")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void EndEvent() 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, void>)(LpVtbl[13]))(ptr);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Signal")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int Signal([NativeName(NativeNameType.Param, "pFence")] [NativeName(NativeNameType.Type, "ID3D12Fence*")] ID3D12Fence* pFence, [NativeName(NativeNameType.Param, "Value")] [NativeName(NativeNameType.Type, "UINT64")] ulong value) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Fence*, ulong, int>)(LpVtbl[14]))(ptr, pFence, value);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Signal")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int Signal([NativeName(NativeNameType.Param, "pFence")] [NativeName(NativeNameType.Type, "ID3D12Fence*")] ref ID3D12Fence pFence, [NativeName(NativeNameType.Param, "Value")] [NativeName(NativeNameType.Type, "UINT64")] ulong value) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Fence* ppFence = &pFence)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Fence*, ulong, int>)(LpVtbl[14]))(ptr, (ID3D12Fence*)ppFence, value);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Signal")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int Signal([NativeName(NativeNameType.Param, "pFence")] [NativeName(NativeNameType.Type, "ID3D12Fence*")] ComPtr<ID3D12Fence> pFence, [NativeName(NativeNameType.Param, "Value")] [NativeName(NativeNameType.Type, "UINT64")] ulong value) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Fence*, ulong, int>)(LpVtbl[14]))(ptr, (ID3D12Fence*)pFence.Handle, value);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Wait")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int Wait([NativeName(NativeNameType.Param, "pFence")] [NativeName(NativeNameType.Type, "ID3D12Fence*")] ID3D12Fence* pFence, [NativeName(NativeNameType.Param, "Value")] [NativeName(NativeNameType.Type, "UINT64")] ulong value) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Fence*, ulong, int>)(LpVtbl[15]))(ptr, pFence, value);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Wait")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int Wait([NativeName(NativeNameType.Param, "pFence")] [NativeName(NativeNameType.Type, "ID3D12Fence*")] ref ID3D12Fence pFence, [NativeName(NativeNameType.Param, "Value")] [NativeName(NativeNameType.Type, "UINT64")] ulong value) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Fence* ppFence = &pFence)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Fence*, ulong, int>)(LpVtbl[15]))(ptr, (ID3D12Fence*)ppFence, value);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Wait")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int Wait([NativeName(NativeNameType.Param, "pFence")] [NativeName(NativeNameType.Type, "ID3D12Fence*")] ComPtr<ID3D12Fence> pFence, [NativeName(NativeNameType.Param, "Value")] [NativeName(NativeNameType.Type, "UINT64")] ulong value) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ID3D12Fence*, ulong, int>)(LpVtbl[15]))(ptr, (ID3D12Fence*)pFence.Handle, value);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetTimestampFrequency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetTimestampFrequency([NativeName(NativeNameType.Param, "pFrequency")] [NativeName(NativeNameType.Type, "UINT64*")] ulong* pFrequency) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ulong*, int>)(LpVtbl[16]))(ptr, pFrequency);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetTimestampFrequency")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetTimestampFrequency([NativeName(NativeNameType.Param, "pFrequency")] [NativeName(NativeNameType.Type, "UINT64*")] ref ulong pFrequency) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ulong* ppFrequency = &pFrequency)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ulong*, int>)(LpVtbl[16]))(ptr, (ulong*)ppFrequency);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetClockCalibration")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetClockCalibration([NativeName(NativeNameType.Param, "pGpuTimestamp")] [NativeName(NativeNameType.Type, "UINT64*")] ulong* pGpuTimestamp, [NativeName(NativeNameType.Param, "pCpuTimestamp")] [NativeName(NativeNameType.Type, "UINT64*")] ulong* pCpuTimestamp) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ulong*, ulong*, int>)(LpVtbl[17]))(ptr, pGpuTimestamp, pCpuTimestamp);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetClockCalibration")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetClockCalibration([NativeName(NativeNameType.Param, "pGpuTimestamp")] [NativeName(NativeNameType.Type, "UINT64*")] ref ulong pGpuTimestamp, [NativeName(NativeNameType.Param, "pCpuTimestamp")] [NativeName(NativeNameType.Type, "UINT64*")] ulong* pCpuTimestamp) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ulong* ppGpuTimestamp = &pGpuTimestamp)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ulong*, ulong*, int>)(LpVtbl[17]))(ptr, (ulong*)ppGpuTimestamp, pCpuTimestamp);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetClockCalibration")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetClockCalibration([NativeName(NativeNameType.Param, "pGpuTimestamp")] [NativeName(NativeNameType.Type, "UINT64*")] ulong* pGpuTimestamp, [NativeName(NativeNameType.Param, "pCpuTimestamp")] [NativeName(NativeNameType.Type, "UINT64*")] ref ulong pCpuTimestamp) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ulong* ppCpuTimestamp = &pCpuTimestamp)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ulong*, ulong*, int>)(LpVtbl[17]))(ptr, pGpuTimestamp, (ulong*)ppCpuTimestamp);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetClockCalibration")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetClockCalibration([NativeName(NativeNameType.Param, "pGpuTimestamp")] [NativeName(NativeNameType.Type, "UINT64*")] ref ulong pGpuTimestamp, [NativeName(NativeNameType.Param, "pCpuTimestamp")] [NativeName(NativeNameType.Type, "UINT64*")] ref ulong pCpuTimestamp) 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ulong* ppGpuTimestamp = &pGpuTimestamp)
			{
				fixed (ulong* ppCpuTimestamp = &pCpuTimestamp)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, ulong*, ulong*, int>)(LpVtbl[17]))(ptr, (ulong*)ppGpuTimestamp, (ulong*)ppCpuTimestamp);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "D3D12_COMMAND_QUEUE_DESC")]
		public readonly unsafe D3D12CommandQueueDesc GetDesc() 
		{
			ID3D12CommandQueue* ptr = (ID3D12CommandQueue*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			D3D12CommandQueueDesc ret = ((delegate* unmanaged[Stdcall]<ID3D12CommandQueue*, D3D12CommandQueueDesc>)(LpVtbl[18]))(ptr);
			return ret;
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator ID3D12Pageable (ID3D12CommandQueue value)
		{
			return Unsafe.As<ID3D12CommandQueue, ID3D12Pageable>(ref value);
		}

		public unsafe static implicit operator ID3D12DeviceChild (ID3D12CommandQueue value)
		{
			return Unsafe.As<ID3D12CommandQueue, ID3D12DeviceChild>(ref value);
		}

		public unsafe static implicit operator ID3D12Object (ID3D12CommandQueue value)
		{
			return Unsafe.As<ID3D12CommandQueue, ID3D12Object>(ref value);
		}

		public unsafe static implicit operator IUnknown (ID3D12CommandQueue value)
		{
			return Unsafe.As<ID3D12CommandQueue, IUnknown>(ref value);
		}

	}

}
