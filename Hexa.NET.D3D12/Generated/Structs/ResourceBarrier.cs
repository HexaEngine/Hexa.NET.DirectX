// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D12
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct ResourceBarrier
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[StructLayout(LayoutKind.Explicit)]
		public partial struct ResourceBarrierUnion
		{
			/// <summary>
			/// To be documented.
			/// </summary>
			[FieldOffset(0)]
			public ResourceTransitionBarrier Transition;

			/// <summary>
			/// To be documented.
			/// </summary>
			[FieldOffset(0)]
			public ResourceAliasingBarrier Aliasing;

			/// <summary>
			/// To be documented.
			/// </summary>
			[FieldOffset(0)]
			public ResourceUavBarrier UAV;


			/// <summary>
			/// To be documented.
			/// </summary>
			public unsafe ResourceBarrierUnion(ResourceTransitionBarrier transition = default, ResourceAliasingBarrier aliasing = default, ResourceUavBarrier uAv = default)
			{
				Transition = transition;
				Aliasing = aliasing;
				UAV = uAv;
			}


		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public ResourceBarrierType Type;

		/// <summary>
		/// To be documented.
		/// </summary>
		public ResourceBarrierFlags Flags;

		/// <summary>
		/// To be documented.
		/// </summary>
		public ResourceBarrierUnion Union;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe ResourceBarrier(ResourceBarrierType type = default, ResourceBarrierFlags flags = default, ResourceBarrierUnion union = default)
		{
			Type = type;
			Flags = flags;
			Union = union;
		}


	}

}
