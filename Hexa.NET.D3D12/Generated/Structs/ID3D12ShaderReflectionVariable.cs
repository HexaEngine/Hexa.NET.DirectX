// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D12
{
	/// <summary>
	/// {8337A8A6-A216-444A-B2F4-314733A73AEA}<br/>
	/// </summary>
	[Guid("8337a8a6-a216-444a-b2f4-314733a73aea")]
	public partial struct ID3D12ShaderReflectionVariable : IComObject, IComObject<ID3D12ShaderReflectionVariable>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("8337a8a6-a216-444a-b2f4-314733a73aea");

		public unsafe ID3D12ShaderReflectionVariable (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int GetDesc(ShaderVariableDesc* pDesc) 
		{
			ID3D12ShaderReflectionVariable* ptr = (ID3D12ShaderReflectionVariable*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionVariable*, ShaderVariableDesc*, int>)(*LpVtbl))(ptr, pDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int GetDesc(ref ShaderVariableDesc pDesc) 
		{
			ID3D12ShaderReflectionVariable* ptr = (ID3D12ShaderReflectionVariable*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ShaderVariableDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionVariable*, ShaderVariableDesc*, int>)(*LpVtbl))(ptr, (ShaderVariableDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe ID3D12ShaderReflectionType* GetType() 
		{
			ID3D12ShaderReflectionVariable* ptr = (ID3D12ShaderReflectionVariable*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ID3D12ShaderReflectionType* ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionVariable*, ID3D12ShaderReflectionType*>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe ID3D12ShaderReflectionConstantBuffer* GetBuffer() 
		{
			ID3D12ShaderReflectionVariable* ptr = (ID3D12ShaderReflectionVariable*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ID3D12ShaderReflectionConstantBuffer* ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionVariable*, ID3D12ShaderReflectionConstantBuffer*>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint GetInterfaceSlot(uint uArrayIndex) 
		{
			ID3D12ShaderReflectionVariable* ptr = (ID3D12ShaderReflectionVariable*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12ShaderReflectionVariable*, uint, uint>)(LpVtbl[3]))(ptr, uArrayIndex);
			return ret;
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

	}

}
