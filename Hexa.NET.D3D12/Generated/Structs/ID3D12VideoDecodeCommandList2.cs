// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D12
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("6e120880-c114-4153-8036-d247051e1729")]
	public partial struct ID3D12VideoDecodeCommandList2 : IComObject, IComObject<ID3D12VideoDecodeCommandList2>, IComObject<ID3D12VideoDecodeCommandList1>, IComObject<ID3D12VideoDecodeCommandList>, IComObject<ID3D12CommandList>, IComObject<ID3D12DeviceChild>, IComObject<ID3D12Object>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("6e120880-c114-4153-8036-d247051e1729");

		public unsafe ID3D12VideoDecodeCommandList2 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface(Guid* riid, void** ppvObject) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface(ref Guid riid, void** ppvObject) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface<T>(out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface<T>(ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint AddRef() 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint Release() 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData(Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, Guid*, uint*, void*, HResult>)(LpVtbl[3]))(ptr, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData(ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, Guid*, uint*, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData(Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, Guid*, uint*, void*, HResult>)(LpVtbl[3]))(ptr, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData(ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, Guid*, uint*, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData<T>(Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, Guid*, uint*, void*, HResult>)(LpVtbl[3]))(ptr, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData<T>(ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, Guid*, uint*, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData<T>(Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, Guid*, uint*, void*, HResult>)(LpVtbl[3]))(ptr, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData<T>(ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, Guid*, uint*, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateData(Guid* guid, uint dataSize, void* pData) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, Guid*, uint, void*, HResult>)(LpVtbl[4]))(ptr, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateData(ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, Guid*, uint, void*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(Guid* guid, IUnknown* pData) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, Guid*, IUnknown*, HResult>)(LpVtbl[5]))(ptr, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(ref Guid guid, IUnknown* pData) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, Guid*, IUnknown*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(Guid* guid, ref IUnknown pData) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, Guid*, IUnknown*, HResult>)(LpVtbl[5]))(ptr, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, Guid*, IUnknown*, HResult>)(LpVtbl[5]))(ptr, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(ref Guid guid, ref IUnknown pData) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, Guid*, IUnknown*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, Guid*, IUnknown*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetName(char* name) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, char*, HResult>)(LpVtbl[6]))(ptr, name);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetName(ReadOnlySpan<char> name) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (char* pname = name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, char*, HResult>)(LpVtbl[6]))(ptr, (char*)pname);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetName(string name) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, char*, HResult>)(LpVtbl[6]))(ptr, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDevice(Guid* riid, void** ppvDevice) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, riid, ppvDevice);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDevice(ref Guid riid, void** ppvDevice) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)priid, ppvDevice);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDevice<T>(out ComPtr<T> ppvDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvDevice = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvDevice.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDevice<T>(ref Guid riid, out ComPtr<T> ppvDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvDevice = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, Guid*, void**, HResult>)(LpVtbl[7]))(ptr, (Guid*)priid, (void**)ppvDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe CommandListType GetType() 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			CommandListType ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, CommandListType>)(LpVtbl[8]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult Close() 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, HResult>)(LpVtbl[9]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult Reset(ID3D12CommandAllocator* pAllocator) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12CommandAllocator*, HResult>)(LpVtbl[10]))(ptr, pAllocator);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult Reset(ref ID3D12CommandAllocator pAllocator) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12CommandAllocator* ppAllocator = &pAllocator)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12CommandAllocator*, HResult>)(LpVtbl[10]))(ptr, (ID3D12CommandAllocator*)ppAllocator);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult Reset(ComPtr<ID3D12CommandAllocator> pAllocator) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12CommandAllocator*, HResult>)(LpVtbl[10]))(ptr, (ID3D12CommandAllocator*)pAllocator.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearState() 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, void>)(LpVtbl[11]))(ptr);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResourceBarrier(uint numBarriers, ResourceBarrier* pBarriers) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, uint, ResourceBarrier*, void>)(LpVtbl[12]))(ptr, numBarriers, pBarriers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResourceBarrier(uint numBarriers, ref ResourceBarrier pBarriers) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceBarrier* ppBarriers = &pBarriers)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, uint, ResourceBarrier*, void>)(LpVtbl[12]))(ptr, numBarriers, (ResourceBarrier*)ppBarriers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DiscardResource(ID3D12Resource* pResource, DiscardRegion* pRegion) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12Resource*, DiscardRegion*, void>)(LpVtbl[13]))(ptr, pResource, pRegion);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DiscardResource(ref ID3D12Resource pResource, DiscardRegion* pRegion) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12Resource*, DiscardRegion*, void>)(LpVtbl[13]))(ptr, (ID3D12Resource*)ppResource, pRegion);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DiscardResource(ComPtr<ID3D12Resource> pResource, DiscardRegion* pRegion) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12Resource*, DiscardRegion*, void>)(LpVtbl[13]))(ptr, (ID3D12Resource*)pResource.Handle, pRegion);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DiscardResource(ID3D12Resource* pResource, ref DiscardRegion pRegion) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DiscardRegion* ppRegion = &pRegion)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12Resource*, DiscardRegion*, void>)(LpVtbl[13]))(ptr, pResource, (DiscardRegion*)ppRegion);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DiscardResource(ref ID3D12Resource pResource, ref DiscardRegion pRegion) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (DiscardRegion* ppRegion = &pRegion)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12Resource*, DiscardRegion*, void>)(LpVtbl[13]))(ptr, (ID3D12Resource*)ppResource, (DiscardRegion*)ppRegion);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DiscardResource(ComPtr<ID3D12Resource> pResource, ref DiscardRegion pRegion) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DiscardRegion* ppRegion = &pRegion)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12Resource*, DiscardRegion*, void>)(LpVtbl[13]))(ptr, (ID3D12Resource*)pResource.Handle, (DiscardRegion*)ppRegion);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void BeginQuery(ID3D12QueryHeap* pQueryHeap, QueryType type, uint index) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12QueryHeap*, QueryType, uint, void>)(LpVtbl[14]))(ptr, pQueryHeap, type, index);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void BeginQuery(ref ID3D12QueryHeap pQueryHeap, QueryType type, uint index) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12QueryHeap* ppQueryHeap = &pQueryHeap)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12QueryHeap*, QueryType, uint, void>)(LpVtbl[14]))(ptr, (ID3D12QueryHeap*)ppQueryHeap, type, index);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void EndQuery(ID3D12QueryHeap* pQueryHeap, QueryType type, uint index) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12QueryHeap*, QueryType, uint, void>)(LpVtbl[15]))(ptr, pQueryHeap, type, index);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void EndQuery(ref ID3D12QueryHeap pQueryHeap, QueryType type, uint index) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12QueryHeap* ppQueryHeap = &pQueryHeap)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12QueryHeap*, QueryType, uint, void>)(LpVtbl[15]))(ptr, (ID3D12QueryHeap*)ppQueryHeap, type, index);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveQueryData(ID3D12QueryHeap* pQueryHeap, QueryType type, uint startIndex, uint numQueries, ID3D12Resource* pDestinationBuffer, ulong alignedDestinationBufferOffset) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12QueryHeap*, QueryType, uint, uint, ID3D12Resource*, ulong, void>)(LpVtbl[16]))(ptr, pQueryHeap, type, startIndex, numQueries, pDestinationBuffer, alignedDestinationBufferOffset);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveQueryData(ref ID3D12QueryHeap pQueryHeap, QueryType type, uint startIndex, uint numQueries, ID3D12Resource* pDestinationBuffer, ulong alignedDestinationBufferOffset) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12QueryHeap* ppQueryHeap = &pQueryHeap)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12QueryHeap*, QueryType, uint, uint, ID3D12Resource*, ulong, void>)(LpVtbl[16]))(ptr, (ID3D12QueryHeap*)ppQueryHeap, type, startIndex, numQueries, pDestinationBuffer, alignedDestinationBufferOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveQueryData(ID3D12QueryHeap* pQueryHeap, QueryType type, uint startIndex, uint numQueries, ref ID3D12Resource pDestinationBuffer, ulong alignedDestinationBufferOffset) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDestinationBuffer = &pDestinationBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12QueryHeap*, QueryType, uint, uint, ID3D12Resource*, ulong, void>)(LpVtbl[16]))(ptr, pQueryHeap, type, startIndex, numQueries, (ID3D12Resource*)ppDestinationBuffer, alignedDestinationBufferOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveQueryData(ID3D12QueryHeap* pQueryHeap, QueryType type, uint startIndex, uint numQueries, ComPtr<ID3D12Resource> pDestinationBuffer, ulong alignedDestinationBufferOffset) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12QueryHeap*, QueryType, uint, uint, ID3D12Resource*, ulong, void>)(LpVtbl[16]))(ptr, pQueryHeap, type, startIndex, numQueries, (ID3D12Resource*)pDestinationBuffer.Handle, alignedDestinationBufferOffset);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveQueryData(ref ID3D12QueryHeap pQueryHeap, QueryType type, uint startIndex, uint numQueries, ref ID3D12Resource pDestinationBuffer, ulong alignedDestinationBufferOffset) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12QueryHeap* ppQueryHeap = &pQueryHeap)
			{
				fixed (ID3D12Resource* ppDestinationBuffer = &pDestinationBuffer)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12QueryHeap*, QueryType, uint, uint, ID3D12Resource*, ulong, void>)(LpVtbl[16]))(ptr, (ID3D12QueryHeap*)ppQueryHeap, type, startIndex, numQueries, (ID3D12Resource*)ppDestinationBuffer, alignedDestinationBufferOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveQueryData(ref ID3D12QueryHeap pQueryHeap, QueryType type, uint startIndex, uint numQueries, ComPtr<ID3D12Resource> pDestinationBuffer, ulong alignedDestinationBufferOffset) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12QueryHeap* ppQueryHeap = &pQueryHeap)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12QueryHeap*, QueryType, uint, uint, ID3D12Resource*, ulong, void>)(LpVtbl[16]))(ptr, (ID3D12QueryHeap*)ppQueryHeap, type, startIndex, numQueries, (ID3D12Resource*)pDestinationBuffer.Handle, alignedDestinationBufferOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetPredication(ID3D12Resource* pBuffer, ulong alignedBufferOffset, PredicationOp operation) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12Resource*, ulong, PredicationOp, void>)(LpVtbl[17]))(ptr, pBuffer, alignedBufferOffset, operation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetPredication(ref ID3D12Resource pBuffer, ulong alignedBufferOffset, PredicationOp operation) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppBuffer = &pBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12Resource*, ulong, PredicationOp, void>)(LpVtbl[17]))(ptr, (ID3D12Resource*)ppBuffer, alignedBufferOffset, operation);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetPredication(ComPtr<ID3D12Resource> pBuffer, ulong alignedBufferOffset, PredicationOp operation) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12Resource*, ulong, PredicationOp, void>)(LpVtbl[17]))(ptr, (ID3D12Resource*)pBuffer.Handle, alignedBufferOffset, operation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetMarker(uint metadata, void* pData, uint size) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, uint, void*, uint, void>)(LpVtbl[18]))(ptr, metadata, pData, size);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void BeginEvent(uint metadata, void* pData, uint size) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, uint, void*, uint, void>)(LpVtbl[19]))(ptr, metadata, pData, size);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void EndEvent() 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, void>)(LpVtbl[20]))(ptr);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecodeFrame(ID3D12VideoDecoder* pDecoder, VideoDecodeOutputStreamArguments* pOutputArguments, VideoDecodeInputStreamArguments* pInputArguments) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12VideoDecoder*, VideoDecodeOutputStreamArguments*, VideoDecodeInputStreamArguments*, void>)(LpVtbl[21]))(ptr, pDecoder, pOutputArguments, pInputArguments);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecodeFrame(ref ID3D12VideoDecoder pDecoder, VideoDecodeOutputStreamArguments* pOutputArguments, VideoDecodeInputStreamArguments* pInputArguments) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12VideoDecoder* ppDecoder = &pDecoder)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12VideoDecoder*, VideoDecodeOutputStreamArguments*, VideoDecodeInputStreamArguments*, void>)(LpVtbl[21]))(ptr, (ID3D12VideoDecoder*)ppDecoder, pOutputArguments, pInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecodeFrame(ComPtr<ID3D12VideoDecoder> pDecoder, VideoDecodeOutputStreamArguments* pOutputArguments, VideoDecodeInputStreamArguments* pInputArguments) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12VideoDecoder*, VideoDecodeOutputStreamArguments*, VideoDecodeInputStreamArguments*, void>)(LpVtbl[21]))(ptr, (ID3D12VideoDecoder*)pDecoder.Handle, pOutputArguments, pInputArguments);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecodeFrame(ID3D12VideoDecoder* pDecoder, ref VideoDecodeOutputStreamArguments pOutputArguments, VideoDecodeInputStreamArguments* pInputArguments) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecodeOutputStreamArguments* ppOutputArguments = &pOutputArguments)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12VideoDecoder*, VideoDecodeOutputStreamArguments*, VideoDecodeInputStreamArguments*, void>)(LpVtbl[21]))(ptr, pDecoder, (VideoDecodeOutputStreamArguments*)ppOutputArguments, pInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecodeFrame(ref ID3D12VideoDecoder pDecoder, ref VideoDecodeOutputStreamArguments pOutputArguments, VideoDecodeInputStreamArguments* pInputArguments) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (VideoDecodeOutputStreamArguments* ppOutputArguments = &pOutputArguments)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12VideoDecoder*, VideoDecodeOutputStreamArguments*, VideoDecodeInputStreamArguments*, void>)(LpVtbl[21]))(ptr, (ID3D12VideoDecoder*)ppDecoder, (VideoDecodeOutputStreamArguments*)ppOutputArguments, pInputArguments);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecodeFrame(ComPtr<ID3D12VideoDecoder> pDecoder, ref VideoDecodeOutputStreamArguments pOutputArguments, VideoDecodeInputStreamArguments* pInputArguments) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecodeOutputStreamArguments* ppOutputArguments = &pOutputArguments)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12VideoDecoder*, VideoDecodeOutputStreamArguments*, VideoDecodeInputStreamArguments*, void>)(LpVtbl[21]))(ptr, (ID3D12VideoDecoder*)pDecoder.Handle, (VideoDecodeOutputStreamArguments*)ppOutputArguments, pInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecodeFrame(ID3D12VideoDecoder* pDecoder, VideoDecodeOutputStreamArguments* pOutputArguments, ref VideoDecodeInputStreamArguments pInputArguments) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecodeInputStreamArguments* ppInputArguments = &pInputArguments)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12VideoDecoder*, VideoDecodeOutputStreamArguments*, VideoDecodeInputStreamArguments*, void>)(LpVtbl[21]))(ptr, pDecoder, pOutputArguments, (VideoDecodeInputStreamArguments*)ppInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecodeFrame(ref ID3D12VideoDecoder pDecoder, VideoDecodeOutputStreamArguments* pOutputArguments, ref VideoDecodeInputStreamArguments pInputArguments) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (VideoDecodeInputStreamArguments* ppInputArguments = &pInputArguments)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12VideoDecoder*, VideoDecodeOutputStreamArguments*, VideoDecodeInputStreamArguments*, void>)(LpVtbl[21]))(ptr, (ID3D12VideoDecoder*)ppDecoder, pOutputArguments, (VideoDecodeInputStreamArguments*)ppInputArguments);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecodeFrame(ComPtr<ID3D12VideoDecoder> pDecoder, VideoDecodeOutputStreamArguments* pOutputArguments, ref VideoDecodeInputStreamArguments pInputArguments) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecodeInputStreamArguments* ppInputArguments = &pInputArguments)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12VideoDecoder*, VideoDecodeOutputStreamArguments*, VideoDecodeInputStreamArguments*, void>)(LpVtbl[21]))(ptr, (ID3D12VideoDecoder*)pDecoder.Handle, pOutputArguments, (VideoDecodeInputStreamArguments*)ppInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecodeFrame(ID3D12VideoDecoder* pDecoder, ref VideoDecodeOutputStreamArguments pOutputArguments, ref VideoDecodeInputStreamArguments pInputArguments) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecodeOutputStreamArguments* ppOutputArguments = &pOutputArguments)
			{
				fixed (VideoDecodeInputStreamArguments* ppInputArguments = &pInputArguments)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12VideoDecoder*, VideoDecodeOutputStreamArguments*, VideoDecodeInputStreamArguments*, void>)(LpVtbl[21]))(ptr, pDecoder, (VideoDecodeOutputStreamArguments*)ppOutputArguments, (VideoDecodeInputStreamArguments*)ppInputArguments);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecodeFrame(ref ID3D12VideoDecoder pDecoder, ref VideoDecodeOutputStreamArguments pOutputArguments, ref VideoDecodeInputStreamArguments pInputArguments) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (VideoDecodeOutputStreamArguments* ppOutputArguments = &pOutputArguments)
				{
					fixed (VideoDecodeInputStreamArguments* ppInputArguments = &pInputArguments)
					{
						((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12VideoDecoder*, VideoDecodeOutputStreamArguments*, VideoDecodeInputStreamArguments*, void>)(LpVtbl[21]))(ptr, (ID3D12VideoDecoder*)ppDecoder, (VideoDecodeOutputStreamArguments*)ppOutputArguments, (VideoDecodeInputStreamArguments*)ppInputArguments);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecodeFrame(ComPtr<ID3D12VideoDecoder> pDecoder, ref VideoDecodeOutputStreamArguments pOutputArguments, ref VideoDecodeInputStreamArguments pInputArguments) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecodeOutputStreamArguments* ppOutputArguments = &pOutputArguments)
			{
				fixed (VideoDecodeInputStreamArguments* ppInputArguments = &pInputArguments)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12VideoDecoder*, VideoDecodeOutputStreamArguments*, VideoDecodeInputStreamArguments*, void>)(LpVtbl[21]))(ptr, (ID3D12VideoDecoder*)pDecoder.Handle, (VideoDecodeOutputStreamArguments*)ppOutputArguments, (VideoDecodeInputStreamArguments*)ppInputArguments);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void WriteBufferImmediate(uint count, WritebufferimmediateParameter* pParams, WritebufferimmediateMode* pModes) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, uint, WritebufferimmediateParameter*, WritebufferimmediateMode*, void>)(LpVtbl[22]))(ptr, count, pParams, pModes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void WriteBufferImmediate(uint count, ref WritebufferimmediateParameter pParams, WritebufferimmediateMode* pModes) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (WritebufferimmediateParameter* ppParams = &pParams)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, uint, WritebufferimmediateParameter*, WritebufferimmediateMode*, void>)(LpVtbl[22]))(ptr, count, (WritebufferimmediateParameter*)ppParams, pModes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void WriteBufferImmediate(uint count, WritebufferimmediateParameter* pParams, ref WritebufferimmediateMode pModes) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (WritebufferimmediateMode* ppModes = &pModes)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, uint, WritebufferimmediateParameter*, WritebufferimmediateMode*, void>)(LpVtbl[22]))(ptr, count, pParams, (WritebufferimmediateMode*)ppModes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void WriteBufferImmediate(uint count, ref WritebufferimmediateParameter pParams, ref WritebufferimmediateMode pModes) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (WritebufferimmediateParameter* ppParams = &pParams)
			{
				fixed (WritebufferimmediateMode* ppModes = &pModes)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, uint, WritebufferimmediateParameter*, WritebufferimmediateMode*, void>)(LpVtbl[22]))(ptr, count, (WritebufferimmediateParameter*)ppParams, (WritebufferimmediateMode*)ppModes);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecodeFrame1(ID3D12VideoDecoder* pDecoder, VideoDecodeOutputStreamArguments1* pOutputArguments, VideoDecodeInputStreamArguments* pInputArguments) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12VideoDecoder*, VideoDecodeOutputStreamArguments1*, VideoDecodeInputStreamArguments*, void>)(LpVtbl[23]))(ptr, pDecoder, pOutputArguments, pInputArguments);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecodeFrame1(ref ID3D12VideoDecoder pDecoder, VideoDecodeOutputStreamArguments1* pOutputArguments, VideoDecodeInputStreamArguments* pInputArguments) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12VideoDecoder* ppDecoder = &pDecoder)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12VideoDecoder*, VideoDecodeOutputStreamArguments1*, VideoDecodeInputStreamArguments*, void>)(LpVtbl[23]))(ptr, (ID3D12VideoDecoder*)ppDecoder, pOutputArguments, pInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecodeFrame1(ComPtr<ID3D12VideoDecoder> pDecoder, VideoDecodeOutputStreamArguments1* pOutputArguments, VideoDecodeInputStreamArguments* pInputArguments) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12VideoDecoder*, VideoDecodeOutputStreamArguments1*, VideoDecodeInputStreamArguments*, void>)(LpVtbl[23]))(ptr, (ID3D12VideoDecoder*)pDecoder.Handle, pOutputArguments, pInputArguments);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecodeFrame1(ID3D12VideoDecoder* pDecoder, ref VideoDecodeOutputStreamArguments1 pOutputArguments, VideoDecodeInputStreamArguments* pInputArguments) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecodeOutputStreamArguments1* ppOutputArguments = &pOutputArguments)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12VideoDecoder*, VideoDecodeOutputStreamArguments1*, VideoDecodeInputStreamArguments*, void>)(LpVtbl[23]))(ptr, pDecoder, (VideoDecodeOutputStreamArguments1*)ppOutputArguments, pInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecodeFrame1(ref ID3D12VideoDecoder pDecoder, ref VideoDecodeOutputStreamArguments1 pOutputArguments, VideoDecodeInputStreamArguments* pInputArguments) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (VideoDecodeOutputStreamArguments1* ppOutputArguments = &pOutputArguments)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12VideoDecoder*, VideoDecodeOutputStreamArguments1*, VideoDecodeInputStreamArguments*, void>)(LpVtbl[23]))(ptr, (ID3D12VideoDecoder*)ppDecoder, (VideoDecodeOutputStreamArguments1*)ppOutputArguments, pInputArguments);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecodeFrame1(ComPtr<ID3D12VideoDecoder> pDecoder, ref VideoDecodeOutputStreamArguments1 pOutputArguments, VideoDecodeInputStreamArguments* pInputArguments) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecodeOutputStreamArguments1* ppOutputArguments = &pOutputArguments)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12VideoDecoder*, VideoDecodeOutputStreamArguments1*, VideoDecodeInputStreamArguments*, void>)(LpVtbl[23]))(ptr, (ID3D12VideoDecoder*)pDecoder.Handle, (VideoDecodeOutputStreamArguments1*)ppOutputArguments, pInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecodeFrame1(ID3D12VideoDecoder* pDecoder, VideoDecodeOutputStreamArguments1* pOutputArguments, ref VideoDecodeInputStreamArguments pInputArguments) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecodeInputStreamArguments* ppInputArguments = &pInputArguments)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12VideoDecoder*, VideoDecodeOutputStreamArguments1*, VideoDecodeInputStreamArguments*, void>)(LpVtbl[23]))(ptr, pDecoder, pOutputArguments, (VideoDecodeInputStreamArguments*)ppInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecodeFrame1(ref ID3D12VideoDecoder pDecoder, VideoDecodeOutputStreamArguments1* pOutputArguments, ref VideoDecodeInputStreamArguments pInputArguments) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (VideoDecodeInputStreamArguments* ppInputArguments = &pInputArguments)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12VideoDecoder*, VideoDecodeOutputStreamArguments1*, VideoDecodeInputStreamArguments*, void>)(LpVtbl[23]))(ptr, (ID3D12VideoDecoder*)ppDecoder, pOutputArguments, (VideoDecodeInputStreamArguments*)ppInputArguments);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecodeFrame1(ComPtr<ID3D12VideoDecoder> pDecoder, VideoDecodeOutputStreamArguments1* pOutputArguments, ref VideoDecodeInputStreamArguments pInputArguments) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecodeInputStreamArguments* ppInputArguments = &pInputArguments)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12VideoDecoder*, VideoDecodeOutputStreamArguments1*, VideoDecodeInputStreamArguments*, void>)(LpVtbl[23]))(ptr, (ID3D12VideoDecoder*)pDecoder.Handle, pOutputArguments, (VideoDecodeInputStreamArguments*)ppInputArguments);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecodeFrame1(ID3D12VideoDecoder* pDecoder, ref VideoDecodeOutputStreamArguments1 pOutputArguments, ref VideoDecodeInputStreamArguments pInputArguments) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecodeOutputStreamArguments1* ppOutputArguments = &pOutputArguments)
			{
				fixed (VideoDecodeInputStreamArguments* ppInputArguments = &pInputArguments)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12VideoDecoder*, VideoDecodeOutputStreamArguments1*, VideoDecodeInputStreamArguments*, void>)(LpVtbl[23]))(ptr, pDecoder, (VideoDecodeOutputStreamArguments1*)ppOutputArguments, (VideoDecodeInputStreamArguments*)ppInputArguments);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecodeFrame1(ref ID3D12VideoDecoder pDecoder, ref VideoDecodeOutputStreamArguments1 pOutputArguments, ref VideoDecodeInputStreamArguments pInputArguments) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (VideoDecodeOutputStreamArguments1* ppOutputArguments = &pOutputArguments)
				{
					fixed (VideoDecodeInputStreamArguments* ppInputArguments = &pInputArguments)
					{
						((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12VideoDecoder*, VideoDecodeOutputStreamArguments1*, VideoDecodeInputStreamArguments*, void>)(LpVtbl[23]))(ptr, (ID3D12VideoDecoder*)ppDecoder, (VideoDecodeOutputStreamArguments1*)ppOutputArguments, (VideoDecodeInputStreamArguments*)ppInputArguments);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecodeFrame1(ComPtr<ID3D12VideoDecoder> pDecoder, ref VideoDecodeOutputStreamArguments1 pOutputArguments, ref VideoDecodeInputStreamArguments pInputArguments) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecodeOutputStreamArguments1* ppOutputArguments = &pOutputArguments)
			{
				fixed (VideoDecodeInputStreamArguments* ppInputArguments = &pInputArguments)
				{
					((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12VideoDecoder*, VideoDecodeOutputStreamArguments1*, VideoDecodeInputStreamArguments*, void>)(LpVtbl[23]))(ptr, (ID3D12VideoDecoder*)pDecoder.Handle, (VideoDecodeOutputStreamArguments1*)ppOutputArguments, (VideoDecodeInputStreamArguments*)ppInputArguments);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetProtectedResourceSession(ID3D12ProtectedResourceSession* pProtectedResourceSession) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12ProtectedResourceSession*, void>)(LpVtbl[24]))(ptr, pProtectedResourceSession);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetProtectedResourceSession(ref ID3D12ProtectedResourceSession pProtectedResourceSession) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12ProtectedResourceSession* ppProtectedResourceSession = &pProtectedResourceSession)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12ProtectedResourceSession*, void>)(LpVtbl[24]))(ptr, (ID3D12ProtectedResourceSession*)ppProtectedResourceSession);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetProtectedResourceSession(ComPtr<ID3D12ProtectedResourceSession> pProtectedResourceSession) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12ProtectedResourceSession*, void>)(LpVtbl[24]))(ptr, (ID3D12ProtectedResourceSession*)pProtectedResourceSession.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void InitializeExtensionCommand(ID3D12VideoExtensionCommand* pExtensionCommand, void* pInitializationParameters, nuint initializationParametersSizeInBytes) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12VideoExtensionCommand*, void*, nuint, void>)(LpVtbl[25]))(ptr, pExtensionCommand, pInitializationParameters, initializationParametersSizeInBytes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void InitializeExtensionCommand(ref ID3D12VideoExtensionCommand pExtensionCommand, void* pInitializationParameters, nuint initializationParametersSizeInBytes) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12VideoExtensionCommand* ppExtensionCommand = &pExtensionCommand)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12VideoExtensionCommand*, void*, nuint, void>)(LpVtbl[25]))(ptr, (ID3D12VideoExtensionCommand*)ppExtensionCommand, pInitializationParameters, initializationParametersSizeInBytes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void InitializeExtensionCommand(ComPtr<ID3D12VideoExtensionCommand> pExtensionCommand, void* pInitializationParameters, nuint initializationParametersSizeInBytes) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12VideoExtensionCommand*, void*, nuint, void>)(LpVtbl[25]))(ptr, (ID3D12VideoExtensionCommand*)pExtensionCommand.Handle, pInitializationParameters, initializationParametersSizeInBytes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ExecuteExtensionCommand(ID3D12VideoExtensionCommand* pExtensionCommand, void* pExecutionParameters, nuint executionParametersSizeInBytes) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12VideoExtensionCommand*, void*, nuint, void>)(LpVtbl[26]))(ptr, pExtensionCommand, pExecutionParameters, executionParametersSizeInBytes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ExecuteExtensionCommand(ref ID3D12VideoExtensionCommand pExtensionCommand, void* pExecutionParameters, nuint executionParametersSizeInBytes) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12VideoExtensionCommand* ppExtensionCommand = &pExtensionCommand)
			{
				((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12VideoExtensionCommand*, void*, nuint, void>)(LpVtbl[26]))(ptr, (ID3D12VideoExtensionCommand*)ppExtensionCommand, pExecutionParameters, executionParametersSizeInBytes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ExecuteExtensionCommand(ComPtr<ID3D12VideoExtensionCommand> pExtensionCommand, void* pExecutionParameters, nuint executionParametersSizeInBytes) 
		{
			ID3D12VideoDecodeCommandList2* ptr = (ID3D12VideoDecodeCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12VideoDecodeCommandList2*, ID3D12VideoExtensionCommand*, void*, nuint, void>)(LpVtbl[26]))(ptr, (ID3D12VideoExtensionCommand*)pExtensionCommand.Handle, pExecutionParameters, executionParametersSizeInBytes);
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator ID3D12VideoDecodeCommandList1 (ID3D12VideoDecodeCommandList2 value)
		{
			return Unsafe.As<ID3D12VideoDecodeCommandList2, ID3D12VideoDecodeCommandList1>(ref value);
		}

		public unsafe static implicit operator ID3D12VideoDecodeCommandList (ID3D12VideoDecodeCommandList2 value)
		{
			return Unsafe.As<ID3D12VideoDecodeCommandList2, ID3D12VideoDecodeCommandList>(ref value);
		}

		public unsafe static implicit operator ID3D12CommandList (ID3D12VideoDecodeCommandList2 value)
		{
			return Unsafe.As<ID3D12VideoDecodeCommandList2, ID3D12CommandList>(ref value);
		}

		public unsafe static implicit operator ID3D12DeviceChild (ID3D12VideoDecodeCommandList2 value)
		{
			return Unsafe.As<ID3D12VideoDecodeCommandList2, ID3D12DeviceChild>(ref value);
		}

		public unsafe static implicit operator ID3D12Object (ID3D12VideoDecodeCommandList2 value)
		{
			return Unsafe.As<ID3D12VideoDecodeCommandList2, ID3D12Object>(ref value);
		}

		public unsafe static implicit operator IUnknown (ID3D12VideoDecodeCommandList2 value)
		{
			return Unsafe.As<ID3D12VideoDecodeCommandList2, IUnknown>(ref value);
		}

	}

}
