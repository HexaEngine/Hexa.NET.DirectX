// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D12
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("553103fb-1fe7-4557-bb38-946d7d0e7ca7")]
	public partial struct ID3D12GraphicsCommandList1 : IComObject, IComObject<ID3D12GraphicsCommandList1>, IComObject<ID3D12GraphicsCommandList>, IComObject<ID3D12CommandList>, IComObject<ID3D12DeviceChild>, IComObject<ID3D12Object>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("553103fb-1fe7-4557-bb38-946d7d0e7ca7");

		public unsafe ID3D12GraphicsCommandList1 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int QueryInterface(Guid* riid, void** ppvObject) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, Guid*, void**, int>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int QueryInterface(ref Guid riid, void** ppvObject) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int QueryInterface<T>(out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int QueryInterface<T>(ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint AddRef() 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint Release() 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int GetPrivateData(Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, Guid*, uint*, void*, int>)(LpVtbl[3]))(ptr, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int GetPrivateData(ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, Guid*, uint*, void*, int>)(LpVtbl[3]))(ptr, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int GetPrivateData(Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, Guid*, uint*, void*, int>)(LpVtbl[3]))(ptr, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int GetPrivateData(ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, Guid*, uint*, void*, int>)(LpVtbl[3]))(ptr, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int GetPrivateData<T>(Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, Guid*, uint*, void*, int>)(LpVtbl[3]))(ptr, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int GetPrivateData<T>(ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, Guid*, uint*, void*, int>)(LpVtbl[3]))(ptr, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int GetPrivateData<T>(Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, Guid*, uint*, void*, int>)(LpVtbl[3]))(ptr, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int GetPrivateData<T>(ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, Guid*, uint*, void*, int>)(LpVtbl[3]))(ptr, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int SetPrivateData(Guid* guid, uint dataSize, void* pData) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, Guid*, uint, void*, int>)(LpVtbl[4]))(ptr, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int SetPrivateData(ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, Guid*, uint, void*, int>)(LpVtbl[4]))(ptr, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int SetPrivateDataInterface(Guid* guid, IUnknown* pData) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, Guid*, IUnknown*, int>)(LpVtbl[5]))(ptr, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int SetPrivateDataInterface(ref Guid guid, IUnknown* pData) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, Guid*, IUnknown*, int>)(LpVtbl[5]))(ptr, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int SetPrivateDataInterface(Guid* guid, ref IUnknown pData) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppData = &pData)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, Guid*, IUnknown*, int>)(LpVtbl[5]))(ptr, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int SetPrivateDataInterface(Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, Guid*, IUnknown*, int>)(LpVtbl[5]))(ptr, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int SetPrivateDataInterface(ref Guid guid, ref IUnknown pData) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, Guid*, IUnknown*, int>)(LpVtbl[5]))(ptr, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int SetPrivateDataInterface(ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, Guid*, IUnknown*, int>)(LpVtbl[5]))(ptr, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int SetName(char* name) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, char*, int>)(LpVtbl[6]))(ptr, name);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int SetName(ReadOnlySpan<char> name) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (char* pname = name)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, char*, int>)(LpVtbl[6]))(ptr, (char*)pname);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int SetName(string name) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, char*, int>)(LpVtbl[6]))(ptr, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int GetDevice(Guid* riid, void** ppvDevice) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, Guid*, void**, int>)(LpVtbl[7]))(ptr, riid, ppvDevice);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int GetDevice(ref Guid riid, void** ppvDevice) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, Guid*, void**, int>)(LpVtbl[7]))(ptr, (Guid*)priid, ppvDevice);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int GetDevice<T>(out ComPtr<T> ppvDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvDevice = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, Guid*, void**, int>)(LpVtbl[7]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvDevice.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int GetDevice<T>(ref Guid riid, out ComPtr<T> ppvDevice) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvDevice = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, Guid*, void**, int>)(LpVtbl[7]))(ptr, (Guid*)priid, (void**)ppvDevice.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe CommandListType GetType() 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			CommandListType ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, CommandListType>)(LpVtbl[8]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int Close() 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, int>)(LpVtbl[9]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int Reset(ID3D12CommandAllocator* pAllocator, ID3D12PipelineState* pInitialState) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12CommandAllocator*, ID3D12PipelineState*, int>)(LpVtbl[10]))(ptr, pAllocator, pInitialState);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int Reset(ref ID3D12CommandAllocator pAllocator, ID3D12PipelineState* pInitialState) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12CommandAllocator* ppAllocator = &pAllocator)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12CommandAllocator*, ID3D12PipelineState*, int>)(LpVtbl[10]))(ptr, (ID3D12CommandAllocator*)ppAllocator, pInitialState);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int Reset(ComPtr<ID3D12CommandAllocator> pAllocator, ID3D12PipelineState* pInitialState) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12CommandAllocator*, ID3D12PipelineState*, int>)(LpVtbl[10]))(ptr, (ID3D12CommandAllocator*)pAllocator.Handle, pInitialState);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int Reset(ID3D12CommandAllocator* pAllocator, ref ID3D12PipelineState pInitialState) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12PipelineState* ppInitialState = &pInitialState)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12CommandAllocator*, ID3D12PipelineState*, int>)(LpVtbl[10]))(ptr, pAllocator, (ID3D12PipelineState*)ppInitialState);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int Reset(ID3D12CommandAllocator* pAllocator, ComPtr<ID3D12PipelineState> pInitialState) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12CommandAllocator*, ID3D12PipelineState*, int>)(LpVtbl[10]))(ptr, pAllocator, (ID3D12PipelineState*)pInitialState.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int Reset(ref ID3D12CommandAllocator pAllocator, ref ID3D12PipelineState pInitialState) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12CommandAllocator* ppAllocator = &pAllocator)
			{
				fixed (ID3D12PipelineState* ppInitialState = &pInitialState)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12CommandAllocator*, ID3D12PipelineState*, int>)(LpVtbl[10]))(ptr, (ID3D12CommandAllocator*)ppAllocator, (ID3D12PipelineState*)ppInitialState);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int Reset(ComPtr<ID3D12CommandAllocator> pAllocator, ComPtr<ID3D12PipelineState> pInitialState) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12CommandAllocator*, ID3D12PipelineState*, int>)(LpVtbl[10]))(ptr, (ID3D12CommandAllocator*)pAllocator.Handle, (ID3D12PipelineState*)pInitialState.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearState(ID3D12PipelineState* pPipelineState) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12PipelineState*, void>)(LpVtbl[11]))(ptr, pPipelineState);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearState(ref ID3D12PipelineState pPipelineState) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12PipelineState* ppPipelineState = &pPipelineState)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12PipelineState*, void>)(LpVtbl[11]))(ptr, (ID3D12PipelineState*)ppPipelineState);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearState(ComPtr<ID3D12PipelineState> pPipelineState) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12PipelineState*, void>)(LpVtbl[11]))(ptr, (ID3D12PipelineState*)pPipelineState.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DrawInstanced(uint vertexCountPerInstance, uint instanceCount, uint startVertexLocation, uint startInstanceLocation) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, uint, uint, uint, void>)(LpVtbl[12]))(ptr, vertexCountPerInstance, instanceCount, startVertexLocation, startInstanceLocation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DrawIndexedInstanced(uint indexCountPerInstance, uint instanceCount, uint startIndexLocation, int baseVertexLocation, uint startInstanceLocation) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, uint, uint, int, uint, void>)(LpVtbl[13]))(ptr, indexCountPerInstance, instanceCount, startIndexLocation, baseVertexLocation, startInstanceLocation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void Dispatch(uint threadGroupCountX, uint threadGroupCountY, uint threadGroupCountZ) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, uint, uint, void>)(LpVtbl[14]))(ptr, threadGroupCountX, threadGroupCountY, threadGroupCountZ);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyBufferRegion(ID3D12Resource* pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, ulong numBytes) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, ulong, void>)(LpVtbl[15]))(ptr, pDstBuffer, dstOffset, pSrcBuffer, srcOffset, numBytes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyBufferRegion(ref ID3D12Resource pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, ulong numBytes) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, ulong, void>)(LpVtbl[15]))(ptr, (ID3D12Resource*)ppDstBuffer, dstOffset, pSrcBuffer, srcOffset, numBytes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyBufferRegion(ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, ulong numBytes) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, ulong, void>)(LpVtbl[15]))(ptr, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, pSrcBuffer, srcOffset, numBytes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyBufferRegion(ID3D12Resource* pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, ulong numBytes) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, ulong, void>)(LpVtbl[15]))(ptr, pDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, numBytes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyBufferRegion(ID3D12Resource* pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, ulong numBytes) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, ulong, void>)(LpVtbl[15]))(ptr, pDstBuffer, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, numBytes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyBufferRegion(ref ID3D12Resource pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, ulong numBytes) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, ulong, void>)(LpVtbl[15]))(ptr, (ID3D12Resource*)ppDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, numBytes);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyBufferRegion(ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, ulong numBytes) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, ulong, void>)(LpVtbl[15]))(ptr, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, numBytes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTextureRegion(TextureCopyLocation* pDst, uint dstX, uint dstY, uint dstZ, TextureCopyLocation* pSrc, Box* pSrcBox) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, TextureCopyLocation*, uint, uint, uint, TextureCopyLocation*, Box*, void>)(LpVtbl[16]))(ptr, pDst, dstX, dstY, dstZ, pSrc, pSrcBox);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTextureRegion(ref TextureCopyLocation pDst, uint dstX, uint dstY, uint dstZ, TextureCopyLocation* pSrc, Box* pSrcBox) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TextureCopyLocation* ppDst = &pDst)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, TextureCopyLocation*, uint, uint, uint, TextureCopyLocation*, Box*, void>)(LpVtbl[16]))(ptr, (TextureCopyLocation*)ppDst, dstX, dstY, dstZ, pSrc, pSrcBox);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTextureRegion(TextureCopyLocation* pDst, uint dstX, uint dstY, uint dstZ, ref TextureCopyLocation pSrc, Box* pSrcBox) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TextureCopyLocation* ppSrc = &pSrc)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, TextureCopyLocation*, uint, uint, uint, TextureCopyLocation*, Box*, void>)(LpVtbl[16]))(ptr, pDst, dstX, dstY, dstZ, (TextureCopyLocation*)ppSrc, pSrcBox);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTextureRegion(ref TextureCopyLocation pDst, uint dstX, uint dstY, uint dstZ, ref TextureCopyLocation pSrc, Box* pSrcBox) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TextureCopyLocation* ppDst = &pDst)
			{
				fixed (TextureCopyLocation* ppSrc = &pSrc)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, TextureCopyLocation*, uint, uint, uint, TextureCopyLocation*, Box*, void>)(LpVtbl[16]))(ptr, (TextureCopyLocation*)ppDst, dstX, dstY, dstZ, (TextureCopyLocation*)ppSrc, pSrcBox);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTextureRegion(TextureCopyLocation* pDst, uint dstX, uint dstY, uint dstZ, TextureCopyLocation* pSrc, ref Box pSrcBox) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Box* ppSrcBox = &pSrcBox)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, TextureCopyLocation*, uint, uint, uint, TextureCopyLocation*, Box*, void>)(LpVtbl[16]))(ptr, pDst, dstX, dstY, dstZ, pSrc, (Box*)ppSrcBox);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTextureRegion(ref TextureCopyLocation pDst, uint dstX, uint dstY, uint dstZ, TextureCopyLocation* pSrc, ref Box pSrcBox) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TextureCopyLocation* ppDst = &pDst)
			{
				fixed (Box* ppSrcBox = &pSrcBox)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, TextureCopyLocation*, uint, uint, uint, TextureCopyLocation*, Box*, void>)(LpVtbl[16]))(ptr, (TextureCopyLocation*)ppDst, dstX, dstY, dstZ, pSrc, (Box*)ppSrcBox);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTextureRegion(TextureCopyLocation* pDst, uint dstX, uint dstY, uint dstZ, ref TextureCopyLocation pSrc, ref Box pSrcBox) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TextureCopyLocation* ppSrc = &pSrc)
			{
				fixed (Box* ppSrcBox = &pSrcBox)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, TextureCopyLocation*, uint, uint, uint, TextureCopyLocation*, Box*, void>)(LpVtbl[16]))(ptr, pDst, dstX, dstY, dstZ, (TextureCopyLocation*)ppSrc, (Box*)ppSrcBox);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTextureRegion(ref TextureCopyLocation pDst, uint dstX, uint dstY, uint dstZ, ref TextureCopyLocation pSrc, ref Box pSrcBox) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TextureCopyLocation* ppDst = &pDst)
			{
				fixed (TextureCopyLocation* ppSrc = &pSrc)
				{
					fixed (Box* ppSrcBox = &pSrcBox)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, TextureCopyLocation*, uint, uint, uint, TextureCopyLocation*, Box*, void>)(LpVtbl[16]))(ptr, (TextureCopyLocation*)ppDst, dstX, dstY, dstZ, (TextureCopyLocation*)ppSrc, (Box*)ppSrcBox);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyResource(ID3D12Resource* pDstResource, ID3D12Resource* pSrcResource) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ID3D12Resource*, void>)(LpVtbl[17]))(ptr, pDstResource, pSrcResource);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyResource(ref ID3D12Resource pDstResource, ID3D12Resource* pSrcResource) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ID3D12Resource*, void>)(LpVtbl[17]))(ptr, (ID3D12Resource*)ppDstResource, pSrcResource);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyResource(ComPtr<ID3D12Resource> pDstResource, ID3D12Resource* pSrcResource) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ID3D12Resource*, void>)(LpVtbl[17]))(ptr, (ID3D12Resource*)pDstResource.Handle, pSrcResource);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyResource(ID3D12Resource* pDstResource, ref ID3D12Resource pSrcResource) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ID3D12Resource*, void>)(LpVtbl[17]))(ptr, pDstResource, (ID3D12Resource*)ppSrcResource);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyResource(ID3D12Resource* pDstResource, ComPtr<ID3D12Resource> pSrcResource) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ID3D12Resource*, void>)(LpVtbl[17]))(ptr, pDstResource, (ID3D12Resource*)pSrcResource.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyResource(ref ID3D12Resource pDstResource, ref ID3D12Resource pSrcResource) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ID3D12Resource*, void>)(LpVtbl[17]))(ptr, (ID3D12Resource*)ppDstResource, (ID3D12Resource*)ppSrcResource);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyResource(ComPtr<ID3D12Resource> pDstResource, ComPtr<ID3D12Resource> pSrcResource) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ID3D12Resource*, void>)(LpVtbl[17]))(ptr, (ID3D12Resource*)pDstResource.Handle, (ID3D12Resource*)pSrcResource.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ID3D12Resource* pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ID3D12Resource* pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(LpVtbl[18]))(ptr, pTiledResource, pTileRegionStartCoordinate, pTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ref ID3D12Resource pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ID3D12Resource* pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(LpVtbl[18]))(ptr, (ID3D12Resource*)ppTiledResource, pTileRegionStartCoordinate, pTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ComPtr<ID3D12Resource> pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ID3D12Resource* pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(LpVtbl[18]))(ptr, (ID3D12Resource*)pTiledResource.Handle, pTileRegionStartCoordinate, pTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ID3D12Resource* pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ID3D12Resource* pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(LpVtbl[18]))(ptr, pTiledResource, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, pTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ref ID3D12Resource pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ID3D12Resource* pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(LpVtbl[18]))(ptr, (ID3D12Resource*)ppTiledResource, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, pTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ComPtr<ID3D12Resource> pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ID3D12Resource* pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(LpVtbl[18]))(ptr, (ID3D12Resource*)pTiledResource.Handle, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, pTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ID3D12Resource* pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ID3D12Resource* pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(LpVtbl[18]))(ptr, pTiledResource, pTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ref ID3D12Resource pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ID3D12Resource* pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(LpVtbl[18]))(ptr, (ID3D12Resource*)ppTiledResource, pTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ComPtr<ID3D12Resource> pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ID3D12Resource* pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(LpVtbl[18]))(ptr, (ID3D12Resource*)pTiledResource.Handle, pTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ID3D12Resource* pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ID3D12Resource* pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(LpVtbl[18]))(ptr, pTiledResource, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ref ID3D12Resource pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ID3D12Resource* pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
				{
					fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(LpVtbl[18]))(ptr, (ID3D12Resource*)ppTiledResource, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ComPtr<ID3D12Resource> pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ID3D12Resource* pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(LpVtbl[18]))(ptr, (ID3D12Resource*)pTiledResource.Handle, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ID3D12Resource* pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ref ID3D12Resource pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppBuffer = &pBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(LpVtbl[18]))(ptr, pTiledResource, pTileRegionStartCoordinate, pTileRegionSize, (ID3D12Resource*)ppBuffer, bufferStartOffsetInBytes, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ID3D12Resource* pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ComPtr<ID3D12Resource> pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(LpVtbl[18]))(ptr, pTiledResource, pTileRegionStartCoordinate, pTileRegionSize, (ID3D12Resource*)pBuffer.Handle, bufferStartOffsetInBytes, flags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ref ID3D12Resource pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ref ID3D12Resource pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (ID3D12Resource* ppBuffer = &pBuffer)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(LpVtbl[18]))(ptr, (ID3D12Resource*)ppTiledResource, pTileRegionStartCoordinate, pTileRegionSize, (ID3D12Resource*)ppBuffer, bufferStartOffsetInBytes, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ComPtr<ID3D12Resource> pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ComPtr<ID3D12Resource> pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(LpVtbl[18]))(ptr, (ID3D12Resource*)pTiledResource.Handle, pTileRegionStartCoordinate, pTileRegionSize, (ID3D12Resource*)pBuffer.Handle, bufferStartOffsetInBytes, flags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ID3D12Resource* pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ref ID3D12Resource pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
			{
				fixed (ID3D12Resource* ppBuffer = &pBuffer)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(LpVtbl[18]))(ptr, pTiledResource, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, pTileRegionSize, (ID3D12Resource*)ppBuffer, bufferStartOffsetInBytes, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ID3D12Resource* pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ComPtr<ID3D12Resource> pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(LpVtbl[18]))(ptr, pTiledResource, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, pTileRegionSize, (ID3D12Resource*)pBuffer.Handle, bufferStartOffsetInBytes, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ref ID3D12Resource pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ref ID3D12Resource pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
				{
					fixed (ID3D12Resource* ppBuffer = &pBuffer)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(LpVtbl[18]))(ptr, (ID3D12Resource*)ppTiledResource, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, pTileRegionSize, (ID3D12Resource*)ppBuffer, bufferStartOffsetInBytes, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ComPtr<ID3D12Resource> pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ComPtr<ID3D12Resource> pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(LpVtbl[18]))(ptr, (ID3D12Resource*)pTiledResource.Handle, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, pTileRegionSize, (ID3D12Resource*)pBuffer.Handle, bufferStartOffsetInBytes, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ID3D12Resource* pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ref ID3D12Resource pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
			{
				fixed (ID3D12Resource* ppBuffer = &pBuffer)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(LpVtbl[18]))(ptr, pTiledResource, pTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, (ID3D12Resource*)ppBuffer, bufferStartOffsetInBytes, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ID3D12Resource* pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ComPtr<ID3D12Resource> pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(LpVtbl[18]))(ptr, pTiledResource, pTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, (ID3D12Resource*)pBuffer.Handle, bufferStartOffsetInBytes, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ref ID3D12Resource pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ref ID3D12Resource pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					fixed (ID3D12Resource* ppBuffer = &pBuffer)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(LpVtbl[18]))(ptr, (ID3D12Resource*)ppTiledResource, pTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, (ID3D12Resource*)ppBuffer, bufferStartOffsetInBytes, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ComPtr<ID3D12Resource> pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ComPtr<ID3D12Resource> pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(LpVtbl[18]))(ptr, (ID3D12Resource*)pTiledResource.Handle, pTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, (ID3D12Resource*)pBuffer.Handle, bufferStartOffsetInBytes, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ID3D12Resource* pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ref ID3D12Resource pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					fixed (ID3D12Resource* ppBuffer = &pBuffer)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(LpVtbl[18]))(ptr, pTiledResource, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, (ID3D12Resource*)ppBuffer, bufferStartOffsetInBytes, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ID3D12Resource* pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ComPtr<ID3D12Resource> pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(LpVtbl[18]))(ptr, pTiledResource, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, (ID3D12Resource*)pBuffer.Handle, bufferStartOffsetInBytes, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ref ID3D12Resource pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ref ID3D12Resource pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
				{
					fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
					{
						fixed (ID3D12Resource* ppBuffer = &pBuffer)
						{
							((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(LpVtbl[18]))(ptr, (ID3D12Resource*)ppTiledResource, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, (ID3D12Resource*)ppBuffer, bufferStartOffsetInBytes, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ComPtr<ID3D12Resource> pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ComPtr<ID3D12Resource> pBuffer, ulong bufferStartOffsetInBytes, TileCopyFlags flags) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D12Resource*, ulong, TileCopyFlags, void>)(LpVtbl[18]))(ptr, (ID3D12Resource*)pTiledResource.Handle, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, (ID3D12Resource*)pBuffer.Handle, bufferStartOffsetInBytes, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveSubresource(ID3D12Resource* pDstResource, uint dstSubresource, ID3D12Resource* pSrcResource, uint srcSubresource, Format format) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, uint, ID3D12Resource*, uint, Format, void>)(LpVtbl[19]))(ptr, pDstResource, dstSubresource, pSrcResource, srcSubresource, format);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveSubresource(ref ID3D12Resource pDstResource, uint dstSubresource, ID3D12Resource* pSrcResource, uint srcSubresource, Format format) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, uint, ID3D12Resource*, uint, Format, void>)(LpVtbl[19]))(ptr, (ID3D12Resource*)ppDstResource, dstSubresource, pSrcResource, srcSubresource, format);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveSubresource(ComPtr<ID3D12Resource> pDstResource, uint dstSubresource, ID3D12Resource* pSrcResource, uint srcSubresource, Format format) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, uint, ID3D12Resource*, uint, Format, void>)(LpVtbl[19]))(ptr, (ID3D12Resource*)pDstResource.Handle, dstSubresource, pSrcResource, srcSubresource, format);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveSubresource(ID3D12Resource* pDstResource, uint dstSubresource, ref ID3D12Resource pSrcResource, uint srcSubresource, Format format) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, uint, ID3D12Resource*, uint, Format, void>)(LpVtbl[19]))(ptr, pDstResource, dstSubresource, (ID3D12Resource*)ppSrcResource, srcSubresource, format);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveSubresource(ID3D12Resource* pDstResource, uint dstSubresource, ComPtr<ID3D12Resource> pSrcResource, uint srcSubresource, Format format) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, uint, ID3D12Resource*, uint, Format, void>)(LpVtbl[19]))(ptr, pDstResource, dstSubresource, (ID3D12Resource*)pSrcResource.Handle, srcSubresource, format);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveSubresource(ref ID3D12Resource pDstResource, uint dstSubresource, ref ID3D12Resource pSrcResource, uint srcSubresource, Format format) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, uint, ID3D12Resource*, uint, Format, void>)(LpVtbl[19]))(ptr, (ID3D12Resource*)ppDstResource, dstSubresource, (ID3D12Resource*)ppSrcResource, srcSubresource, format);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveSubresource(ComPtr<ID3D12Resource> pDstResource, uint dstSubresource, ComPtr<ID3D12Resource> pSrcResource, uint srcSubresource, Format format) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, uint, ID3D12Resource*, uint, Format, void>)(LpVtbl[19]))(ptr, (ID3D12Resource*)pDstResource.Handle, dstSubresource, (ID3D12Resource*)pSrcResource.Handle, srcSubresource, format);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IASetPrimitiveTopology(PrimitiveTopology primitiveTopology) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, PrimitiveTopology, void>)(LpVtbl[20]))(ptr, primitiveTopology);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void RSSetViewports(uint numViewports, Viewport* pViewports) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, Viewport*, void>)(LpVtbl[21]))(ptr, numViewports, pViewports);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void RSSetViewports(uint numViewports, ref Viewport pViewports) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Viewport* ppViewports = &pViewports)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, Viewport*, void>)(LpVtbl[21]))(ptr, numViewports, (Viewport*)ppViewports);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void RSSetScissorRects(uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, Rect32*, void>)(LpVtbl[22]))(ptr, numRects, pRects);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void RSSetScissorRects(uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppRects = &pRects)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, Rect32*, void>)(LpVtbl[22]))(ptr, numRects, (Rect32*)ppRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetBlendFactor(float* blendFactor) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, float*, void>)(LpVtbl[23]))(ptr, blendFactor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetBlendFactor(ref float blendFactor) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pblendFactor = &blendFactor)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, float*, void>)(LpVtbl[23]))(ptr, (float*)pblendFactor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetBlendFactor(ReadOnlySpan<float> blendFactor) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pblendFactor = blendFactor)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, float*, void>)(LpVtbl[23]))(ptr, (float*)pblendFactor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetStencilRef(uint stencilRef) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, void>)(LpVtbl[24]))(ptr, stencilRef);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetPipelineState(ID3D12PipelineState* pPipelineState) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12PipelineState*, void>)(LpVtbl[25]))(ptr, pPipelineState);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetPipelineState(ref ID3D12PipelineState pPipelineState) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12PipelineState* ppPipelineState = &pPipelineState)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12PipelineState*, void>)(LpVtbl[25]))(ptr, (ID3D12PipelineState*)ppPipelineState);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetPipelineState(ComPtr<ID3D12PipelineState> pPipelineState) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12PipelineState*, void>)(LpVtbl[25]))(ptr, (ID3D12PipelineState*)pPipelineState.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResourceBarrier(uint numBarriers, ResourceBarrier* pBarriers) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, ResourceBarrier*, void>)(LpVtbl[26]))(ptr, numBarriers, pBarriers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResourceBarrier(uint numBarriers, ref ResourceBarrier pBarriers) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceBarrier* ppBarriers = &pBarriers)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, ResourceBarrier*, void>)(LpVtbl[26]))(ptr, numBarriers, (ResourceBarrier*)ppBarriers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ExecuteBundle(ID3D12GraphicsCommandList* pCommandList) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12GraphicsCommandList*, void>)(LpVtbl[27]))(ptr, pCommandList);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ExecuteBundle(ref ID3D12GraphicsCommandList pCommandList) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12GraphicsCommandList* ppCommandList = &pCommandList)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12GraphicsCommandList*, void>)(LpVtbl[27]))(ptr, (ID3D12GraphicsCommandList*)ppCommandList);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ExecuteBundle(ComPtr<ID3D12GraphicsCommandList> pCommandList) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12GraphicsCommandList*, void>)(LpVtbl[27]))(ptr, (ID3D12GraphicsCommandList*)pCommandList.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetDescriptorHeaps(uint numDescriptorHeaps, ID3D12DescriptorHeap** ppDescriptorHeaps) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, ID3D12DescriptorHeap**, void>)(LpVtbl[28]))(ptr, numDescriptorHeaps, ppDescriptorHeaps);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetDescriptorHeaps(uint numDescriptorHeaps, ref ID3D12DescriptorHeap* ppDescriptorHeaps) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12DescriptorHeap** pppDescriptorHeaps = &ppDescriptorHeaps)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, ID3D12DescriptorHeap**, void>)(LpVtbl[28]))(ptr, numDescriptorHeaps, (ID3D12DescriptorHeap**)pppDescriptorHeaps);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetDescriptorHeaps(uint numDescriptorHeaps, ComPtr<ID3D12DescriptorHeap> ppDescriptorHeaps) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, ID3D12DescriptorHeap**, void>)(LpVtbl[28]))(ptr, numDescriptorHeaps, (ID3D12DescriptorHeap**)ppDescriptorHeaps.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetComputeRootSignature(ID3D12RootSignature* pRootSignature) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12RootSignature*, void>)(LpVtbl[29]))(ptr, pRootSignature);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetComputeRootSignature(ref ID3D12RootSignature pRootSignature) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12RootSignature* ppRootSignature = &pRootSignature)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12RootSignature*, void>)(LpVtbl[29]))(ptr, (ID3D12RootSignature*)ppRootSignature);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetGraphicsRootSignature(ID3D12RootSignature* pRootSignature) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12RootSignature*, void>)(LpVtbl[30]))(ptr, pRootSignature);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetGraphicsRootSignature(ref ID3D12RootSignature pRootSignature) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12RootSignature* ppRootSignature = &pRootSignature)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12RootSignature*, void>)(LpVtbl[30]))(ptr, (ID3D12RootSignature*)ppRootSignature);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetComputeRootDescriptorTable(uint rootParameterIndex, GpuDescriptorHandle baseDescriptor) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, GpuDescriptorHandle, void>)(LpVtbl[31]))(ptr, rootParameterIndex, baseDescriptor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetGraphicsRootDescriptorTable(uint rootParameterIndex, GpuDescriptorHandle baseDescriptor) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, GpuDescriptorHandle, void>)(LpVtbl[32]))(ptr, rootParameterIndex, baseDescriptor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetComputeRoot32BitConstant(uint rootParameterIndex, uint srcData, uint destOffsetIn32BitValues) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, uint, uint, void>)(LpVtbl[33]))(ptr, rootParameterIndex, srcData, destOffsetIn32BitValues);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetGraphicsRoot32BitConstant(uint rootParameterIndex, uint srcData, uint destOffsetIn32BitValues) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, uint, uint, void>)(LpVtbl[34]))(ptr, rootParameterIndex, srcData, destOffsetIn32BitValues);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetComputeRoot32BitConstants(uint rootParameterIndex, uint num32BitValuesToSet, void* pSrcData, uint destOffsetIn32BitValues) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, uint, void*, uint, void>)(LpVtbl[35]))(ptr, rootParameterIndex, num32BitValuesToSet, pSrcData, destOffsetIn32BitValues);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetGraphicsRoot32BitConstants(uint rootParameterIndex, uint num32BitValuesToSet, void* pSrcData, uint destOffsetIn32BitValues) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, uint, void*, uint, void>)(LpVtbl[36]))(ptr, rootParameterIndex, num32BitValuesToSet, pSrcData, destOffsetIn32BitValues);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetComputeRootConstantBufferView(uint rootParameterIndex, ulong bufferLocation) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, ulong, void>)(LpVtbl[37]))(ptr, rootParameterIndex, bufferLocation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetGraphicsRootConstantBufferView(uint rootParameterIndex, ulong bufferLocation) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, ulong, void>)(LpVtbl[38]))(ptr, rootParameterIndex, bufferLocation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetComputeRootShaderResourceView(uint rootParameterIndex, ulong bufferLocation) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, ulong, void>)(LpVtbl[39]))(ptr, rootParameterIndex, bufferLocation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetGraphicsRootShaderResourceView(uint rootParameterIndex, ulong bufferLocation) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, ulong, void>)(LpVtbl[40]))(ptr, rootParameterIndex, bufferLocation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetComputeRootUnorderedAccessView(uint rootParameterIndex, ulong bufferLocation) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, ulong, void>)(LpVtbl[41]))(ptr, rootParameterIndex, bufferLocation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetGraphicsRootUnorderedAccessView(uint rootParameterIndex, ulong bufferLocation) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, ulong, void>)(LpVtbl[42]))(ptr, rootParameterIndex, bufferLocation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IASetIndexBuffer(IndexBufferView* pView) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, IndexBufferView*, void>)(LpVtbl[43]))(ptr, pView);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IASetIndexBuffer(ref IndexBufferView pView) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IndexBufferView* ppView = &pView)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, IndexBufferView*, void>)(LpVtbl[43]))(ptr, (IndexBufferView*)ppView);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IASetVertexBuffers(uint startSlot, uint numViews, VertexBufferView* pViews) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, uint, VertexBufferView*, void>)(LpVtbl[44]))(ptr, startSlot, numViews, pViews);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IASetVertexBuffers(uint startSlot, uint numViews, ref VertexBufferView pViews) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VertexBufferView* ppViews = &pViews)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, uint, VertexBufferView*, void>)(LpVtbl[44]))(ptr, startSlot, numViews, (VertexBufferView*)ppViews);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SOSetTargets(uint startSlot, uint numViews, StreamOutputBufferView* pViews) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, uint, StreamOutputBufferView*, void>)(LpVtbl[45]))(ptr, startSlot, numViews, pViews);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SOSetTargets(uint startSlot, uint numViews, ref StreamOutputBufferView pViews) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (StreamOutputBufferView* ppViews = &pViews)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, uint, StreamOutputBufferView*, void>)(LpVtbl[45]))(ptr, startSlot, numViews, (StreamOutputBufferView*)ppViews);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargets(uint numRenderTargetDescriptors, CpuDescriptorHandle* pRenderTargetDescriptors, int rTsSingleHandleToDescriptorRange, CpuDescriptorHandle* pDepthStencilDescriptor) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, CpuDescriptorHandle*, int, CpuDescriptorHandle*, void>)(LpVtbl[46]))(ptr, numRenderTargetDescriptors, pRenderTargetDescriptors, rTsSingleHandleToDescriptorRange, pDepthStencilDescriptor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargets(uint numRenderTargetDescriptors, ref CpuDescriptorHandle pRenderTargetDescriptors, int rTsSingleHandleToDescriptorRange, CpuDescriptorHandle* pDepthStencilDescriptor) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CpuDescriptorHandle* ppRenderTargetDescriptors = &pRenderTargetDescriptors)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, CpuDescriptorHandle*, int, CpuDescriptorHandle*, void>)(LpVtbl[46]))(ptr, numRenderTargetDescriptors, (CpuDescriptorHandle*)ppRenderTargetDescriptors, rTsSingleHandleToDescriptorRange, pDepthStencilDescriptor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargets(uint numRenderTargetDescriptors, CpuDescriptorHandle* pRenderTargetDescriptors, int rTsSingleHandleToDescriptorRange, ref CpuDescriptorHandle pDepthStencilDescriptor) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CpuDescriptorHandle* ppDepthStencilDescriptor = &pDepthStencilDescriptor)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, CpuDescriptorHandle*, int, CpuDescriptorHandle*, void>)(LpVtbl[46]))(ptr, numRenderTargetDescriptors, pRenderTargetDescriptors, rTsSingleHandleToDescriptorRange, (CpuDescriptorHandle*)ppDepthStencilDescriptor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargets(uint numRenderTargetDescriptors, ref CpuDescriptorHandle pRenderTargetDescriptors, int rTsSingleHandleToDescriptorRange, ref CpuDescriptorHandle pDepthStencilDescriptor) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CpuDescriptorHandle* ppRenderTargetDescriptors = &pRenderTargetDescriptors)
			{
				fixed (CpuDescriptorHandle* ppDepthStencilDescriptor = &pDepthStencilDescriptor)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, CpuDescriptorHandle*, int, CpuDescriptorHandle*, void>)(LpVtbl[46]))(ptr, numRenderTargetDescriptors, (CpuDescriptorHandle*)ppRenderTargetDescriptors, rTsSingleHandleToDescriptorRange, (CpuDescriptorHandle*)ppDepthStencilDescriptor);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearDepthStencilView(CpuDescriptorHandle depthStencilView, ClearFlags clearFlags, float depth, byte stencil, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, CpuDescriptorHandle, ClearFlags, float, byte, uint, Rect32*, void>)(LpVtbl[47]))(ptr, depthStencilView, clearFlags, depth, stencil, numRects, pRects);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearDepthStencilView(CpuDescriptorHandle depthStencilView, ClearFlags clearFlags, float depth, byte stencil, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppRects = &pRects)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, CpuDescriptorHandle, ClearFlags, float, byte, uint, Rect32*, void>)(LpVtbl[47]))(ptr, depthStencilView, clearFlags, depth, stencil, numRects, (Rect32*)ppRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearRenderTargetView(CpuDescriptorHandle renderTargetView, float* colorRgba, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, CpuDescriptorHandle, float*, uint, Rect32*, void>)(LpVtbl[48]))(ptr, renderTargetView, colorRgba, numRects, pRects);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearRenderTargetView(CpuDescriptorHandle renderTargetView, ref float colorRgba, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pcolorRgba = &colorRgba)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, CpuDescriptorHandle, float*, uint, Rect32*, void>)(LpVtbl[48]))(ptr, renderTargetView, (float*)pcolorRgba, numRects, pRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearRenderTargetView(CpuDescriptorHandle renderTargetView, ReadOnlySpan<float> colorRgba, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pcolorRgba = colorRgba)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, CpuDescriptorHandle, float*, uint, Rect32*, void>)(LpVtbl[48]))(ptr, renderTargetView, (float*)pcolorRgba, numRects, pRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearRenderTargetView(CpuDescriptorHandle renderTargetView, float* colorRgba, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppRects = &pRects)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, CpuDescriptorHandle, float*, uint, Rect32*, void>)(LpVtbl[48]))(ptr, renderTargetView, colorRgba, numRects, (Rect32*)ppRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearRenderTargetView(CpuDescriptorHandle renderTargetView, ref float colorRgba, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pcolorRgba = &colorRgba)
			{
				fixed (Rect32* ppRects = &pRects)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, CpuDescriptorHandle, float*, uint, Rect32*, void>)(LpVtbl[48]))(ptr, renderTargetView, (float*)pcolorRgba, numRects, (Rect32*)ppRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearRenderTargetView(CpuDescriptorHandle renderTargetView, ReadOnlySpan<float> colorRgba, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pcolorRgba = colorRgba)
			{
				fixed (Rect32* ppRects = &pRects)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, CpuDescriptorHandle, float*, uint, Rect32*, void>)(LpVtbl[48]))(ptr, renderTargetView, (float*)pcolorRgba, numRects, (Rect32*)ppRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewUint(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ID3D12Resource* pResource, uint* values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(LpVtbl[49]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, pResource, values, numRects, pRects);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewUint(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ref ID3D12Resource pResource, uint* values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(LpVtbl[49]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)ppResource, values, numRects, pRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewUint(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ComPtr<ID3D12Resource> pResource, uint* values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(LpVtbl[49]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)pResource.Handle, values, numRects, pRects);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewUint(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ID3D12Resource* pResource, ref uint values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* pvalues = &values)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(LpVtbl[49]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, pResource, (uint*)pvalues, numRects, pRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewUint(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ID3D12Resource* pResource, ReadOnlySpan<uint> values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* pvalues = values)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(LpVtbl[49]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, pResource, (uint*)pvalues, numRects, pRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewUint(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ref ID3D12Resource pResource, ref uint values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (uint* pvalues = &values)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(LpVtbl[49]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)ppResource, (uint*)pvalues, numRects, pRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewUint(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ref ID3D12Resource pResource, ReadOnlySpan<uint> values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (uint* pvalues = values)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(LpVtbl[49]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)ppResource, (uint*)pvalues, numRects, pRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewUint(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ComPtr<ID3D12Resource> pResource, ref uint values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* pvalues = &values)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(LpVtbl[49]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)pResource.Handle, (uint*)pvalues, numRects, pRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewUint(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ID3D12Resource* pResource, uint* values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppRects = &pRects)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(LpVtbl[49]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, pResource, values, numRects, (Rect32*)ppRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewUint(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ref ID3D12Resource pResource, uint* values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (Rect32* ppRects = &pRects)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(LpVtbl[49]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)ppResource, values, numRects, (Rect32*)ppRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewUint(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ComPtr<ID3D12Resource> pResource, uint* values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppRects = &pRects)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(LpVtbl[49]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)pResource.Handle, values, numRects, (Rect32*)ppRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewUint(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ID3D12Resource* pResource, ref uint values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* pvalues = &values)
			{
				fixed (Rect32* ppRects = &pRects)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(LpVtbl[49]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, pResource, (uint*)pvalues, numRects, (Rect32*)ppRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewUint(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ID3D12Resource* pResource, ReadOnlySpan<uint> values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* pvalues = values)
			{
				fixed (Rect32* ppRects = &pRects)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(LpVtbl[49]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, pResource, (uint*)pvalues, numRects, (Rect32*)ppRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewUint(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ref ID3D12Resource pResource, ref uint values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (uint* pvalues = &values)
				{
					fixed (Rect32* ppRects = &pRects)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(LpVtbl[49]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)ppResource, (uint*)pvalues, numRects, (Rect32*)ppRects);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewUint(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ref ID3D12Resource pResource, ReadOnlySpan<uint> values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (uint* pvalues = values)
				{
					fixed (Rect32* ppRects = &pRects)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(LpVtbl[49]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)ppResource, (uint*)pvalues, numRects, (Rect32*)ppRects);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewUint(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ComPtr<ID3D12Resource> pResource, ref uint values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* pvalues = &values)
			{
				fixed (Rect32* ppRects = &pRects)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, uint*, uint, Rect32*, void>)(LpVtbl[49]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)pResource.Handle, (uint*)pvalues, numRects, (Rect32*)ppRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewFloat(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ID3D12Resource* pResource, float* values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(LpVtbl[50]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, pResource, values, numRects, pRects);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewFloat(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ref ID3D12Resource pResource, float* values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(LpVtbl[50]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)ppResource, values, numRects, pRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewFloat(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ComPtr<ID3D12Resource> pResource, float* values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(LpVtbl[50]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)pResource.Handle, values, numRects, pRects);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewFloat(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ID3D12Resource* pResource, ref float values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pvalues = &values)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(LpVtbl[50]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, pResource, (float*)pvalues, numRects, pRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewFloat(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ID3D12Resource* pResource, ReadOnlySpan<float> values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pvalues = values)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(LpVtbl[50]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, pResource, (float*)pvalues, numRects, pRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewFloat(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ref ID3D12Resource pResource, ref float values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (float* pvalues = &values)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(LpVtbl[50]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)ppResource, (float*)pvalues, numRects, pRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewFloat(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ref ID3D12Resource pResource, ReadOnlySpan<float> values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (float* pvalues = values)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(LpVtbl[50]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)ppResource, (float*)pvalues, numRects, pRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewFloat(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ComPtr<ID3D12Resource> pResource, ref float values, uint numRects, Rect32* pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pvalues = &values)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(LpVtbl[50]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)pResource.Handle, (float*)pvalues, numRects, pRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewFloat(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ID3D12Resource* pResource, float* values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppRects = &pRects)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(LpVtbl[50]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, pResource, values, numRects, (Rect32*)ppRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewFloat(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ref ID3D12Resource pResource, float* values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (Rect32* ppRects = &pRects)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(LpVtbl[50]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)ppResource, values, numRects, (Rect32*)ppRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewFloat(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ComPtr<ID3D12Resource> pResource, float* values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppRects = &pRects)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(LpVtbl[50]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)pResource.Handle, values, numRects, (Rect32*)ppRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewFloat(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ID3D12Resource* pResource, ref float values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pvalues = &values)
			{
				fixed (Rect32* ppRects = &pRects)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(LpVtbl[50]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, pResource, (float*)pvalues, numRects, (Rect32*)ppRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewFloat(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ID3D12Resource* pResource, ReadOnlySpan<float> values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pvalues = values)
			{
				fixed (Rect32* ppRects = &pRects)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(LpVtbl[50]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, pResource, (float*)pvalues, numRects, (Rect32*)ppRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewFloat(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ref ID3D12Resource pResource, ref float values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (float* pvalues = &values)
				{
					fixed (Rect32* ppRects = &pRects)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(LpVtbl[50]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)ppResource, (float*)pvalues, numRects, (Rect32*)ppRects);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewFloat(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ref ID3D12Resource pResource, ReadOnlySpan<float> values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (float* pvalues = values)
				{
					fixed (Rect32* ppRects = &pRects)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(LpVtbl[50]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)ppResource, (float*)pvalues, numRects, (Rect32*)ppRects);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewFloat(GpuDescriptorHandle viewGpuHandleInCurrentHeap, CpuDescriptorHandle viewCpuHandle, ComPtr<ID3D12Resource> pResource, ref float values, uint numRects, ref Rect32 pRects) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pvalues = &values)
			{
				fixed (Rect32* ppRects = &pRects)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, GpuDescriptorHandle, CpuDescriptorHandle, ID3D12Resource*, float*, uint, Rect32*, void>)(LpVtbl[50]))(ptr, viewGpuHandleInCurrentHeap, viewCpuHandle, (ID3D12Resource*)pResource.Handle, (float*)pvalues, numRects, (Rect32*)ppRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DiscardResource(ID3D12Resource* pResource, DiscardRegion* pRegion) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, DiscardRegion*, void>)(LpVtbl[51]))(ptr, pResource, pRegion);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DiscardResource(ref ID3D12Resource pResource, DiscardRegion* pRegion) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, DiscardRegion*, void>)(LpVtbl[51]))(ptr, (ID3D12Resource*)ppResource, pRegion);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DiscardResource(ComPtr<ID3D12Resource> pResource, DiscardRegion* pRegion) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, DiscardRegion*, void>)(LpVtbl[51]))(ptr, (ID3D12Resource*)pResource.Handle, pRegion);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DiscardResource(ID3D12Resource* pResource, ref DiscardRegion pRegion) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DiscardRegion* ppRegion = &pRegion)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, DiscardRegion*, void>)(LpVtbl[51]))(ptr, pResource, (DiscardRegion*)ppRegion);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DiscardResource(ref ID3D12Resource pResource, ref DiscardRegion pRegion) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (DiscardRegion* ppRegion = &pRegion)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, DiscardRegion*, void>)(LpVtbl[51]))(ptr, (ID3D12Resource*)ppResource, (DiscardRegion*)ppRegion);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DiscardResource(ComPtr<ID3D12Resource> pResource, ref DiscardRegion pRegion) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DiscardRegion* ppRegion = &pRegion)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, DiscardRegion*, void>)(LpVtbl[51]))(ptr, (ID3D12Resource*)pResource.Handle, (DiscardRegion*)ppRegion);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void BeginQuery(ID3D12QueryHeap* pQueryHeap, QueryType type, uint index) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12QueryHeap*, QueryType, uint, void>)(LpVtbl[52]))(ptr, pQueryHeap, type, index);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void BeginQuery(ref ID3D12QueryHeap pQueryHeap, QueryType type, uint index) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12QueryHeap* ppQueryHeap = &pQueryHeap)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12QueryHeap*, QueryType, uint, void>)(LpVtbl[52]))(ptr, (ID3D12QueryHeap*)ppQueryHeap, type, index);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void EndQuery(ID3D12QueryHeap* pQueryHeap, QueryType type, uint index) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12QueryHeap*, QueryType, uint, void>)(LpVtbl[53]))(ptr, pQueryHeap, type, index);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void EndQuery(ref ID3D12QueryHeap pQueryHeap, QueryType type, uint index) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12QueryHeap* ppQueryHeap = &pQueryHeap)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12QueryHeap*, QueryType, uint, void>)(LpVtbl[53]))(ptr, (ID3D12QueryHeap*)ppQueryHeap, type, index);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveQueryData(ID3D12QueryHeap* pQueryHeap, QueryType type, uint startIndex, uint numQueries, ID3D12Resource* pDestinationBuffer, ulong alignedDestinationBufferOffset) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12QueryHeap*, QueryType, uint, uint, ID3D12Resource*, ulong, void>)(LpVtbl[54]))(ptr, pQueryHeap, type, startIndex, numQueries, pDestinationBuffer, alignedDestinationBufferOffset);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveQueryData(ref ID3D12QueryHeap pQueryHeap, QueryType type, uint startIndex, uint numQueries, ID3D12Resource* pDestinationBuffer, ulong alignedDestinationBufferOffset) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12QueryHeap* ppQueryHeap = &pQueryHeap)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12QueryHeap*, QueryType, uint, uint, ID3D12Resource*, ulong, void>)(LpVtbl[54]))(ptr, (ID3D12QueryHeap*)ppQueryHeap, type, startIndex, numQueries, pDestinationBuffer, alignedDestinationBufferOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveQueryData(ID3D12QueryHeap* pQueryHeap, QueryType type, uint startIndex, uint numQueries, ref ID3D12Resource pDestinationBuffer, ulong alignedDestinationBufferOffset) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDestinationBuffer = &pDestinationBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12QueryHeap*, QueryType, uint, uint, ID3D12Resource*, ulong, void>)(LpVtbl[54]))(ptr, pQueryHeap, type, startIndex, numQueries, (ID3D12Resource*)ppDestinationBuffer, alignedDestinationBufferOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveQueryData(ID3D12QueryHeap* pQueryHeap, QueryType type, uint startIndex, uint numQueries, ComPtr<ID3D12Resource> pDestinationBuffer, ulong alignedDestinationBufferOffset) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12QueryHeap*, QueryType, uint, uint, ID3D12Resource*, ulong, void>)(LpVtbl[54]))(ptr, pQueryHeap, type, startIndex, numQueries, (ID3D12Resource*)pDestinationBuffer.Handle, alignedDestinationBufferOffset);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveQueryData(ref ID3D12QueryHeap pQueryHeap, QueryType type, uint startIndex, uint numQueries, ref ID3D12Resource pDestinationBuffer, ulong alignedDestinationBufferOffset) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12QueryHeap* ppQueryHeap = &pQueryHeap)
			{
				fixed (ID3D12Resource* ppDestinationBuffer = &pDestinationBuffer)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12QueryHeap*, QueryType, uint, uint, ID3D12Resource*, ulong, void>)(LpVtbl[54]))(ptr, (ID3D12QueryHeap*)ppQueryHeap, type, startIndex, numQueries, (ID3D12Resource*)ppDestinationBuffer, alignedDestinationBufferOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveQueryData(ref ID3D12QueryHeap pQueryHeap, QueryType type, uint startIndex, uint numQueries, ComPtr<ID3D12Resource> pDestinationBuffer, ulong alignedDestinationBufferOffset) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12QueryHeap* ppQueryHeap = &pQueryHeap)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12QueryHeap*, QueryType, uint, uint, ID3D12Resource*, ulong, void>)(LpVtbl[54]))(ptr, (ID3D12QueryHeap*)ppQueryHeap, type, startIndex, numQueries, (ID3D12Resource*)pDestinationBuffer.Handle, alignedDestinationBufferOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetPredication(ID3D12Resource* pBuffer, ulong alignedBufferOffset, PredicationOp operation) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, PredicationOp, void>)(LpVtbl[55]))(ptr, pBuffer, alignedBufferOffset, operation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetPredication(ref ID3D12Resource pBuffer, ulong alignedBufferOffset, PredicationOp operation) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppBuffer = &pBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, PredicationOp, void>)(LpVtbl[55]))(ptr, (ID3D12Resource*)ppBuffer, alignedBufferOffset, operation);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetPredication(ComPtr<ID3D12Resource> pBuffer, ulong alignedBufferOffset, PredicationOp operation) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, PredicationOp, void>)(LpVtbl[55]))(ptr, (ID3D12Resource*)pBuffer.Handle, alignedBufferOffset, operation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetMarker(uint metadata, void* pData, uint size) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, void*, uint, void>)(LpVtbl[56]))(ptr, metadata, pData, size);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void BeginEvent(uint metadata, void* pData, uint size) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, void*, uint, void>)(LpVtbl[57]))(ptr, metadata, pData, size);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void EndEvent() 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, void>)(LpVtbl[58]))(ptr);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ExecuteIndirect(ID3D12CommandSignature* pCommandSignature, uint maxCommandCount, ID3D12Resource* pArgumentBuffer, ulong argumentBufferOffset, ID3D12Resource* pCountBuffer, ulong countBufferOffset) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12CommandSignature*, uint, ID3D12Resource*, ulong, ID3D12Resource*, ulong, void>)(LpVtbl[59]))(ptr, pCommandSignature, maxCommandCount, pArgumentBuffer, argumentBufferOffset, pCountBuffer, countBufferOffset);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ExecuteIndirect(ref ID3D12CommandSignature pCommandSignature, uint maxCommandCount, ID3D12Resource* pArgumentBuffer, ulong argumentBufferOffset, ID3D12Resource* pCountBuffer, ulong countBufferOffset) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12CommandSignature* ppCommandSignature = &pCommandSignature)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12CommandSignature*, uint, ID3D12Resource*, ulong, ID3D12Resource*, ulong, void>)(LpVtbl[59]))(ptr, (ID3D12CommandSignature*)ppCommandSignature, maxCommandCount, pArgumentBuffer, argumentBufferOffset, pCountBuffer, countBufferOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ExecuteIndirect(ID3D12CommandSignature* pCommandSignature, uint maxCommandCount, ref ID3D12Resource pArgumentBuffer, ulong argumentBufferOffset, ID3D12Resource* pCountBuffer, ulong countBufferOffset) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppArgumentBuffer = &pArgumentBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12CommandSignature*, uint, ID3D12Resource*, ulong, ID3D12Resource*, ulong, void>)(LpVtbl[59]))(ptr, pCommandSignature, maxCommandCount, (ID3D12Resource*)ppArgumentBuffer, argumentBufferOffset, pCountBuffer, countBufferOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ExecuteIndirect(ID3D12CommandSignature* pCommandSignature, uint maxCommandCount, ComPtr<ID3D12Resource> pArgumentBuffer, ulong argumentBufferOffset, ID3D12Resource* pCountBuffer, ulong countBufferOffset) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12CommandSignature*, uint, ID3D12Resource*, ulong, ID3D12Resource*, ulong, void>)(LpVtbl[59]))(ptr, pCommandSignature, maxCommandCount, (ID3D12Resource*)pArgumentBuffer.Handle, argumentBufferOffset, pCountBuffer, countBufferOffset);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ExecuteIndirect(ref ID3D12CommandSignature pCommandSignature, uint maxCommandCount, ref ID3D12Resource pArgumentBuffer, ulong argumentBufferOffset, ID3D12Resource* pCountBuffer, ulong countBufferOffset) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12CommandSignature* ppCommandSignature = &pCommandSignature)
			{
				fixed (ID3D12Resource* ppArgumentBuffer = &pArgumentBuffer)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12CommandSignature*, uint, ID3D12Resource*, ulong, ID3D12Resource*, ulong, void>)(LpVtbl[59]))(ptr, (ID3D12CommandSignature*)ppCommandSignature, maxCommandCount, (ID3D12Resource*)ppArgumentBuffer, argumentBufferOffset, pCountBuffer, countBufferOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ExecuteIndirect(ref ID3D12CommandSignature pCommandSignature, uint maxCommandCount, ComPtr<ID3D12Resource> pArgumentBuffer, ulong argumentBufferOffset, ID3D12Resource* pCountBuffer, ulong countBufferOffset) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12CommandSignature* ppCommandSignature = &pCommandSignature)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12CommandSignature*, uint, ID3D12Resource*, ulong, ID3D12Resource*, ulong, void>)(LpVtbl[59]))(ptr, (ID3D12CommandSignature*)ppCommandSignature, maxCommandCount, (ID3D12Resource*)pArgumentBuffer.Handle, argumentBufferOffset, pCountBuffer, countBufferOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ExecuteIndirect(ID3D12CommandSignature* pCommandSignature, uint maxCommandCount, ID3D12Resource* pArgumentBuffer, ulong argumentBufferOffset, ref ID3D12Resource pCountBuffer, ulong countBufferOffset) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppCountBuffer = &pCountBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12CommandSignature*, uint, ID3D12Resource*, ulong, ID3D12Resource*, ulong, void>)(LpVtbl[59]))(ptr, pCommandSignature, maxCommandCount, pArgumentBuffer, argumentBufferOffset, (ID3D12Resource*)ppCountBuffer, countBufferOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ExecuteIndirect(ID3D12CommandSignature* pCommandSignature, uint maxCommandCount, ID3D12Resource* pArgumentBuffer, ulong argumentBufferOffset, ComPtr<ID3D12Resource> pCountBuffer, ulong countBufferOffset) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12CommandSignature*, uint, ID3D12Resource*, ulong, ID3D12Resource*, ulong, void>)(LpVtbl[59]))(ptr, pCommandSignature, maxCommandCount, pArgumentBuffer, argumentBufferOffset, (ID3D12Resource*)pCountBuffer.Handle, countBufferOffset);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ExecuteIndirect(ref ID3D12CommandSignature pCommandSignature, uint maxCommandCount, ID3D12Resource* pArgumentBuffer, ulong argumentBufferOffset, ref ID3D12Resource pCountBuffer, ulong countBufferOffset) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12CommandSignature* ppCommandSignature = &pCommandSignature)
			{
				fixed (ID3D12Resource* ppCountBuffer = &pCountBuffer)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12CommandSignature*, uint, ID3D12Resource*, ulong, ID3D12Resource*, ulong, void>)(LpVtbl[59]))(ptr, (ID3D12CommandSignature*)ppCommandSignature, maxCommandCount, pArgumentBuffer, argumentBufferOffset, (ID3D12Resource*)ppCountBuffer, countBufferOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ExecuteIndirect(ref ID3D12CommandSignature pCommandSignature, uint maxCommandCount, ID3D12Resource* pArgumentBuffer, ulong argumentBufferOffset, ComPtr<ID3D12Resource> pCountBuffer, ulong countBufferOffset) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12CommandSignature* ppCommandSignature = &pCommandSignature)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12CommandSignature*, uint, ID3D12Resource*, ulong, ID3D12Resource*, ulong, void>)(LpVtbl[59]))(ptr, (ID3D12CommandSignature*)ppCommandSignature, maxCommandCount, pArgumentBuffer, argumentBufferOffset, (ID3D12Resource*)pCountBuffer.Handle, countBufferOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ExecuteIndirect(ID3D12CommandSignature* pCommandSignature, uint maxCommandCount, ref ID3D12Resource pArgumentBuffer, ulong argumentBufferOffset, ref ID3D12Resource pCountBuffer, ulong countBufferOffset) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppArgumentBuffer = &pArgumentBuffer)
			{
				fixed (ID3D12Resource* ppCountBuffer = &pCountBuffer)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12CommandSignature*, uint, ID3D12Resource*, ulong, ID3D12Resource*, ulong, void>)(LpVtbl[59]))(ptr, pCommandSignature, maxCommandCount, (ID3D12Resource*)ppArgumentBuffer, argumentBufferOffset, (ID3D12Resource*)ppCountBuffer, countBufferOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ExecuteIndirect(ID3D12CommandSignature* pCommandSignature, uint maxCommandCount, ComPtr<ID3D12Resource> pArgumentBuffer, ulong argumentBufferOffset, ComPtr<ID3D12Resource> pCountBuffer, ulong countBufferOffset) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12CommandSignature*, uint, ID3D12Resource*, ulong, ID3D12Resource*, ulong, void>)(LpVtbl[59]))(ptr, pCommandSignature, maxCommandCount, (ID3D12Resource*)pArgumentBuffer.Handle, argumentBufferOffset, (ID3D12Resource*)pCountBuffer.Handle, countBufferOffset);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ExecuteIndirect(ref ID3D12CommandSignature pCommandSignature, uint maxCommandCount, ref ID3D12Resource pArgumentBuffer, ulong argumentBufferOffset, ref ID3D12Resource pCountBuffer, ulong countBufferOffset) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12CommandSignature* ppCommandSignature = &pCommandSignature)
			{
				fixed (ID3D12Resource* ppArgumentBuffer = &pArgumentBuffer)
				{
					fixed (ID3D12Resource* ppCountBuffer = &pCountBuffer)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12CommandSignature*, uint, ID3D12Resource*, ulong, ID3D12Resource*, ulong, void>)(LpVtbl[59]))(ptr, (ID3D12CommandSignature*)ppCommandSignature, maxCommandCount, (ID3D12Resource*)ppArgumentBuffer, argumentBufferOffset, (ID3D12Resource*)ppCountBuffer, countBufferOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ExecuteIndirect(ref ID3D12CommandSignature pCommandSignature, uint maxCommandCount, ComPtr<ID3D12Resource> pArgumentBuffer, ulong argumentBufferOffset, ComPtr<ID3D12Resource> pCountBuffer, ulong countBufferOffset) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12CommandSignature* ppCommandSignature = &pCommandSignature)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12CommandSignature*, uint, ID3D12Resource*, ulong, ID3D12Resource*, ulong, void>)(LpVtbl[59]))(ptr, (ID3D12CommandSignature*)ppCommandSignature, maxCommandCount, (ID3D12Resource*)pArgumentBuffer.Handle, argumentBufferOffset, (ID3D12Resource*)pCountBuffer.Handle, countBufferOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT(ID3D12Resource* pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[60]))(ptr, pDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, ppDependentResources, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT(ref ID3D12Resource pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[60]))(ptr, (ID3D12Resource*)ppDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, ppDependentResources, pDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT(ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[60]))(ptr, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, pSrcBuffer, srcOffset, dependencies, ppDependentResources, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT(ID3D12Resource* pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[60]))(ptr, pDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, ppDependentResources, pDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT(ID3D12Resource* pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[60]))(ptr, pDstBuffer, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, ppDependentResources, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT(ref ID3D12Resource pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[60]))(ptr, (ID3D12Resource*)ppDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, ppDependentResources, pDependentSubresourceRanges);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT(ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[60]))(ptr, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, ppDependentResources, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT(ID3D12Resource* pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[60]))(ptr, pDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, pDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT(ID3D12Resource* pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[60]))(ptr, pDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT(ref ID3D12Resource pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[60]))(ptr, (ID3D12Resource*)ppDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, pDependentSubresourceRanges);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT(ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[60]))(ptr, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT(ID3D12Resource* pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
			{
				fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[60]))(ptr, pDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, pDependentSubresourceRanges);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT(ID3D12Resource* pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[60]))(ptr, pDstBuffer, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT(ref ID3D12Resource pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
				{
					fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[60]))(ptr, (ID3D12Resource*)ppDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, pDependentSubresourceRanges);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT(ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[60]))(ptr, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT(ID3D12Resource* pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[60]))(ptr, pDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT(ref ID3D12Resource pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[60]))(ptr, (ID3D12Resource*)ppDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT(ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[60]))(ptr, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, pSrcBuffer, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT(ID3D12Resource* pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
			{
				fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[60]))(ptr, pDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT(ID3D12Resource* pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[60]))(ptr, pDstBuffer, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT(ref ID3D12Resource pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
				{
					fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[60]))(ptr, (ID3D12Resource*)ppDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT(ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[60]))(ptr, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT(ID3D12Resource* pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
			{
				fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[60]))(ptr, pDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT(ID3D12Resource* pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[60]))(ptr, pDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT(ref ID3D12Resource pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
				{
					fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[60]))(ptr, (ID3D12Resource*)ppDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT(ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[60]))(ptr, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT(ID3D12Resource* pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
			{
				fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
				{
					fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[60]))(ptr, pDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT(ID3D12Resource* pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[60]))(ptr, pDstBuffer, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT(ref ID3D12Resource pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
				{
					fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
					{
						fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
						{
							((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[60]))(ptr, (ID3D12Resource*)ppDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT(ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[60]))(ptr, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT64(ID3D12Resource* pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[61]))(ptr, pDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, ppDependentResources, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT64(ref ID3D12Resource pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[61]))(ptr, (ID3D12Resource*)ppDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, ppDependentResources, pDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT64(ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[61]))(ptr, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, pSrcBuffer, srcOffset, dependencies, ppDependentResources, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT64(ID3D12Resource* pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[61]))(ptr, pDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, ppDependentResources, pDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT64(ID3D12Resource* pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[61]))(ptr, pDstBuffer, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, ppDependentResources, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT64(ref ID3D12Resource pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[61]))(ptr, (ID3D12Resource*)ppDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, ppDependentResources, pDependentSubresourceRanges);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT64(ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[61]))(ptr, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, ppDependentResources, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT64(ID3D12Resource* pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[61]))(ptr, pDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, pDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT64(ID3D12Resource* pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[61]))(ptr, pDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT64(ref ID3D12Resource pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[61]))(ptr, (ID3D12Resource*)ppDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, pDependentSubresourceRanges);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT64(ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[61]))(ptr, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT64(ID3D12Resource* pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
			{
				fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[61]))(ptr, pDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, pDependentSubresourceRanges);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT64(ID3D12Resource* pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[61]))(ptr, pDstBuffer, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT64(ref ID3D12Resource pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
				{
					fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[61]))(ptr, (ID3D12Resource*)ppDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, pDependentSubresourceRanges);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT64(ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, SubresourceRangeUint64* pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[61]))(ptr, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, pDependentSubresourceRanges);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT64(ID3D12Resource* pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[61]))(ptr, pDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT64(ref ID3D12Resource pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[61]))(ptr, (ID3D12Resource*)ppDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT64(ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[61]))(ptr, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, pSrcBuffer, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT64(ID3D12Resource* pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
			{
				fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[61]))(ptr, pDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT64(ID3D12Resource* pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[61]))(ptr, pDstBuffer, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT64(ref ID3D12Resource pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
				{
					fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[61]))(ptr, (ID3D12Resource*)ppDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT64(ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ID3D12Resource** ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[61]))(ptr, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, ppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT64(ID3D12Resource* pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
			{
				fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[61]))(ptr, pDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT64(ID3D12Resource* pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[61]))(ptr, pDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT64(ref ID3D12Resource pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
				{
					fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[61]))(ptr, (ID3D12Resource*)ppDstBuffer, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT64(ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ID3D12Resource* pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[61]))(ptr, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, pSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT64(ID3D12Resource* pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
			{
				fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
				{
					fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[61]))(ptr, pDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT64(ID3D12Resource* pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[61]))(ptr, pDstBuffer, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT64(ref ID3D12Resource pDstBuffer, ulong dstOffset, ref ID3D12Resource pSrcBuffer, ulong srcOffset, uint dependencies, ref ID3D12Resource* ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D12Resource* ppSrcBuffer = &pSrcBuffer)
				{
					fixed (ID3D12Resource** pppDependentResources = &ppDependentResources)
					{
						fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
						{
							((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[61]))(ptr, (ID3D12Resource*)ppDstBuffer, dstOffset, (ID3D12Resource*)ppSrcBuffer, srcOffset, dependencies, (ID3D12Resource**)pppDependentResources, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void AtomicCopyBufferUINT64(ComPtr<ID3D12Resource> pDstBuffer, ulong dstOffset, ComPtr<ID3D12Resource> pSrcBuffer, ulong srcOffset, uint dependencies, ComPtr<ID3D12Resource> ppDependentResources, ref SubresourceRangeUint64 pDependentSubresourceRanges) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SubresourceRangeUint64* ppDependentSubresourceRanges = &pDependentSubresourceRanges)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, ulong, ID3D12Resource*, ulong, uint, ID3D12Resource**, SubresourceRangeUint64*, void>)(LpVtbl[61]))(ptr, (ID3D12Resource*)pDstBuffer.Handle, dstOffset, (ID3D12Resource*)pSrcBuffer.Handle, srcOffset, dependencies, (ID3D12Resource**)ppDependentResources.Handle, (SubresourceRangeUint64*)ppDependentSubresourceRanges);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetDepthBounds(float min, float max) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, float, float, void>)(LpVtbl[62]))(ptr, min, max);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetSamplePositions(uint numSamplesPerPixel, uint numPixels, SamplePosition* pSamplePositions) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, uint, SamplePosition*, void>)(LpVtbl[63]))(ptr, numSamplesPerPixel, numPixels, pSamplePositions);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetSamplePositions(uint numSamplesPerPixel, uint numPixels, ref SamplePosition pSamplePositions) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SamplePosition* ppSamplePositions = &pSamplePositions)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, uint, SamplePosition*, void>)(LpVtbl[63]))(ptr, numSamplesPerPixel, numPixels, (SamplePosition*)ppSamplePositions);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveSubresourceRegion(ID3D12Resource* pDstResource, uint dstSubresource, uint dstX, uint dstY, ID3D12Resource* pSrcResource, uint srcSubresource, Rect32* pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(LpVtbl[64]))(ptr, pDstResource, dstSubresource, dstX, dstY, pSrcResource, srcSubresource, pSrcRect, format, resolveMode);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveSubresourceRegion(ref ID3D12Resource pDstResource, uint dstSubresource, uint dstX, uint dstY, ID3D12Resource* pSrcResource, uint srcSubresource, Rect32* pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(LpVtbl[64]))(ptr, (ID3D12Resource*)ppDstResource, dstSubresource, dstX, dstY, pSrcResource, srcSubresource, pSrcRect, format, resolveMode);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveSubresourceRegion(ComPtr<ID3D12Resource> pDstResource, uint dstSubresource, uint dstX, uint dstY, ID3D12Resource* pSrcResource, uint srcSubresource, Rect32* pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(LpVtbl[64]))(ptr, (ID3D12Resource*)pDstResource.Handle, dstSubresource, dstX, dstY, pSrcResource, srcSubresource, pSrcRect, format, resolveMode);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveSubresourceRegion(ID3D12Resource* pDstResource, uint dstSubresource, uint dstX, uint dstY, ref ID3D12Resource pSrcResource, uint srcSubresource, Rect32* pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(LpVtbl[64]))(ptr, pDstResource, dstSubresource, dstX, dstY, (ID3D12Resource*)ppSrcResource, srcSubresource, pSrcRect, format, resolveMode);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveSubresourceRegion(ID3D12Resource* pDstResource, uint dstSubresource, uint dstX, uint dstY, ComPtr<ID3D12Resource> pSrcResource, uint srcSubresource, Rect32* pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(LpVtbl[64]))(ptr, pDstResource, dstSubresource, dstX, dstY, (ID3D12Resource*)pSrcResource.Handle, srcSubresource, pSrcRect, format, resolveMode);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveSubresourceRegion(ref ID3D12Resource pDstResource, uint dstSubresource, uint dstX, uint dstY, ref ID3D12Resource pSrcResource, uint srcSubresource, Rect32* pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(LpVtbl[64]))(ptr, (ID3D12Resource*)ppDstResource, dstSubresource, dstX, dstY, (ID3D12Resource*)ppSrcResource, srcSubresource, pSrcRect, format, resolveMode);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveSubresourceRegion(ComPtr<ID3D12Resource> pDstResource, uint dstSubresource, uint dstX, uint dstY, ComPtr<ID3D12Resource> pSrcResource, uint srcSubresource, Rect32* pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(LpVtbl[64]))(ptr, (ID3D12Resource*)pDstResource.Handle, dstSubresource, dstX, dstY, (ID3D12Resource*)pSrcResource.Handle, srcSubresource, pSrcRect, format, resolveMode);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveSubresourceRegion(ID3D12Resource* pDstResource, uint dstSubresource, uint dstX, uint dstY, ID3D12Resource* pSrcResource, uint srcSubresource, ref Rect32 pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppSrcRect = &pSrcRect)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(LpVtbl[64]))(ptr, pDstResource, dstSubresource, dstX, dstY, pSrcResource, srcSubresource, (Rect32*)ppSrcRect, format, resolveMode);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveSubresourceRegion(ref ID3D12Resource pDstResource, uint dstSubresource, uint dstX, uint dstY, ID3D12Resource* pSrcResource, uint srcSubresource, ref Rect32 pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				fixed (Rect32* ppSrcRect = &pSrcRect)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(LpVtbl[64]))(ptr, (ID3D12Resource*)ppDstResource, dstSubresource, dstX, dstY, pSrcResource, srcSubresource, (Rect32*)ppSrcRect, format, resolveMode);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveSubresourceRegion(ComPtr<ID3D12Resource> pDstResource, uint dstSubresource, uint dstX, uint dstY, ID3D12Resource* pSrcResource, uint srcSubresource, ref Rect32 pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppSrcRect = &pSrcRect)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(LpVtbl[64]))(ptr, (ID3D12Resource*)pDstResource.Handle, dstSubresource, dstX, dstY, pSrcResource, srcSubresource, (Rect32*)ppSrcRect, format, resolveMode);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveSubresourceRegion(ID3D12Resource* pDstResource, uint dstSubresource, uint dstX, uint dstY, ref ID3D12Resource pSrcResource, uint srcSubresource, ref Rect32 pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
			{
				fixed (Rect32* ppSrcRect = &pSrcRect)
				{
					((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(LpVtbl[64]))(ptr, pDstResource, dstSubresource, dstX, dstY, (ID3D12Resource*)ppSrcResource, srcSubresource, (Rect32*)ppSrcRect, format, resolveMode);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveSubresourceRegion(ID3D12Resource* pDstResource, uint dstSubresource, uint dstX, uint dstY, ComPtr<ID3D12Resource> pSrcResource, uint srcSubresource, ref Rect32 pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppSrcRect = &pSrcRect)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(LpVtbl[64]))(ptr, pDstResource, dstSubresource, dstX, dstY, (ID3D12Resource*)pSrcResource.Handle, srcSubresource, (Rect32*)ppSrcRect, format, resolveMode);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveSubresourceRegion(ref ID3D12Resource pDstResource, uint dstSubresource, uint dstX, uint dstY, ref ID3D12Resource pSrcResource, uint srcSubresource, ref Rect32 pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppDstResource = &pDstResource)
			{
				fixed (ID3D12Resource* ppSrcResource = &pSrcResource)
				{
					fixed (Rect32* ppSrcRect = &pSrcRect)
					{
						((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(LpVtbl[64]))(ptr, (ID3D12Resource*)ppDstResource, dstSubresource, dstX, dstY, (ID3D12Resource*)ppSrcResource, srcSubresource, (Rect32*)ppSrcRect, format, resolveMode);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveSubresourceRegion(ComPtr<ID3D12Resource> pDstResource, uint dstSubresource, uint dstX, uint dstY, ComPtr<ID3D12Resource> pSrcResource, uint srcSubresource, ref Rect32 pSrcRect, Format format, ResolveMode resolveMode) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppSrcRect = &pSrcRect)
			{
				((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, ID3D12Resource*, uint, uint, uint, ID3D12Resource*, uint, Rect32*, Format, ResolveMode, void>)(LpVtbl[64]))(ptr, (ID3D12Resource*)pDstResource.Handle, dstSubresource, dstX, dstY, (ID3D12Resource*)pSrcResource.Handle, srcSubresource, (Rect32*)ppSrcRect, format, resolveMode);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetViewInstanceMask(uint mask) 
		{
			ID3D12GraphicsCommandList1* ptr = (ID3D12GraphicsCommandList1*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12GraphicsCommandList1*, uint, void>)(LpVtbl[65]))(ptr, mask);
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator ID3D12GraphicsCommandList (ID3D12GraphicsCommandList1 value)
		{
			return Unsafe.As<ID3D12GraphicsCommandList1, ID3D12GraphicsCommandList>(ref value);
		}

		public unsafe static implicit operator ID3D12CommandList (ID3D12GraphicsCommandList1 value)
		{
			return Unsafe.As<ID3D12GraphicsCommandList1, ID3D12CommandList>(ref value);
		}

		public unsafe static implicit operator ID3D12DeviceChild (ID3D12GraphicsCommandList1 value)
		{
			return Unsafe.As<ID3D12GraphicsCommandList1, ID3D12DeviceChild>(ref value);
		}

		public unsafe static implicit operator ID3D12Object (ID3D12GraphicsCommandList1 value)
		{
			return Unsafe.As<ID3D12GraphicsCommandList1, ID3D12Object>(ref value);
		}

		public unsafe static implicit operator IUnknown (ID3D12GraphicsCommandList1 value)
		{
			return Unsafe.As<ID3D12GraphicsCommandList1, IUnknown>(ref value);
		}

	}

}
