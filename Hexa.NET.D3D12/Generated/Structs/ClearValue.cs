// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D12
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct ClearValue
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[StructLayout(LayoutKind.Explicit)]
		public partial struct ClearValueUnion
		{
			/// <summary>
			/// To be documented.
			/// </summary>
			[FieldOffset(0)]
			public float Color_0;
			[FieldOffset(16)]
			public float Color_1;
			[FieldOffset(32)]
			public float Color_2;
			[FieldOffset(48)]
			public float Color_3;

			/// <summary>
			/// To be documented.
			/// </summary>
			[FieldOffset(0)]
			public DepthStencilValue DepthStencil;


			/// <summary>
			/// To be documented.
			/// </summary>
			public unsafe ClearValueUnion(float* color = default, DepthStencilValue depthStencil = default)
			{
				if (color != default(float*))
				{
					Color_0 = color[0];
					Color_1 = color[1];
					Color_2 = color[2];
					Color_3 = color[3];
				}
				DepthStencil = depthStencil;
			}

			/// <summary>
			/// To be documented.
			/// </summary>
			public unsafe ClearValueUnion(Span<float> color = default, DepthStencilValue depthStencil = default)
			{
				if (color != default(Span<float>))
				{
					Color_0 = color[0];
					Color_1 = color[1];
					Color_2 = color[2];
					Color_3 = color[3];
				}
				DepthStencil = depthStencil;
			}


		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public Format Format;

		/// <summary>
		/// To be documented.
		/// </summary>
		public ClearValueUnion Union;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe ClearValue(Format format = default, ClearValueUnion union = default)
		{
			Format = format;
			Union = union;
		}


	}

}
