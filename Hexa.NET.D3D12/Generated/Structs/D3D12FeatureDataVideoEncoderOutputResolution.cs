// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D12
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "D3D12_FEATURE_DATA_VIDEO_ENCODER_OUTPUT_RESOLUTION")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct D3D12FeatureDataVideoEncoderOutputResolution
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "NodeIndex")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint NodeIndex;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Codec")]
		[NativeName(NativeNameType.Type, "D3D12_VIDEO_ENCODER_CODEC")]
		public D3D12VideoEncoderCodec Codec;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ResolutionRatiosCount")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint ResolutionRatiosCount;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "IsSupported")]
		[NativeName(NativeNameType.Type, "BOOL")]
		public int IsSupported;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "MinResolutionSupported")]
		[NativeName(NativeNameType.Type, "D3D12_VIDEO_ENCODER_PICTURE_RESOLUTION_DESC")]
		public D3D12VideoEncoderPictureResolutionDesc MinResolutionSupported;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "MaxResolutionSupported")]
		[NativeName(NativeNameType.Type, "D3D12_VIDEO_ENCODER_PICTURE_RESOLUTION_DESC")]
		public D3D12VideoEncoderPictureResolutionDesc MaxResolutionSupported;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ResolutionWidthMultipleRequirement")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint ResolutionWidthMultipleRequirement;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ResolutionHeightMultipleRequirement")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint ResolutionHeightMultipleRequirement;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "pResolutionRatios")]
		[NativeName(NativeNameType.Type, "D3D12_VIDEO_ENCODER_PICTURE_RESOLUTION_RATIO_DESC*")]
		public unsafe D3D12VideoEncoderPictureResolutionRatioDesc* PResolutionRatios;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe D3D12FeatureDataVideoEncoderOutputResolution(uint nodeIndex = default, D3D12VideoEncoderCodec codec = default, uint resolutionRatiosCount = default, int isSupported = default, D3D12VideoEncoderPictureResolutionDesc minResolutionSupported = default, D3D12VideoEncoderPictureResolutionDesc maxResolutionSupported = default, uint resolutionWidthMultipleRequirement = default, uint resolutionHeightMultipleRequirement = default, D3D12VideoEncoderPictureResolutionRatioDesc* pResolutionRatios = default)
		{
			NodeIndex = nodeIndex;
			Codec = codec;
			ResolutionRatiosCount = resolutionRatiosCount;
			IsSupported = isSupported;
			MinResolutionSupported = minResolutionSupported;
			MaxResolutionSupported = maxResolutionSupported;
			ResolutionWidthMultipleRequirement = resolutionWidthMultipleRequirement;
			ResolutionHeightMultipleRequirement = resolutionHeightMultipleRequirement;
			PResolutionRatios = pResolutionRatios;
		}


	}

}
