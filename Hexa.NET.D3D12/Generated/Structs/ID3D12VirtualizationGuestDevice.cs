// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D12
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("bc66d368-7373-4943-8757-fc87dc79e476")]
	public partial struct ID3D12VirtualizationGuestDevice : IComObject, IComObject<ID3D12VirtualizationGuestDevice>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("bc66d368-7373-4943-8757-fc87dc79e476");

		public unsafe ID3D12VirtualizationGuestDevice (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int QueryInterface(Guid* riid, void** ppvObject) 
		{
			ID3D12VirtualizationGuestDevice* ptr = (ID3D12VirtualizationGuestDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VirtualizationGuestDevice*, Guid*, void**, int>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int QueryInterface(ref Guid riid, void** ppvObject) 
		{
			ID3D12VirtualizationGuestDevice* ptr = (ID3D12VirtualizationGuestDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VirtualizationGuestDevice*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int QueryInterface<T>(out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VirtualizationGuestDevice* ptr = (ID3D12VirtualizationGuestDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VirtualizationGuestDevice*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int QueryInterface<T>(ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12VirtualizationGuestDevice* ptr = (ID3D12VirtualizationGuestDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VirtualizationGuestDevice*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint AddRef() 
		{
			ID3D12VirtualizationGuestDevice* ptr = (ID3D12VirtualizationGuestDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12VirtualizationGuestDevice*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint Release() 
		{
			ID3D12VirtualizationGuestDevice* ptr = (ID3D12VirtualizationGuestDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12VirtualizationGuestDevice*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int ShareWithHost(ID3D12DeviceChild* pObject, nint* pHandle) 
		{
			ID3D12VirtualizationGuestDevice* ptr = (ID3D12VirtualizationGuestDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VirtualizationGuestDevice*, ID3D12DeviceChild*, nint*, int>)(LpVtbl[3]))(ptr, pObject, pHandle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int ShareWithHost(ref ID3D12DeviceChild pObject, nint* pHandle) 
		{
			ID3D12VirtualizationGuestDevice* ptr = (ID3D12VirtualizationGuestDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12DeviceChild* ppObject = &pObject)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VirtualizationGuestDevice*, ID3D12DeviceChild*, nint*, int>)(LpVtbl[3]))(ptr, (ID3D12DeviceChild*)ppObject, pHandle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int ShareWithHost(ComPtr<ID3D12DeviceChild> pObject, nint* pHandle) 
		{
			ID3D12VirtualizationGuestDevice* ptr = (ID3D12VirtualizationGuestDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VirtualizationGuestDevice*, ID3D12DeviceChild*, nint*, int>)(LpVtbl[3]))(ptr, (ID3D12DeviceChild*)pObject.Handle, pHandle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int ShareWithHost(ID3D12DeviceChild* pObject, ref nint pHandle) 
		{
			ID3D12VirtualizationGuestDevice* ptr = (ID3D12VirtualizationGuestDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nint* ppHandle = &pHandle)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VirtualizationGuestDevice*, ID3D12DeviceChild*, nint*, int>)(LpVtbl[3]))(ptr, pObject, (nint*)ppHandle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int ShareWithHost(ref ID3D12DeviceChild pObject, ref nint pHandle) 
		{
			ID3D12VirtualizationGuestDevice* ptr = (ID3D12VirtualizationGuestDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12DeviceChild* ppObject = &pObject)
			{
				fixed (nint* ppHandle = &pHandle)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VirtualizationGuestDevice*, ID3D12DeviceChild*, nint*, int>)(LpVtbl[3]))(ptr, (ID3D12DeviceChild*)ppObject, (nint*)ppHandle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int ShareWithHost(ComPtr<ID3D12DeviceChild> pObject, ref nint pHandle) 
		{
			ID3D12VirtualizationGuestDevice* ptr = (ID3D12VirtualizationGuestDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nint* ppHandle = &pHandle)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VirtualizationGuestDevice*, ID3D12DeviceChild*, nint*, int>)(LpVtbl[3]))(ptr, (ID3D12DeviceChild*)pObject.Handle, (nint*)ppHandle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int CreateFenceFd(ID3D12Fence* pFence, ulong fenceValue, int* pFenceFd) 
		{
			ID3D12VirtualizationGuestDevice* ptr = (ID3D12VirtualizationGuestDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VirtualizationGuestDevice*, ID3D12Fence*, ulong, int*, int>)(LpVtbl[4]))(ptr, pFence, fenceValue, pFenceFd);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int CreateFenceFd(ref ID3D12Fence pFence, ulong fenceValue, int* pFenceFd) 
		{
			ID3D12VirtualizationGuestDevice* ptr = (ID3D12VirtualizationGuestDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Fence* ppFence = &pFence)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VirtualizationGuestDevice*, ID3D12Fence*, ulong, int*, int>)(LpVtbl[4]))(ptr, (ID3D12Fence*)ppFence, fenceValue, pFenceFd);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int CreateFenceFd(ComPtr<ID3D12Fence> pFence, ulong fenceValue, int* pFenceFd) 
		{
			ID3D12VirtualizationGuestDevice* ptr = (ID3D12VirtualizationGuestDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12VirtualizationGuestDevice*, ID3D12Fence*, ulong, int*, int>)(LpVtbl[4]))(ptr, (ID3D12Fence*)pFence.Handle, fenceValue, pFenceFd);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int CreateFenceFd(ID3D12Fence* pFence, ulong fenceValue, ref int pFenceFd) 
		{
			ID3D12VirtualizationGuestDevice* ptr = (ID3D12VirtualizationGuestDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (int* ppFenceFd = &pFenceFd)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VirtualizationGuestDevice*, ID3D12Fence*, ulong, int*, int>)(LpVtbl[4]))(ptr, pFence, fenceValue, (int*)ppFenceFd);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int CreateFenceFd(ref ID3D12Fence pFence, ulong fenceValue, ref int pFenceFd) 
		{
			ID3D12VirtualizationGuestDevice* ptr = (ID3D12VirtualizationGuestDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Fence* ppFence = &pFence)
			{
				fixed (int* ppFenceFd = &pFenceFd)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D12VirtualizationGuestDevice*, ID3D12Fence*, ulong, int*, int>)(LpVtbl[4]))(ptr, (ID3D12Fence*)ppFence, fenceValue, (int*)ppFenceFd);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int CreateFenceFd(ComPtr<ID3D12Fence> pFence, ulong fenceValue, ref int pFenceFd) 
		{
			ID3D12VirtualizationGuestDevice* ptr = (ID3D12VirtualizationGuestDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (int* ppFenceFd = &pFenceFd)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12VirtualizationGuestDevice*, ID3D12Fence*, ulong, int*, int>)(LpVtbl[4]))(ptr, (ID3D12Fence*)pFence.Handle, fenceValue, (int*)ppFenceFd);
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IUnknown (ID3D12VirtualizationGuestDevice value)
		{
			return Unsafe.As<ID3D12VirtualizationGuestDevice, IUnknown>(ref value);
		}

	}

}
