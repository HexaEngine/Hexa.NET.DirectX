// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D12
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "D3D12_RT_FORMAT_ARRAY")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct D3D12RtFormatArray
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "RTFormats")]
		[NativeName(NativeNameType.Type, "DXGI_FORMAT[8]")]
		public DxgiFormat RTFormats_0;
		public DxgiFormat RTFormats_1;
		public DxgiFormat RTFormats_2;
		public DxgiFormat RTFormats_3;
		public DxgiFormat RTFormats_4;
		public DxgiFormat RTFormats_5;
		public DxgiFormat RTFormats_6;
		public DxgiFormat RTFormats_7;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "NumRenderTargets")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint NumRenderTargets;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe D3D12RtFormatArray(DxgiFormat* rtFormats = default, uint numRenderTargets = default)
		{
			if (rtFormats != default(DxgiFormat*))
			{
				RTFormats_0 = rtFormats[0];
				RTFormats_1 = rtFormats[1];
				RTFormats_2 = rtFormats[2];
				RTFormats_3 = rtFormats[3];
				RTFormats_4 = rtFormats[4];
				RTFormats_5 = rtFormats[5];
				RTFormats_6 = rtFormats[6];
				RTFormats_7 = rtFormats[7];
			}
			NumRenderTargets = numRenderTargets;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe D3D12RtFormatArray(Span<DxgiFormat> rtFormats = default, uint numRenderTargets = default)
		{
			if (rtFormats != default(Span<DxgiFormat>))
			{
				RTFormats_0 = rtFormats[0];
				RTFormats_1 = rtFormats[1];
				RTFormats_2 = rtFormats[2];
				RTFormats_3 = rtFormats[3];
				RTFormats_4 = rtFormats[4];
				RTFormats_5 = rtFormats[5];
				RTFormats_6 = rtFormats[6];
				RTFormats_7 = rtFormats[7];
			}
			NumRenderTargets = numRenderTargets;
		}


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe Span<DxgiFormat> RTFormats
		
		{
			get
			{
				fixed (DxgiFormat* p = &this.RTFormats_0)
				{
					return new Span<DxgiFormat>(p, 8);
				}
			}
		}
	}

}
