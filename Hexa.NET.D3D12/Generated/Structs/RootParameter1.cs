// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D12
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct RootParameter1
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[StructLayout(LayoutKind.Explicit)]
		public partial struct RootParameter1Union
		{
			/// <summary>
			/// To be documented.
			/// </summary>
			[FieldOffset(0)]
			public RootDescriptorTable1 DescriptorTable;

			/// <summary>
			/// To be documented.
			/// </summary>
			[FieldOffset(0)]
			public RootConstants Constants;

			/// <summary>
			/// To be documented.
			/// </summary>
			[FieldOffset(0)]
			public RootDescriptor1 Descriptor;


			/// <summary>
			/// To be documented.
			/// </summary>
			public unsafe RootParameter1Union(RootDescriptorTable1 descriptorTable = default, RootConstants constants = default, RootDescriptor1 descriptor = default)
			{
				DescriptorTable = descriptorTable;
				Constants = constants;
				Descriptor = descriptor;
			}


		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public RootParameterType ParameterType;

		/// <summary>
		/// To be documented.
		/// </summary>
		public RootParameter1Union Union;

		/// <summary>
		/// To be documented.
		/// </summary>
		public ShaderVisibility ShaderVisibility;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe RootParameter1(RootParameterType parameterType = default, RootParameter1Union union = default, ShaderVisibility shaderVisibility = default)
		{
			ParameterType = parameterType;
			Union = union;
			ShaderVisibility = shaderVisibility;
		}


	}

}
