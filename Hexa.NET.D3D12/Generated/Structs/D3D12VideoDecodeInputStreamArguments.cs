// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D12
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct D3D12VideoDecodeInputStreamArguments
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "NumFrameArguments")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint NumFrameArguments;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "FrameArguments")]
		[NativeName(NativeNameType.Type, "D3D12_VIDEO_DECODE_FRAME_ARGUMENT[10]")]
		public D3D12VideoDecodeFrameArgument FrameArguments_0;
		public D3D12VideoDecodeFrameArgument FrameArguments_1;
		public D3D12VideoDecodeFrameArgument FrameArguments_2;
		public D3D12VideoDecodeFrameArgument FrameArguments_3;
		public D3D12VideoDecodeFrameArgument FrameArguments_4;
		public D3D12VideoDecodeFrameArgument FrameArguments_5;
		public D3D12VideoDecodeFrameArgument FrameArguments_6;
		public D3D12VideoDecodeFrameArgument FrameArguments_7;
		public D3D12VideoDecodeFrameArgument FrameArguments_8;
		public D3D12VideoDecodeFrameArgument FrameArguments_9;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ReferenceFrames")]
		[NativeName(NativeNameType.Type, "D3D12_VIDEO_DECODE_REFERENCE_FRAMES")]
		public D3D12VideoDecodeReferenceFrames ReferenceFrames;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CompressedBitstream")]
		[NativeName(NativeNameType.Type, "D3D12_VIDEO_DECODE_COMPRESSED_BITSTREAM")]
		public D3D12VideoDecodeCompressedBitstream CompressedBitstream;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "pHeap")]
		[NativeName(NativeNameType.Type, "ID3D12VideoDecoderHeap*")]
		public unsafe ID3D12VideoDecoderHeap* PHeap;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe D3D12VideoDecodeInputStreamArguments(uint numFrameArguments = default, D3D12VideoDecodeFrameArgument* frameArguments = default, D3D12VideoDecodeReferenceFrames referenceFrames = default, D3D12VideoDecodeCompressedBitstream compressedBitstream = default, ID3D12VideoDecoderHeap* pHeap = default)
		{
			NumFrameArguments = numFrameArguments;
			if (frameArguments != default(D3D12VideoDecodeFrameArgument*))
			{
				FrameArguments_0 = frameArguments[0];
				FrameArguments_1 = frameArguments[1];
				FrameArguments_2 = frameArguments[2];
				FrameArguments_3 = frameArguments[3];
				FrameArguments_4 = frameArguments[4];
				FrameArguments_5 = frameArguments[5];
				FrameArguments_6 = frameArguments[6];
				FrameArguments_7 = frameArguments[7];
				FrameArguments_8 = frameArguments[8];
				FrameArguments_9 = frameArguments[9];
			}
			ReferenceFrames = referenceFrames;
			CompressedBitstream = compressedBitstream;
			PHeap = pHeap;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe D3D12VideoDecodeInputStreamArguments(uint numFrameArguments = default, Span<D3D12VideoDecodeFrameArgument> frameArguments = default, D3D12VideoDecodeReferenceFrames referenceFrames = default, D3D12VideoDecodeCompressedBitstream compressedBitstream = default, ID3D12VideoDecoderHeap* pHeap = default)
		{
			NumFrameArguments = numFrameArguments;
			if (frameArguments != default(Span<D3D12VideoDecodeFrameArgument>))
			{
				FrameArguments_0 = frameArguments[0];
				FrameArguments_1 = frameArguments[1];
				FrameArguments_2 = frameArguments[2];
				FrameArguments_3 = frameArguments[3];
				FrameArguments_4 = frameArguments[4];
				FrameArguments_5 = frameArguments[5];
				FrameArguments_6 = frameArguments[6];
				FrameArguments_7 = frameArguments[7];
				FrameArguments_8 = frameArguments[8];
				FrameArguments_9 = frameArguments[9];
			}
			ReferenceFrames = referenceFrames;
			CompressedBitstream = compressedBitstream;
			PHeap = pHeap;
		}


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe Span<D3D12VideoDecodeFrameArgument> FrameArguments
		
		{
			get
			{
				fixed (D3D12VideoDecodeFrameArgument* p = &this.FrameArguments_0)
				{
					return new Span<D3D12VideoDecodeFrameArgument>(p, 10);
				}
			}
		}
	}

}
