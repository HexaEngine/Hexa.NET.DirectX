// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D12
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("aeb575cf-4e06-48be-ba3b-c450fc96652e")]
	public partial struct ID3D12DebugCommandList2 : IComObject, IComObject<ID3D12DebugCommandList2>, IComObject<ID3D12DebugCommandList>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("aeb575cf-4e06-48be-ba3b-c450fc96652e");

		public unsafe ID3D12DebugCommandList2 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int QueryInterface(Guid* riid, void** ppvObject) 
		{
			ID3D12DebugCommandList2* ptr = (ID3D12DebugCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList2*, Guid*, void**, int>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int QueryInterface(ref Guid riid, void** ppvObject) 
		{
			ID3D12DebugCommandList2* ptr = (ID3D12DebugCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList2*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int QueryInterface<T>(out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12DebugCommandList2* ptr = (ID3D12DebugCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList2*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int QueryInterface<T>(ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12DebugCommandList2* ptr = (ID3D12DebugCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList2*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint AddRef() 
		{
			ID3D12DebugCommandList2* ptr = (ID3D12DebugCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList2*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint Release() 
		{
			ID3D12DebugCommandList2* ptr = (ID3D12DebugCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList2*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int AssertResourceState(ID3D12Resource* pResource, uint subresource, uint state) 
		{
			ID3D12DebugCommandList2* ptr = (ID3D12DebugCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList2*, ID3D12Resource*, uint, uint, int>)(LpVtbl[3]))(ptr, pResource, subresource, state);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int AssertResourceState(ref ID3D12Resource pResource, uint subresource, uint state) 
		{
			ID3D12DebugCommandList2* ptr = (ID3D12DebugCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList2*, ID3D12Resource*, uint, uint, int>)(LpVtbl[3]))(ptr, (ID3D12Resource*)ppResource, subresource, state);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int AssertResourceState(ComPtr<ID3D12Resource> pResource, uint subresource, uint state) 
		{
			ID3D12DebugCommandList2* ptr = (ID3D12DebugCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList2*, ID3D12Resource*, uint, uint, int>)(LpVtbl[3]))(ptr, (ID3D12Resource*)pResource.Handle, subresource, state);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int SetFeatureMask(DebugFeature mask) 
		{
			ID3D12DebugCommandList2* ptr = (ID3D12DebugCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList2*, DebugFeature, int>)(LpVtbl[4]))(ptr, mask);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe DebugFeature GetFeatureMask() 
		{
			ID3D12DebugCommandList2* ptr = (ID3D12DebugCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			DebugFeature ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList2*, DebugFeature>)(LpVtbl[5]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int SetDebugParameter(DebugCommandListParameterType type, void* pData, uint dataSize) 
		{
			ID3D12DebugCommandList2* ptr = (ID3D12DebugCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList2*, DebugCommandListParameterType, void*, uint, int>)(LpVtbl[6]))(ptr, type, pData, dataSize);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int GetDebugParameter(DebugCommandListParameterType type, void* pData, uint dataSize) 
		{
			ID3D12DebugCommandList2* ptr = (ID3D12DebugCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList2*, DebugCommandListParameterType, void*, uint, int>)(LpVtbl[7]))(ptr, type, pData, dataSize);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int GetDebugParameter<T>(DebugCommandListParameterType type, ComPtr<T> pData, uint dataSize) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12DebugCommandList2* ptr = (ID3D12DebugCommandList2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D12DebugCommandList2*, DebugCommandListParameterType, void*, uint, int>)(LpVtbl[7]))(ptr, type, (void*)pData.Handle, dataSize);
			return ret;
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator ID3D12DebugCommandList (ID3D12DebugCommandList2 value)
		{
			return Unsafe.As<ID3D12DebugCommandList2, ID3D12DebugCommandList>(ref value);
		}

		public unsafe static implicit operator IUnknown (ID3D12DebugCommandList2 value)
		{
			return Unsafe.As<ID3D12DebugCommandList2, IUnknown>(ref value);
		}

	}

}
