// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D12
{
	/// <summary>
	/// {EC25F42D-7006-4F2B-B33E-02CC3375733F}<br/>
	/// </summary>
	[Guid("ec25f42d-7006-4f2b-b33e-02cc3375733f")]
	public partial struct ID3D12FunctionParameterReflection : IComObject, IComObject<ID3D12FunctionParameterReflection>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("ec25f42d-7006-4f2b-b33e-02cc3375733f");

		public unsafe ID3D12FunctionParameterReflection (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDesc(ParameterDesc* pDesc) 
		{
			ID3D12FunctionParameterReflection* ptr = (ID3D12FunctionParameterReflection*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12FunctionParameterReflection*, ParameterDesc*, HResult>)(*LpVtbl))(ptr, pDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDesc(ref ParameterDesc pDesc) 
		{
			ID3D12FunctionParameterReflection* ptr = (ID3D12FunctionParameterReflection*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ParameterDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12FunctionParameterReflection*, ParameterDesc*, HResult>)(*LpVtbl))(ptr, (ParameterDesc*)ppDesc);
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

	}

}
