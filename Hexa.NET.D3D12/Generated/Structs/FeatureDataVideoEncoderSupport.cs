// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D12
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct FeatureDataVideoEncoderSupport
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		public uint NodeIndex;

		/// <summary>
		/// To be documented.
		/// </summary>
		public VideoEncoderCodec Codec;

		/// <summary>
		/// To be documented.
		/// </summary>
		public Format InputFormat;

		/// <summary>
		/// To be documented.
		/// </summary>
		public VideoEncoderCodecConfiguration CodecConfiguration;

		/// <summary>
		/// To be documented.
		/// </summary>
		public VideoEncoderSequenceGopStructure CodecGopSequence;

		/// <summary>
		/// To be documented.
		/// </summary>
		public VideoEncoderRateControl RateControl;

		/// <summary>
		/// To be documented.
		/// </summary>
		public VideoEncoderIntraRefreshMode IntraRefresh;

		/// <summary>
		/// To be documented.
		/// </summary>
		public VideoEncoderFrameSubregionLayoutMode SubregionFrameEncoding;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint ResolutionsListCount;

		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe VideoEncoderPictureResolutionDesc* PResolutionList;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint MaxReferenceFramesInDPB;

		/// <summary>
		/// To be documented.
		/// </summary>
		public VideoEncoderValidationFlags ValidationFlags;

		/// <summary>
		/// To be documented.
		/// </summary>
		public VideoEncoderSupportFlags SupportFlags;

		/// <summary>
		/// To be documented.
		/// </summary>
		public VideoEncoderProfileDesc SuggestedProfile;

		/// <summary>
		/// To be documented.
		/// </summary>
		public VideoEncoderLevelSetting SuggestedLevel;

		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe FeatureDataVideoEncoderResolutionSupportLimits* PResolutionDependentSupport;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe FeatureDataVideoEncoderSupport(uint nodeIndex = default, VideoEncoderCodec codec = default, Format inputFormat = default, VideoEncoderCodecConfiguration codecConfiguration = default, VideoEncoderSequenceGopStructure codecGopSequence = default, VideoEncoderRateControl rateControl = default, VideoEncoderIntraRefreshMode intraRefresh = default, VideoEncoderFrameSubregionLayoutMode subregionFrameEncoding = default, uint resolutionsListCount = default, VideoEncoderPictureResolutionDesc* pResolutionList = default, uint maxReferenceFramesInDpb = default, VideoEncoderValidationFlags validationFlags = default, VideoEncoderSupportFlags supportFlags = default, VideoEncoderProfileDesc suggestedProfile = default, VideoEncoderLevelSetting suggestedLevel = default, FeatureDataVideoEncoderResolutionSupportLimits* pResolutionDependentSupport = default)
		{
			NodeIndex = nodeIndex;
			Codec = codec;
			InputFormat = inputFormat;
			CodecConfiguration = codecConfiguration;
			CodecGopSequence = codecGopSequence;
			RateControl = rateControl;
			IntraRefresh = intraRefresh;
			SubregionFrameEncoding = subregionFrameEncoding;
			ResolutionsListCount = resolutionsListCount;
			PResolutionList = pResolutionList;
			MaxReferenceFramesInDPB = maxReferenceFramesInDpb;
			ValidationFlags = validationFlags;
			SupportFlags = supportFlags;
			SuggestedProfile = suggestedProfile;
			SuggestedLevel = suggestedLevel;
			PResolutionDependentSupport = pResolutionDependentSupport;
		}


	}

}
