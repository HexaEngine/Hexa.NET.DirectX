// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D12
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct StaticSamplerDesc
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		public Filter Filter;

		/// <summary>
		/// To be documented.
		/// </summary>
		public TextureAddressMode AddressU;

		/// <summary>
		/// To be documented.
		/// </summary>
		public TextureAddressMode AddressV;

		/// <summary>
		/// To be documented.
		/// </summary>
		public TextureAddressMode AddressW;

		/// <summary>
		/// To be documented.
		/// </summary>
		public float MipLODBias;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint MaxAnisotropy;

		/// <summary>
		/// To be documented.
		/// </summary>
		public ComparisonFunc ComparisonFunc;

		/// <summary>
		/// To be documented.
		/// </summary>
		public StaticBorderColor BorderColor;

		/// <summary>
		/// To be documented.
		/// </summary>
		public float MinLOD;

		/// <summary>
		/// To be documented.
		/// </summary>
		public float MaxLOD;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint ShaderRegister;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint RegisterSpace;

		/// <summary>
		/// To be documented.
		/// </summary>
		public ShaderVisibility ShaderVisibility;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe StaticSamplerDesc(Filter filter = default, TextureAddressMode addressU = default, TextureAddressMode addressV = default, TextureAddressMode addressW = default, float mipLodBias = default, uint maxAnisotropy = default, ComparisonFunc comparisonFunc = default, StaticBorderColor borderColor = default, float minLod = default, float maxLod = default, uint shaderRegister = default, uint registerSpace = default, ShaderVisibility shaderVisibility = default)
		{
			Filter = filter;
			AddressU = addressU;
			AddressV = addressV;
			AddressW = addressW;
			MipLODBias = mipLodBias;
			MaxAnisotropy = maxAnisotropy;
			ComparisonFunc = comparisonFunc;
			BorderColor = borderColor;
			MinLOD = minLod;
			MaxLOD = maxLod;
			ShaderRegister = shaderRegister;
			RegisterSpace = registerSpace;
			ShaderVisibility = shaderVisibility;
		}


	}

}
