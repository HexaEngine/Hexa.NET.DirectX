// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D12
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VideoProcessOutputStreamDesc
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		public Format Format;

		/// <summary>
		/// To be documented.
		/// </summary>
		public ColorSpaceType ColorSpace;

		/// <summary>
		/// To be documented.
		/// </summary>
		public VideoProcessAlphaFillMode AlphaFillMode;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint AlphaFillModeSourceStreamIndex;

		/// <summary>
		/// To be documented.
		/// </summary>
		public float BackgroundColor_0;
		public float BackgroundColor_1;
		public float BackgroundColor_2;
		public float BackgroundColor_3;

		/// <summary>
		/// To be documented.
		/// </summary>
		public Rational FrameRate;

		/// <summary>
		/// To be documented.
		/// </summary>
		public int EnableStereo;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe VideoProcessOutputStreamDesc(Format format = default, ColorSpaceType colorSpace = default, VideoProcessAlphaFillMode alphaFillMode = default, uint alphaFillModeSourceStreamIndex = default, float* backgroundColor = default, Rational frameRate = default, int enableStereo = default)
		{
			Format = format;
			ColorSpace = colorSpace;
			AlphaFillMode = alphaFillMode;
			AlphaFillModeSourceStreamIndex = alphaFillModeSourceStreamIndex;
			if (backgroundColor != default(float*))
			{
				BackgroundColor_0 = backgroundColor[0];
				BackgroundColor_1 = backgroundColor[1];
				BackgroundColor_2 = backgroundColor[2];
				BackgroundColor_3 = backgroundColor[3];
			}
			FrameRate = frameRate;
			EnableStereo = enableStereo;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe VideoProcessOutputStreamDesc(Format format = default, ColorSpaceType colorSpace = default, VideoProcessAlphaFillMode alphaFillMode = default, uint alphaFillModeSourceStreamIndex = default, Span<float> backgroundColor = default, Rational frameRate = default, int enableStereo = default)
		{
			Format = format;
			ColorSpace = colorSpace;
			AlphaFillMode = alphaFillMode;
			AlphaFillModeSourceStreamIndex = alphaFillModeSourceStreamIndex;
			if (backgroundColor != default(Span<float>))
			{
				BackgroundColor_0 = backgroundColor[0];
				BackgroundColor_1 = backgroundColor[1];
				BackgroundColor_2 = backgroundColor[2];
				BackgroundColor_3 = backgroundColor[3];
			}
			FrameRate = frameRate;
			EnableStereo = enableStereo;
		}


	}

}
