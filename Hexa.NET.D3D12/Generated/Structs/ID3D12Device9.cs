// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D12
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("4c80e962-f032-4f60-bc9e-ebc2cfa1d83c")]
	public partial struct ID3D12Device9 : IComObject, IComObject<ID3D12Device9>, IComObject<ID3D12Device8>, IComObject<ID3D12Device7>, IComObject<ID3D12Device6>, IComObject<ID3D12Device5>, IComObject<ID3D12Device4>, IComObject<ID3D12Device3>, IComObject<ID3D12Device2>, IComObject<ID3D12Device1>, IComObject<ID3D12Device>, IComObject<ID3D12Object>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("4c80e962-f032-4f60-bc9e-ebc2cfa1d83c");

		public unsafe ID3D12Device9 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface(Guid* riid, void** ppvObject) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface(ref Guid riid, void** ppvObject) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface<T>(out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface<T>(ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint AddRef() 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint Release() 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData(Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, uint*, void*, HResult>)(LpVtbl[3]))(ptr, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData(ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, uint*, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData(Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, uint*, void*, HResult>)(LpVtbl[3]))(ptr, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData(ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, uint*, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData<T>(Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, uint*, void*, HResult>)(LpVtbl[3]))(ptr, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData<T>(ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, uint*, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData<T>(Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, uint*, void*, HResult>)(LpVtbl[3]))(ptr, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData<T>(ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, uint*, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateData(Guid* guid, uint dataSize, void* pData) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, uint, void*, HResult>)(LpVtbl[4]))(ptr, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateData(ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, uint, void*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(Guid* guid, IUnknown* pData) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, IUnknown*, HResult>)(LpVtbl[5]))(ptr, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(ref Guid guid, IUnknown* pData) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, IUnknown*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(Guid* guid, ref IUnknown pData) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, IUnknown*, HResult>)(LpVtbl[5]))(ptr, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, IUnknown*, HResult>)(LpVtbl[5]))(ptr, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(ref Guid guid, ref IUnknown pData) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, IUnknown*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, IUnknown*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetName(char* name) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, char*, HResult>)(LpVtbl[6]))(ptr, name);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetName(ReadOnlySpan<char> name) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (char* pname = name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, char*, HResult>)(LpVtbl[6]))(ptr, (char*)pname);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetName(string name) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, char*, HResult>)(LpVtbl[6]))(ptr, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint GetNodeCount() 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint>)(LpVtbl[7]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandQueue(CommandQueueDesc* pDesc, Guid* riid, void** ppCommandQueue) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandQueueDesc*, Guid*, void**, HResult>)(LpVtbl[8]))(ptr, pDesc, riid, ppCommandQueue);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandQueue(ref CommandQueueDesc pDesc, Guid* riid, void** ppCommandQueue) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CommandQueueDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandQueueDesc*, Guid*, void**, HResult>)(LpVtbl[8]))(ptr, (CommandQueueDesc*)ppDesc, riid, ppCommandQueue);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandQueue(CommandQueueDesc* pDesc, ref Guid riid, void** ppCommandQueue) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandQueueDesc*, Guid*, void**, HResult>)(LpVtbl[8]))(ptr, pDesc, (Guid*)priid, ppCommandQueue);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandQueue(ref CommandQueueDesc pDesc, ref Guid riid, void** ppCommandQueue) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CommandQueueDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandQueueDesc*, Guid*, void**, HResult>)(LpVtbl[8]))(ptr, (CommandQueueDesc*)ppDesc, (Guid*)priid, ppCommandQueue);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandQueue<T>(CommandQueueDesc* pDesc, out ComPtr<T> ppCommandQueue) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppCommandQueue = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandQueueDesc*, Guid*, void**, HResult>)(LpVtbl[8]))(ptr, pDesc, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppCommandQueue.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandQueue<T>(ref CommandQueueDesc pDesc, out ComPtr<T> ppCommandQueue) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CommandQueueDesc* ppDesc = &pDesc)
			{
				ppCommandQueue = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandQueueDesc*, Guid*, void**, HResult>)(LpVtbl[8]))(ptr, (CommandQueueDesc*)ppDesc, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppCommandQueue.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandQueue<T>(CommandQueueDesc* pDesc, ref Guid riid, out ComPtr<T> ppCommandQueue) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppCommandQueue = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandQueueDesc*, Guid*, void**, HResult>)(LpVtbl[8]))(ptr, pDesc, (Guid*)priid, (void**)ppCommandQueue.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandQueue<T>(ref CommandQueueDesc pDesc, ref Guid riid, out ComPtr<T> ppCommandQueue) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CommandQueueDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppCommandQueue = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandQueueDesc*, Guid*, void**, HResult>)(LpVtbl[8]))(ptr, (CommandQueueDesc*)ppDesc, (Guid*)priid, (void**)ppCommandQueue.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandAllocator(CommandListType type, Guid* riid, void** ppCommandAllocator) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandListType, Guid*, void**, HResult>)(LpVtbl[9]))(ptr, type, riid, ppCommandAllocator);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandAllocator(CommandListType type, ref Guid riid, void** ppCommandAllocator) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandListType, Guid*, void**, HResult>)(LpVtbl[9]))(ptr, type, (Guid*)priid, ppCommandAllocator);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandAllocator<T>(CommandListType type, out ComPtr<T> ppCommandAllocator) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppCommandAllocator = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandListType, Guid*, void**, HResult>)(LpVtbl[9]))(ptr, type, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppCommandAllocator.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandAllocator<T>(CommandListType type, ref Guid riid, out ComPtr<T> ppCommandAllocator) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppCommandAllocator = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandListType, Guid*, void**, HResult>)(LpVtbl[9]))(ptr, type, (Guid*)priid, (void**)ppCommandAllocator.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateGraphicsPipelineState(GraphicsPipelineStateDesc* pDesc, Guid* riid, void** ppPipelineState) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, GraphicsPipelineStateDesc*, Guid*, void**, HResult>)(LpVtbl[10]))(ptr, pDesc, riid, ppPipelineState);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateGraphicsPipelineState(ref GraphicsPipelineStateDesc pDesc, Guid* riid, void** ppPipelineState) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (GraphicsPipelineStateDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, GraphicsPipelineStateDesc*, Guid*, void**, HResult>)(LpVtbl[10]))(ptr, (GraphicsPipelineStateDesc*)ppDesc, riid, ppPipelineState);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateGraphicsPipelineState(GraphicsPipelineStateDesc* pDesc, ref Guid riid, void** ppPipelineState) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, GraphicsPipelineStateDesc*, Guid*, void**, HResult>)(LpVtbl[10]))(ptr, pDesc, (Guid*)priid, ppPipelineState);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateGraphicsPipelineState(ref GraphicsPipelineStateDesc pDesc, ref Guid riid, void** ppPipelineState) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (GraphicsPipelineStateDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, GraphicsPipelineStateDesc*, Guid*, void**, HResult>)(LpVtbl[10]))(ptr, (GraphicsPipelineStateDesc*)ppDesc, (Guid*)priid, ppPipelineState);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateGraphicsPipelineState<T>(GraphicsPipelineStateDesc* pDesc, out ComPtr<T> ppPipelineState) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppPipelineState = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, GraphicsPipelineStateDesc*, Guid*, void**, HResult>)(LpVtbl[10]))(ptr, pDesc, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppPipelineState.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateGraphicsPipelineState<T>(ref GraphicsPipelineStateDesc pDesc, out ComPtr<T> ppPipelineState) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (GraphicsPipelineStateDesc* ppDesc = &pDesc)
			{
				ppPipelineState = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, GraphicsPipelineStateDesc*, Guid*, void**, HResult>)(LpVtbl[10]))(ptr, (GraphicsPipelineStateDesc*)ppDesc, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppPipelineState.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateGraphicsPipelineState<T>(GraphicsPipelineStateDesc* pDesc, ref Guid riid, out ComPtr<T> ppPipelineState) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppPipelineState = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, GraphicsPipelineStateDesc*, Guid*, void**, HResult>)(LpVtbl[10]))(ptr, pDesc, (Guid*)priid, (void**)ppPipelineState.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateGraphicsPipelineState<T>(ref GraphicsPipelineStateDesc pDesc, ref Guid riid, out ComPtr<T> ppPipelineState) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (GraphicsPipelineStateDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppPipelineState = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, GraphicsPipelineStateDesc*, Guid*, void**, HResult>)(LpVtbl[10]))(ptr, (GraphicsPipelineStateDesc*)ppDesc, (Guid*)priid, (void**)ppPipelineState.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateComputePipelineState(ComputePipelineStateDesc* pDesc, Guid* riid, void** ppPipelineState) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ComputePipelineStateDesc*, Guid*, void**, HResult>)(LpVtbl[11]))(ptr, pDesc, riid, ppPipelineState);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateComputePipelineState(ref ComputePipelineStateDesc pDesc, Guid* riid, void** ppPipelineState) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComputePipelineStateDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ComputePipelineStateDesc*, Guid*, void**, HResult>)(LpVtbl[11]))(ptr, (ComputePipelineStateDesc*)ppDesc, riid, ppPipelineState);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateComputePipelineState(ComputePipelineStateDesc* pDesc, ref Guid riid, void** ppPipelineState) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ComputePipelineStateDesc*, Guid*, void**, HResult>)(LpVtbl[11]))(ptr, pDesc, (Guid*)priid, ppPipelineState);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateComputePipelineState(ref ComputePipelineStateDesc pDesc, ref Guid riid, void** ppPipelineState) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComputePipelineStateDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ComputePipelineStateDesc*, Guid*, void**, HResult>)(LpVtbl[11]))(ptr, (ComputePipelineStateDesc*)ppDesc, (Guid*)priid, ppPipelineState);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateComputePipelineState<T>(ComputePipelineStateDesc* pDesc, out ComPtr<T> ppPipelineState) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppPipelineState = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ComputePipelineStateDesc*, Guid*, void**, HResult>)(LpVtbl[11]))(ptr, pDesc, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppPipelineState.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateComputePipelineState<T>(ref ComputePipelineStateDesc pDesc, out ComPtr<T> ppPipelineState) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComputePipelineStateDesc* ppDesc = &pDesc)
			{
				ppPipelineState = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ComputePipelineStateDesc*, Guid*, void**, HResult>)(LpVtbl[11]))(ptr, (ComputePipelineStateDesc*)ppDesc, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppPipelineState.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateComputePipelineState<T>(ComputePipelineStateDesc* pDesc, ref Guid riid, out ComPtr<T> ppPipelineState) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppPipelineState = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ComputePipelineStateDesc*, Guid*, void**, HResult>)(LpVtbl[11]))(ptr, pDesc, (Guid*)priid, (void**)ppPipelineState.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateComputePipelineState<T>(ref ComputePipelineStateDesc pDesc, ref Guid riid, out ComPtr<T> ppPipelineState) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComputePipelineStateDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppPipelineState = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ComputePipelineStateDesc*, Guid*, void**, HResult>)(LpVtbl[11]))(ptr, (ComputePipelineStateDesc*)ppDesc, (Guid*)priid, (void**)ppPipelineState.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandList(uint nodeMask, CommandListType type, ID3D12CommandAllocator* pCommandAllocator, ID3D12PipelineState* pInitialState, Guid* riid, void** ppCommandList) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CommandListType, ID3D12CommandAllocator*, ID3D12PipelineState*, Guid*, void**, HResult>)(LpVtbl[12]))(ptr, nodeMask, type, pCommandAllocator, pInitialState, riid, ppCommandList);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandList(uint nodeMask, CommandListType type, ref ID3D12CommandAllocator pCommandAllocator, ID3D12PipelineState* pInitialState, Guid* riid, void** ppCommandList) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12CommandAllocator* ppCommandAllocator = &pCommandAllocator)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CommandListType, ID3D12CommandAllocator*, ID3D12PipelineState*, Guid*, void**, HResult>)(LpVtbl[12]))(ptr, nodeMask, type, (ID3D12CommandAllocator*)ppCommandAllocator, pInitialState, riid, ppCommandList);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandList(uint nodeMask, CommandListType type, ComPtr<ID3D12CommandAllocator> pCommandAllocator, ID3D12PipelineState* pInitialState, Guid* riid, void** ppCommandList) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CommandListType, ID3D12CommandAllocator*, ID3D12PipelineState*, Guid*, void**, HResult>)(LpVtbl[12]))(ptr, nodeMask, type, (ID3D12CommandAllocator*)pCommandAllocator.Handle, pInitialState, riid, ppCommandList);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandList(uint nodeMask, CommandListType type, ID3D12CommandAllocator* pCommandAllocator, ref ID3D12PipelineState pInitialState, Guid* riid, void** ppCommandList) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12PipelineState* ppInitialState = &pInitialState)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CommandListType, ID3D12CommandAllocator*, ID3D12PipelineState*, Guid*, void**, HResult>)(LpVtbl[12]))(ptr, nodeMask, type, pCommandAllocator, (ID3D12PipelineState*)ppInitialState, riid, ppCommandList);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandList(uint nodeMask, CommandListType type, ID3D12CommandAllocator* pCommandAllocator, ComPtr<ID3D12PipelineState> pInitialState, Guid* riid, void** ppCommandList) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CommandListType, ID3D12CommandAllocator*, ID3D12PipelineState*, Guid*, void**, HResult>)(LpVtbl[12]))(ptr, nodeMask, type, pCommandAllocator, (ID3D12PipelineState*)pInitialState.Handle, riid, ppCommandList);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandList(uint nodeMask, CommandListType type, ref ID3D12CommandAllocator pCommandAllocator, ref ID3D12PipelineState pInitialState, Guid* riid, void** ppCommandList) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12CommandAllocator* ppCommandAllocator = &pCommandAllocator)
			{
				fixed (ID3D12PipelineState* ppInitialState = &pInitialState)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CommandListType, ID3D12CommandAllocator*, ID3D12PipelineState*, Guid*, void**, HResult>)(LpVtbl[12]))(ptr, nodeMask, type, (ID3D12CommandAllocator*)ppCommandAllocator, (ID3D12PipelineState*)ppInitialState, riid, ppCommandList);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandList(uint nodeMask, CommandListType type, ComPtr<ID3D12CommandAllocator> pCommandAllocator, ComPtr<ID3D12PipelineState> pInitialState, Guid* riid, void** ppCommandList) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CommandListType, ID3D12CommandAllocator*, ID3D12PipelineState*, Guid*, void**, HResult>)(LpVtbl[12]))(ptr, nodeMask, type, (ID3D12CommandAllocator*)pCommandAllocator.Handle, (ID3D12PipelineState*)pInitialState.Handle, riid, ppCommandList);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandList(uint nodeMask, CommandListType type, ID3D12CommandAllocator* pCommandAllocator, ID3D12PipelineState* pInitialState, ref Guid riid, void** ppCommandList) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CommandListType, ID3D12CommandAllocator*, ID3D12PipelineState*, Guid*, void**, HResult>)(LpVtbl[12]))(ptr, nodeMask, type, pCommandAllocator, pInitialState, (Guid*)priid, ppCommandList);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandList(uint nodeMask, CommandListType type, ref ID3D12CommandAllocator pCommandAllocator, ID3D12PipelineState* pInitialState, ref Guid riid, void** ppCommandList) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12CommandAllocator* ppCommandAllocator = &pCommandAllocator)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CommandListType, ID3D12CommandAllocator*, ID3D12PipelineState*, Guid*, void**, HResult>)(LpVtbl[12]))(ptr, nodeMask, type, (ID3D12CommandAllocator*)ppCommandAllocator, pInitialState, (Guid*)priid, ppCommandList);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandList(uint nodeMask, CommandListType type, ComPtr<ID3D12CommandAllocator> pCommandAllocator, ID3D12PipelineState* pInitialState, ref Guid riid, void** ppCommandList) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CommandListType, ID3D12CommandAllocator*, ID3D12PipelineState*, Guid*, void**, HResult>)(LpVtbl[12]))(ptr, nodeMask, type, (ID3D12CommandAllocator*)pCommandAllocator.Handle, pInitialState, (Guid*)priid, ppCommandList);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandList(uint nodeMask, CommandListType type, ID3D12CommandAllocator* pCommandAllocator, ref ID3D12PipelineState pInitialState, ref Guid riid, void** ppCommandList) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12PipelineState* ppInitialState = &pInitialState)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CommandListType, ID3D12CommandAllocator*, ID3D12PipelineState*, Guid*, void**, HResult>)(LpVtbl[12]))(ptr, nodeMask, type, pCommandAllocator, (ID3D12PipelineState*)ppInitialState, (Guid*)priid, ppCommandList);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandList(uint nodeMask, CommandListType type, ID3D12CommandAllocator* pCommandAllocator, ComPtr<ID3D12PipelineState> pInitialState, ref Guid riid, void** ppCommandList) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CommandListType, ID3D12CommandAllocator*, ID3D12PipelineState*, Guid*, void**, HResult>)(LpVtbl[12]))(ptr, nodeMask, type, pCommandAllocator, (ID3D12PipelineState*)pInitialState.Handle, (Guid*)priid, ppCommandList);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandList(uint nodeMask, CommandListType type, ref ID3D12CommandAllocator pCommandAllocator, ref ID3D12PipelineState pInitialState, ref Guid riid, void** ppCommandList) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12CommandAllocator* ppCommandAllocator = &pCommandAllocator)
			{
				fixed (ID3D12PipelineState* ppInitialState = &pInitialState)
				{
					fixed (Guid* priid = &riid)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CommandListType, ID3D12CommandAllocator*, ID3D12PipelineState*, Guid*, void**, HResult>)(LpVtbl[12]))(ptr, nodeMask, type, (ID3D12CommandAllocator*)ppCommandAllocator, (ID3D12PipelineState*)ppInitialState, (Guid*)priid, ppCommandList);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandList(uint nodeMask, CommandListType type, ComPtr<ID3D12CommandAllocator> pCommandAllocator, ComPtr<ID3D12PipelineState> pInitialState, ref Guid riid, void** ppCommandList) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CommandListType, ID3D12CommandAllocator*, ID3D12PipelineState*, Guid*, void**, HResult>)(LpVtbl[12]))(ptr, nodeMask, type, (ID3D12CommandAllocator*)pCommandAllocator.Handle, (ID3D12PipelineState*)pInitialState.Handle, (Guid*)priid, ppCommandList);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandList<T>(uint nodeMask, CommandListType type, ID3D12CommandAllocator* pCommandAllocator, ID3D12PipelineState* pInitialState, out ComPtr<T> ppCommandList) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppCommandList = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CommandListType, ID3D12CommandAllocator*, ID3D12PipelineState*, Guid*, void**, HResult>)(LpVtbl[12]))(ptr, nodeMask, type, pCommandAllocator, pInitialState, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppCommandList.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandList<T>(uint nodeMask, CommandListType type, ComPtr<ID3D12CommandAllocator> pCommandAllocator, ID3D12PipelineState* pInitialState, out ComPtr<T> ppCommandList) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppCommandList = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CommandListType, ID3D12CommandAllocator*, ID3D12PipelineState*, Guid*, void**, HResult>)(LpVtbl[12]))(ptr, nodeMask, type, (ID3D12CommandAllocator*)pCommandAllocator.Handle, pInitialState, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppCommandList.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandList<T>(uint nodeMask, CommandListType type, ID3D12CommandAllocator* pCommandAllocator, ComPtr<ID3D12PipelineState> pInitialState, out ComPtr<T> ppCommandList) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppCommandList = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CommandListType, ID3D12CommandAllocator*, ID3D12PipelineState*, Guid*, void**, HResult>)(LpVtbl[12]))(ptr, nodeMask, type, pCommandAllocator, (ID3D12PipelineState*)pInitialState.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppCommandList.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandList<T>(uint nodeMask, CommandListType type, ComPtr<ID3D12CommandAllocator> pCommandAllocator, ComPtr<ID3D12PipelineState> pInitialState, out ComPtr<T> ppCommandList) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppCommandList = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CommandListType, ID3D12CommandAllocator*, ID3D12PipelineState*, Guid*, void**, HResult>)(LpVtbl[12]))(ptr, nodeMask, type, (ID3D12CommandAllocator*)pCommandAllocator.Handle, (ID3D12PipelineState*)pInitialState.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppCommandList.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandList<T>(uint nodeMask, CommandListType type, ID3D12CommandAllocator* pCommandAllocator, ID3D12PipelineState* pInitialState, ref Guid riid, out ComPtr<T> ppCommandList) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppCommandList = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CommandListType, ID3D12CommandAllocator*, ID3D12PipelineState*, Guid*, void**, HResult>)(LpVtbl[12]))(ptr, nodeMask, type, pCommandAllocator, pInitialState, (Guid*)priid, (void**)ppCommandList.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandList<T>(uint nodeMask, CommandListType type, ComPtr<ID3D12CommandAllocator> pCommandAllocator, ID3D12PipelineState* pInitialState, ref Guid riid, out ComPtr<T> ppCommandList) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppCommandList = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CommandListType, ID3D12CommandAllocator*, ID3D12PipelineState*, Guid*, void**, HResult>)(LpVtbl[12]))(ptr, nodeMask, type, (ID3D12CommandAllocator*)pCommandAllocator.Handle, pInitialState, (Guid*)priid, (void**)ppCommandList.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandList<T>(uint nodeMask, CommandListType type, ID3D12CommandAllocator* pCommandAllocator, ComPtr<ID3D12PipelineState> pInitialState, ref Guid riid, out ComPtr<T> ppCommandList) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppCommandList = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CommandListType, ID3D12CommandAllocator*, ID3D12PipelineState*, Guid*, void**, HResult>)(LpVtbl[12]))(ptr, nodeMask, type, pCommandAllocator, (ID3D12PipelineState*)pInitialState.Handle, (Guid*)priid, (void**)ppCommandList.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandList<T>(uint nodeMask, CommandListType type, ComPtr<ID3D12CommandAllocator> pCommandAllocator, ComPtr<ID3D12PipelineState> pInitialState, ref Guid riid, out ComPtr<T> ppCommandList) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppCommandList = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CommandListType, ID3D12CommandAllocator*, ID3D12PipelineState*, Guid*, void**, HResult>)(LpVtbl[12]))(ptr, nodeMask, type, (ID3D12CommandAllocator*)pCommandAllocator.Handle, (ID3D12PipelineState*)pInitialState.Handle, (Guid*)priid, (void**)ppCommandList.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckFeatureSupport(Feature feature, void* pFeatureSupportData, uint featureSupportDataSize) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Feature, void*, uint, HResult>)(LpVtbl[13]))(ptr, feature, pFeatureSupportData, featureSupportDataSize);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckFeatureSupport<T>(Feature feature, ComPtr<T> pFeatureSupportData, uint featureSupportDataSize) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Feature, void*, uint, HResult>)(LpVtbl[13]))(ptr, feature, (void*)pFeatureSupportData.Handle, featureSupportDataSize);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateDescriptorHeap(DescriptorHeapDesc* pDescriptorHeapDesc, Guid* riid, void** ppvHeap) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, DescriptorHeapDesc*, Guid*, void**, HResult>)(LpVtbl[14]))(ptr, pDescriptorHeapDesc, riid, ppvHeap);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateDescriptorHeap(ref DescriptorHeapDesc pDescriptorHeapDesc, Guid* riid, void** ppvHeap) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DescriptorHeapDesc* ppDescriptorHeapDesc = &pDescriptorHeapDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, DescriptorHeapDesc*, Guid*, void**, HResult>)(LpVtbl[14]))(ptr, (DescriptorHeapDesc*)ppDescriptorHeapDesc, riid, ppvHeap);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateDescriptorHeap(DescriptorHeapDesc* pDescriptorHeapDesc, ref Guid riid, void** ppvHeap) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, DescriptorHeapDesc*, Guid*, void**, HResult>)(LpVtbl[14]))(ptr, pDescriptorHeapDesc, (Guid*)priid, ppvHeap);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateDescriptorHeap(ref DescriptorHeapDesc pDescriptorHeapDesc, ref Guid riid, void** ppvHeap) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DescriptorHeapDesc* ppDescriptorHeapDesc = &pDescriptorHeapDesc)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, DescriptorHeapDesc*, Guid*, void**, HResult>)(LpVtbl[14]))(ptr, (DescriptorHeapDesc*)ppDescriptorHeapDesc, (Guid*)priid, ppvHeap);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateDescriptorHeap<T>(DescriptorHeapDesc* pDescriptorHeapDesc, out ComPtr<T> ppvHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvHeap = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, DescriptorHeapDesc*, Guid*, void**, HResult>)(LpVtbl[14]))(ptr, pDescriptorHeapDesc, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvHeap.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateDescriptorHeap<T>(ref DescriptorHeapDesc pDescriptorHeapDesc, out ComPtr<T> ppvHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DescriptorHeapDesc* ppDescriptorHeapDesc = &pDescriptorHeapDesc)
			{
				ppvHeap = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, DescriptorHeapDesc*, Guid*, void**, HResult>)(LpVtbl[14]))(ptr, (DescriptorHeapDesc*)ppDescriptorHeapDesc, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvHeap.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateDescriptorHeap<T>(DescriptorHeapDesc* pDescriptorHeapDesc, ref Guid riid, out ComPtr<T> ppvHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvHeap = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, DescriptorHeapDesc*, Guid*, void**, HResult>)(LpVtbl[14]))(ptr, pDescriptorHeapDesc, (Guid*)priid, (void**)ppvHeap.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateDescriptorHeap<T>(ref DescriptorHeapDesc pDescriptorHeapDesc, ref Guid riid, out ComPtr<T> ppvHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DescriptorHeapDesc* ppDescriptorHeapDesc = &pDescriptorHeapDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppvHeap = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, DescriptorHeapDesc*, Guid*, void**, HResult>)(LpVtbl[14]))(ptr, (DescriptorHeapDesc*)ppDescriptorHeapDesc, (Guid*)priid, (void**)ppvHeap.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint GetDescriptorHandleIncrementSize(DescriptorHeapType descriptorHeapType) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, DescriptorHeapType, uint>)(LpVtbl[15]))(ptr, descriptorHeapType);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateRootSignature(uint nodeMask, void* pBlobWithRootSignature, nuint blobLengthInBytes, Guid* riid, void** ppvRootSignature) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, void*, nuint, Guid*, void**, HResult>)(LpVtbl[16]))(ptr, nodeMask, pBlobWithRootSignature, blobLengthInBytes, riid, ppvRootSignature);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateRootSignature(uint nodeMask, void* pBlobWithRootSignature, nuint blobLengthInBytes, ref Guid riid, void** ppvRootSignature) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, void*, nuint, Guid*, void**, HResult>)(LpVtbl[16]))(ptr, nodeMask, pBlobWithRootSignature, blobLengthInBytes, (Guid*)priid, ppvRootSignature);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateRootSignature<T>(uint nodeMask, void* pBlobWithRootSignature, nuint blobLengthInBytes, out ComPtr<T> ppvRootSignature) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvRootSignature = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, void*, nuint, Guid*, void**, HResult>)(LpVtbl[16]))(ptr, nodeMask, pBlobWithRootSignature, blobLengthInBytes, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvRootSignature.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateRootSignature<T>(uint nodeMask, void* pBlobWithRootSignature, nuint blobLengthInBytes, ref Guid riid, out ComPtr<T> ppvRootSignature) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvRootSignature = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, void*, nuint, Guid*, void**, HResult>)(LpVtbl[16]))(ptr, nodeMask, pBlobWithRootSignature, blobLengthInBytes, (Guid*)priid, (void**)ppvRootSignature.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateConstantBufferView(ConstantBufferViewDesc* pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12Device9*, ConstantBufferViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[17]))(ptr, pDesc, destDescriptor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateConstantBufferView(ref ConstantBufferViewDesc pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ConstantBufferViewDesc* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ConstantBufferViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[17]))(ptr, (ConstantBufferViewDesc*)ppDesc, destDescriptor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateShaderResourceView(ID3D12Resource* pResource, ShaderResourceViewDesc* pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, ShaderResourceViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[18]))(ptr, pResource, pDesc, destDescriptor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateShaderResourceView(ref ID3D12Resource pResource, ShaderResourceViewDesc* pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, ShaderResourceViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[18]))(ptr, (ID3D12Resource*)ppResource, pDesc, destDescriptor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateShaderResourceView(ComPtr<ID3D12Resource> pResource, ShaderResourceViewDesc* pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, ShaderResourceViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[18]))(ptr, (ID3D12Resource*)pResource.Handle, pDesc, destDescriptor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateShaderResourceView(ID3D12Resource* pResource, ref ShaderResourceViewDesc pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ShaderResourceViewDesc* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, ShaderResourceViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[18]))(ptr, pResource, (ShaderResourceViewDesc*)ppDesc, destDescriptor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateShaderResourceView(ref ID3D12Resource pResource, ref ShaderResourceViewDesc pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (ShaderResourceViewDesc* ppDesc = &pDesc)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, ShaderResourceViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[18]))(ptr, (ID3D12Resource*)ppResource, (ShaderResourceViewDesc*)ppDesc, destDescriptor);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateShaderResourceView(ComPtr<ID3D12Resource> pResource, ref ShaderResourceViewDesc pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ShaderResourceViewDesc* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, ShaderResourceViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[18]))(ptr, (ID3D12Resource*)pResource.Handle, (ShaderResourceViewDesc*)ppDesc, destDescriptor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateUnorderedAccessView(ID3D12Resource* pResource, ID3D12Resource* pCounterResource, UnorderedAccessViewDesc* pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, ID3D12Resource*, UnorderedAccessViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[19]))(ptr, pResource, pCounterResource, pDesc, destDescriptor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateUnorderedAccessView(ref ID3D12Resource pResource, ID3D12Resource* pCounterResource, UnorderedAccessViewDesc* pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, ID3D12Resource*, UnorderedAccessViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[19]))(ptr, (ID3D12Resource*)ppResource, pCounterResource, pDesc, destDescriptor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateUnorderedAccessView(ComPtr<ID3D12Resource> pResource, ID3D12Resource* pCounterResource, UnorderedAccessViewDesc* pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, ID3D12Resource*, UnorderedAccessViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[19]))(ptr, (ID3D12Resource*)pResource.Handle, pCounterResource, pDesc, destDescriptor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateUnorderedAccessView(ID3D12Resource* pResource, ref ID3D12Resource pCounterResource, UnorderedAccessViewDesc* pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppCounterResource = &pCounterResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, ID3D12Resource*, UnorderedAccessViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[19]))(ptr, pResource, (ID3D12Resource*)ppCounterResource, pDesc, destDescriptor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateUnorderedAccessView(ID3D12Resource* pResource, ComPtr<ID3D12Resource> pCounterResource, UnorderedAccessViewDesc* pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, ID3D12Resource*, UnorderedAccessViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[19]))(ptr, pResource, (ID3D12Resource*)pCounterResource.Handle, pDesc, destDescriptor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateUnorderedAccessView(ref ID3D12Resource pResource, ref ID3D12Resource pCounterResource, UnorderedAccessViewDesc* pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (ID3D12Resource* ppCounterResource = &pCounterResource)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, ID3D12Resource*, UnorderedAccessViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[19]))(ptr, (ID3D12Resource*)ppResource, (ID3D12Resource*)ppCounterResource, pDesc, destDescriptor);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateUnorderedAccessView(ComPtr<ID3D12Resource> pResource, ComPtr<ID3D12Resource> pCounterResource, UnorderedAccessViewDesc* pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, ID3D12Resource*, UnorderedAccessViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[19]))(ptr, (ID3D12Resource*)pResource.Handle, (ID3D12Resource*)pCounterResource.Handle, pDesc, destDescriptor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateUnorderedAccessView(ID3D12Resource* pResource, ID3D12Resource* pCounterResource, ref UnorderedAccessViewDesc pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (UnorderedAccessViewDesc* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, ID3D12Resource*, UnorderedAccessViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[19]))(ptr, pResource, pCounterResource, (UnorderedAccessViewDesc*)ppDesc, destDescriptor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateUnorderedAccessView(ref ID3D12Resource pResource, ID3D12Resource* pCounterResource, ref UnorderedAccessViewDesc pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (UnorderedAccessViewDesc* ppDesc = &pDesc)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, ID3D12Resource*, UnorderedAccessViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[19]))(ptr, (ID3D12Resource*)ppResource, pCounterResource, (UnorderedAccessViewDesc*)ppDesc, destDescriptor);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateUnorderedAccessView(ComPtr<ID3D12Resource> pResource, ID3D12Resource* pCounterResource, ref UnorderedAccessViewDesc pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (UnorderedAccessViewDesc* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, ID3D12Resource*, UnorderedAccessViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[19]))(ptr, (ID3D12Resource*)pResource.Handle, pCounterResource, (UnorderedAccessViewDesc*)ppDesc, destDescriptor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateUnorderedAccessView(ID3D12Resource* pResource, ref ID3D12Resource pCounterResource, ref UnorderedAccessViewDesc pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppCounterResource = &pCounterResource)
			{
				fixed (UnorderedAccessViewDesc* ppDesc = &pDesc)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, ID3D12Resource*, UnorderedAccessViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[19]))(ptr, pResource, (ID3D12Resource*)ppCounterResource, (UnorderedAccessViewDesc*)ppDesc, destDescriptor);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateUnorderedAccessView(ID3D12Resource* pResource, ComPtr<ID3D12Resource> pCounterResource, ref UnorderedAccessViewDesc pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (UnorderedAccessViewDesc* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, ID3D12Resource*, UnorderedAccessViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[19]))(ptr, pResource, (ID3D12Resource*)pCounterResource.Handle, (UnorderedAccessViewDesc*)ppDesc, destDescriptor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateUnorderedAccessView(ref ID3D12Resource pResource, ref ID3D12Resource pCounterResource, ref UnorderedAccessViewDesc pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (ID3D12Resource* ppCounterResource = &pCounterResource)
				{
					fixed (UnorderedAccessViewDesc* ppDesc = &pDesc)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, ID3D12Resource*, UnorderedAccessViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[19]))(ptr, (ID3D12Resource*)ppResource, (ID3D12Resource*)ppCounterResource, (UnorderedAccessViewDesc*)ppDesc, destDescriptor);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateUnorderedAccessView(ComPtr<ID3D12Resource> pResource, ComPtr<ID3D12Resource> pCounterResource, ref UnorderedAccessViewDesc pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (UnorderedAccessViewDesc* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, ID3D12Resource*, UnorderedAccessViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[19]))(ptr, (ID3D12Resource*)pResource.Handle, (ID3D12Resource*)pCounterResource.Handle, (UnorderedAccessViewDesc*)ppDesc, destDescriptor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateRenderTargetView(ID3D12Resource* pResource, RenderTargetViewDesc* pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, RenderTargetViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[20]))(ptr, pResource, pDesc, destDescriptor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateRenderTargetView(ref ID3D12Resource pResource, RenderTargetViewDesc* pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, RenderTargetViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[20]))(ptr, (ID3D12Resource*)ppResource, pDesc, destDescriptor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateRenderTargetView(ComPtr<ID3D12Resource> pResource, RenderTargetViewDesc* pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, RenderTargetViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[20]))(ptr, (ID3D12Resource*)pResource.Handle, pDesc, destDescriptor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateRenderTargetView(ID3D12Resource* pResource, ref RenderTargetViewDesc pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (RenderTargetViewDesc* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, RenderTargetViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[20]))(ptr, pResource, (RenderTargetViewDesc*)ppDesc, destDescriptor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateRenderTargetView(ref ID3D12Resource pResource, ref RenderTargetViewDesc pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (RenderTargetViewDesc* ppDesc = &pDesc)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, RenderTargetViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[20]))(ptr, (ID3D12Resource*)ppResource, (RenderTargetViewDesc*)ppDesc, destDescriptor);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateRenderTargetView(ComPtr<ID3D12Resource> pResource, ref RenderTargetViewDesc pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (RenderTargetViewDesc* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, RenderTargetViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[20]))(ptr, (ID3D12Resource*)pResource.Handle, (RenderTargetViewDesc*)ppDesc, destDescriptor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateDepthStencilView(ID3D12Resource* pResource, DepthStencilViewDesc* pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, DepthStencilViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[21]))(ptr, pResource, pDesc, destDescriptor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateDepthStencilView(ref ID3D12Resource pResource, DepthStencilViewDesc* pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, DepthStencilViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[21]))(ptr, (ID3D12Resource*)ppResource, pDesc, destDescriptor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateDepthStencilView(ComPtr<ID3D12Resource> pResource, DepthStencilViewDesc* pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, DepthStencilViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[21]))(ptr, (ID3D12Resource*)pResource.Handle, pDesc, destDescriptor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateDepthStencilView(ID3D12Resource* pResource, ref DepthStencilViewDesc pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DepthStencilViewDesc* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, DepthStencilViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[21]))(ptr, pResource, (DepthStencilViewDesc*)ppDesc, destDescriptor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateDepthStencilView(ref ID3D12Resource pResource, ref DepthStencilViewDesc pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppResource = &pResource)
			{
				fixed (DepthStencilViewDesc* ppDesc = &pDesc)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, DepthStencilViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[21]))(ptr, (ID3D12Resource*)ppResource, (DepthStencilViewDesc*)ppDesc, destDescriptor);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateDepthStencilView(ComPtr<ID3D12Resource> pResource, ref DepthStencilViewDesc pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (DepthStencilViewDesc* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, DepthStencilViewDesc*, CpuDescriptorHandle, void>)(LpVtbl[21]))(ptr, (ID3D12Resource*)pResource.Handle, (DepthStencilViewDesc*)ppDesc, destDescriptor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateSampler(SamplerDesc* pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12Device9*, SamplerDesc*, CpuDescriptorHandle, void>)(LpVtbl[22]))(ptr, pDesc, destDescriptor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateSampler(ref SamplerDesc pDesc, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SamplerDesc* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, SamplerDesc*, CpuDescriptorHandle, void>)(LpVtbl[22]))(ptr, (SamplerDesc*)ppDesc, destDescriptor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyDescriptors(uint numDestDescriptorRanges, CpuDescriptorHandle* pDestDescriptorRangeStarts, uint* pDestDescriptorRangeSizes, uint numSrcDescriptorRanges, CpuDescriptorHandle* pSrcDescriptorRangeStarts, uint* pSrcDescriptorRangeSizes, DescriptorHeapType descriptorHeapsType) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CpuDescriptorHandle*, uint*, uint, CpuDescriptorHandle*, uint*, DescriptorHeapType, void>)(LpVtbl[23]))(ptr, numDestDescriptorRanges, pDestDescriptorRangeStarts, pDestDescriptorRangeSizes, numSrcDescriptorRanges, pSrcDescriptorRangeStarts, pSrcDescriptorRangeSizes, descriptorHeapsType);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyDescriptors(uint numDestDescriptorRanges, ref CpuDescriptorHandle pDestDescriptorRangeStarts, uint* pDestDescriptorRangeSizes, uint numSrcDescriptorRanges, CpuDescriptorHandle* pSrcDescriptorRangeStarts, uint* pSrcDescriptorRangeSizes, DescriptorHeapType descriptorHeapsType) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CpuDescriptorHandle* ppDestDescriptorRangeStarts = &pDestDescriptorRangeStarts)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CpuDescriptorHandle*, uint*, uint, CpuDescriptorHandle*, uint*, DescriptorHeapType, void>)(LpVtbl[23]))(ptr, numDestDescriptorRanges, (CpuDescriptorHandle*)ppDestDescriptorRangeStarts, pDestDescriptorRangeSizes, numSrcDescriptorRanges, pSrcDescriptorRangeStarts, pSrcDescriptorRangeSizes, descriptorHeapsType);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyDescriptors(uint numDestDescriptorRanges, CpuDescriptorHandle* pDestDescriptorRangeStarts, ref uint pDestDescriptorRangeSizes, uint numSrcDescriptorRanges, CpuDescriptorHandle* pSrcDescriptorRangeStarts, uint* pSrcDescriptorRangeSizes, DescriptorHeapType descriptorHeapsType) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDestDescriptorRangeSizes = &pDestDescriptorRangeSizes)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CpuDescriptorHandle*, uint*, uint, CpuDescriptorHandle*, uint*, DescriptorHeapType, void>)(LpVtbl[23]))(ptr, numDestDescriptorRanges, pDestDescriptorRangeStarts, (uint*)ppDestDescriptorRangeSizes, numSrcDescriptorRanges, pSrcDescriptorRangeStarts, pSrcDescriptorRangeSizes, descriptorHeapsType);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyDescriptors(uint numDestDescriptorRanges, ref CpuDescriptorHandle pDestDescriptorRangeStarts, ref uint pDestDescriptorRangeSizes, uint numSrcDescriptorRanges, CpuDescriptorHandle* pSrcDescriptorRangeStarts, uint* pSrcDescriptorRangeSizes, DescriptorHeapType descriptorHeapsType) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CpuDescriptorHandle* ppDestDescriptorRangeStarts = &pDestDescriptorRangeStarts)
			{
				fixed (uint* ppDestDescriptorRangeSizes = &pDestDescriptorRangeSizes)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CpuDescriptorHandle*, uint*, uint, CpuDescriptorHandle*, uint*, DescriptorHeapType, void>)(LpVtbl[23]))(ptr, numDestDescriptorRanges, (CpuDescriptorHandle*)ppDestDescriptorRangeStarts, (uint*)ppDestDescriptorRangeSizes, numSrcDescriptorRanges, pSrcDescriptorRangeStarts, pSrcDescriptorRangeSizes, descriptorHeapsType);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyDescriptors(uint numDestDescriptorRanges, CpuDescriptorHandle* pDestDescriptorRangeStarts, uint* pDestDescriptorRangeSizes, uint numSrcDescriptorRanges, ref CpuDescriptorHandle pSrcDescriptorRangeStarts, uint* pSrcDescriptorRangeSizes, DescriptorHeapType descriptorHeapsType) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CpuDescriptorHandle* ppSrcDescriptorRangeStarts = &pSrcDescriptorRangeStarts)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CpuDescriptorHandle*, uint*, uint, CpuDescriptorHandle*, uint*, DescriptorHeapType, void>)(LpVtbl[23]))(ptr, numDestDescriptorRanges, pDestDescriptorRangeStarts, pDestDescriptorRangeSizes, numSrcDescriptorRanges, (CpuDescriptorHandle*)ppSrcDescriptorRangeStarts, pSrcDescriptorRangeSizes, descriptorHeapsType);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyDescriptors(uint numDestDescriptorRanges, ref CpuDescriptorHandle pDestDescriptorRangeStarts, uint* pDestDescriptorRangeSizes, uint numSrcDescriptorRanges, ref CpuDescriptorHandle pSrcDescriptorRangeStarts, uint* pSrcDescriptorRangeSizes, DescriptorHeapType descriptorHeapsType) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CpuDescriptorHandle* ppDestDescriptorRangeStarts = &pDestDescriptorRangeStarts)
			{
				fixed (CpuDescriptorHandle* ppSrcDescriptorRangeStarts = &pSrcDescriptorRangeStarts)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CpuDescriptorHandle*, uint*, uint, CpuDescriptorHandle*, uint*, DescriptorHeapType, void>)(LpVtbl[23]))(ptr, numDestDescriptorRanges, (CpuDescriptorHandle*)ppDestDescriptorRangeStarts, pDestDescriptorRangeSizes, numSrcDescriptorRanges, (CpuDescriptorHandle*)ppSrcDescriptorRangeStarts, pSrcDescriptorRangeSizes, descriptorHeapsType);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyDescriptors(uint numDestDescriptorRanges, CpuDescriptorHandle* pDestDescriptorRangeStarts, ref uint pDestDescriptorRangeSizes, uint numSrcDescriptorRanges, ref CpuDescriptorHandle pSrcDescriptorRangeStarts, uint* pSrcDescriptorRangeSizes, DescriptorHeapType descriptorHeapsType) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDestDescriptorRangeSizes = &pDestDescriptorRangeSizes)
			{
				fixed (CpuDescriptorHandle* ppSrcDescriptorRangeStarts = &pSrcDescriptorRangeStarts)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CpuDescriptorHandle*, uint*, uint, CpuDescriptorHandle*, uint*, DescriptorHeapType, void>)(LpVtbl[23]))(ptr, numDestDescriptorRanges, pDestDescriptorRangeStarts, (uint*)ppDestDescriptorRangeSizes, numSrcDescriptorRanges, (CpuDescriptorHandle*)ppSrcDescriptorRangeStarts, pSrcDescriptorRangeSizes, descriptorHeapsType);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyDescriptors(uint numDestDescriptorRanges, ref CpuDescriptorHandle pDestDescriptorRangeStarts, ref uint pDestDescriptorRangeSizes, uint numSrcDescriptorRanges, ref CpuDescriptorHandle pSrcDescriptorRangeStarts, uint* pSrcDescriptorRangeSizes, DescriptorHeapType descriptorHeapsType) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CpuDescriptorHandle* ppDestDescriptorRangeStarts = &pDestDescriptorRangeStarts)
			{
				fixed (uint* ppDestDescriptorRangeSizes = &pDestDescriptorRangeSizes)
				{
					fixed (CpuDescriptorHandle* ppSrcDescriptorRangeStarts = &pSrcDescriptorRangeStarts)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CpuDescriptorHandle*, uint*, uint, CpuDescriptorHandle*, uint*, DescriptorHeapType, void>)(LpVtbl[23]))(ptr, numDestDescriptorRanges, (CpuDescriptorHandle*)ppDestDescriptorRangeStarts, (uint*)ppDestDescriptorRangeSizes, numSrcDescriptorRanges, (CpuDescriptorHandle*)ppSrcDescriptorRangeStarts, pSrcDescriptorRangeSizes, descriptorHeapsType);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyDescriptors(uint numDestDescriptorRanges, CpuDescriptorHandle* pDestDescriptorRangeStarts, uint* pDestDescriptorRangeSizes, uint numSrcDescriptorRanges, CpuDescriptorHandle* pSrcDescriptorRangeStarts, ref uint pSrcDescriptorRangeSizes, DescriptorHeapType descriptorHeapsType) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppSrcDescriptorRangeSizes = &pSrcDescriptorRangeSizes)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CpuDescriptorHandle*, uint*, uint, CpuDescriptorHandle*, uint*, DescriptorHeapType, void>)(LpVtbl[23]))(ptr, numDestDescriptorRanges, pDestDescriptorRangeStarts, pDestDescriptorRangeSizes, numSrcDescriptorRanges, pSrcDescriptorRangeStarts, (uint*)ppSrcDescriptorRangeSizes, descriptorHeapsType);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyDescriptors(uint numDestDescriptorRanges, ref CpuDescriptorHandle pDestDescriptorRangeStarts, uint* pDestDescriptorRangeSizes, uint numSrcDescriptorRanges, CpuDescriptorHandle* pSrcDescriptorRangeStarts, ref uint pSrcDescriptorRangeSizes, DescriptorHeapType descriptorHeapsType) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CpuDescriptorHandle* ppDestDescriptorRangeStarts = &pDestDescriptorRangeStarts)
			{
				fixed (uint* ppSrcDescriptorRangeSizes = &pSrcDescriptorRangeSizes)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CpuDescriptorHandle*, uint*, uint, CpuDescriptorHandle*, uint*, DescriptorHeapType, void>)(LpVtbl[23]))(ptr, numDestDescriptorRanges, (CpuDescriptorHandle*)ppDestDescriptorRangeStarts, pDestDescriptorRangeSizes, numSrcDescriptorRanges, pSrcDescriptorRangeStarts, (uint*)ppSrcDescriptorRangeSizes, descriptorHeapsType);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyDescriptors(uint numDestDescriptorRanges, CpuDescriptorHandle* pDestDescriptorRangeStarts, ref uint pDestDescriptorRangeSizes, uint numSrcDescriptorRanges, CpuDescriptorHandle* pSrcDescriptorRangeStarts, ref uint pSrcDescriptorRangeSizes, DescriptorHeapType descriptorHeapsType) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDestDescriptorRangeSizes = &pDestDescriptorRangeSizes)
			{
				fixed (uint* ppSrcDescriptorRangeSizes = &pSrcDescriptorRangeSizes)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CpuDescriptorHandle*, uint*, uint, CpuDescriptorHandle*, uint*, DescriptorHeapType, void>)(LpVtbl[23]))(ptr, numDestDescriptorRanges, pDestDescriptorRangeStarts, (uint*)ppDestDescriptorRangeSizes, numSrcDescriptorRanges, pSrcDescriptorRangeStarts, (uint*)ppSrcDescriptorRangeSizes, descriptorHeapsType);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyDescriptors(uint numDestDescriptorRanges, ref CpuDescriptorHandle pDestDescriptorRangeStarts, ref uint pDestDescriptorRangeSizes, uint numSrcDescriptorRanges, CpuDescriptorHandle* pSrcDescriptorRangeStarts, ref uint pSrcDescriptorRangeSizes, DescriptorHeapType descriptorHeapsType) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CpuDescriptorHandle* ppDestDescriptorRangeStarts = &pDestDescriptorRangeStarts)
			{
				fixed (uint* ppDestDescriptorRangeSizes = &pDestDescriptorRangeSizes)
				{
					fixed (uint* ppSrcDescriptorRangeSizes = &pSrcDescriptorRangeSizes)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CpuDescriptorHandle*, uint*, uint, CpuDescriptorHandle*, uint*, DescriptorHeapType, void>)(LpVtbl[23]))(ptr, numDestDescriptorRanges, (CpuDescriptorHandle*)ppDestDescriptorRangeStarts, (uint*)ppDestDescriptorRangeSizes, numSrcDescriptorRanges, pSrcDescriptorRangeStarts, (uint*)ppSrcDescriptorRangeSizes, descriptorHeapsType);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyDescriptors(uint numDestDescriptorRanges, CpuDescriptorHandle* pDestDescriptorRangeStarts, uint* pDestDescriptorRangeSizes, uint numSrcDescriptorRanges, ref CpuDescriptorHandle pSrcDescriptorRangeStarts, ref uint pSrcDescriptorRangeSizes, DescriptorHeapType descriptorHeapsType) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CpuDescriptorHandle* ppSrcDescriptorRangeStarts = &pSrcDescriptorRangeStarts)
			{
				fixed (uint* ppSrcDescriptorRangeSizes = &pSrcDescriptorRangeSizes)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CpuDescriptorHandle*, uint*, uint, CpuDescriptorHandle*, uint*, DescriptorHeapType, void>)(LpVtbl[23]))(ptr, numDestDescriptorRanges, pDestDescriptorRangeStarts, pDestDescriptorRangeSizes, numSrcDescriptorRanges, (CpuDescriptorHandle*)ppSrcDescriptorRangeStarts, (uint*)ppSrcDescriptorRangeSizes, descriptorHeapsType);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyDescriptors(uint numDestDescriptorRanges, ref CpuDescriptorHandle pDestDescriptorRangeStarts, uint* pDestDescriptorRangeSizes, uint numSrcDescriptorRanges, ref CpuDescriptorHandle pSrcDescriptorRangeStarts, ref uint pSrcDescriptorRangeSizes, DescriptorHeapType descriptorHeapsType) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CpuDescriptorHandle* ppDestDescriptorRangeStarts = &pDestDescriptorRangeStarts)
			{
				fixed (CpuDescriptorHandle* ppSrcDescriptorRangeStarts = &pSrcDescriptorRangeStarts)
				{
					fixed (uint* ppSrcDescriptorRangeSizes = &pSrcDescriptorRangeSizes)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CpuDescriptorHandle*, uint*, uint, CpuDescriptorHandle*, uint*, DescriptorHeapType, void>)(LpVtbl[23]))(ptr, numDestDescriptorRanges, (CpuDescriptorHandle*)ppDestDescriptorRangeStarts, pDestDescriptorRangeSizes, numSrcDescriptorRanges, (CpuDescriptorHandle*)ppSrcDescriptorRangeStarts, (uint*)ppSrcDescriptorRangeSizes, descriptorHeapsType);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyDescriptors(uint numDestDescriptorRanges, CpuDescriptorHandle* pDestDescriptorRangeStarts, ref uint pDestDescriptorRangeSizes, uint numSrcDescriptorRanges, ref CpuDescriptorHandle pSrcDescriptorRangeStarts, ref uint pSrcDescriptorRangeSizes, DescriptorHeapType descriptorHeapsType) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDestDescriptorRangeSizes = &pDestDescriptorRangeSizes)
			{
				fixed (CpuDescriptorHandle* ppSrcDescriptorRangeStarts = &pSrcDescriptorRangeStarts)
				{
					fixed (uint* ppSrcDescriptorRangeSizes = &pSrcDescriptorRangeSizes)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CpuDescriptorHandle*, uint*, uint, CpuDescriptorHandle*, uint*, DescriptorHeapType, void>)(LpVtbl[23]))(ptr, numDestDescriptorRanges, pDestDescriptorRangeStarts, (uint*)ppDestDescriptorRangeSizes, numSrcDescriptorRanges, (CpuDescriptorHandle*)ppSrcDescriptorRangeStarts, (uint*)ppSrcDescriptorRangeSizes, descriptorHeapsType);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyDescriptors(uint numDestDescriptorRanges, ref CpuDescriptorHandle pDestDescriptorRangeStarts, ref uint pDestDescriptorRangeSizes, uint numSrcDescriptorRanges, ref CpuDescriptorHandle pSrcDescriptorRangeStarts, ref uint pSrcDescriptorRangeSizes, DescriptorHeapType descriptorHeapsType) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CpuDescriptorHandle* ppDestDescriptorRangeStarts = &pDestDescriptorRangeStarts)
			{
				fixed (uint* ppDestDescriptorRangeSizes = &pDestDescriptorRangeSizes)
				{
					fixed (CpuDescriptorHandle* ppSrcDescriptorRangeStarts = &pSrcDescriptorRangeStarts)
					{
						fixed (uint* ppSrcDescriptorRangeSizes = &pSrcDescriptorRangeSizes)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CpuDescriptorHandle*, uint*, uint, CpuDescriptorHandle*, uint*, DescriptorHeapType, void>)(LpVtbl[23]))(ptr, numDestDescriptorRanges, (CpuDescriptorHandle*)ppDestDescriptorRangeStarts, (uint*)ppDestDescriptorRangeSizes, numSrcDescriptorRanges, (CpuDescriptorHandle*)ppSrcDescriptorRangeStarts, (uint*)ppSrcDescriptorRangeSizes, descriptorHeapsType);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyDescriptorsSimple(uint numDescriptors, CpuDescriptorHandle destDescriptorRangeStart, CpuDescriptorHandle srcDescriptorRangeStart, DescriptorHeapType descriptorHeapsType) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CpuDescriptorHandle, CpuDescriptorHandle, DescriptorHeapType, void>)(LpVtbl[24]))(ptr, numDescriptors, destDescriptorRangeStart, srcDescriptorRangeStart, descriptorHeapsType);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe ResourceAllocationInfo GetResourceAllocationInfo(uint visibleMask, uint numResourceDescs, ResourceDesc* pResourceDescs) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ResourceAllocationInfo ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, uint, ResourceDesc*, ResourceAllocationInfo>)(LpVtbl[25]))(ptr, visibleMask, numResourceDescs, pResourceDescs);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe ResourceAllocationInfo GetResourceAllocationInfo(uint visibleMask, uint numResourceDescs, ref ResourceDesc pResourceDescs) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppResourceDescs = &pResourceDescs)
			{
				ResourceAllocationInfo ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, uint, ResourceDesc*, ResourceAllocationInfo>)(LpVtbl[25]))(ptr, visibleMask, numResourceDescs, (ResourceDesc*)ppResourceDescs);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HeapProperties GetCustomHeapProperties(uint nodeMask, HeapType heapType) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HeapProperties ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, HeapType, HeapProperties>)(LpVtbl[26]))(ptr, nodeMask, heapType);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, riidResource, ppvResource);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, riidResource, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, pHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, riidResource, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, riidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, riidResource, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, riidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, pHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, riidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, riidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priidResource = &riidResource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (Guid*)priidResource, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (Guid*)priidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, pHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, (Guid*)priidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, (Guid*)priidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (Guid*)priidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (Guid*)priidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, pHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (Guid*)priidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						fixed (Guid* priidResource = &riidResource)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (Guid*)priidResource, ppvResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvResource = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, pHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, pHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						ppvResource = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priidResource = &riidResource)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, pHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						ppvResource = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						ppvResource = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						ppvResource = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, pHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						fixed (Guid* priidResource = &riidResource)
						{
							ppvResource = default;
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[27]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateHeap(HeapDesc* pDesc, Guid* riid, void** ppvHeap) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapDesc*, Guid*, void**, HResult>)(LpVtbl[28]))(ptr, pDesc, riid, ppvHeap);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateHeap(ref HeapDesc pDesc, Guid* riid, void** ppvHeap) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapDesc*, Guid*, void**, HResult>)(LpVtbl[28]))(ptr, (HeapDesc*)ppDesc, riid, ppvHeap);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateHeap(HeapDesc* pDesc, ref Guid riid, void** ppvHeap) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapDesc*, Guid*, void**, HResult>)(LpVtbl[28]))(ptr, pDesc, (Guid*)priid, ppvHeap);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateHeap(ref HeapDesc pDesc, ref Guid riid, void** ppvHeap) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapDesc*, Guid*, void**, HResult>)(LpVtbl[28]))(ptr, (HeapDesc*)ppDesc, (Guid*)priid, ppvHeap);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateHeap<T>(HeapDesc* pDesc, out ComPtr<T> ppvHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvHeap = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapDesc*, Guid*, void**, HResult>)(LpVtbl[28]))(ptr, pDesc, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvHeap.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateHeap<T>(ref HeapDesc pDesc, out ComPtr<T> ppvHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapDesc* ppDesc = &pDesc)
			{
				ppvHeap = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapDesc*, Guid*, void**, HResult>)(LpVtbl[28]))(ptr, (HeapDesc*)ppDesc, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvHeap.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateHeap<T>(HeapDesc* pDesc, ref Guid riid, out ComPtr<T> ppvHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvHeap = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapDesc*, Guid*, void**, HResult>)(LpVtbl[28]))(ptr, pDesc, (Guid*)priid, (void**)ppvHeap.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateHeap<T>(ref HeapDesc pDesc, ref Guid riid, out ComPtr<T> ppvHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppvHeap = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapDesc*, Guid*, void**, HResult>)(LpVtbl[28]))(ptr, (HeapDesc*)ppDesc, (Guid*)priid, (void**)ppvHeap.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource(ID3D12Heap* pHeap, ulong heapOffset, ResourceDesc* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, pHeap, heapOffset, pDesc, initialState, pOptimizedClearValue, riid, ppvResource);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource(ref ID3D12Heap pHeap, ulong heapOffset, ResourceDesc* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Heap* ppHeap = &pHeap)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, (ID3D12Heap*)ppHeap, heapOffset, pDesc, initialState, pOptimizedClearValue, riid, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ResourceDesc* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, pDesc, initialState, pOptimizedClearValue, riid, ppvResource);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource(ID3D12Heap* pHeap, ulong heapOffset, ref ResourceDesc pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, pHeap, heapOffset, (ResourceDesc*)ppDesc, initialState, pOptimizedClearValue, riid, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource(ref ID3D12Heap pHeap, ulong heapOffset, ref ResourceDesc pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Heap* ppHeap = &pHeap)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, (ID3D12Heap*)ppHeap, heapOffset, (ResourceDesc*)ppDesc, initialState, pOptimizedClearValue, riid, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ref ResourceDesc pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, (ResourceDesc*)ppDesc, initialState, pOptimizedClearValue, riid, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource(ID3D12Heap* pHeap, ulong heapOffset, ResourceDesc* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, pHeap, heapOffset, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, riid, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource(ref ID3D12Heap pHeap, ulong heapOffset, ResourceDesc* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Heap* ppHeap = &pHeap)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, (ID3D12Heap*)ppHeap, heapOffset, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, riid, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ResourceDesc* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, riid, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource(ID3D12Heap* pHeap, ulong heapOffset, ref ResourceDesc pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, pHeap, heapOffset, (ResourceDesc*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, riid, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource(ref ID3D12Heap pHeap, ulong heapOffset, ref ResourceDesc pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Heap* ppHeap = &pHeap)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, (ID3D12Heap*)ppHeap, heapOffset, (ResourceDesc*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, riid, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ref ResourceDesc pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, (ResourceDesc*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, riid, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource(ID3D12Heap* pHeap, ulong heapOffset, ResourceDesc* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, pHeap, heapOffset, pDesc, initialState, pOptimizedClearValue, (Guid*)priid, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource(ref ID3D12Heap pHeap, ulong heapOffset, ResourceDesc* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Heap* ppHeap = &pHeap)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, (ID3D12Heap*)ppHeap, heapOffset, pDesc, initialState, pOptimizedClearValue, (Guid*)priid, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ResourceDesc* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, pDesc, initialState, pOptimizedClearValue, (Guid*)priid, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource(ID3D12Heap* pHeap, ulong heapOffset, ref ResourceDesc pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, pHeap, heapOffset, (ResourceDesc*)ppDesc, initialState, pOptimizedClearValue, (Guid*)priid, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource(ref ID3D12Heap pHeap, ulong heapOffset, ref ResourceDesc pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Heap* ppHeap = &pHeap)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					fixed (Guid* priid = &riid)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, (ID3D12Heap*)ppHeap, heapOffset, (ResourceDesc*)ppDesc, initialState, pOptimizedClearValue, (Guid*)priid, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ref ResourceDesc pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, (ResourceDesc*)ppDesc, initialState, pOptimizedClearValue, (Guid*)priid, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource(ID3D12Heap* pHeap, ulong heapOffset, ResourceDesc* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, pHeap, heapOffset, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)priid, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource(ref ID3D12Heap pHeap, ulong heapOffset, ResourceDesc* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Heap* ppHeap = &pHeap)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priid = &riid)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, (ID3D12Heap*)ppHeap, heapOffset, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)priid, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ResourceDesc* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)priid, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource(ID3D12Heap* pHeap, ulong heapOffset, ref ResourceDesc pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priid = &riid)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, pHeap, heapOffset, (ResourceDesc*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)priid, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource(ref ID3D12Heap pHeap, ulong heapOffset, ref ResourceDesc pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Heap* ppHeap = &pHeap)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						fixed (Guid* priid = &riid)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, (ID3D12Heap*)ppHeap, heapOffset, (ResourceDesc*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)priid, ppvResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ref ResourceDesc pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priid = &riid)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, (ResourceDesc*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)priid, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource<T>(ID3D12Heap* pHeap, ulong heapOffset, ResourceDesc* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvResource = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, pHeap, heapOffset, pDesc, initialState, pOptimizedClearValue, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource<T>(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ResourceDesc* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvResource = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, pDesc, initialState, pOptimizedClearValue, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource<T>(ID3D12Heap* pHeap, ulong heapOffset, ref ResourceDesc pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, pHeap, heapOffset, (ResourceDesc*)ppDesc, initialState, pOptimizedClearValue, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource<T>(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ref ResourceDesc pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, (ResourceDesc*)ppDesc, initialState, pOptimizedClearValue, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource<T>(ID3D12Heap* pHeap, ulong heapOffset, ResourceDesc* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, pHeap, heapOffset, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource<T>(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ResourceDesc* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource<T>(ID3D12Heap* pHeap, ulong heapOffset, ref ResourceDesc pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, pHeap, heapOffset, (ResourceDesc*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource<T>(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ref ResourceDesc pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, (ResourceDesc*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource<T>(ID3D12Heap* pHeap, ulong heapOffset, ResourceDesc* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ref Guid riid, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, pHeap, heapOffset, pDesc, initialState, pOptimizedClearValue, (Guid*)priid, (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource<T>(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ResourceDesc* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ref Guid riid, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, pDesc, initialState, pOptimizedClearValue, (Guid*)priid, (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource<T>(ID3D12Heap* pHeap, ulong heapOffset, ref ResourceDesc pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ref Guid riid, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, pHeap, heapOffset, (ResourceDesc*)ppDesc, initialState, pOptimizedClearValue, (Guid*)priid, (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource<T>(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ref ResourceDesc pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ref Guid riid, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, (ResourceDesc*)ppDesc, initialState, pOptimizedClearValue, (Guid*)priid, (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource<T>(ID3D12Heap* pHeap, ulong heapOffset, ResourceDesc* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ref Guid riid, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (Guid* priid = &riid)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, pHeap, heapOffset, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)priid, (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource<T>(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ResourceDesc* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ref Guid riid, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (Guid* priid = &riid)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)priid, (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource<T>(ID3D12Heap* pHeap, ulong heapOffset, ref ResourceDesc pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ref Guid riid, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priid = &riid)
					{
						ppvResource = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, pHeap, heapOffset, (ResourceDesc*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)priid, (void**)ppvResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource<T>(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ref ResourceDesc pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ref Guid riid, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priid = &riid)
					{
						ppvResource = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[29]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, (ResourceDesc*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)priid, (void**)ppvResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource(ResourceDesc* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[30]))(ptr, pDesc, initialState, pOptimizedClearValue, riid, ppvResource);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource(ref ResourceDesc pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[30]))(ptr, (ResourceDesc*)ppDesc, initialState, pOptimizedClearValue, riid, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource(ResourceDesc* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[30]))(ptr, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, riid, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource(ref ResourceDesc pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[30]))(ptr, (ResourceDesc*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, riid, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource(ResourceDesc* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[30]))(ptr, pDesc, initialState, pOptimizedClearValue, (Guid*)priid, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource(ref ResourceDesc pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[30]))(ptr, (ResourceDesc*)ppDesc, initialState, pOptimizedClearValue, (Guid*)priid, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource(ResourceDesc* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[30]))(ptr, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)priid, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource(ref ResourceDesc pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priid = &riid)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[30]))(ptr, (ResourceDesc*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)priid, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource<T>(ResourceDesc* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvResource = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[30]))(ptr, pDesc, initialState, pOptimizedClearValue, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource<T>(ref ResourceDesc pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[30]))(ptr, (ResourceDesc*)ppDesc, initialState, pOptimizedClearValue, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource<T>(ResourceDesc* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[30]))(ptr, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource<T>(ref ResourceDesc pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[30]))(ptr, (ResourceDesc*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource<T>(ResourceDesc* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ref Guid riid, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[30]))(ptr, pDesc, initialState, pOptimizedClearValue, (Guid*)priid, (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource<T>(ref ResourceDesc pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ref Guid riid, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[30]))(ptr, (ResourceDesc*)ppDesc, initialState, pOptimizedClearValue, (Guid*)priid, (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource<T>(ResourceDesc* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ref Guid riid, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (Guid* priid = &riid)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[30]))(ptr, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)priid, (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource<T>(ref ResourceDesc pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ref Guid riid, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priid = &riid)
					{
						ppvResource = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[30]))(ptr, (ResourceDesc*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)priid, (void**)ppvResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateSharedHandle(ID3D12DeviceChild* pObject, SecurityAttributes* pAttributes, uint access, char* name, nint* pHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12DeviceChild*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[31]))(ptr, pObject, pAttributes, access, name, pHandle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateSharedHandle(ref ID3D12DeviceChild pObject, SecurityAttributes* pAttributes, uint access, char* name, nint* pHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12DeviceChild* ppObject = &pObject)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12DeviceChild*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[31]))(ptr, (ID3D12DeviceChild*)ppObject, pAttributes, access, name, pHandle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateSharedHandle(ComPtr<ID3D12DeviceChild> pObject, SecurityAttributes* pAttributes, uint access, char* name, nint* pHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12DeviceChild*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[31]))(ptr, (ID3D12DeviceChild*)pObject.Handle, pAttributes, access, name, pHandle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateSharedHandle(ID3D12DeviceChild* pObject, ref SecurityAttributes pAttributes, uint access, char* name, nint* pHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SecurityAttributes* ppAttributes = &pAttributes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12DeviceChild*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[31]))(ptr, pObject, (SecurityAttributes*)ppAttributes, access, name, pHandle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateSharedHandle(ref ID3D12DeviceChild pObject, ref SecurityAttributes pAttributes, uint access, char* name, nint* pHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12DeviceChild* ppObject = &pObject)
			{
				fixed (SecurityAttributes* ppAttributes = &pAttributes)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12DeviceChild*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[31]))(ptr, (ID3D12DeviceChild*)ppObject, (SecurityAttributes*)ppAttributes, access, name, pHandle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateSharedHandle(ComPtr<ID3D12DeviceChild> pObject, ref SecurityAttributes pAttributes, uint access, char* name, nint* pHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SecurityAttributes* ppAttributes = &pAttributes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12DeviceChild*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[31]))(ptr, (ID3D12DeviceChild*)pObject.Handle, (SecurityAttributes*)ppAttributes, access, name, pHandle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateSharedHandle(ID3D12DeviceChild* pObject, SecurityAttributes* pAttributes, uint access, ReadOnlySpan<char> name, nint* pHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (char* pname = name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12DeviceChild*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[31]))(ptr, pObject, pAttributes, access, (char*)pname, pHandle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateSharedHandle(ID3D12DeviceChild* pObject, SecurityAttributes* pAttributes, uint access, string name, nint* pHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12DeviceChild*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[31]))(ptr, pObject, pAttributes, access, pStr0, pHandle);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateSharedHandle(ref ID3D12DeviceChild pObject, SecurityAttributes* pAttributes, uint access, ReadOnlySpan<char> name, nint* pHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12DeviceChild* ppObject = &pObject)
			{
				fixed (char* pname = name)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12DeviceChild*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[31]))(ptr, (ID3D12DeviceChild*)ppObject, pAttributes, access, (char*)pname, pHandle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateSharedHandle(ref ID3D12DeviceChild pObject, SecurityAttributes* pAttributes, uint access, string name, nint* pHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12DeviceChild* ppObject = &pObject)
			{
				char* pStr0 = null;
				int pStrSize0 = 0;
				if (name != null)
				{
					pStrSize0 = Utils.GetByteCountUTF16(name);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = (char*)pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF16(name, pStr0, pStrSize0);
					pStr0[pStrOffset0] = '\0';
				}
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12DeviceChild*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[31]))(ptr, (ID3D12DeviceChild*)ppObject, pAttributes, access, pStr0, pHandle);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateSharedHandle(ID3D12DeviceChild* pObject, ref SecurityAttributes pAttributes, uint access, ReadOnlySpan<char> name, nint* pHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SecurityAttributes* ppAttributes = &pAttributes)
			{
				fixed (char* pname = name)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12DeviceChild*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[31]))(ptr, pObject, (SecurityAttributes*)ppAttributes, access, (char*)pname, pHandle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateSharedHandle(ID3D12DeviceChild* pObject, ref SecurityAttributes pAttributes, uint access, string name, nint* pHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SecurityAttributes* ppAttributes = &pAttributes)
			{
				char* pStr0 = null;
				int pStrSize0 = 0;
				if (name != null)
				{
					pStrSize0 = Utils.GetByteCountUTF16(name);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = (char*)pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF16(name, pStr0, pStrSize0);
					pStr0[pStrOffset0] = '\0';
				}
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12DeviceChild*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[31]))(ptr, pObject, (SecurityAttributes*)ppAttributes, access, pStr0, pHandle);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateSharedHandle(ref ID3D12DeviceChild pObject, ref SecurityAttributes pAttributes, uint access, ReadOnlySpan<char> name, nint* pHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12DeviceChild* ppObject = &pObject)
			{
				fixed (SecurityAttributes* ppAttributes = &pAttributes)
				{
					fixed (char* pname = name)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12DeviceChild*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[31]))(ptr, (ID3D12DeviceChild*)ppObject, (SecurityAttributes*)ppAttributes, access, (char*)pname, pHandle);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateSharedHandle(ref ID3D12DeviceChild pObject, ref SecurityAttributes pAttributes, uint access, string name, nint* pHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12DeviceChild* ppObject = &pObject)
			{
				fixed (SecurityAttributes* ppAttributes = &pAttributes)
				{
					char* pStr0 = null;
					int pStrSize0 = 0;
					if (name != null)
					{
						pStrSize0 = Utils.GetByteCountUTF16(name);
						if (pStrSize0 >= Utils.MaxStackallocSize)
						{
							pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
						}
						else
						{
							byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
							pStr0 = (char*)pStrStack0;
						}
						int pStrOffset0 = Utils.EncodeStringUTF16(name, pStr0, pStrSize0);
						pStr0[pStrOffset0] = '\0';
					}
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12DeviceChild*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[31]))(ptr, (ID3D12DeviceChild*)ppObject, (SecurityAttributes*)ppAttributes, access, pStr0, pHandle);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						Utils.Free(pStr0);
					}
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateSharedHandle(ID3D12DeviceChild* pObject, SecurityAttributes* pAttributes, uint access, char* name, ref nint pHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nint* ppHandle = &pHandle)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12DeviceChild*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[31]))(ptr, pObject, pAttributes, access, name, (nint*)ppHandle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateSharedHandle(ref ID3D12DeviceChild pObject, SecurityAttributes* pAttributes, uint access, char* name, ref nint pHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12DeviceChild* ppObject = &pObject)
			{
				fixed (nint* ppHandle = &pHandle)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12DeviceChild*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[31]))(ptr, (ID3D12DeviceChild*)ppObject, pAttributes, access, name, (nint*)ppHandle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateSharedHandle(ComPtr<ID3D12DeviceChild> pObject, SecurityAttributes* pAttributes, uint access, char* name, ref nint pHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nint* ppHandle = &pHandle)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12DeviceChild*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[31]))(ptr, (ID3D12DeviceChild*)pObject.Handle, pAttributes, access, name, (nint*)ppHandle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateSharedHandle(ID3D12DeviceChild* pObject, ref SecurityAttributes pAttributes, uint access, char* name, ref nint pHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SecurityAttributes* ppAttributes = &pAttributes)
			{
				fixed (nint* ppHandle = &pHandle)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12DeviceChild*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[31]))(ptr, pObject, (SecurityAttributes*)ppAttributes, access, name, (nint*)ppHandle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateSharedHandle(ref ID3D12DeviceChild pObject, ref SecurityAttributes pAttributes, uint access, char* name, ref nint pHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12DeviceChild* ppObject = &pObject)
			{
				fixed (SecurityAttributes* ppAttributes = &pAttributes)
				{
					fixed (nint* ppHandle = &pHandle)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12DeviceChild*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[31]))(ptr, (ID3D12DeviceChild*)ppObject, (SecurityAttributes*)ppAttributes, access, name, (nint*)ppHandle);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateSharedHandle(ComPtr<ID3D12DeviceChild> pObject, ref SecurityAttributes pAttributes, uint access, char* name, ref nint pHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SecurityAttributes* ppAttributes = &pAttributes)
			{
				fixed (nint* ppHandle = &pHandle)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12DeviceChild*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[31]))(ptr, (ID3D12DeviceChild*)pObject.Handle, (SecurityAttributes*)ppAttributes, access, name, (nint*)ppHandle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateSharedHandle(ID3D12DeviceChild* pObject, SecurityAttributes* pAttributes, uint access, ReadOnlySpan<char> name, ref nint pHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (char* pname = name)
			{
				fixed (nint* ppHandle = &pHandle)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12DeviceChild*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[31]))(ptr, pObject, pAttributes, access, (char*)pname, (nint*)ppHandle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateSharedHandle(ID3D12DeviceChild* pObject, SecurityAttributes* pAttributes, uint access, string name, ref nint pHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			fixed (nint* ppHandle = &pHandle)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12DeviceChild*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[31]))(ptr, pObject, pAttributes, access, pStr0, (nint*)ppHandle);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateSharedHandle(ref ID3D12DeviceChild pObject, SecurityAttributes* pAttributes, uint access, ReadOnlySpan<char> name, ref nint pHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12DeviceChild* ppObject = &pObject)
			{
				fixed (char* pname = name)
				{
					fixed (nint* ppHandle = &pHandle)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12DeviceChild*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[31]))(ptr, (ID3D12DeviceChild*)ppObject, pAttributes, access, (char*)pname, (nint*)ppHandle);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateSharedHandle(ref ID3D12DeviceChild pObject, SecurityAttributes* pAttributes, uint access, string name, ref nint pHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12DeviceChild* ppObject = &pObject)
			{
				char* pStr0 = null;
				int pStrSize0 = 0;
				if (name != null)
				{
					pStrSize0 = Utils.GetByteCountUTF16(name);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = (char*)pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF16(name, pStr0, pStrSize0);
					pStr0[pStrOffset0] = '\0';
				}
				fixed (nint* ppHandle = &pHandle)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12DeviceChild*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[31]))(ptr, (ID3D12DeviceChild*)ppObject, pAttributes, access, pStr0, (nint*)ppHandle);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						Utils.Free(pStr0);
					}
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateSharedHandle(ID3D12DeviceChild* pObject, ref SecurityAttributes pAttributes, uint access, ReadOnlySpan<char> name, ref nint pHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SecurityAttributes* ppAttributes = &pAttributes)
			{
				fixed (char* pname = name)
				{
					fixed (nint* ppHandle = &pHandle)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12DeviceChild*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[31]))(ptr, pObject, (SecurityAttributes*)ppAttributes, access, (char*)pname, (nint*)ppHandle);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateSharedHandle(ID3D12DeviceChild* pObject, ref SecurityAttributes pAttributes, uint access, string name, ref nint pHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SecurityAttributes* ppAttributes = &pAttributes)
			{
				char* pStr0 = null;
				int pStrSize0 = 0;
				if (name != null)
				{
					pStrSize0 = Utils.GetByteCountUTF16(name);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = (char*)pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF16(name, pStr0, pStrSize0);
					pStr0[pStrOffset0] = '\0';
				}
				fixed (nint* ppHandle = &pHandle)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12DeviceChild*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[31]))(ptr, pObject, (SecurityAttributes*)ppAttributes, access, pStr0, (nint*)ppHandle);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						Utils.Free(pStr0);
					}
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateSharedHandle(ref ID3D12DeviceChild pObject, ref SecurityAttributes pAttributes, uint access, ReadOnlySpan<char> name, ref nint pHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12DeviceChild* ppObject = &pObject)
			{
				fixed (SecurityAttributes* ppAttributes = &pAttributes)
				{
					fixed (char* pname = name)
					{
						fixed (nint* ppHandle = &pHandle)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12DeviceChild*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[31]))(ptr, (ID3D12DeviceChild*)ppObject, (SecurityAttributes*)ppAttributes, access, (char*)pname, (nint*)ppHandle);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateSharedHandle(ref ID3D12DeviceChild pObject, ref SecurityAttributes pAttributes, uint access, string name, ref nint pHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12DeviceChild* ppObject = &pObject)
			{
				fixed (SecurityAttributes* ppAttributes = &pAttributes)
				{
					char* pStr0 = null;
					int pStrSize0 = 0;
					if (name != null)
					{
						pStrSize0 = Utils.GetByteCountUTF16(name);
						if (pStrSize0 >= Utils.MaxStackallocSize)
						{
							pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
						}
						else
						{
							byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
							pStr0 = (char*)pStrStack0;
						}
						int pStrOffset0 = Utils.EncodeStringUTF16(name, pStr0, pStrSize0);
						pStr0[pStrOffset0] = '\0';
					}
					fixed (nint* ppHandle = &pHandle)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12DeviceChild*, SecurityAttributes*, uint, char*, nint*, HResult>)(LpVtbl[31]))(ptr, (ID3D12DeviceChild*)ppObject, (SecurityAttributes*)ppAttributes, access, pStr0, (nint*)ppHandle);
						if (pStrSize0 >= Utils.MaxStackallocSize)
						{
							Utils.Free(pStr0);
						}
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult OpenSharedHandle(nint ntHandle, Guid* riid, void** ppvObj) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, nint, Guid*, void**, HResult>)(LpVtbl[32]))(ptr, ntHandle, riid, ppvObj);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult OpenSharedHandle(nint ntHandle, ref Guid riid, void** ppvObj) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, nint, Guid*, void**, HResult>)(LpVtbl[32]))(ptr, ntHandle, (Guid*)priid, ppvObj);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult OpenSharedHandle<T>(nint ntHandle, out ComPtr<T> ppvObj) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObj = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, nint, Guid*, void**, HResult>)(LpVtbl[32]))(ptr, ntHandle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObj.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult OpenSharedHandle<T>(nint ntHandle, ref Guid riid, out ComPtr<T> ppvObj) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObj = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, nint, Guid*, void**, HResult>)(LpVtbl[32]))(ptr, ntHandle, (Guid*)priid, (void**)ppvObj.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult OpenSharedHandleByName(char* name, uint access, nint* pNTHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, char*, uint, nint*, HResult>)(LpVtbl[33]))(ptr, name, access, pNTHandle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult OpenSharedHandleByName(ReadOnlySpan<char> name, uint access, nint* pNTHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (char* pname = name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, char*, uint, nint*, HResult>)(LpVtbl[33]))(ptr, (char*)pname, access, pNTHandle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult OpenSharedHandleByName(string name, uint access, nint* pNTHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, char*, uint, nint*, HResult>)(LpVtbl[33]))(ptr, pStr0, access, pNTHandle);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult OpenSharedHandleByName(char* name, uint access, ref nint pNTHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nint* ppNTHandle = &pNTHandle)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, char*, uint, nint*, HResult>)(LpVtbl[33]))(ptr, name, access, (nint*)ppNTHandle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult OpenSharedHandleByName(ReadOnlySpan<char> name, uint access, ref nint pNTHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (char* pname = name)
			{
				fixed (nint* ppNTHandle = &pNTHandle)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, char*, uint, nint*, HResult>)(LpVtbl[33]))(ptr, (char*)pname, access, (nint*)ppNTHandle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult OpenSharedHandleByName(string name, uint access, ref nint pNTHandle) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			fixed (nint* ppNTHandle = &pNTHandle)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, char*, uint, nint*, HResult>)(LpVtbl[33]))(ptr, pStr0, access, (nint*)ppNTHandle);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult MakeResident(uint numObjects, ID3D12Pageable** ppObjects) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, ID3D12Pageable**, HResult>)(LpVtbl[34]))(ptr, numObjects, ppObjects);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult MakeResident(uint numObjects, ref ID3D12Pageable* ppObjects) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Pageable** pppObjects = &ppObjects)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, ID3D12Pageable**, HResult>)(LpVtbl[34]))(ptr, numObjects, (ID3D12Pageable**)pppObjects);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult Evict(uint numObjects, ID3D12Pageable** ppObjects) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, ID3D12Pageable**, HResult>)(LpVtbl[35]))(ptr, numObjects, ppObjects);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult Evict(uint numObjects, ref ID3D12Pageable* ppObjects) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Pageable** pppObjects = &ppObjects)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, ID3D12Pageable**, HResult>)(LpVtbl[35]))(ptr, numObjects, (ID3D12Pageable**)pppObjects);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateFence(ulong initialValue, FenceFlags flags, Guid* riid, void** ppFence) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ulong, FenceFlags, Guid*, void**, HResult>)(LpVtbl[36]))(ptr, initialValue, flags, riid, ppFence);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateFence(ulong initialValue, FenceFlags flags, ref Guid riid, void** ppFence) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ulong, FenceFlags, Guid*, void**, HResult>)(LpVtbl[36]))(ptr, initialValue, flags, (Guid*)priid, ppFence);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateFence<T>(ulong initialValue, FenceFlags flags, out ComPtr<T> ppFence) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppFence = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ulong, FenceFlags, Guid*, void**, HResult>)(LpVtbl[36]))(ptr, initialValue, flags, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppFence.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateFence<T>(ulong initialValue, FenceFlags flags, ref Guid riid, out ComPtr<T> ppFence) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppFence = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ulong, FenceFlags, Guid*, void**, HResult>)(LpVtbl[36]))(ptr, initialValue, flags, (Guid*)priid, (void**)ppFence.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDeviceRemovedReason() 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HResult>)(LpVtbl[37]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ResourceDesc* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, uint* pNumRows, ulong* pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, pNumRows, pRowSizeInBytes, pTotalBytes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ref ResourceDesc pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, uint* pNumRows, ulong* pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppResourceDesc = &pResourceDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, (ResourceDesc*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, pNumRows, pRowSizeInBytes, pTotalBytes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ResourceDesc* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, uint* pNumRows, ulong* pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, pNumRows, pRowSizeInBytes, pTotalBytes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ref ResourceDesc pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, uint* pNumRows, ulong* pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppResourceDesc = &pResourceDesc)
			{
				fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, (ResourceDesc*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, pNumRows, pRowSizeInBytes, pTotalBytes);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ResourceDesc* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, ref uint pNumRows, ulong* pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumRows = &pNumRows)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, (uint*)ppNumRows, pRowSizeInBytes, pTotalBytes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ref ResourceDesc pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, ref uint pNumRows, ulong* pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppResourceDesc = &pResourceDesc)
			{
				fixed (uint* ppNumRows = &pNumRows)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, (ResourceDesc*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, (uint*)ppNumRows, pRowSizeInBytes, pTotalBytes);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ResourceDesc* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, ref uint pNumRows, ulong* pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
			{
				fixed (uint* ppNumRows = &pNumRows)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, (uint*)ppNumRows, pRowSizeInBytes, pTotalBytes);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ref ResourceDesc pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, ref uint pNumRows, ulong* pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppResourceDesc = &pResourceDesc)
			{
				fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
				{
					fixed (uint* ppNumRows = &pNumRows)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, (ResourceDesc*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, (uint*)ppNumRows, pRowSizeInBytes, pTotalBytes);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ResourceDesc* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, uint* pNumRows, ref ulong pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, pNumRows, (ulong*)ppRowSizeInBytes, pTotalBytes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ref ResourceDesc pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, uint* pNumRows, ref ulong pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppResourceDesc = &pResourceDesc)
			{
				fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, (ResourceDesc*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, pNumRows, (ulong*)ppRowSizeInBytes, pTotalBytes);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ResourceDesc* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, uint* pNumRows, ref ulong pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
			{
				fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, pNumRows, (ulong*)ppRowSizeInBytes, pTotalBytes);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ref ResourceDesc pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, uint* pNumRows, ref ulong pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppResourceDesc = &pResourceDesc)
			{
				fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
				{
					fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, (ResourceDesc*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, pNumRows, (ulong*)ppRowSizeInBytes, pTotalBytes);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ResourceDesc* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, ref uint pNumRows, ref ulong pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumRows = &pNumRows)
			{
				fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, (uint*)ppNumRows, (ulong*)ppRowSizeInBytes, pTotalBytes);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ref ResourceDesc pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, ref uint pNumRows, ref ulong pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppResourceDesc = &pResourceDesc)
			{
				fixed (uint* ppNumRows = &pNumRows)
				{
					fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, (ResourceDesc*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, (uint*)ppNumRows, (ulong*)ppRowSizeInBytes, pTotalBytes);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ResourceDesc* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, ref uint pNumRows, ref ulong pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
			{
				fixed (uint* ppNumRows = &pNumRows)
				{
					fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, (uint*)ppNumRows, (ulong*)ppRowSizeInBytes, pTotalBytes);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ref ResourceDesc pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, ref uint pNumRows, ref ulong pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppResourceDesc = &pResourceDesc)
			{
				fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
				{
					fixed (uint* ppNumRows = &pNumRows)
					{
						fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, (ResourceDesc*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, (uint*)ppNumRows, (ulong*)ppRowSizeInBytes, pTotalBytes);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ResourceDesc* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, uint* pNumRows, ulong* pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ulong* ppTotalBytes = &pTotalBytes)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, pNumRows, pRowSizeInBytes, (ulong*)ppTotalBytes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ref ResourceDesc pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, uint* pNumRows, ulong* pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppResourceDesc = &pResourceDesc)
			{
				fixed (ulong* ppTotalBytes = &pTotalBytes)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, (ResourceDesc*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, pNumRows, pRowSizeInBytes, (ulong*)ppTotalBytes);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ResourceDesc* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, uint* pNumRows, ulong* pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
			{
				fixed (ulong* ppTotalBytes = &pTotalBytes)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, pNumRows, pRowSizeInBytes, (ulong*)ppTotalBytes);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ref ResourceDesc pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, uint* pNumRows, ulong* pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppResourceDesc = &pResourceDesc)
			{
				fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
				{
					fixed (ulong* ppTotalBytes = &pTotalBytes)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, (ResourceDesc*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, pNumRows, pRowSizeInBytes, (ulong*)ppTotalBytes);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ResourceDesc* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, ref uint pNumRows, ulong* pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumRows = &pNumRows)
			{
				fixed (ulong* ppTotalBytes = &pTotalBytes)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, (uint*)ppNumRows, pRowSizeInBytes, (ulong*)ppTotalBytes);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ref ResourceDesc pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, ref uint pNumRows, ulong* pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppResourceDesc = &pResourceDesc)
			{
				fixed (uint* ppNumRows = &pNumRows)
				{
					fixed (ulong* ppTotalBytes = &pTotalBytes)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, (ResourceDesc*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, (uint*)ppNumRows, pRowSizeInBytes, (ulong*)ppTotalBytes);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ResourceDesc* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, ref uint pNumRows, ulong* pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
			{
				fixed (uint* ppNumRows = &pNumRows)
				{
					fixed (ulong* ppTotalBytes = &pTotalBytes)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, (uint*)ppNumRows, pRowSizeInBytes, (ulong*)ppTotalBytes);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ref ResourceDesc pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, ref uint pNumRows, ulong* pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppResourceDesc = &pResourceDesc)
			{
				fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
				{
					fixed (uint* ppNumRows = &pNumRows)
					{
						fixed (ulong* ppTotalBytes = &pTotalBytes)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, (ResourceDesc*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, (uint*)ppNumRows, pRowSizeInBytes, (ulong*)ppTotalBytes);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ResourceDesc* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, uint* pNumRows, ref ulong pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
			{
				fixed (ulong* ppTotalBytes = &pTotalBytes)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, pNumRows, (ulong*)ppRowSizeInBytes, (ulong*)ppTotalBytes);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ref ResourceDesc pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, uint* pNumRows, ref ulong pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppResourceDesc = &pResourceDesc)
			{
				fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
				{
					fixed (ulong* ppTotalBytes = &pTotalBytes)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, (ResourceDesc*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, pNumRows, (ulong*)ppRowSizeInBytes, (ulong*)ppTotalBytes);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ResourceDesc* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, uint* pNumRows, ref ulong pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
			{
				fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
				{
					fixed (ulong* ppTotalBytes = &pTotalBytes)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, pNumRows, (ulong*)ppRowSizeInBytes, (ulong*)ppTotalBytes);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ref ResourceDesc pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, uint* pNumRows, ref ulong pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppResourceDesc = &pResourceDesc)
			{
				fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
				{
					fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
					{
						fixed (ulong* ppTotalBytes = &pTotalBytes)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, (ResourceDesc*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, pNumRows, (ulong*)ppRowSizeInBytes, (ulong*)ppTotalBytes);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ResourceDesc* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, ref uint pNumRows, ref ulong pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumRows = &pNumRows)
			{
				fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
				{
					fixed (ulong* ppTotalBytes = &pTotalBytes)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, (uint*)ppNumRows, (ulong*)ppRowSizeInBytes, (ulong*)ppTotalBytes);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ref ResourceDesc pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, ref uint pNumRows, ref ulong pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppResourceDesc = &pResourceDesc)
			{
				fixed (uint* ppNumRows = &pNumRows)
				{
					fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
					{
						fixed (ulong* ppTotalBytes = &pTotalBytes)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, (ResourceDesc*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, (uint*)ppNumRows, (ulong*)ppRowSizeInBytes, (ulong*)ppTotalBytes);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ResourceDesc* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, ref uint pNumRows, ref ulong pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
			{
				fixed (uint* ppNumRows = &pNumRows)
				{
					fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
					{
						fixed (ulong* ppTotalBytes = &pTotalBytes)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, (uint*)ppNumRows, (ulong*)ppRowSizeInBytes, (ulong*)ppTotalBytes);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints(ref ResourceDesc pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, ref uint pNumRows, ref ulong pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppResourceDesc = &pResourceDesc)
			{
				fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
				{
					fixed (uint* ppNumRows = &pNumRows)
					{
						fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
						{
							fixed (ulong* ppTotalBytes = &pTotalBytes)
							{
								((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[38]))(ptr, (ResourceDesc*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, (uint*)ppNumRows, (ulong*)ppRowSizeInBytes, (ulong*)ppTotalBytes);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateQueryHeap(QueryHeapDesc* pDesc, Guid* riid, void** ppvHeap) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, QueryHeapDesc*, Guid*, void**, HResult>)(LpVtbl[39]))(ptr, pDesc, riid, ppvHeap);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateQueryHeap(ref QueryHeapDesc pDesc, Guid* riid, void** ppvHeap) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (QueryHeapDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, QueryHeapDesc*, Guid*, void**, HResult>)(LpVtbl[39]))(ptr, (QueryHeapDesc*)ppDesc, riid, ppvHeap);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateQueryHeap(QueryHeapDesc* pDesc, ref Guid riid, void** ppvHeap) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, QueryHeapDesc*, Guid*, void**, HResult>)(LpVtbl[39]))(ptr, pDesc, (Guid*)priid, ppvHeap);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateQueryHeap(ref QueryHeapDesc pDesc, ref Guid riid, void** ppvHeap) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (QueryHeapDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, QueryHeapDesc*, Guid*, void**, HResult>)(LpVtbl[39]))(ptr, (QueryHeapDesc*)ppDesc, (Guid*)priid, ppvHeap);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateQueryHeap<T>(QueryHeapDesc* pDesc, out ComPtr<T> ppvHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvHeap = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, QueryHeapDesc*, Guid*, void**, HResult>)(LpVtbl[39]))(ptr, pDesc, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvHeap.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateQueryHeap<T>(ref QueryHeapDesc pDesc, out ComPtr<T> ppvHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (QueryHeapDesc* ppDesc = &pDesc)
			{
				ppvHeap = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, QueryHeapDesc*, Guid*, void**, HResult>)(LpVtbl[39]))(ptr, (QueryHeapDesc*)ppDesc, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvHeap.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateQueryHeap<T>(QueryHeapDesc* pDesc, ref Guid riid, out ComPtr<T> ppvHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvHeap = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, QueryHeapDesc*, Guid*, void**, HResult>)(LpVtbl[39]))(ptr, pDesc, (Guid*)priid, (void**)ppvHeap.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateQueryHeap<T>(ref QueryHeapDesc pDesc, ref Guid riid, out ComPtr<T> ppvHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (QueryHeapDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppvHeap = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, QueryHeapDesc*, Guid*, void**, HResult>)(LpVtbl[39]))(ptr, (QueryHeapDesc*)ppDesc, (Guid*)priid, (void**)ppvHeap.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetStablePowerState(Bool32 enable) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Bool32, HResult>)(LpVtbl[40]))(ptr, enable);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandSignature(CommandSignatureDesc* pDesc, ID3D12RootSignature* pRootSignature, Guid* riid, void** ppvCommandSignature) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandSignatureDesc*, ID3D12RootSignature*, Guid*, void**, HResult>)(LpVtbl[41]))(ptr, pDesc, pRootSignature, riid, ppvCommandSignature);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandSignature(ref CommandSignatureDesc pDesc, ID3D12RootSignature* pRootSignature, Guid* riid, void** ppvCommandSignature) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CommandSignatureDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandSignatureDesc*, ID3D12RootSignature*, Guid*, void**, HResult>)(LpVtbl[41]))(ptr, (CommandSignatureDesc*)ppDesc, pRootSignature, riid, ppvCommandSignature);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandSignature(CommandSignatureDesc* pDesc, ref ID3D12RootSignature pRootSignature, Guid* riid, void** ppvCommandSignature) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12RootSignature* ppRootSignature = &pRootSignature)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandSignatureDesc*, ID3D12RootSignature*, Guid*, void**, HResult>)(LpVtbl[41]))(ptr, pDesc, (ID3D12RootSignature*)ppRootSignature, riid, ppvCommandSignature);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandSignature(ref CommandSignatureDesc pDesc, ref ID3D12RootSignature pRootSignature, Guid* riid, void** ppvCommandSignature) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CommandSignatureDesc* ppDesc = &pDesc)
			{
				fixed (ID3D12RootSignature* ppRootSignature = &pRootSignature)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandSignatureDesc*, ID3D12RootSignature*, Guid*, void**, HResult>)(LpVtbl[41]))(ptr, (CommandSignatureDesc*)ppDesc, (ID3D12RootSignature*)ppRootSignature, riid, ppvCommandSignature);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandSignature(CommandSignatureDesc* pDesc, ID3D12RootSignature* pRootSignature, ref Guid riid, void** ppvCommandSignature) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandSignatureDesc*, ID3D12RootSignature*, Guid*, void**, HResult>)(LpVtbl[41]))(ptr, pDesc, pRootSignature, (Guid*)priid, ppvCommandSignature);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandSignature(ref CommandSignatureDesc pDesc, ID3D12RootSignature* pRootSignature, ref Guid riid, void** ppvCommandSignature) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CommandSignatureDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandSignatureDesc*, ID3D12RootSignature*, Guid*, void**, HResult>)(LpVtbl[41]))(ptr, (CommandSignatureDesc*)ppDesc, pRootSignature, (Guid*)priid, ppvCommandSignature);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandSignature(CommandSignatureDesc* pDesc, ref ID3D12RootSignature pRootSignature, ref Guid riid, void** ppvCommandSignature) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12RootSignature* ppRootSignature = &pRootSignature)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandSignatureDesc*, ID3D12RootSignature*, Guid*, void**, HResult>)(LpVtbl[41]))(ptr, pDesc, (ID3D12RootSignature*)ppRootSignature, (Guid*)priid, ppvCommandSignature);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandSignature(ref CommandSignatureDesc pDesc, ref ID3D12RootSignature pRootSignature, ref Guid riid, void** ppvCommandSignature) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CommandSignatureDesc* ppDesc = &pDesc)
			{
				fixed (ID3D12RootSignature* ppRootSignature = &pRootSignature)
				{
					fixed (Guid* priid = &riid)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandSignatureDesc*, ID3D12RootSignature*, Guid*, void**, HResult>)(LpVtbl[41]))(ptr, (CommandSignatureDesc*)ppDesc, (ID3D12RootSignature*)ppRootSignature, (Guid*)priid, ppvCommandSignature);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandSignature<T>(CommandSignatureDesc* pDesc, ID3D12RootSignature* pRootSignature, out ComPtr<T> ppvCommandSignature) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvCommandSignature = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandSignatureDesc*, ID3D12RootSignature*, Guid*, void**, HResult>)(LpVtbl[41]))(ptr, pDesc, pRootSignature, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvCommandSignature.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandSignature<T>(ref CommandSignatureDesc pDesc, ID3D12RootSignature* pRootSignature, out ComPtr<T> ppvCommandSignature) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CommandSignatureDesc* ppDesc = &pDesc)
			{
				ppvCommandSignature = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandSignatureDesc*, ID3D12RootSignature*, Guid*, void**, HResult>)(LpVtbl[41]))(ptr, (CommandSignatureDesc*)ppDesc, pRootSignature, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvCommandSignature.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandSignature<T>(CommandSignatureDesc* pDesc, ref ID3D12RootSignature pRootSignature, out ComPtr<T> ppvCommandSignature) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12RootSignature* ppRootSignature = &pRootSignature)
			{
				ppvCommandSignature = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandSignatureDesc*, ID3D12RootSignature*, Guid*, void**, HResult>)(LpVtbl[41]))(ptr, pDesc, (ID3D12RootSignature*)ppRootSignature, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvCommandSignature.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandSignature<T>(ref CommandSignatureDesc pDesc, ref ID3D12RootSignature pRootSignature, out ComPtr<T> ppvCommandSignature) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CommandSignatureDesc* ppDesc = &pDesc)
			{
				fixed (ID3D12RootSignature* ppRootSignature = &pRootSignature)
				{
					ppvCommandSignature = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandSignatureDesc*, ID3D12RootSignature*, Guid*, void**, HResult>)(LpVtbl[41]))(ptr, (CommandSignatureDesc*)ppDesc, (ID3D12RootSignature*)ppRootSignature, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvCommandSignature.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandSignature<T>(CommandSignatureDesc* pDesc, ID3D12RootSignature* pRootSignature, ref Guid riid, out ComPtr<T> ppvCommandSignature) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvCommandSignature = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandSignatureDesc*, ID3D12RootSignature*, Guid*, void**, HResult>)(LpVtbl[41]))(ptr, pDesc, pRootSignature, (Guid*)priid, (void**)ppvCommandSignature.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandSignature<T>(ref CommandSignatureDesc pDesc, ID3D12RootSignature* pRootSignature, ref Guid riid, out ComPtr<T> ppvCommandSignature) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CommandSignatureDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppvCommandSignature = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandSignatureDesc*, ID3D12RootSignature*, Guid*, void**, HResult>)(LpVtbl[41]))(ptr, (CommandSignatureDesc*)ppDesc, pRootSignature, (Guid*)priid, (void**)ppvCommandSignature.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandSignature<T>(CommandSignatureDesc* pDesc, ref ID3D12RootSignature pRootSignature, ref Guid riid, out ComPtr<T> ppvCommandSignature) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12RootSignature* ppRootSignature = &pRootSignature)
			{
				fixed (Guid* priid = &riid)
				{
					ppvCommandSignature = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandSignatureDesc*, ID3D12RootSignature*, Guid*, void**, HResult>)(LpVtbl[41]))(ptr, pDesc, (ID3D12RootSignature*)ppRootSignature, (Guid*)priid, (void**)ppvCommandSignature.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandSignature<T>(ref CommandSignatureDesc pDesc, ref ID3D12RootSignature pRootSignature, ref Guid riid, out ComPtr<T> ppvCommandSignature) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CommandSignatureDesc* ppDesc = &pDesc)
			{
				fixed (ID3D12RootSignature* ppRootSignature = &pRootSignature)
				{
					fixed (Guid* priid = &riid)
					{
						ppvCommandSignature = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandSignatureDesc*, ID3D12RootSignature*, Guid*, void**, HResult>)(LpVtbl[41]))(ptr, (CommandSignatureDesc*)ppDesc, (ID3D12RootSignature*)ppRootSignature, (Guid*)priid, (void**)ppvCommandSignature.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, uint* pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, uint* pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, uint* pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, ref uint pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, ref uint pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, ref uint pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, pNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, pNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, pNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, uint* pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, pNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, uint* pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, pNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, uint* pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, pNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, ref uint pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, ref uint pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, ref uint pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, pNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, pNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, pNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
					{
						fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, uint* pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, uint* pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, uint* pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, ref uint pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, ref uint pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, ref uint pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
			{
				fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, pNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, pNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
			{
				fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, pNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
					{
						fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, uint* pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
			{
				fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, pNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, uint* pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, pNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, uint* pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
			{
				fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, pNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, ref uint pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, ref uint pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, ref uint pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, pNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, pNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, pNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
					{
						fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
						{
							fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
							{
								((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, uint* pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, uint* pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, uint* pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, ref uint pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, ref uint pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, ref uint pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
			{
				fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, pNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, pNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
			{
				fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, pNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
					{
						fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, uint* pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
			{
				fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, pNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, uint* pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, pNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, uint* pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
			{
				fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, pNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, ref uint pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, ref uint pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, ref uint pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, pNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, pNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, pNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
					{
						fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
						{
							fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
							{
								((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, uint* pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
			{
				fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, uint* pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, uint* pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
			{
				fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, ref uint pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, ref uint pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, ref uint pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
			{
				fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, pNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, pNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
			{
				fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, pNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
					{
						fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
						{
							fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
							{
								((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, uint* pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
			{
				fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, pNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, uint* pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, pNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, uint* pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
			{
				fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, pNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, ref uint pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, ref uint pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
						{
							fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
							{
								((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, ref uint pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, pNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
						{
							fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
							{
								((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, pNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, pNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ID3D12Resource* pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
						{
							fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
							{
								((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, pTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ref ID3D12Resource pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
					{
						fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
						{
							fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
							{
								fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
								{
									((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
								}
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetResourceTiling(ComPtr<ID3D12Resource> pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipInfo pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipInfo* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
						{
							fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
							{
								((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(LpVtbl[42]))(ptr, (ID3D12Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, (PackedMipInfo*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe Luid GetAdapterLuid() 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Luid ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Luid>)(LpVtbl[43]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePipelineLibrary(void* pLibraryBlob, nuint blobLength, Guid* riid, void** ppPipelineLibrary) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, void*, nuint, Guid*, void**, HResult>)(LpVtbl[44]))(ptr, pLibraryBlob, blobLength, riid, ppPipelineLibrary);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePipelineLibrary(void* pLibraryBlob, nuint blobLength, ref Guid riid, void** ppPipelineLibrary) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, void*, nuint, Guid*, void**, HResult>)(LpVtbl[44]))(ptr, pLibraryBlob, blobLength, (Guid*)priid, ppPipelineLibrary);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePipelineLibrary<T>(void* pLibraryBlob, nuint blobLength, out ComPtr<T> ppPipelineLibrary) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppPipelineLibrary = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, void*, nuint, Guid*, void**, HResult>)(LpVtbl[44]))(ptr, pLibraryBlob, blobLength, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppPipelineLibrary.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePipelineLibrary<T>(void* pLibraryBlob, nuint blobLength, ref Guid riid, out ComPtr<T> ppPipelineLibrary) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppPipelineLibrary = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, void*, nuint, Guid*, void**, HResult>)(LpVtbl[44]))(ptr, pLibraryBlob, blobLength, (Guid*)priid, (void**)ppPipelineLibrary.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetEventOnMultipleFenceCompletion(ID3D12Fence** ppFences, ulong* pFenceValues, uint numFences, MultipleFenceWaitFlags flags, nint hEvent) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Fence**, ulong*, uint, MultipleFenceWaitFlags, nint, HResult>)(LpVtbl[45]))(ptr, ppFences, pFenceValues, numFences, flags, hEvent);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetEventOnMultipleFenceCompletion(ref ID3D12Fence* ppFences, ulong* pFenceValues, uint numFences, MultipleFenceWaitFlags flags, nint hEvent) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Fence** pppFences = &ppFences)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Fence**, ulong*, uint, MultipleFenceWaitFlags, nint, HResult>)(LpVtbl[45]))(ptr, (ID3D12Fence**)pppFences, pFenceValues, numFences, flags, hEvent);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetEventOnMultipleFenceCompletion(ComPtr<ID3D12Fence> ppFences, ulong* pFenceValues, uint numFences, MultipleFenceWaitFlags flags, nint hEvent) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Fence**, ulong*, uint, MultipleFenceWaitFlags, nint, HResult>)(LpVtbl[45]))(ptr, (ID3D12Fence**)ppFences.Handle, pFenceValues, numFences, flags, hEvent);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetEventOnMultipleFenceCompletion(ID3D12Fence** ppFences, ref ulong pFenceValues, uint numFences, MultipleFenceWaitFlags flags, nint hEvent) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ulong* ppFenceValues = &pFenceValues)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Fence**, ulong*, uint, MultipleFenceWaitFlags, nint, HResult>)(LpVtbl[45]))(ptr, ppFences, (ulong*)ppFenceValues, numFences, flags, hEvent);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetEventOnMultipleFenceCompletion(ref ID3D12Fence* ppFences, ref ulong pFenceValues, uint numFences, MultipleFenceWaitFlags flags, nint hEvent) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Fence** pppFences = &ppFences)
			{
				fixed (ulong* ppFenceValues = &pFenceValues)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Fence**, ulong*, uint, MultipleFenceWaitFlags, nint, HResult>)(LpVtbl[45]))(ptr, (ID3D12Fence**)pppFences, (ulong*)ppFenceValues, numFences, flags, hEvent);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetEventOnMultipleFenceCompletion(ComPtr<ID3D12Fence> ppFences, ref ulong pFenceValues, uint numFences, MultipleFenceWaitFlags flags, nint hEvent) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ulong* ppFenceValues = &pFenceValues)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Fence**, ulong*, uint, MultipleFenceWaitFlags, nint, HResult>)(LpVtbl[45]))(ptr, (ID3D12Fence**)ppFences.Handle, (ulong*)ppFenceValues, numFences, flags, hEvent);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetResidencyPriority(uint numObjects, ID3D12Pageable** ppObjects, ResidencyPriority* pPriorities) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, ID3D12Pageable**, ResidencyPriority*, HResult>)(LpVtbl[46]))(ptr, numObjects, ppObjects, pPriorities);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetResidencyPriority(uint numObjects, ref ID3D12Pageable* ppObjects, ResidencyPriority* pPriorities) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Pageable** pppObjects = &ppObjects)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, ID3D12Pageable**, ResidencyPriority*, HResult>)(LpVtbl[46]))(ptr, numObjects, (ID3D12Pageable**)pppObjects, pPriorities);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetResidencyPriority(uint numObjects, ID3D12Pageable** ppObjects, ref ResidencyPriority pPriorities) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResidencyPriority* ppPriorities = &pPriorities)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, ID3D12Pageable**, ResidencyPriority*, HResult>)(LpVtbl[46]))(ptr, numObjects, ppObjects, (ResidencyPriority*)ppPriorities);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetResidencyPriority(uint numObjects, ref ID3D12Pageable* ppObjects, ref ResidencyPriority pPriorities) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Pageable** pppObjects = &ppObjects)
			{
				fixed (ResidencyPriority* ppPriorities = &pPriorities)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, ID3D12Pageable**, ResidencyPriority*, HResult>)(LpVtbl[46]))(ptr, numObjects, (ID3D12Pageable**)pppObjects, (ResidencyPriority*)ppPriorities);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePipelineState(PipelineStateStreamDesc* pDesc, Guid* riid, void** ppPipelineState) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, PipelineStateStreamDesc*, Guid*, void**, HResult>)(LpVtbl[47]))(ptr, pDesc, riid, ppPipelineState);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePipelineState(ref PipelineStateStreamDesc pDesc, Guid* riid, void** ppPipelineState) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PipelineStateStreamDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, PipelineStateStreamDesc*, Guid*, void**, HResult>)(LpVtbl[47]))(ptr, (PipelineStateStreamDesc*)ppDesc, riid, ppPipelineState);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePipelineState(PipelineStateStreamDesc* pDesc, ref Guid riid, void** ppPipelineState) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, PipelineStateStreamDesc*, Guid*, void**, HResult>)(LpVtbl[47]))(ptr, pDesc, (Guid*)priid, ppPipelineState);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePipelineState(ref PipelineStateStreamDesc pDesc, ref Guid riid, void** ppPipelineState) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PipelineStateStreamDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, PipelineStateStreamDesc*, Guid*, void**, HResult>)(LpVtbl[47]))(ptr, (PipelineStateStreamDesc*)ppDesc, (Guid*)priid, ppPipelineState);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePipelineState<T>(PipelineStateStreamDesc* pDesc, out ComPtr<T> ppPipelineState) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppPipelineState = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, PipelineStateStreamDesc*, Guid*, void**, HResult>)(LpVtbl[47]))(ptr, pDesc, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppPipelineState.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePipelineState<T>(ref PipelineStateStreamDesc pDesc, out ComPtr<T> ppPipelineState) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PipelineStateStreamDesc* ppDesc = &pDesc)
			{
				ppPipelineState = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, PipelineStateStreamDesc*, Guid*, void**, HResult>)(LpVtbl[47]))(ptr, (PipelineStateStreamDesc*)ppDesc, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppPipelineState.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePipelineState<T>(PipelineStateStreamDesc* pDesc, ref Guid riid, out ComPtr<T> ppPipelineState) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppPipelineState = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, PipelineStateStreamDesc*, Guid*, void**, HResult>)(LpVtbl[47]))(ptr, pDesc, (Guid*)priid, (void**)ppPipelineState.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePipelineState<T>(ref PipelineStateStreamDesc pDesc, ref Guid riid, out ComPtr<T> ppPipelineState) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PipelineStateStreamDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppPipelineState = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, PipelineStateStreamDesc*, Guid*, void**, HResult>)(LpVtbl[47]))(ptr, (PipelineStateStreamDesc*)ppDesc, (Guid*)priid, (void**)ppPipelineState.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult OpenExistingHeapFromAddress(void* pAddress, Guid* riid, void** ppvHeap) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, void*, Guid*, void**, HResult>)(LpVtbl[48]))(ptr, pAddress, riid, ppvHeap);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult OpenExistingHeapFromAddress(void* pAddress, ref Guid riid, void** ppvHeap) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, void*, Guid*, void**, HResult>)(LpVtbl[48]))(ptr, pAddress, (Guid*)priid, ppvHeap);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult OpenExistingHeapFromAddress<T>(void* pAddress, out ComPtr<T> ppvHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvHeap = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, void*, Guid*, void**, HResult>)(LpVtbl[48]))(ptr, pAddress, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvHeap.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult OpenExistingHeapFromAddress<T>(void* pAddress, ref Guid riid, out ComPtr<T> ppvHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvHeap = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, void*, Guid*, void**, HResult>)(LpVtbl[48]))(ptr, pAddress, (Guid*)priid, (void**)ppvHeap.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult OpenExistingHeapFromFileMapping(nint hFileMapping, Guid* riid, void** ppvHeap) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, nint, Guid*, void**, HResult>)(LpVtbl[49]))(ptr, hFileMapping, riid, ppvHeap);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult OpenExistingHeapFromFileMapping(nint hFileMapping, ref Guid riid, void** ppvHeap) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, nint, Guid*, void**, HResult>)(LpVtbl[49]))(ptr, hFileMapping, (Guid*)priid, ppvHeap);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult OpenExistingHeapFromFileMapping<T>(nint hFileMapping, out ComPtr<T> ppvHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvHeap = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, nint, Guid*, void**, HResult>)(LpVtbl[49]))(ptr, hFileMapping, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvHeap.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult OpenExistingHeapFromFileMapping<T>(nint hFileMapping, ref Guid riid, out ComPtr<T> ppvHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvHeap = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, nint, Guid*, void**, HResult>)(LpVtbl[49]))(ptr, hFileMapping, (Guid*)priid, (void**)ppvHeap.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult EnqueueMakeResident(ResidencyFlags flags, uint numObjects, ID3D12Pageable** ppObjects, ID3D12Fence* pFenceToSignal, ulong fenceValueToSignal) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResidencyFlags, uint, ID3D12Pageable**, ID3D12Fence*, ulong, HResult>)(LpVtbl[50]))(ptr, flags, numObjects, ppObjects, pFenceToSignal, fenceValueToSignal);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult EnqueueMakeResident(ResidencyFlags flags, uint numObjects, ref ID3D12Pageable* ppObjects, ID3D12Fence* pFenceToSignal, ulong fenceValueToSignal) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Pageable** pppObjects = &ppObjects)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResidencyFlags, uint, ID3D12Pageable**, ID3D12Fence*, ulong, HResult>)(LpVtbl[50]))(ptr, flags, numObjects, (ID3D12Pageable**)pppObjects, pFenceToSignal, fenceValueToSignal);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult EnqueueMakeResident(ResidencyFlags flags, uint numObjects, ID3D12Pageable** ppObjects, ref ID3D12Fence pFenceToSignal, ulong fenceValueToSignal) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Fence* ppFenceToSignal = &pFenceToSignal)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResidencyFlags, uint, ID3D12Pageable**, ID3D12Fence*, ulong, HResult>)(LpVtbl[50]))(ptr, flags, numObjects, ppObjects, (ID3D12Fence*)ppFenceToSignal, fenceValueToSignal);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult EnqueueMakeResident(ResidencyFlags flags, uint numObjects, ID3D12Pageable** ppObjects, ComPtr<ID3D12Fence> pFenceToSignal, ulong fenceValueToSignal) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResidencyFlags, uint, ID3D12Pageable**, ID3D12Fence*, ulong, HResult>)(LpVtbl[50]))(ptr, flags, numObjects, ppObjects, (ID3D12Fence*)pFenceToSignal.Handle, fenceValueToSignal);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult EnqueueMakeResident(ResidencyFlags flags, uint numObjects, ref ID3D12Pageable* ppObjects, ref ID3D12Fence pFenceToSignal, ulong fenceValueToSignal) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Pageable** pppObjects = &ppObjects)
			{
				fixed (ID3D12Fence* ppFenceToSignal = &pFenceToSignal)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResidencyFlags, uint, ID3D12Pageable**, ID3D12Fence*, ulong, HResult>)(LpVtbl[50]))(ptr, flags, numObjects, (ID3D12Pageable**)pppObjects, (ID3D12Fence*)ppFenceToSignal, fenceValueToSignal);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult EnqueueMakeResident(ResidencyFlags flags, uint numObjects, ref ID3D12Pageable* ppObjects, ComPtr<ID3D12Fence> pFenceToSignal, ulong fenceValueToSignal) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Pageable** pppObjects = &ppObjects)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResidencyFlags, uint, ID3D12Pageable**, ID3D12Fence*, ulong, HResult>)(LpVtbl[50]))(ptr, flags, numObjects, (ID3D12Pageable**)pppObjects, (ID3D12Fence*)pFenceToSignal.Handle, fenceValueToSignal);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandList1(uint nodeMask, CommandListType type, CommandListFlags flags, Guid* riid, void** ppCommandList) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CommandListType, CommandListFlags, Guid*, void**, HResult>)(LpVtbl[51]))(ptr, nodeMask, type, flags, riid, ppCommandList);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandList1(uint nodeMask, CommandListType type, CommandListFlags flags, ref Guid riid, void** ppCommandList) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CommandListType, CommandListFlags, Guid*, void**, HResult>)(LpVtbl[51]))(ptr, nodeMask, type, flags, (Guid*)priid, ppCommandList);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandList1<T>(uint nodeMask, CommandListType type, CommandListFlags flags, out ComPtr<T> ppCommandList) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppCommandList = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CommandListType, CommandListFlags, Guid*, void**, HResult>)(LpVtbl[51]))(ptr, nodeMask, type, flags, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppCommandList.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandList1<T>(uint nodeMask, CommandListType type, CommandListFlags flags, ref Guid riid, out ComPtr<T> ppCommandList) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppCommandList = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, CommandListType, CommandListFlags, Guid*, void**, HResult>)(LpVtbl[51]))(ptr, nodeMask, type, flags, (Guid*)priid, (void**)ppCommandList.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateProtectedResourceSession(ProtectedResourceSessionDesc* pDesc, Guid* riid, void** ppSession) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ProtectedResourceSessionDesc*, Guid*, void**, HResult>)(LpVtbl[52]))(ptr, pDesc, riid, ppSession);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateProtectedResourceSession(ref ProtectedResourceSessionDesc pDesc, Guid* riid, void** ppSession) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ProtectedResourceSessionDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ProtectedResourceSessionDesc*, Guid*, void**, HResult>)(LpVtbl[52]))(ptr, (ProtectedResourceSessionDesc*)ppDesc, riid, ppSession);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateProtectedResourceSession(ProtectedResourceSessionDesc* pDesc, ref Guid riid, void** ppSession) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ProtectedResourceSessionDesc*, Guid*, void**, HResult>)(LpVtbl[52]))(ptr, pDesc, (Guid*)priid, ppSession);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateProtectedResourceSession(ref ProtectedResourceSessionDesc pDesc, ref Guid riid, void** ppSession) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ProtectedResourceSessionDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ProtectedResourceSessionDesc*, Guid*, void**, HResult>)(LpVtbl[52]))(ptr, (ProtectedResourceSessionDesc*)ppDesc, (Guid*)priid, ppSession);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateProtectedResourceSession<T>(ProtectedResourceSessionDesc* pDesc, out ComPtr<T> ppSession) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSession = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ProtectedResourceSessionDesc*, Guid*, void**, HResult>)(LpVtbl[52]))(ptr, pDesc, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppSession.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateProtectedResourceSession<T>(ref ProtectedResourceSessionDesc pDesc, out ComPtr<T> ppSession) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ProtectedResourceSessionDesc* ppDesc = &pDesc)
			{
				ppSession = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ProtectedResourceSessionDesc*, Guid*, void**, HResult>)(LpVtbl[52]))(ptr, (ProtectedResourceSessionDesc*)ppDesc, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppSession.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateProtectedResourceSession<T>(ProtectedResourceSessionDesc* pDesc, ref Guid riid, out ComPtr<T> ppSession) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppSession = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ProtectedResourceSessionDesc*, Guid*, void**, HResult>)(LpVtbl[52]))(ptr, pDesc, (Guid*)priid, (void**)ppSession.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateProtectedResourceSession<T>(ref ProtectedResourceSessionDesc pDesc, ref Guid riid, out ComPtr<T> ppSession) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ProtectedResourceSessionDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppSession = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ProtectedResourceSessionDesc*, Guid*, void**, HResult>)(LpVtbl[52]))(ptr, (ProtectedResourceSessionDesc*)ppDesc, (Guid*)priid, (void**)ppSession.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, riidResource, ppvResource);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, riidResource, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, riidResource, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, riidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, riidResource, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, riidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, riidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, riidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, riidResource, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, riidResource, ppvResource);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, riidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, riidResource, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, riidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, riidResource, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, riidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, riidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, riidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, riidResource, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, riidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, riidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, riidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, riidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, riidResource, ppvResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, riidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priidResource = &riidResource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, (Guid*)priidResource, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, (Guid*)priidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, (Guid*)priidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, (Guid*)priidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, (Guid*)priidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, (Guid*)priidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, (Guid*)priidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						fixed (Guid* priidResource = &riidResource)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, (Guid*)priidResource, ppvResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, (Guid*)priidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priidResource = &riidResource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, (Guid*)priidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, (Guid*)priidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
					{
						fixed (Guid* priidResource = &riidResource)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, (Guid*)priidResource, ppvResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, (Guid*)priidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
					{
						fixed (Guid* priidResource = &riidResource)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, (Guid*)priidResource, ppvResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
					{
						fixed (Guid* priidResource = &riidResource)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, (Guid*)priidResource, ppvResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
						{
							fixed (Guid* priidResource = &riidResource)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, (Guid*)priidResource, ppvResource);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						fixed (Guid* priidResource = &riidResource)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, ppvResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvResource = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						ppvResource = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvResource = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						ppvResource = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priidResource = &riidResource)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						ppvResource = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						ppvResource = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						ppvResource = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						fixed (Guid* priidResource = &riidResource)
						{
							ppvResource = default;
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priidResource = &riidResource)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						ppvResource = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						ppvResource = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						ppvResource = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, pHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource1<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc* ppDesc = &pDesc)
				{
					fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						fixed (Guid* priidResource = &riidResource)
						{
							ppvResource = default;
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[53]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateHeap1(HeapDesc* pDesc, ID3D12ProtectedResourceSession* pProtectedSession, Guid* riid, void** ppvHeap) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[54]))(ptr, pDesc, pProtectedSession, riid, ppvHeap);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateHeap1(ref HeapDesc pDesc, ID3D12ProtectedResourceSession* pProtectedSession, Guid* riid, void** ppvHeap) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[54]))(ptr, (HeapDesc*)ppDesc, pProtectedSession, riid, ppvHeap);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateHeap1(HeapDesc* pDesc, ref ID3D12ProtectedResourceSession pProtectedSession, Guid* riid, void** ppvHeap) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[54]))(ptr, pDesc, (ID3D12ProtectedResourceSession*)ppProtectedSession, riid, ppvHeap);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateHeap1(HeapDesc* pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, Guid* riid, void** ppvHeap) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[54]))(ptr, pDesc, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, riid, ppvHeap);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateHeap1(ref HeapDesc pDesc, ref ID3D12ProtectedResourceSession pProtectedSession, Guid* riid, void** ppvHeap) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapDesc* ppDesc = &pDesc)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[54]))(ptr, (HeapDesc*)ppDesc, (ID3D12ProtectedResourceSession*)ppProtectedSession, riid, ppvHeap);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateHeap1(ref HeapDesc pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, Guid* riid, void** ppvHeap) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[54]))(ptr, (HeapDesc*)ppDesc, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, riid, ppvHeap);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateHeap1(HeapDesc* pDesc, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riid, void** ppvHeap) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[54]))(ptr, pDesc, pProtectedSession, (Guid*)priid, ppvHeap);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateHeap1(ref HeapDesc pDesc, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riid, void** ppvHeap) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[54]))(ptr, (HeapDesc*)ppDesc, pProtectedSession, (Guid*)priid, ppvHeap);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateHeap1(HeapDesc* pDesc, ref ID3D12ProtectedResourceSession pProtectedSession, ref Guid riid, void** ppvHeap) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[54]))(ptr, pDesc, (ID3D12ProtectedResourceSession*)ppProtectedSession, (Guid*)priid, ppvHeap);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateHeap1(HeapDesc* pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riid, void** ppvHeap) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[54]))(ptr, pDesc, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priid, ppvHeap);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateHeap1(ref HeapDesc pDesc, ref ID3D12ProtectedResourceSession pProtectedSession, ref Guid riid, void** ppvHeap) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapDesc* ppDesc = &pDesc)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
				{
					fixed (Guid* priid = &riid)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[54]))(ptr, (HeapDesc*)ppDesc, (ID3D12ProtectedResourceSession*)ppProtectedSession, (Guid*)priid, ppvHeap);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateHeap1(ref HeapDesc pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riid, void** ppvHeap) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[54]))(ptr, (HeapDesc*)ppDesc, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priid, ppvHeap);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateHeap1<T>(HeapDesc* pDesc, ID3D12ProtectedResourceSession* pProtectedSession, out ComPtr<T> ppvHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvHeap = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[54]))(ptr, pDesc, pProtectedSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvHeap.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateHeap1<T>(ref HeapDesc pDesc, ID3D12ProtectedResourceSession* pProtectedSession, out ComPtr<T> ppvHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapDesc* ppDesc = &pDesc)
			{
				ppvHeap = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[54]))(ptr, (HeapDesc*)ppDesc, pProtectedSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvHeap.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateHeap1<T>(HeapDesc* pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, out ComPtr<T> ppvHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvHeap = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[54]))(ptr, pDesc, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvHeap.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateHeap1<T>(ref HeapDesc pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, out ComPtr<T> ppvHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapDesc* ppDesc = &pDesc)
			{
				ppvHeap = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[54]))(ptr, (HeapDesc*)ppDesc, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvHeap.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateHeap1<T>(HeapDesc* pDesc, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riid, out ComPtr<T> ppvHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvHeap = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[54]))(ptr, pDesc, pProtectedSession, (Guid*)priid, (void**)ppvHeap.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateHeap1<T>(ref HeapDesc pDesc, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riid, out ComPtr<T> ppvHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppvHeap = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[54]))(ptr, (HeapDesc*)ppDesc, pProtectedSession, (Guid*)priid, (void**)ppvHeap.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateHeap1<T>(HeapDesc* pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riid, out ComPtr<T> ppvHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvHeap = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[54]))(ptr, pDesc, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priid, (void**)ppvHeap.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateHeap1<T>(ref HeapDesc pDesc, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riid, out ComPtr<T> ppvHeap) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppvHeap = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapDesc*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[54]))(ptr, (HeapDesc*)ppDesc, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priid, (void**)ppvHeap.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1(ResourceDesc* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, pDesc, initialState, pOptimizedClearValue, pProtectedSession, riid, ppvResource);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1(ref ResourceDesc pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, (ResourceDesc*)ppDesc, initialState, pOptimizedClearValue, pProtectedSession, riid, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1(ResourceDesc* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, riid, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1(ref ResourceDesc pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, (ResourceDesc*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, riid, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1(ResourceDesc* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, pDesc, initialState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, riid, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1(ResourceDesc* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, pDesc, initialState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, riid, ppvResource);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1(ref ResourceDesc pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, (ResourceDesc*)ppDesc, initialState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, riid, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1(ref ResourceDesc pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, (ResourceDesc*)ppDesc, initialState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, riid, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1(ResourceDesc* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, riid, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1(ResourceDesc* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, riid, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1(ref ResourceDesc pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, (ResourceDesc*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, riid, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1(ref ResourceDesc pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, (ResourceDesc*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, riid, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1(ResourceDesc* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, pDesc, initialState, pOptimizedClearValue, pProtectedSession, (Guid*)priid, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1(ref ResourceDesc pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, (ResourceDesc*)ppDesc, initialState, pOptimizedClearValue, pProtectedSession, (Guid*)priid, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1(ResourceDesc* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, (Guid*)priid, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1(ref ResourceDesc pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priid = &riid)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, (ResourceDesc*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, (Guid*)priid, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1(ResourceDesc* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, pDesc, initialState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, (Guid*)priid, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1(ResourceDesc* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, pDesc, initialState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priid, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1(ref ResourceDesc pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
				{
					fixed (Guid* priid = &riid)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, (ResourceDesc*)ppDesc, initialState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, (Guid*)priid, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1(ref ResourceDesc pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, (ResourceDesc*)ppDesc, initialState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priid, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1(ResourceDesc* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
				{
					fixed (Guid* priid = &riid)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, (Guid*)priid, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1(ResourceDesc* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priid, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1(ref ResourceDesc pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
					{
						fixed (Guid* priid = &riid)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, (ResourceDesc*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, (Guid*)priid, ppvResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1(ref ResourceDesc pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priid = &riid)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, (ResourceDesc*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priid, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1<T>(ResourceDesc* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvResource = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, pDesc, initialState, pOptimizedClearValue, pProtectedSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1<T>(ref ResourceDesc pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, (ResourceDesc*)ppDesc, initialState, pOptimizedClearValue, pProtectedSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1<T>(ResourceDesc* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1<T>(ref ResourceDesc pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, (ResourceDesc*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1<T>(ResourceDesc* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvResource = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, pDesc, initialState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1<T>(ref ResourceDesc pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, (ResourceDesc*)ppDesc, initialState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1<T>(ResourceDesc* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1<T>(ref ResourceDesc pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, (ResourceDesc*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1<T>(ResourceDesc* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riid, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, pDesc, initialState, pOptimizedClearValue, pProtectedSession, (Guid*)priid, (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1<T>(ref ResourceDesc pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riid, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, (ResourceDesc*)ppDesc, initialState, pOptimizedClearValue, pProtectedSession, (Guid*)priid, (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1<T>(ResourceDesc* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riid, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (Guid* priid = &riid)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, (Guid*)priid, (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1<T>(ref ResourceDesc pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riid, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priid = &riid)
					{
						ppvResource = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, (ResourceDesc*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, (Guid*)priid, (void**)ppvResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1<T>(ResourceDesc* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riid, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, pDesc, initialState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priid, (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1<T>(ref ResourceDesc pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riid, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, (ResourceDesc*)ppDesc, initialState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priid, (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1<T>(ResourceDesc* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riid, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (Guid* priid = &riid)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priid, (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateReservedResource1<T>(ref ResourceDesc pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riid, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priid = &riid)
					{
						ppvResource = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[55]))(ptr, (ResourceDesc*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priid, (void**)ppvResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe ResourceAllocationInfo GetResourceAllocationInfo1(uint visibleMask, uint numResourceDescs, ResourceDesc* pResourceDescs, ResourceAllocationInfo1* pResourceAllocationInfo1) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ResourceAllocationInfo ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, uint, ResourceDesc*, ResourceAllocationInfo1*, ResourceAllocationInfo>)(LpVtbl[56]))(ptr, visibleMask, numResourceDescs, pResourceDescs, pResourceAllocationInfo1);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe ResourceAllocationInfo GetResourceAllocationInfo1(uint visibleMask, uint numResourceDescs, ref ResourceDesc pResourceDescs, ResourceAllocationInfo1* pResourceAllocationInfo1) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppResourceDescs = &pResourceDescs)
			{
				ResourceAllocationInfo ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, uint, ResourceDesc*, ResourceAllocationInfo1*, ResourceAllocationInfo>)(LpVtbl[56]))(ptr, visibleMask, numResourceDescs, (ResourceDesc*)ppResourceDescs, pResourceAllocationInfo1);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe ResourceAllocationInfo GetResourceAllocationInfo1(uint visibleMask, uint numResourceDescs, ResourceDesc* pResourceDescs, ref ResourceAllocationInfo1 pResourceAllocationInfo1) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceAllocationInfo1* ppResourceAllocationInfo1 = &pResourceAllocationInfo1)
			{
				ResourceAllocationInfo ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, uint, ResourceDesc*, ResourceAllocationInfo1*, ResourceAllocationInfo>)(LpVtbl[56]))(ptr, visibleMask, numResourceDescs, pResourceDescs, (ResourceAllocationInfo1*)ppResourceAllocationInfo1);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe ResourceAllocationInfo GetResourceAllocationInfo1(uint visibleMask, uint numResourceDescs, ref ResourceDesc pResourceDescs, ref ResourceAllocationInfo1 pResourceAllocationInfo1) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc* ppResourceDescs = &pResourceDescs)
			{
				fixed (ResourceAllocationInfo1* ppResourceAllocationInfo1 = &pResourceAllocationInfo1)
				{
					ResourceAllocationInfo ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, uint, ResourceDesc*, ResourceAllocationInfo1*, ResourceAllocationInfo>)(LpVtbl[56]))(ptr, visibleMask, numResourceDescs, (ResourceDesc*)ppResourceDescs, (ResourceAllocationInfo1*)ppResourceAllocationInfo1);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateLifetimeTracker(ID3D12LifetimeOwner* pOwner, Guid* riid, void** ppvTracker) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12LifetimeOwner*, Guid*, void**, HResult>)(LpVtbl[57]))(ptr, pOwner, riid, ppvTracker);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateLifetimeTracker(ref ID3D12LifetimeOwner pOwner, Guid* riid, void** ppvTracker) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12LifetimeOwner* ppOwner = &pOwner)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12LifetimeOwner*, Guid*, void**, HResult>)(LpVtbl[57]))(ptr, (ID3D12LifetimeOwner*)ppOwner, riid, ppvTracker);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateLifetimeTracker(ComPtr<ID3D12LifetimeOwner> pOwner, Guid* riid, void** ppvTracker) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12LifetimeOwner*, Guid*, void**, HResult>)(LpVtbl[57]))(ptr, (ID3D12LifetimeOwner*)pOwner.Handle, riid, ppvTracker);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateLifetimeTracker(ID3D12LifetimeOwner* pOwner, ref Guid riid, void** ppvTracker) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12LifetimeOwner*, Guid*, void**, HResult>)(LpVtbl[57]))(ptr, pOwner, (Guid*)priid, ppvTracker);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateLifetimeTracker(ref ID3D12LifetimeOwner pOwner, ref Guid riid, void** ppvTracker) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12LifetimeOwner* ppOwner = &pOwner)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12LifetimeOwner*, Guid*, void**, HResult>)(LpVtbl[57]))(ptr, (ID3D12LifetimeOwner*)ppOwner, (Guid*)priid, ppvTracker);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateLifetimeTracker(ComPtr<ID3D12LifetimeOwner> pOwner, ref Guid riid, void** ppvTracker) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12LifetimeOwner*, Guid*, void**, HResult>)(LpVtbl[57]))(ptr, (ID3D12LifetimeOwner*)pOwner.Handle, (Guid*)priid, ppvTracker);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateLifetimeTracker<T>(ID3D12LifetimeOwner* pOwner, out ComPtr<T> ppvTracker) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvTracker = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12LifetimeOwner*, Guid*, void**, HResult>)(LpVtbl[57]))(ptr, pOwner, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvTracker.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateLifetimeTracker<T>(ComPtr<ID3D12LifetimeOwner> pOwner, out ComPtr<T> ppvTracker) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvTracker = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12LifetimeOwner*, Guid*, void**, HResult>)(LpVtbl[57]))(ptr, (ID3D12LifetimeOwner*)pOwner.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvTracker.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateLifetimeTracker<T>(ID3D12LifetimeOwner* pOwner, ref Guid riid, out ComPtr<T> ppvTracker) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvTracker = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12LifetimeOwner*, Guid*, void**, HResult>)(LpVtbl[57]))(ptr, pOwner, (Guid*)priid, (void**)ppvTracker.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateLifetimeTracker<T>(ComPtr<ID3D12LifetimeOwner> pOwner, ref Guid riid, out ComPtr<T> ppvTracker) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvTracker = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12LifetimeOwner*, Guid*, void**, HResult>)(LpVtbl[57]))(ptr, (ID3D12LifetimeOwner*)pOwner.Handle, (Guid*)priid, (void**)ppvTracker.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void RemoveDevice() 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12Device9*, void>)(LpVtbl[58]))(ptr);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult EnumerateMetaCommands(uint* pNumMetaCommands, MetaCommandDesc* pDescs) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint*, MetaCommandDesc*, HResult>)(LpVtbl[59]))(ptr, pNumMetaCommands, pDescs);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult EnumerateMetaCommands(ref uint pNumMetaCommands, MetaCommandDesc* pDescs) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumMetaCommands = &pNumMetaCommands)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint*, MetaCommandDesc*, HResult>)(LpVtbl[59]))(ptr, (uint*)ppNumMetaCommands, pDescs);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult EnumerateMetaCommands(uint* pNumMetaCommands, ref MetaCommandDesc pDescs) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (MetaCommandDesc* ppDescs = &pDescs)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint*, MetaCommandDesc*, HResult>)(LpVtbl[59]))(ptr, pNumMetaCommands, (MetaCommandDesc*)ppDescs);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult EnumerateMetaCommands(ref uint pNumMetaCommands, ref MetaCommandDesc pDescs) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumMetaCommands = &pNumMetaCommands)
			{
				fixed (MetaCommandDesc* ppDescs = &pDescs)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint*, MetaCommandDesc*, HResult>)(LpVtbl[59]))(ptr, (uint*)ppNumMetaCommands, (MetaCommandDesc*)ppDescs);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult EnumerateMetaCommandParameters(Guid* commandId, MetaCommandParameterStage stage, uint* pTotalStructureSizeInBytes, uint* pParameterCount, MetaCommandParameterDesc* pParameterDescs) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, MetaCommandParameterStage, uint*, uint*, MetaCommandParameterDesc*, HResult>)(LpVtbl[60]))(ptr, commandId, stage, pTotalStructureSizeInBytes, pParameterCount, pParameterDescs);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult EnumerateMetaCommandParameters(ref Guid commandId, MetaCommandParameterStage stage, uint* pTotalStructureSizeInBytes, uint* pParameterCount, MetaCommandParameterDesc* pParameterDescs) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pcommandId = &commandId)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, MetaCommandParameterStage, uint*, uint*, MetaCommandParameterDesc*, HResult>)(LpVtbl[60]))(ptr, (Guid*)pcommandId, stage, pTotalStructureSizeInBytes, pParameterCount, pParameterDescs);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult EnumerateMetaCommandParameters(Guid* commandId, MetaCommandParameterStage stage, ref uint pTotalStructureSizeInBytes, uint* pParameterCount, MetaCommandParameterDesc* pParameterDescs) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppTotalStructureSizeInBytes = &pTotalStructureSizeInBytes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, MetaCommandParameterStage, uint*, uint*, MetaCommandParameterDesc*, HResult>)(LpVtbl[60]))(ptr, commandId, stage, (uint*)ppTotalStructureSizeInBytes, pParameterCount, pParameterDescs);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult EnumerateMetaCommandParameters(ref Guid commandId, MetaCommandParameterStage stage, ref uint pTotalStructureSizeInBytes, uint* pParameterCount, MetaCommandParameterDesc* pParameterDescs) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pcommandId = &commandId)
			{
				fixed (uint* ppTotalStructureSizeInBytes = &pTotalStructureSizeInBytes)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, MetaCommandParameterStage, uint*, uint*, MetaCommandParameterDesc*, HResult>)(LpVtbl[60]))(ptr, (Guid*)pcommandId, stage, (uint*)ppTotalStructureSizeInBytes, pParameterCount, pParameterDescs);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult EnumerateMetaCommandParameters(Guid* commandId, MetaCommandParameterStage stage, uint* pTotalStructureSizeInBytes, ref uint pParameterCount, MetaCommandParameterDesc* pParameterDescs) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppParameterCount = &pParameterCount)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, MetaCommandParameterStage, uint*, uint*, MetaCommandParameterDesc*, HResult>)(LpVtbl[60]))(ptr, commandId, stage, pTotalStructureSizeInBytes, (uint*)ppParameterCount, pParameterDescs);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult EnumerateMetaCommandParameters(ref Guid commandId, MetaCommandParameterStage stage, uint* pTotalStructureSizeInBytes, ref uint pParameterCount, MetaCommandParameterDesc* pParameterDescs) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pcommandId = &commandId)
			{
				fixed (uint* ppParameterCount = &pParameterCount)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, MetaCommandParameterStage, uint*, uint*, MetaCommandParameterDesc*, HResult>)(LpVtbl[60]))(ptr, (Guid*)pcommandId, stage, pTotalStructureSizeInBytes, (uint*)ppParameterCount, pParameterDescs);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult EnumerateMetaCommandParameters(Guid* commandId, MetaCommandParameterStage stage, ref uint pTotalStructureSizeInBytes, ref uint pParameterCount, MetaCommandParameterDesc* pParameterDescs) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppTotalStructureSizeInBytes = &pTotalStructureSizeInBytes)
			{
				fixed (uint* ppParameterCount = &pParameterCount)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, MetaCommandParameterStage, uint*, uint*, MetaCommandParameterDesc*, HResult>)(LpVtbl[60]))(ptr, commandId, stage, (uint*)ppTotalStructureSizeInBytes, (uint*)ppParameterCount, pParameterDescs);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult EnumerateMetaCommandParameters(ref Guid commandId, MetaCommandParameterStage stage, ref uint pTotalStructureSizeInBytes, ref uint pParameterCount, MetaCommandParameterDesc* pParameterDescs) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pcommandId = &commandId)
			{
				fixed (uint* ppTotalStructureSizeInBytes = &pTotalStructureSizeInBytes)
				{
					fixed (uint* ppParameterCount = &pParameterCount)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, MetaCommandParameterStage, uint*, uint*, MetaCommandParameterDesc*, HResult>)(LpVtbl[60]))(ptr, (Guid*)pcommandId, stage, (uint*)ppTotalStructureSizeInBytes, (uint*)ppParameterCount, pParameterDescs);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult EnumerateMetaCommandParameters(Guid* commandId, MetaCommandParameterStage stage, uint* pTotalStructureSizeInBytes, uint* pParameterCount, ref MetaCommandParameterDesc pParameterDescs) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (MetaCommandParameterDesc* ppParameterDescs = &pParameterDescs)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, MetaCommandParameterStage, uint*, uint*, MetaCommandParameterDesc*, HResult>)(LpVtbl[60]))(ptr, commandId, stage, pTotalStructureSizeInBytes, pParameterCount, (MetaCommandParameterDesc*)ppParameterDescs);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult EnumerateMetaCommandParameters(ref Guid commandId, MetaCommandParameterStage stage, uint* pTotalStructureSizeInBytes, uint* pParameterCount, ref MetaCommandParameterDesc pParameterDescs) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pcommandId = &commandId)
			{
				fixed (MetaCommandParameterDesc* ppParameterDescs = &pParameterDescs)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, MetaCommandParameterStage, uint*, uint*, MetaCommandParameterDesc*, HResult>)(LpVtbl[60]))(ptr, (Guid*)pcommandId, stage, pTotalStructureSizeInBytes, pParameterCount, (MetaCommandParameterDesc*)ppParameterDescs);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult EnumerateMetaCommandParameters(Guid* commandId, MetaCommandParameterStage stage, ref uint pTotalStructureSizeInBytes, uint* pParameterCount, ref MetaCommandParameterDesc pParameterDescs) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppTotalStructureSizeInBytes = &pTotalStructureSizeInBytes)
			{
				fixed (MetaCommandParameterDesc* ppParameterDescs = &pParameterDescs)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, MetaCommandParameterStage, uint*, uint*, MetaCommandParameterDesc*, HResult>)(LpVtbl[60]))(ptr, commandId, stage, (uint*)ppTotalStructureSizeInBytes, pParameterCount, (MetaCommandParameterDesc*)ppParameterDescs);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult EnumerateMetaCommandParameters(ref Guid commandId, MetaCommandParameterStage stage, ref uint pTotalStructureSizeInBytes, uint* pParameterCount, ref MetaCommandParameterDesc pParameterDescs) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pcommandId = &commandId)
			{
				fixed (uint* ppTotalStructureSizeInBytes = &pTotalStructureSizeInBytes)
				{
					fixed (MetaCommandParameterDesc* ppParameterDescs = &pParameterDescs)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, MetaCommandParameterStage, uint*, uint*, MetaCommandParameterDesc*, HResult>)(LpVtbl[60]))(ptr, (Guid*)pcommandId, stage, (uint*)ppTotalStructureSizeInBytes, pParameterCount, (MetaCommandParameterDesc*)ppParameterDescs);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult EnumerateMetaCommandParameters(Guid* commandId, MetaCommandParameterStage stage, uint* pTotalStructureSizeInBytes, ref uint pParameterCount, ref MetaCommandParameterDesc pParameterDescs) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppParameterCount = &pParameterCount)
			{
				fixed (MetaCommandParameterDesc* ppParameterDescs = &pParameterDescs)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, MetaCommandParameterStage, uint*, uint*, MetaCommandParameterDesc*, HResult>)(LpVtbl[60]))(ptr, commandId, stage, pTotalStructureSizeInBytes, (uint*)ppParameterCount, (MetaCommandParameterDesc*)ppParameterDescs);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult EnumerateMetaCommandParameters(ref Guid commandId, MetaCommandParameterStage stage, uint* pTotalStructureSizeInBytes, ref uint pParameterCount, ref MetaCommandParameterDesc pParameterDescs) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pcommandId = &commandId)
			{
				fixed (uint* ppParameterCount = &pParameterCount)
				{
					fixed (MetaCommandParameterDesc* ppParameterDescs = &pParameterDescs)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, MetaCommandParameterStage, uint*, uint*, MetaCommandParameterDesc*, HResult>)(LpVtbl[60]))(ptr, (Guid*)pcommandId, stage, pTotalStructureSizeInBytes, (uint*)ppParameterCount, (MetaCommandParameterDesc*)ppParameterDescs);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult EnumerateMetaCommandParameters(Guid* commandId, MetaCommandParameterStage stage, ref uint pTotalStructureSizeInBytes, ref uint pParameterCount, ref MetaCommandParameterDesc pParameterDescs) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppTotalStructureSizeInBytes = &pTotalStructureSizeInBytes)
			{
				fixed (uint* ppParameterCount = &pParameterCount)
				{
					fixed (MetaCommandParameterDesc* ppParameterDescs = &pParameterDescs)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, MetaCommandParameterStage, uint*, uint*, MetaCommandParameterDesc*, HResult>)(LpVtbl[60]))(ptr, commandId, stage, (uint*)ppTotalStructureSizeInBytes, (uint*)ppParameterCount, (MetaCommandParameterDesc*)ppParameterDescs);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult EnumerateMetaCommandParameters(ref Guid commandId, MetaCommandParameterStage stage, ref uint pTotalStructureSizeInBytes, ref uint pParameterCount, ref MetaCommandParameterDesc pParameterDescs) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pcommandId = &commandId)
			{
				fixed (uint* ppTotalStructureSizeInBytes = &pTotalStructureSizeInBytes)
				{
					fixed (uint* ppParameterCount = &pParameterCount)
					{
						fixed (MetaCommandParameterDesc* ppParameterDescs = &pParameterDescs)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, MetaCommandParameterStage, uint*, uint*, MetaCommandParameterDesc*, HResult>)(LpVtbl[60]))(ptr, (Guid*)pcommandId, stage, (uint*)ppTotalStructureSizeInBytes, (uint*)ppParameterCount, (MetaCommandParameterDesc*)ppParameterDescs);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateMetaCommand(Guid* commandId, uint nodeMask, void* pCreationParametersData, nuint creationParametersDataSizeInBytes, Guid* riid, void** ppMetaCommand) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, uint, void*, nuint, Guid*, void**, HResult>)(LpVtbl[61]))(ptr, commandId, nodeMask, pCreationParametersData, creationParametersDataSizeInBytes, riid, ppMetaCommand);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateMetaCommand(ref Guid commandId, uint nodeMask, void* pCreationParametersData, nuint creationParametersDataSizeInBytes, Guid* riid, void** ppMetaCommand) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pcommandId = &commandId)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, uint, void*, nuint, Guid*, void**, HResult>)(LpVtbl[61]))(ptr, (Guid*)pcommandId, nodeMask, pCreationParametersData, creationParametersDataSizeInBytes, riid, ppMetaCommand);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateMetaCommand(Guid* commandId, uint nodeMask, void* pCreationParametersData, nuint creationParametersDataSizeInBytes, ref Guid riid, void** ppMetaCommand) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, uint, void*, nuint, Guid*, void**, HResult>)(LpVtbl[61]))(ptr, commandId, nodeMask, pCreationParametersData, creationParametersDataSizeInBytes, (Guid*)priid, ppMetaCommand);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateMetaCommand(ref Guid commandId, uint nodeMask, void* pCreationParametersData, nuint creationParametersDataSizeInBytes, ref Guid riid, void** ppMetaCommand) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pcommandId = &commandId)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, uint, void*, nuint, Guid*, void**, HResult>)(LpVtbl[61]))(ptr, (Guid*)pcommandId, nodeMask, pCreationParametersData, creationParametersDataSizeInBytes, (Guid*)priid, ppMetaCommand);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateMetaCommand<T>(Guid* commandId, uint nodeMask, void* pCreationParametersData, nuint creationParametersDataSizeInBytes, out ComPtr<T> ppMetaCommand) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppMetaCommand = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, uint, void*, nuint, Guid*, void**, HResult>)(LpVtbl[61]))(ptr, commandId, nodeMask, pCreationParametersData, creationParametersDataSizeInBytes, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppMetaCommand.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateMetaCommand<T>(ref Guid commandId, uint nodeMask, void* pCreationParametersData, nuint creationParametersDataSizeInBytes, out ComPtr<T> ppMetaCommand) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pcommandId = &commandId)
			{
				ppMetaCommand = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, uint, void*, nuint, Guid*, void**, HResult>)(LpVtbl[61]))(ptr, (Guid*)pcommandId, nodeMask, pCreationParametersData, creationParametersDataSizeInBytes, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppMetaCommand.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateMetaCommand<T>(Guid* commandId, uint nodeMask, void* pCreationParametersData, nuint creationParametersDataSizeInBytes, ref Guid riid, out ComPtr<T> ppMetaCommand) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppMetaCommand = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, uint, void*, nuint, Guid*, void**, HResult>)(LpVtbl[61]))(ptr, commandId, nodeMask, pCreationParametersData, creationParametersDataSizeInBytes, (Guid*)priid, (void**)ppMetaCommand.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateMetaCommand<T>(ref Guid commandId, uint nodeMask, void* pCreationParametersData, nuint creationParametersDataSizeInBytes, ref Guid riid, out ComPtr<T> ppMetaCommand) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pcommandId = &commandId)
			{
				fixed (Guid* priid = &riid)
				{
					ppMetaCommand = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, Guid*, uint, void*, nuint, Guid*, void**, HResult>)(LpVtbl[61]))(ptr, (Guid*)pcommandId, nodeMask, pCreationParametersData, creationParametersDataSizeInBytes, (Guid*)priid, (void**)ppMetaCommand.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateStateObject(StateObjectDesc* pDesc, Guid* riid, void** ppStateObject) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, StateObjectDesc*, Guid*, void**, HResult>)(LpVtbl[62]))(ptr, pDesc, riid, ppStateObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateStateObject(ref StateObjectDesc pDesc, Guid* riid, void** ppStateObject) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (StateObjectDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, StateObjectDesc*, Guid*, void**, HResult>)(LpVtbl[62]))(ptr, (StateObjectDesc*)ppDesc, riid, ppStateObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateStateObject(StateObjectDesc* pDesc, ref Guid riid, void** ppStateObject) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, StateObjectDesc*, Guid*, void**, HResult>)(LpVtbl[62]))(ptr, pDesc, (Guid*)priid, ppStateObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateStateObject(ref StateObjectDesc pDesc, ref Guid riid, void** ppStateObject) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (StateObjectDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, StateObjectDesc*, Guid*, void**, HResult>)(LpVtbl[62]))(ptr, (StateObjectDesc*)ppDesc, (Guid*)priid, ppStateObject);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateStateObject<T>(StateObjectDesc* pDesc, out ComPtr<T> ppStateObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppStateObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, StateObjectDesc*, Guid*, void**, HResult>)(LpVtbl[62]))(ptr, pDesc, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppStateObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateStateObject<T>(ref StateObjectDesc pDesc, out ComPtr<T> ppStateObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (StateObjectDesc* ppDesc = &pDesc)
			{
				ppStateObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, StateObjectDesc*, Guid*, void**, HResult>)(LpVtbl[62]))(ptr, (StateObjectDesc*)ppDesc, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppStateObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateStateObject<T>(StateObjectDesc* pDesc, ref Guid riid, out ComPtr<T> ppStateObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppStateObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, StateObjectDesc*, Guid*, void**, HResult>)(LpVtbl[62]))(ptr, pDesc, (Guid*)priid, (void**)ppStateObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateStateObject<T>(ref StateObjectDesc pDesc, ref Guid riid, out ComPtr<T> ppStateObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (StateObjectDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppStateObject = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, StateObjectDesc*, Guid*, void**, HResult>)(LpVtbl[62]))(ptr, (StateObjectDesc*)ppDesc, (Guid*)priid, (void**)ppStateObject.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetRaytracingAccelerationStructurePrebuildInfo(BuildRaytracingAccelerationStructureInputs* pDesc, RaytracingAccelerationStructurePrebuildInfo* pInfo) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12Device9*, BuildRaytracingAccelerationStructureInputs*, RaytracingAccelerationStructurePrebuildInfo*, void>)(LpVtbl[63]))(ptr, pDesc, pInfo);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetRaytracingAccelerationStructurePrebuildInfo(ref BuildRaytracingAccelerationStructureInputs pDesc, RaytracingAccelerationStructurePrebuildInfo* pInfo) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (BuildRaytracingAccelerationStructureInputs* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, BuildRaytracingAccelerationStructureInputs*, RaytracingAccelerationStructurePrebuildInfo*, void>)(LpVtbl[63]))(ptr, (BuildRaytracingAccelerationStructureInputs*)ppDesc, pInfo);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetRaytracingAccelerationStructurePrebuildInfo(BuildRaytracingAccelerationStructureInputs* pDesc, ref RaytracingAccelerationStructurePrebuildInfo pInfo) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (RaytracingAccelerationStructurePrebuildInfo* ppInfo = &pInfo)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, BuildRaytracingAccelerationStructureInputs*, RaytracingAccelerationStructurePrebuildInfo*, void>)(LpVtbl[63]))(ptr, pDesc, (RaytracingAccelerationStructurePrebuildInfo*)ppInfo);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetRaytracingAccelerationStructurePrebuildInfo(ref BuildRaytracingAccelerationStructureInputs pDesc, ref RaytracingAccelerationStructurePrebuildInfo pInfo) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (BuildRaytracingAccelerationStructureInputs* ppDesc = &pDesc)
			{
				fixed (RaytracingAccelerationStructurePrebuildInfo* ppInfo = &pInfo)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, BuildRaytracingAccelerationStructureInputs*, RaytracingAccelerationStructurePrebuildInfo*, void>)(LpVtbl[63]))(ptr, (BuildRaytracingAccelerationStructureInputs*)ppDesc, (RaytracingAccelerationStructurePrebuildInfo*)ppInfo);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe DriverMatchingIdentifierStatus CheckDriverMatchingIdentifier(SerializedDataType serializedDataType, SerializedDataDriverMatchingIdentifier* pIdentifierToCheck) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			DriverMatchingIdentifierStatus ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, SerializedDataType, SerializedDataDriverMatchingIdentifier*, DriverMatchingIdentifierStatus>)(LpVtbl[64]))(ptr, serializedDataType, pIdentifierToCheck);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe DriverMatchingIdentifierStatus CheckDriverMatchingIdentifier(SerializedDataType serializedDataType, ref SerializedDataDriverMatchingIdentifier pIdentifierToCheck) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (SerializedDataDriverMatchingIdentifier* ppIdentifierToCheck = &pIdentifierToCheck)
			{
				DriverMatchingIdentifierStatus ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, SerializedDataType, SerializedDataDriverMatchingIdentifier*, DriverMatchingIdentifierStatus>)(LpVtbl[64]))(ptr, serializedDataType, (SerializedDataDriverMatchingIdentifier*)ppIdentifierToCheck);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetBackgroundProcessingMode(BackgroundProcessingMode mode, MeasurementsAction measurementsAction, nint hEventToSignalUponCompletion, Bool32* pbFurtherMeasurementsDesired) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, BackgroundProcessingMode, MeasurementsAction, nint, Bool32*, HResult>)(LpVtbl[65]))(ptr, mode, measurementsAction, hEventToSignalUponCompletion, pbFurtherMeasurementsDesired);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetBackgroundProcessingMode(BackgroundProcessingMode mode, MeasurementsAction measurementsAction, nint hEventToSignalUponCompletion, ref Bool32 pbFurtherMeasurementsDesired) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppbFurtherMeasurementsDesired = &pbFurtherMeasurementsDesired)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, BackgroundProcessingMode, MeasurementsAction, nint, Bool32*, HResult>)(LpVtbl[65]))(ptr, mode, measurementsAction, hEventToSignalUponCompletion, (Bool32*)ppbFurtherMeasurementsDesired);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult AddToStateObject(StateObjectDesc* pAddition, ID3D12StateObject* pStateObjectToGrowFrom, Guid* riid, void** ppNewStateObject) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, StateObjectDesc*, ID3D12StateObject*, Guid*, void**, HResult>)(LpVtbl[66]))(ptr, pAddition, pStateObjectToGrowFrom, riid, ppNewStateObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult AddToStateObject(ref StateObjectDesc pAddition, ID3D12StateObject* pStateObjectToGrowFrom, Guid* riid, void** ppNewStateObject) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (StateObjectDesc* ppAddition = &pAddition)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, StateObjectDesc*, ID3D12StateObject*, Guid*, void**, HResult>)(LpVtbl[66]))(ptr, (StateObjectDesc*)ppAddition, pStateObjectToGrowFrom, riid, ppNewStateObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult AddToStateObject(StateObjectDesc* pAddition, ref ID3D12StateObject pStateObjectToGrowFrom, Guid* riid, void** ppNewStateObject) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12StateObject* ppStateObjectToGrowFrom = &pStateObjectToGrowFrom)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, StateObjectDesc*, ID3D12StateObject*, Guid*, void**, HResult>)(LpVtbl[66]))(ptr, pAddition, (ID3D12StateObject*)ppStateObjectToGrowFrom, riid, ppNewStateObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult AddToStateObject(ref StateObjectDesc pAddition, ref ID3D12StateObject pStateObjectToGrowFrom, Guid* riid, void** ppNewStateObject) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (StateObjectDesc* ppAddition = &pAddition)
			{
				fixed (ID3D12StateObject* ppStateObjectToGrowFrom = &pStateObjectToGrowFrom)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, StateObjectDesc*, ID3D12StateObject*, Guid*, void**, HResult>)(LpVtbl[66]))(ptr, (StateObjectDesc*)ppAddition, (ID3D12StateObject*)ppStateObjectToGrowFrom, riid, ppNewStateObject);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult AddToStateObject(StateObjectDesc* pAddition, ID3D12StateObject* pStateObjectToGrowFrom, ref Guid riid, void** ppNewStateObject) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, StateObjectDesc*, ID3D12StateObject*, Guid*, void**, HResult>)(LpVtbl[66]))(ptr, pAddition, pStateObjectToGrowFrom, (Guid*)priid, ppNewStateObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult AddToStateObject(ref StateObjectDesc pAddition, ID3D12StateObject* pStateObjectToGrowFrom, ref Guid riid, void** ppNewStateObject) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (StateObjectDesc* ppAddition = &pAddition)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, StateObjectDesc*, ID3D12StateObject*, Guid*, void**, HResult>)(LpVtbl[66]))(ptr, (StateObjectDesc*)ppAddition, pStateObjectToGrowFrom, (Guid*)priid, ppNewStateObject);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult AddToStateObject(StateObjectDesc* pAddition, ref ID3D12StateObject pStateObjectToGrowFrom, ref Guid riid, void** ppNewStateObject) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12StateObject* ppStateObjectToGrowFrom = &pStateObjectToGrowFrom)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, StateObjectDesc*, ID3D12StateObject*, Guid*, void**, HResult>)(LpVtbl[66]))(ptr, pAddition, (ID3D12StateObject*)ppStateObjectToGrowFrom, (Guid*)priid, ppNewStateObject);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult AddToStateObject(ref StateObjectDesc pAddition, ref ID3D12StateObject pStateObjectToGrowFrom, ref Guid riid, void** ppNewStateObject) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (StateObjectDesc* ppAddition = &pAddition)
			{
				fixed (ID3D12StateObject* ppStateObjectToGrowFrom = &pStateObjectToGrowFrom)
				{
					fixed (Guid* priid = &riid)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, StateObjectDesc*, ID3D12StateObject*, Guid*, void**, HResult>)(LpVtbl[66]))(ptr, (StateObjectDesc*)ppAddition, (ID3D12StateObject*)ppStateObjectToGrowFrom, (Guid*)priid, ppNewStateObject);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult AddToStateObject<T>(StateObjectDesc* pAddition, ID3D12StateObject* pStateObjectToGrowFrom, out ComPtr<T> ppNewStateObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppNewStateObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, StateObjectDesc*, ID3D12StateObject*, Guid*, void**, HResult>)(LpVtbl[66]))(ptr, pAddition, pStateObjectToGrowFrom, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppNewStateObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult AddToStateObject<T>(ref StateObjectDesc pAddition, ID3D12StateObject* pStateObjectToGrowFrom, out ComPtr<T> ppNewStateObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (StateObjectDesc* ppAddition = &pAddition)
			{
				ppNewStateObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, StateObjectDesc*, ID3D12StateObject*, Guid*, void**, HResult>)(LpVtbl[66]))(ptr, (StateObjectDesc*)ppAddition, pStateObjectToGrowFrom, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppNewStateObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult AddToStateObject<T>(StateObjectDesc* pAddition, ref ID3D12StateObject pStateObjectToGrowFrom, out ComPtr<T> ppNewStateObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12StateObject* ppStateObjectToGrowFrom = &pStateObjectToGrowFrom)
			{
				ppNewStateObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, StateObjectDesc*, ID3D12StateObject*, Guid*, void**, HResult>)(LpVtbl[66]))(ptr, pAddition, (ID3D12StateObject*)ppStateObjectToGrowFrom, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppNewStateObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult AddToStateObject<T>(ref StateObjectDesc pAddition, ref ID3D12StateObject pStateObjectToGrowFrom, out ComPtr<T> ppNewStateObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (StateObjectDesc* ppAddition = &pAddition)
			{
				fixed (ID3D12StateObject* ppStateObjectToGrowFrom = &pStateObjectToGrowFrom)
				{
					ppNewStateObject = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, StateObjectDesc*, ID3D12StateObject*, Guid*, void**, HResult>)(LpVtbl[66]))(ptr, (StateObjectDesc*)ppAddition, (ID3D12StateObject*)ppStateObjectToGrowFrom, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppNewStateObject.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult AddToStateObject<T>(StateObjectDesc* pAddition, ID3D12StateObject* pStateObjectToGrowFrom, ref Guid riid, out ComPtr<T> ppNewStateObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppNewStateObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, StateObjectDesc*, ID3D12StateObject*, Guid*, void**, HResult>)(LpVtbl[66]))(ptr, pAddition, pStateObjectToGrowFrom, (Guid*)priid, (void**)ppNewStateObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult AddToStateObject<T>(ref StateObjectDesc pAddition, ID3D12StateObject* pStateObjectToGrowFrom, ref Guid riid, out ComPtr<T> ppNewStateObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (StateObjectDesc* ppAddition = &pAddition)
			{
				fixed (Guid* priid = &riid)
				{
					ppNewStateObject = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, StateObjectDesc*, ID3D12StateObject*, Guid*, void**, HResult>)(LpVtbl[66]))(ptr, (StateObjectDesc*)ppAddition, pStateObjectToGrowFrom, (Guid*)priid, (void**)ppNewStateObject.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult AddToStateObject<T>(StateObjectDesc* pAddition, ref ID3D12StateObject pStateObjectToGrowFrom, ref Guid riid, out ComPtr<T> ppNewStateObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12StateObject* ppStateObjectToGrowFrom = &pStateObjectToGrowFrom)
			{
				fixed (Guid* priid = &riid)
				{
					ppNewStateObject = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, StateObjectDesc*, ID3D12StateObject*, Guid*, void**, HResult>)(LpVtbl[66]))(ptr, pAddition, (ID3D12StateObject*)ppStateObjectToGrowFrom, (Guid*)priid, (void**)ppNewStateObject.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult AddToStateObject<T>(ref StateObjectDesc pAddition, ref ID3D12StateObject pStateObjectToGrowFrom, ref Guid riid, out ComPtr<T> ppNewStateObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (StateObjectDesc* ppAddition = &pAddition)
			{
				fixed (ID3D12StateObject* ppStateObjectToGrowFrom = &pStateObjectToGrowFrom)
				{
					fixed (Guid* priid = &riid)
					{
						ppNewStateObject = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, StateObjectDesc*, ID3D12StateObject*, Guid*, void**, HResult>)(LpVtbl[66]))(ptr, (StateObjectDesc*)ppAddition, (ID3D12StateObject*)ppStateObjectToGrowFrom, (Guid*)priid, (void**)ppNewStateObject.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateProtectedResourceSession1(ProtectedResourceSessionDesc1* pDesc, Guid* riid, void** ppSession) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ProtectedResourceSessionDesc1*, Guid*, void**, HResult>)(LpVtbl[67]))(ptr, pDesc, riid, ppSession);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateProtectedResourceSession1(ref ProtectedResourceSessionDesc1 pDesc, Guid* riid, void** ppSession) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ProtectedResourceSessionDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ProtectedResourceSessionDesc1*, Guid*, void**, HResult>)(LpVtbl[67]))(ptr, (ProtectedResourceSessionDesc1*)ppDesc, riid, ppSession);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateProtectedResourceSession1(ProtectedResourceSessionDesc1* pDesc, ref Guid riid, void** ppSession) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ProtectedResourceSessionDesc1*, Guid*, void**, HResult>)(LpVtbl[67]))(ptr, pDesc, (Guid*)priid, ppSession);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateProtectedResourceSession1(ref ProtectedResourceSessionDesc1 pDesc, ref Guid riid, void** ppSession) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ProtectedResourceSessionDesc1* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ProtectedResourceSessionDesc1*, Guid*, void**, HResult>)(LpVtbl[67]))(ptr, (ProtectedResourceSessionDesc1*)ppDesc, (Guid*)priid, ppSession);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateProtectedResourceSession1<T>(ProtectedResourceSessionDesc1* pDesc, out ComPtr<T> ppSession) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSession = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ProtectedResourceSessionDesc1*, Guid*, void**, HResult>)(LpVtbl[67]))(ptr, pDesc, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppSession.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateProtectedResourceSession1<T>(ref ProtectedResourceSessionDesc1 pDesc, out ComPtr<T> ppSession) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ProtectedResourceSessionDesc1* ppDesc = &pDesc)
			{
				ppSession = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ProtectedResourceSessionDesc1*, Guid*, void**, HResult>)(LpVtbl[67]))(ptr, (ProtectedResourceSessionDesc1*)ppDesc, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppSession.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateProtectedResourceSession1<T>(ProtectedResourceSessionDesc1* pDesc, ref Guid riid, out ComPtr<T> ppSession) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppSession = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ProtectedResourceSessionDesc1*, Guid*, void**, HResult>)(LpVtbl[67]))(ptr, pDesc, (Guid*)priid, (void**)ppSession.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateProtectedResourceSession1<T>(ref ProtectedResourceSessionDesc1 pDesc, ref Guid riid, out ComPtr<T> ppSession) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ProtectedResourceSessionDesc1* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppSession = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ProtectedResourceSessionDesc1*, Guid*, void**, HResult>)(LpVtbl[67]))(ptr, (ProtectedResourceSessionDesc1*)ppDesc, (Guid*)priid, (void**)ppSession.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe ResourceAllocationInfo GetResourceAllocationInfo2(uint visibleMask, uint numResourceDescs, ResourceDesc1* pResourceDescs, ResourceAllocationInfo1* pResourceAllocationInfo1) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ResourceAllocationInfo ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, uint, ResourceDesc1*, ResourceAllocationInfo1*, ResourceAllocationInfo>)(LpVtbl[68]))(ptr, visibleMask, numResourceDescs, pResourceDescs, pResourceAllocationInfo1);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe ResourceAllocationInfo GetResourceAllocationInfo2(uint visibleMask, uint numResourceDescs, ref ResourceDesc1 pResourceDescs, ResourceAllocationInfo1* pResourceAllocationInfo1) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppResourceDescs = &pResourceDescs)
			{
				ResourceAllocationInfo ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, uint, ResourceDesc1*, ResourceAllocationInfo1*, ResourceAllocationInfo>)(LpVtbl[68]))(ptr, visibleMask, numResourceDescs, (ResourceDesc1*)ppResourceDescs, pResourceAllocationInfo1);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe ResourceAllocationInfo GetResourceAllocationInfo2(uint visibleMask, uint numResourceDescs, ResourceDesc1* pResourceDescs, ref ResourceAllocationInfo1 pResourceAllocationInfo1) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceAllocationInfo1* ppResourceAllocationInfo1 = &pResourceAllocationInfo1)
			{
				ResourceAllocationInfo ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, uint, ResourceDesc1*, ResourceAllocationInfo1*, ResourceAllocationInfo>)(LpVtbl[68]))(ptr, visibleMask, numResourceDescs, pResourceDescs, (ResourceAllocationInfo1*)ppResourceAllocationInfo1);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe ResourceAllocationInfo GetResourceAllocationInfo2(uint visibleMask, uint numResourceDescs, ref ResourceDesc1 pResourceDescs, ref ResourceAllocationInfo1 pResourceAllocationInfo1) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppResourceDescs = &pResourceDescs)
			{
				fixed (ResourceAllocationInfo1* ppResourceAllocationInfo1 = &pResourceAllocationInfo1)
				{
					ResourceAllocationInfo ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, uint, uint, ResourceDesc1*, ResourceAllocationInfo1*, ResourceAllocationInfo>)(LpVtbl[68]))(ptr, visibleMask, numResourceDescs, (ResourceDesc1*)ppResourceDescs, (ResourceAllocationInfo1*)ppResourceAllocationInfo1);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, riidResource, ppvResource);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, riidResource, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, riidResource, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, riidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, riidResource, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, riidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, riidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc1* ppDesc = &pDesc)
				{
					fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, riidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, riidResource, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, riidResource, ppvResource);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, riidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, riidResource, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, riidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, riidResource, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc1* ppDesc = &pDesc)
				{
					fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, riidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, riidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, riidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, riidResource, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, riidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, riidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, riidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, riidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc1* ppDesc = &pDesc)
				{
					fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, riidResource, ppvResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, Guid* riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc1* ppDesc = &pDesc)
				{
					fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, riidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priidResource = &riidResource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, (Guid*)priidResource, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, (Guid*)priidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, (Guid*)priidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc1* ppDesc = &pDesc)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, (Guid*)priidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, (Guid*)priidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, (Guid*)priidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, (Guid*)priidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc1* ppDesc = &pDesc)
				{
					fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						fixed (Guid* priidResource = &riidResource)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, (Guid*)priidResource, ppvResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, (Guid*)priidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priidResource = &riidResource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, (Guid*)priidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, (Guid*)priidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc1* ppDesc = &pDesc)
				{
					fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
					{
						fixed (Guid* priidResource = &riidResource)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, (Guid*)priidResource, ppvResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc1* ppDesc = &pDesc)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, (Guid*)priidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
					{
						fixed (Guid* priidResource = &riidResource)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, (Guid*)priidResource, ppvResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
					{
						fixed (Guid* priidResource = &riidResource)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, (Guid*)priidResource, ppvResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ref ID3D12ProtectedResourceSession pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc1* ppDesc = &pDesc)
				{
					fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						fixed (ID3D12ProtectedResourceSession* ppProtectedSession = &pProtectedSession)
						{
							fixed (Guid* priidResource = &riidResource)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)ppProtectedSession, (Guid*)priidResource, ppvResource);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc1* ppDesc = &pDesc)
				{
					fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						fixed (Guid* priidResource = &riidResource)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, ppvResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvResource = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc1* ppDesc = &pDesc)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc1* ppDesc = &pDesc)
				{
					fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						ppvResource = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvResource = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc1* ppDesc = &pDesc)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc1* ppDesc = &pDesc)
				{
					fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						ppvResource = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priidResource = &riidResource)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc1* ppDesc = &pDesc)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						ppvResource = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, pOptimizedClearValue, pProtectedSession, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						ppvResource = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						ppvResource = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc1* ppDesc = &pDesc)
				{
					fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						fixed (Guid* priidResource = &riidResource)
						{
							ppvResource = default;
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, pProtectedSession, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priidResource = &riidResource)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ClearValue* pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc1* ppDesc = &pDesc)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						ppvResource = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, pOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (Guid* priidResource = &riidResource)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ResourceDesc1* pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						ppvResource = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, pDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(HeapProperties* pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priidResource = &riidResource)
					{
						ppvResource = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, pHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommittedResource2<T>(ref HeapProperties pHeapProperties, HeapFlags heapFlags, ref ResourceDesc1 pDesc, ResourceStates initialResourceState, ref ClearValue pOptimizedClearValue, ComPtr<ID3D12ProtectedResourceSession> pProtectedSession, ref Guid riidResource, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HeapProperties* ppHeapProperties = &pHeapProperties)
			{
				fixed (ResourceDesc1* ppDesc = &pDesc)
				{
					fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						fixed (Guid* priidResource = &riidResource)
						{
							ppvResource = default;
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, HeapProperties*, HeapFlags, ResourceDesc1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, HResult>)(LpVtbl[69]))(ptr, (HeapProperties*)ppHeapProperties, heapFlags, (ResourceDesc1*)ppDesc, initialResourceState, (ClearValue*)ppOptimizedClearValue, (ID3D12ProtectedResourceSession*)pProtectedSession.Handle, (Guid*)priidResource, (void**)ppvResource.GetAddressOf());
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1(ID3D12Heap* pHeap, ulong heapOffset, ResourceDesc1* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, pHeap, heapOffset, pDesc, initialState, pOptimizedClearValue, riid, ppvResource);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1(ref ID3D12Heap pHeap, ulong heapOffset, ResourceDesc1* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Heap* ppHeap = &pHeap)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, (ID3D12Heap*)ppHeap, heapOffset, pDesc, initialState, pOptimizedClearValue, riid, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ResourceDesc1* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, pDesc, initialState, pOptimizedClearValue, riid, ppvResource);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1(ID3D12Heap* pHeap, ulong heapOffset, ref ResourceDesc1 pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, pHeap, heapOffset, (ResourceDesc1*)ppDesc, initialState, pOptimizedClearValue, riid, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1(ref ID3D12Heap pHeap, ulong heapOffset, ref ResourceDesc1 pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Heap* ppHeap = &pHeap)
			{
				fixed (ResourceDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, (ID3D12Heap*)ppHeap, heapOffset, (ResourceDesc1*)ppDesc, initialState, pOptimizedClearValue, riid, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ref ResourceDesc1 pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, (ResourceDesc1*)ppDesc, initialState, pOptimizedClearValue, riid, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1(ID3D12Heap* pHeap, ulong heapOffset, ResourceDesc1* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, pHeap, heapOffset, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, riid, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1(ref ID3D12Heap pHeap, ulong heapOffset, ResourceDesc1* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Heap* ppHeap = &pHeap)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, (ID3D12Heap*)ppHeap, heapOffset, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, riid, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ResourceDesc1* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, riid, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1(ID3D12Heap* pHeap, ulong heapOffset, ref ResourceDesc1 pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, pHeap, heapOffset, (ResourceDesc1*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, riid, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1(ref ID3D12Heap pHeap, ulong heapOffset, ref ResourceDesc1 pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Heap* ppHeap = &pHeap)
			{
				fixed (ResourceDesc1* ppDesc = &pDesc)
				{
					fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, (ID3D12Heap*)ppHeap, heapOffset, (ResourceDesc1*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, riid, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ref ResourceDesc1 pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, Guid* riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, (ResourceDesc1*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, riid, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1(ID3D12Heap* pHeap, ulong heapOffset, ResourceDesc1* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, pHeap, heapOffset, pDesc, initialState, pOptimizedClearValue, (Guid*)priid, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1(ref ID3D12Heap pHeap, ulong heapOffset, ResourceDesc1* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Heap* ppHeap = &pHeap)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, (ID3D12Heap*)ppHeap, heapOffset, pDesc, initialState, pOptimizedClearValue, (Guid*)priid, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ResourceDesc1* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, pDesc, initialState, pOptimizedClearValue, (Guid*)priid, ppvResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1(ID3D12Heap* pHeap, ulong heapOffset, ref ResourceDesc1 pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, pHeap, heapOffset, (ResourceDesc1*)ppDesc, initialState, pOptimizedClearValue, (Guid*)priid, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1(ref ID3D12Heap pHeap, ulong heapOffset, ref ResourceDesc1 pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Heap* ppHeap = &pHeap)
			{
				fixed (ResourceDesc1* ppDesc = &pDesc)
				{
					fixed (Guid* priid = &riid)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, (ID3D12Heap*)ppHeap, heapOffset, (ResourceDesc1*)ppDesc, initialState, pOptimizedClearValue, (Guid*)priid, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ref ResourceDesc1 pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, (ResourceDesc1*)ppDesc, initialState, pOptimizedClearValue, (Guid*)priid, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1(ID3D12Heap* pHeap, ulong heapOffset, ResourceDesc1* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, pHeap, heapOffset, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)priid, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1(ref ID3D12Heap pHeap, ulong heapOffset, ResourceDesc1* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Heap* ppHeap = &pHeap)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priid = &riid)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, (ID3D12Heap*)ppHeap, heapOffset, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)priid, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ResourceDesc1* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)priid, ppvResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1(ID3D12Heap* pHeap, ulong heapOffset, ref ResourceDesc1 pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priid = &riid)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, pHeap, heapOffset, (ResourceDesc1*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)priid, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1(ref ID3D12Heap pHeap, ulong heapOffset, ref ResourceDesc1 pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Heap* ppHeap = &pHeap)
			{
				fixed (ResourceDesc1* ppDesc = &pDesc)
				{
					fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
					{
						fixed (Guid* priid = &riid)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, (ID3D12Heap*)ppHeap, heapOffset, (ResourceDesc1*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)priid, ppvResource);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ref ResourceDesc1 pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ref Guid riid, void** ppvResource) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priid = &riid)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, (ResourceDesc1*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)priid, ppvResource);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1<T>(ID3D12Heap* pHeap, ulong heapOffset, ResourceDesc1* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvResource = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, pHeap, heapOffset, pDesc, initialState, pOptimizedClearValue, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1<T>(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ResourceDesc1* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvResource = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, pDesc, initialState, pOptimizedClearValue, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1<T>(ID3D12Heap* pHeap, ulong heapOffset, ref ResourceDesc1 pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, pHeap, heapOffset, (ResourceDesc1*)ppDesc, initialState, pOptimizedClearValue, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1<T>(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ref ResourceDesc1 pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, (ResourceDesc1*)ppDesc, initialState, pOptimizedClearValue, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1<T>(ID3D12Heap* pHeap, ulong heapOffset, ResourceDesc1* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, pHeap, heapOffset, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1<T>(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ResourceDesc1* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1<T>(ID3D12Heap* pHeap, ulong heapOffset, ref ResourceDesc1 pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, pHeap, heapOffset, (ResourceDesc1*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1<T>(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ref ResourceDesc1 pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, (ResourceDesc1*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1<T>(ID3D12Heap* pHeap, ulong heapOffset, ResourceDesc1* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ref Guid riid, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, pHeap, heapOffset, pDesc, initialState, pOptimizedClearValue, (Guid*)priid, (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1<T>(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ResourceDesc1* pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ref Guid riid, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, pDesc, initialState, pOptimizedClearValue, (Guid*)priid, (void**)ppvResource.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1<T>(ID3D12Heap* pHeap, ulong heapOffset, ref ResourceDesc1 pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ref Guid riid, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, pHeap, heapOffset, (ResourceDesc1*)ppDesc, initialState, pOptimizedClearValue, (Guid*)priid, (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1<T>(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ref ResourceDesc1 pDesc, ResourceStates initialState, ClearValue* pOptimizedClearValue, ref Guid riid, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, (ResourceDesc1*)ppDesc, initialState, pOptimizedClearValue, (Guid*)priid, (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1<T>(ID3D12Heap* pHeap, ulong heapOffset, ResourceDesc1* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ref Guid riid, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (Guid* priid = &riid)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, pHeap, heapOffset, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)priid, (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1<T>(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ResourceDesc1* pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ref Guid riid, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
			{
				fixed (Guid* priid = &riid)
				{
					ppvResource = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, pDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)priid, (void**)ppvResource.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1<T>(ID3D12Heap* pHeap, ulong heapOffset, ref ResourceDesc1 pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ref Guid riid, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priid = &riid)
					{
						ppvResource = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, pHeap, heapOffset, (ResourceDesc1*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)priid, (void**)ppvResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreatePlacedResource1<T>(ComPtr<ID3D12Heap> pHeap, ulong heapOffset, ref ResourceDesc1 pDesc, ResourceStates initialState, ref ClearValue pOptimizedClearValue, ref Guid riid, out ComPtr<T> ppvResource) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppDesc = &pDesc)
			{
				fixed (ClearValue* ppOptimizedClearValue = &pOptimizedClearValue)
				{
					fixed (Guid* priid = &riid)
					{
						ppvResource = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Heap*, ulong, ResourceDesc1*, ResourceStates, ClearValue*, Guid*, void**, HResult>)(LpVtbl[70]))(ptr, (ID3D12Heap*)pHeap.Handle, heapOffset, (ResourceDesc1*)ppDesc, initialState, (ClearValue*)ppOptimizedClearValue, (Guid*)priid, (void**)ppvResource.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateSamplerFeedbackUnorderedAccessView(ID3D12Resource* pTargetedResource, ID3D12Resource* pFeedbackResource, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, ID3D12Resource*, CpuDescriptorHandle, void>)(LpVtbl[71]))(ptr, pTargetedResource, pFeedbackResource, destDescriptor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateSamplerFeedbackUnorderedAccessView(ref ID3D12Resource pTargetedResource, ID3D12Resource* pFeedbackResource, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTargetedResource = &pTargetedResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, ID3D12Resource*, CpuDescriptorHandle, void>)(LpVtbl[71]))(ptr, (ID3D12Resource*)ppTargetedResource, pFeedbackResource, destDescriptor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateSamplerFeedbackUnorderedAccessView(ComPtr<ID3D12Resource> pTargetedResource, ID3D12Resource* pFeedbackResource, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, ID3D12Resource*, CpuDescriptorHandle, void>)(LpVtbl[71]))(ptr, (ID3D12Resource*)pTargetedResource.Handle, pFeedbackResource, destDescriptor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateSamplerFeedbackUnorderedAccessView(ID3D12Resource* pTargetedResource, ref ID3D12Resource pFeedbackResource, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppFeedbackResource = &pFeedbackResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, ID3D12Resource*, CpuDescriptorHandle, void>)(LpVtbl[71]))(ptr, pTargetedResource, (ID3D12Resource*)ppFeedbackResource, destDescriptor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateSamplerFeedbackUnorderedAccessView(ID3D12Resource* pTargetedResource, ComPtr<ID3D12Resource> pFeedbackResource, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, ID3D12Resource*, CpuDescriptorHandle, void>)(LpVtbl[71]))(ptr, pTargetedResource, (ID3D12Resource*)pFeedbackResource.Handle, destDescriptor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateSamplerFeedbackUnorderedAccessView(ref ID3D12Resource pTargetedResource, ref ID3D12Resource pFeedbackResource, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D12Resource* ppTargetedResource = &pTargetedResource)
			{
				fixed (ID3D12Resource* ppFeedbackResource = &pFeedbackResource)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, ID3D12Resource*, CpuDescriptorHandle, void>)(LpVtbl[71]))(ptr, (ID3D12Resource*)ppTargetedResource, (ID3D12Resource*)ppFeedbackResource, destDescriptor);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CreateSamplerFeedbackUnorderedAccessView(ComPtr<ID3D12Resource> pTargetedResource, ComPtr<ID3D12Resource> pFeedbackResource, CpuDescriptorHandle destDescriptor) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12Device9*, ID3D12Resource*, ID3D12Resource*, CpuDescriptorHandle, void>)(LpVtbl[71]))(ptr, (ID3D12Resource*)pTargetedResource.Handle, (ID3D12Resource*)pFeedbackResource.Handle, destDescriptor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ResourceDesc1* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, uint* pNumRows, ulong* pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, pNumRows, pRowSizeInBytes, pTotalBytes);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ref ResourceDesc1 pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, uint* pNumRows, ulong* pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppResourceDesc = &pResourceDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, (ResourceDesc1*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, pNumRows, pRowSizeInBytes, pTotalBytes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ResourceDesc1* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, uint* pNumRows, ulong* pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, pNumRows, pRowSizeInBytes, pTotalBytes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ref ResourceDesc1 pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, uint* pNumRows, ulong* pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppResourceDesc = &pResourceDesc)
			{
				fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, (ResourceDesc1*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, pNumRows, pRowSizeInBytes, pTotalBytes);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ResourceDesc1* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, ref uint pNumRows, ulong* pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumRows = &pNumRows)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, (uint*)ppNumRows, pRowSizeInBytes, pTotalBytes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ref ResourceDesc1 pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, ref uint pNumRows, ulong* pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppResourceDesc = &pResourceDesc)
			{
				fixed (uint* ppNumRows = &pNumRows)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, (ResourceDesc1*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, (uint*)ppNumRows, pRowSizeInBytes, pTotalBytes);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ResourceDesc1* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, ref uint pNumRows, ulong* pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
			{
				fixed (uint* ppNumRows = &pNumRows)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, (uint*)ppNumRows, pRowSizeInBytes, pTotalBytes);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ref ResourceDesc1 pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, ref uint pNumRows, ulong* pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppResourceDesc = &pResourceDesc)
			{
				fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
				{
					fixed (uint* ppNumRows = &pNumRows)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, (ResourceDesc1*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, (uint*)ppNumRows, pRowSizeInBytes, pTotalBytes);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ResourceDesc1* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, uint* pNumRows, ref ulong pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, pNumRows, (ulong*)ppRowSizeInBytes, pTotalBytes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ref ResourceDesc1 pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, uint* pNumRows, ref ulong pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppResourceDesc = &pResourceDesc)
			{
				fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, (ResourceDesc1*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, pNumRows, (ulong*)ppRowSizeInBytes, pTotalBytes);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ResourceDesc1* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, uint* pNumRows, ref ulong pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
			{
				fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, pNumRows, (ulong*)ppRowSizeInBytes, pTotalBytes);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ref ResourceDesc1 pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, uint* pNumRows, ref ulong pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppResourceDesc = &pResourceDesc)
			{
				fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
				{
					fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, (ResourceDesc1*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, pNumRows, (ulong*)ppRowSizeInBytes, pTotalBytes);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ResourceDesc1* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, ref uint pNumRows, ref ulong pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumRows = &pNumRows)
			{
				fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, (uint*)ppNumRows, (ulong*)ppRowSizeInBytes, pTotalBytes);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ref ResourceDesc1 pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, ref uint pNumRows, ref ulong pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppResourceDesc = &pResourceDesc)
			{
				fixed (uint* ppNumRows = &pNumRows)
				{
					fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, (ResourceDesc1*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, (uint*)ppNumRows, (ulong*)ppRowSizeInBytes, pTotalBytes);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ResourceDesc1* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, ref uint pNumRows, ref ulong pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
			{
				fixed (uint* ppNumRows = &pNumRows)
				{
					fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, (uint*)ppNumRows, (ulong*)ppRowSizeInBytes, pTotalBytes);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ref ResourceDesc1 pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, ref uint pNumRows, ref ulong pRowSizeInBytes, ulong* pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppResourceDesc = &pResourceDesc)
			{
				fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
				{
					fixed (uint* ppNumRows = &pNumRows)
					{
						fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, (ResourceDesc1*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, (uint*)ppNumRows, (ulong*)ppRowSizeInBytes, pTotalBytes);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ResourceDesc1* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, uint* pNumRows, ulong* pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ulong* ppTotalBytes = &pTotalBytes)
			{
				((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, pNumRows, pRowSizeInBytes, (ulong*)ppTotalBytes);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ref ResourceDesc1 pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, uint* pNumRows, ulong* pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppResourceDesc = &pResourceDesc)
			{
				fixed (ulong* ppTotalBytes = &pTotalBytes)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, (ResourceDesc1*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, pNumRows, pRowSizeInBytes, (ulong*)ppTotalBytes);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ResourceDesc1* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, uint* pNumRows, ulong* pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
			{
				fixed (ulong* ppTotalBytes = &pTotalBytes)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, pNumRows, pRowSizeInBytes, (ulong*)ppTotalBytes);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ref ResourceDesc1 pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, uint* pNumRows, ulong* pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppResourceDesc = &pResourceDesc)
			{
				fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
				{
					fixed (ulong* ppTotalBytes = &pTotalBytes)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, (ResourceDesc1*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, pNumRows, pRowSizeInBytes, (ulong*)ppTotalBytes);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ResourceDesc1* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, ref uint pNumRows, ulong* pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumRows = &pNumRows)
			{
				fixed (ulong* ppTotalBytes = &pTotalBytes)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, (uint*)ppNumRows, pRowSizeInBytes, (ulong*)ppTotalBytes);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ref ResourceDesc1 pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, ref uint pNumRows, ulong* pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppResourceDesc = &pResourceDesc)
			{
				fixed (uint* ppNumRows = &pNumRows)
				{
					fixed (ulong* ppTotalBytes = &pTotalBytes)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, (ResourceDesc1*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, (uint*)ppNumRows, pRowSizeInBytes, (ulong*)ppTotalBytes);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ResourceDesc1* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, ref uint pNumRows, ulong* pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
			{
				fixed (uint* ppNumRows = &pNumRows)
				{
					fixed (ulong* ppTotalBytes = &pTotalBytes)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, (uint*)ppNumRows, pRowSizeInBytes, (ulong*)ppTotalBytes);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ref ResourceDesc1 pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, ref uint pNumRows, ulong* pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppResourceDesc = &pResourceDesc)
			{
				fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
				{
					fixed (uint* ppNumRows = &pNumRows)
					{
						fixed (ulong* ppTotalBytes = &pTotalBytes)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, (ResourceDesc1*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, (uint*)ppNumRows, pRowSizeInBytes, (ulong*)ppTotalBytes);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ResourceDesc1* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, uint* pNumRows, ref ulong pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
			{
				fixed (ulong* ppTotalBytes = &pTotalBytes)
				{
					((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, pNumRows, (ulong*)ppRowSizeInBytes, (ulong*)ppTotalBytes);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ref ResourceDesc1 pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, uint* pNumRows, ref ulong pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppResourceDesc = &pResourceDesc)
			{
				fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
				{
					fixed (ulong* ppTotalBytes = &pTotalBytes)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, (ResourceDesc1*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, pNumRows, (ulong*)ppRowSizeInBytes, (ulong*)ppTotalBytes);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ResourceDesc1* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, uint* pNumRows, ref ulong pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
			{
				fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
				{
					fixed (ulong* ppTotalBytes = &pTotalBytes)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, pNumRows, (ulong*)ppRowSizeInBytes, (ulong*)ppTotalBytes);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ref ResourceDesc1 pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, uint* pNumRows, ref ulong pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppResourceDesc = &pResourceDesc)
			{
				fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
				{
					fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
					{
						fixed (ulong* ppTotalBytes = &pTotalBytes)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, (ResourceDesc1*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, pNumRows, (ulong*)ppRowSizeInBytes, (ulong*)ppTotalBytes);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ResourceDesc1* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, ref uint pNumRows, ref ulong pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumRows = &pNumRows)
			{
				fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
				{
					fixed (ulong* ppTotalBytes = &pTotalBytes)
					{
						((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, (uint*)ppNumRows, (ulong*)ppRowSizeInBytes, (ulong*)ppTotalBytes);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ref ResourceDesc1 pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, PlacedSubresourceFootprint* pLayouts, ref uint pNumRows, ref ulong pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppResourceDesc = &pResourceDesc)
			{
				fixed (uint* ppNumRows = &pNumRows)
				{
					fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
					{
						fixed (ulong* ppTotalBytes = &pTotalBytes)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, (ResourceDesc1*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, pLayouts, (uint*)ppNumRows, (ulong*)ppRowSizeInBytes, (ulong*)ppTotalBytes);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ResourceDesc1* pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, ref uint pNumRows, ref ulong pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
			{
				fixed (uint* ppNumRows = &pNumRows)
				{
					fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
					{
						fixed (ulong* ppTotalBytes = &pTotalBytes)
						{
							((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, pResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, (uint*)ppNumRows, (ulong*)ppRowSizeInBytes, (ulong*)ppTotalBytes);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCopyableFootprints1(ref ResourceDesc1 pResourceDesc, uint firstSubresource, uint numSubresources, ulong baseOffset, ref PlacedSubresourceFootprint pLayouts, ref uint pNumRows, ref ulong pRowSizeInBytes, ref ulong pTotalBytes) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ResourceDesc1* ppResourceDesc = &pResourceDesc)
			{
				fixed (PlacedSubresourceFootprint* ppLayouts = &pLayouts)
				{
					fixed (uint* ppNumRows = &pNumRows)
					{
						fixed (ulong* ppRowSizeInBytes = &pRowSizeInBytes)
						{
							fixed (ulong* ppTotalBytes = &pTotalBytes)
							{
								((delegate* unmanaged[Stdcall]<ID3D12Device9*, ResourceDesc1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(LpVtbl[72]))(ptr, (ResourceDesc1*)ppResourceDesc, firstSubresource, numSubresources, baseOffset, (PlacedSubresourceFootprint*)ppLayouts, (uint*)ppNumRows, (ulong*)ppRowSizeInBytes, (ulong*)ppTotalBytes);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateShaderCacheSession(ShaderCacheSessionDesc* pDesc, Guid* riid, void** ppvSession) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ShaderCacheSessionDesc*, Guid*, void**, HResult>)(LpVtbl[73]))(ptr, pDesc, riid, ppvSession);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateShaderCacheSession(ref ShaderCacheSessionDesc pDesc, Guid* riid, void** ppvSession) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ShaderCacheSessionDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ShaderCacheSessionDesc*, Guid*, void**, HResult>)(LpVtbl[73]))(ptr, (ShaderCacheSessionDesc*)ppDesc, riid, ppvSession);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateShaderCacheSession(ShaderCacheSessionDesc* pDesc, ref Guid riid, void** ppvSession) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ShaderCacheSessionDesc*, Guid*, void**, HResult>)(LpVtbl[73]))(ptr, pDesc, (Guid*)priid, ppvSession);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateShaderCacheSession(ref ShaderCacheSessionDesc pDesc, ref Guid riid, void** ppvSession) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ShaderCacheSessionDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ShaderCacheSessionDesc*, Guid*, void**, HResult>)(LpVtbl[73]))(ptr, (ShaderCacheSessionDesc*)ppDesc, (Guid*)priid, ppvSession);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateShaderCacheSession<T>(ShaderCacheSessionDesc* pDesc, out ComPtr<T> ppvSession) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvSession = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ShaderCacheSessionDesc*, Guid*, void**, HResult>)(LpVtbl[73]))(ptr, pDesc, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvSession.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateShaderCacheSession<T>(ref ShaderCacheSessionDesc pDesc, out ComPtr<T> ppvSession) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ShaderCacheSessionDesc* ppDesc = &pDesc)
			{
				ppvSession = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ShaderCacheSessionDesc*, Guid*, void**, HResult>)(LpVtbl[73]))(ptr, (ShaderCacheSessionDesc*)ppDesc, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvSession.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateShaderCacheSession<T>(ShaderCacheSessionDesc* pDesc, ref Guid riid, out ComPtr<T> ppvSession) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvSession = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ShaderCacheSessionDesc*, Guid*, void**, HResult>)(LpVtbl[73]))(ptr, pDesc, (Guid*)priid, (void**)ppvSession.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateShaderCacheSession<T>(ref ShaderCacheSessionDesc pDesc, ref Guid riid, out ComPtr<T> ppvSession) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ShaderCacheSessionDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppvSession = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ShaderCacheSessionDesc*, Guid*, void**, HResult>)(LpVtbl[73]))(ptr, (ShaderCacheSessionDesc*)ppDesc, (Guid*)priid, (void**)ppvSession.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult ShaderCacheControl(ShaderCacheKindFlags kinds, ShaderCacheControlFlags control) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, ShaderCacheKindFlags, ShaderCacheControlFlags, HResult>)(LpVtbl[74]))(ptr, kinds, control);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandQueue1(CommandQueueDesc* pDesc, Guid* creatorId, Guid* riid, void** ppCommandQueue) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandQueueDesc*, Guid*, Guid*, void**, HResult>)(LpVtbl[75]))(ptr, pDesc, creatorId, riid, ppCommandQueue);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandQueue1(ref CommandQueueDesc pDesc, Guid* creatorId, Guid* riid, void** ppCommandQueue) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CommandQueueDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandQueueDesc*, Guid*, Guid*, void**, HResult>)(LpVtbl[75]))(ptr, (CommandQueueDesc*)ppDesc, creatorId, riid, ppCommandQueue);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandQueue1(CommandQueueDesc* pDesc, ref Guid creatorId, Guid* riid, void** ppCommandQueue) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pcreatorId = &creatorId)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandQueueDesc*, Guid*, Guid*, void**, HResult>)(LpVtbl[75]))(ptr, pDesc, (Guid*)pcreatorId, riid, ppCommandQueue);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandQueue1(ref CommandQueueDesc pDesc, ref Guid creatorId, Guid* riid, void** ppCommandQueue) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CommandQueueDesc* ppDesc = &pDesc)
			{
				fixed (Guid* pcreatorId = &creatorId)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandQueueDesc*, Guid*, Guid*, void**, HResult>)(LpVtbl[75]))(ptr, (CommandQueueDesc*)ppDesc, (Guid*)pcreatorId, riid, ppCommandQueue);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandQueue1(CommandQueueDesc* pDesc, Guid* creatorId, ref Guid riid, void** ppCommandQueue) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandQueueDesc*, Guid*, Guid*, void**, HResult>)(LpVtbl[75]))(ptr, pDesc, creatorId, (Guid*)priid, ppCommandQueue);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandQueue1(ref CommandQueueDesc pDesc, Guid* creatorId, ref Guid riid, void** ppCommandQueue) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CommandQueueDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandQueueDesc*, Guid*, Guid*, void**, HResult>)(LpVtbl[75]))(ptr, (CommandQueueDesc*)ppDesc, creatorId, (Guid*)priid, ppCommandQueue);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandQueue1(CommandQueueDesc* pDesc, ref Guid creatorId, ref Guid riid, void** ppCommandQueue) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pcreatorId = &creatorId)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandQueueDesc*, Guid*, Guid*, void**, HResult>)(LpVtbl[75]))(ptr, pDesc, (Guid*)pcreatorId, (Guid*)priid, ppCommandQueue);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandQueue1(ref CommandQueueDesc pDesc, ref Guid creatorId, ref Guid riid, void** ppCommandQueue) 
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CommandQueueDesc* ppDesc = &pDesc)
			{
				fixed (Guid* pcreatorId = &creatorId)
				{
					fixed (Guid* priid = &riid)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandQueueDesc*, Guid*, Guid*, void**, HResult>)(LpVtbl[75]))(ptr, (CommandQueueDesc*)ppDesc, (Guid*)pcreatorId, (Guid*)priid, ppCommandQueue);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandQueue1<T>(CommandQueueDesc* pDesc, Guid* creatorId, out ComPtr<T> ppCommandQueue) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppCommandQueue = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandQueueDesc*, Guid*, Guid*, void**, HResult>)(LpVtbl[75]))(ptr, pDesc, creatorId, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppCommandQueue.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandQueue1<T>(ref CommandQueueDesc pDesc, Guid* creatorId, out ComPtr<T> ppCommandQueue) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CommandQueueDesc* ppDesc = &pDesc)
			{
				ppCommandQueue = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandQueueDesc*, Guid*, Guid*, void**, HResult>)(LpVtbl[75]))(ptr, (CommandQueueDesc*)ppDesc, creatorId, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppCommandQueue.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandQueue1<T>(CommandQueueDesc* pDesc, ref Guid creatorId, out ComPtr<T> ppCommandQueue) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pcreatorId = &creatorId)
			{
				ppCommandQueue = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandQueueDesc*, Guid*, Guid*, void**, HResult>)(LpVtbl[75]))(ptr, pDesc, (Guid*)pcreatorId, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppCommandQueue.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandQueue1<T>(ref CommandQueueDesc pDesc, ref Guid creatorId, out ComPtr<T> ppCommandQueue) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CommandQueueDesc* ppDesc = &pDesc)
			{
				fixed (Guid* pcreatorId = &creatorId)
				{
					ppCommandQueue = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandQueueDesc*, Guid*, Guid*, void**, HResult>)(LpVtbl[75]))(ptr, (CommandQueueDesc*)ppDesc, (Guid*)pcreatorId, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppCommandQueue.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandQueue1<T>(CommandQueueDesc* pDesc, Guid* creatorId, ref Guid riid, out ComPtr<T> ppCommandQueue) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppCommandQueue = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandQueueDesc*, Guid*, Guid*, void**, HResult>)(LpVtbl[75]))(ptr, pDesc, creatorId, (Guid*)priid, (void**)ppCommandQueue.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandQueue1<T>(ref CommandQueueDesc pDesc, Guid* creatorId, ref Guid riid, out ComPtr<T> ppCommandQueue) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CommandQueueDesc* ppDesc = &pDesc)
			{
				fixed (Guid* priid = &riid)
				{
					ppCommandQueue = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandQueueDesc*, Guid*, Guid*, void**, HResult>)(LpVtbl[75]))(ptr, (CommandQueueDesc*)ppDesc, creatorId, (Guid*)priid, (void**)ppCommandQueue.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandQueue1<T>(CommandQueueDesc* pDesc, ref Guid creatorId, ref Guid riid, out ComPtr<T> ppCommandQueue) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pcreatorId = &creatorId)
			{
				fixed (Guid* priid = &riid)
				{
					ppCommandQueue = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandQueueDesc*, Guid*, Guid*, void**, HResult>)(LpVtbl[75]))(ptr, pDesc, (Guid*)pcreatorId, (Guid*)priid, (void**)ppCommandQueue.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCommandQueue1<T>(ref CommandQueueDesc pDesc, ref Guid creatorId, ref Guid riid, out ComPtr<T> ppCommandQueue) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D12Device9* ptr = (ID3D12Device9*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CommandQueueDesc* ppDesc = &pDesc)
			{
				fixed (Guid* pcreatorId = &creatorId)
				{
					fixed (Guid* priid = &riid)
					{
						ppCommandQueue = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D12Device9*, CommandQueueDesc*, Guid*, Guid*, void**, HResult>)(LpVtbl[75]))(ptr, (CommandQueueDesc*)ppDesc, (Guid*)pcreatorId, (Guid*)priid, (void**)ppCommandQueue.GetAddressOf());
						return ret;
					}
				}
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator ID3D12Device8 (ID3D12Device9 value)
		{
			return Unsafe.As<ID3D12Device9, ID3D12Device8>(ref value);
		}

		public unsafe static implicit operator ID3D12Device7 (ID3D12Device9 value)
		{
			return Unsafe.As<ID3D12Device9, ID3D12Device7>(ref value);
		}

		public unsafe static implicit operator ID3D12Device6 (ID3D12Device9 value)
		{
			return Unsafe.As<ID3D12Device9, ID3D12Device6>(ref value);
		}

		public unsafe static implicit operator ID3D12Device5 (ID3D12Device9 value)
		{
			return Unsafe.As<ID3D12Device9, ID3D12Device5>(ref value);
		}

		public unsafe static implicit operator ID3D12Device4 (ID3D12Device9 value)
		{
			return Unsafe.As<ID3D12Device9, ID3D12Device4>(ref value);
		}

		public unsafe static implicit operator ID3D12Device3 (ID3D12Device9 value)
		{
			return Unsafe.As<ID3D12Device9, ID3D12Device3>(ref value);
		}

		public unsafe static implicit operator ID3D12Device2 (ID3D12Device9 value)
		{
			return Unsafe.As<ID3D12Device9, ID3D12Device2>(ref value);
		}

		public unsafe static implicit operator ID3D12Device1 (ID3D12Device9 value)
		{
			return Unsafe.As<ID3D12Device9, ID3D12Device1>(ref value);
		}

		public unsafe static implicit operator ID3D12Device (ID3D12Device9 value)
		{
			return Unsafe.As<ID3D12Device9, ID3D12Device>(ref value);
		}

		public unsafe static implicit operator ID3D12Object (ID3D12Device9 value)
		{
			return Unsafe.As<ID3D12Device9, ID3D12Object>(ref value);
		}

		public unsafe static implicit operator IUnknown (ID3D12Device9 value)
		{
			return Unsafe.As<ID3D12Device9, IUnknown>(ref value);
		}

	}

}
