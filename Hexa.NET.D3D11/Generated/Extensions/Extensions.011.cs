// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D11
{
	public static unsafe partial class Extensions
	{

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void RSGetViewports(this ComPtr<ID3D11DeviceContext> comObj, uint* pNumViewports, ref Viewport pViewports) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (Viewport* ppViewports = &pViewports)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint*, Viewport*, void>)(handle->LpVtbl[95]))(handle, pNumViewports, (Viewport*)ppViewports);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void RSGetViewports(this ComPtr<ID3D11DeviceContext> comObj, ref uint pNumViewports, ref Viewport pViewports) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (uint* ppNumViewports = &pNumViewports)
			{
				fixed (Viewport* ppViewports = &pViewports)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint*, Viewport*, void>)(handle->LpVtbl[95]))(handle, (uint*)ppNumViewports, (Viewport*)ppViewports);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void RSGetScissorRects(this ComPtr<ID3D11DeviceContext> comObj, uint* pNumRects, Rect32* pRects) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint*, Rect32*, void>)(handle->LpVtbl[96]))(handle, pNumRects, pRects);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void RSGetScissorRects(this ComPtr<ID3D11DeviceContext> comObj, ref uint pNumRects, Rect32* pRects) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (uint* ppNumRects = &pNumRects)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint*, Rect32*, void>)(handle->LpVtbl[96]))(handle, (uint*)ppNumRects, pRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void RSGetScissorRects(this ComPtr<ID3D11DeviceContext> comObj, uint* pNumRects, ref Rect32 pRects) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (Rect32* ppRects = &pRects)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint*, Rect32*, void>)(handle->LpVtbl[96]))(handle, pNumRects, (Rect32*)ppRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void RSGetScissorRects(this ComPtr<ID3D11DeviceContext> comObj, ref uint pNumRects, ref Rect32 pRects) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (uint* ppNumRects = &pNumRects)
			{
				fixed (Rect32* ppRects = &pRects)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint*, Rect32*, void>)(handle->LpVtbl[96]))(handle, (uint*)ppNumRects, (Rect32*)ppRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void HSGetShaderResources(this ComPtr<ID3D11DeviceContext> comObj, uint startSlot, uint numViews, ID3D11ShaderResourceView** ppShaderResourceViews) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint, uint, ID3D11ShaderResourceView**, void>)(handle->LpVtbl[97]))(handle, startSlot, numViews, ppShaderResourceViews);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void HSGetShaderResources(this ComPtr<ID3D11DeviceContext> comObj, uint startSlot, uint numViews, ref ID3D11ShaderResourceView* ppShaderResourceViews) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11ShaderResourceView** pppShaderResourceViews = &ppShaderResourceViews)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint, uint, ID3D11ShaderResourceView**, void>)(handle->LpVtbl[97]))(handle, startSlot, numViews, (ID3D11ShaderResourceView**)pppShaderResourceViews);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void HSGetShaderResources(this ComPtr<ID3D11DeviceContext> comObj, uint startSlot, uint numViews, out ComPtr<ID3D11ShaderResourceView> ppShaderResourceViews) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			ppShaderResourceViews = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint, uint, ID3D11ShaderResourceView**, void>)(handle->LpVtbl[97]))(handle, startSlot, numViews, (ID3D11ShaderResourceView**)ppShaderResourceViews.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void HSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ID3D11HullShader** ppHullShader, ID3D11ClassInstance** ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11HullShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[98]))(handle, ppHullShader, ppClassInstances, pNumClassInstances);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void HSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ref ID3D11HullShader* ppHullShader, ID3D11ClassInstance** ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11HullShader** pppHullShader = &ppHullShader)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11HullShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[98]))(handle, (ID3D11HullShader**)pppHullShader, ppClassInstances, pNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void HSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ID3D11HullShader** ppHullShader, ref ID3D11ClassInstance* ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11HullShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[98]))(handle, ppHullShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void HSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ID3D11HullShader** ppHullShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11HullShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[98]))(handle, ppHullShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void HSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ref ID3D11HullShader* ppHullShader, ref ID3D11ClassInstance* ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11HullShader** pppHullShader = &ppHullShader)
			{
				fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11HullShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[98]))(handle, (ID3D11HullShader**)pppHullShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void HSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ref ID3D11HullShader* ppHullShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11HullShader** pppHullShader = &ppHullShader)
			{
				fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11HullShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[98]))(handle, (ID3D11HullShader**)pppHullShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void HSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ID3D11HullShader** ppHullShader, ID3D11ClassInstance** ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (uint* ppNumClassInstances = &pNumClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11HullShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[98]))(handle, ppHullShader, ppClassInstances, (uint*)ppNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void HSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ref ID3D11HullShader* ppHullShader, ID3D11ClassInstance** ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11HullShader** pppHullShader = &ppHullShader)
			{
				fixed (uint* ppNumClassInstances = &pNumClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11HullShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[98]))(handle, (ID3D11HullShader**)pppHullShader, ppClassInstances, (uint*)ppNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void HSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ID3D11HullShader** ppHullShader, ref ID3D11ClassInstance* ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
			{
				fixed (uint* ppNumClassInstances = &pNumClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11HullShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[98]))(handle, ppHullShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void HSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ID3D11HullShader** ppHullShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
			{
				fixed (uint* ppNumClassInstances = &pNumClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11HullShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[98]))(handle, ppHullShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void HSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ref ID3D11HullShader* ppHullShader, ref ID3D11ClassInstance* ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11HullShader** pppHullShader = &ppHullShader)
			{
				fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
				{
					fixed (uint* ppNumClassInstances = &pNumClassInstances)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11HullShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[98]))(handle, (ID3D11HullShader**)pppHullShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void HSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ref ID3D11HullShader* ppHullShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11HullShader** pppHullShader = &ppHullShader)
			{
				fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
				{
					fixed (uint* ppNumClassInstances = &pNumClassInstances)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11HullShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[98]))(handle, (ID3D11HullShader**)pppHullShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void HSGetSamplers(this ComPtr<ID3D11DeviceContext> comObj, uint startSlot, uint numSamplers, ID3D11SamplerState** ppSamplers) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint, uint, ID3D11SamplerState**, void>)(handle->LpVtbl[99]))(handle, startSlot, numSamplers, ppSamplers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void HSGetSamplers(this ComPtr<ID3D11DeviceContext> comObj, uint startSlot, uint numSamplers, ref ID3D11SamplerState* ppSamplers) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11SamplerState** pppSamplers = &ppSamplers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint, uint, ID3D11SamplerState**, void>)(handle->LpVtbl[99]))(handle, startSlot, numSamplers, (ID3D11SamplerState**)pppSamplers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void HSGetSamplers(this ComPtr<ID3D11DeviceContext> comObj, uint startSlot, uint numSamplers, out ComPtr<ID3D11SamplerState> ppSamplers) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			ppSamplers = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint, uint, ID3D11SamplerState**, void>)(handle->LpVtbl[99]))(handle, startSlot, numSamplers, (ID3D11SamplerState**)ppSamplers.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void HSGetConstantBuffers(this ComPtr<ID3D11DeviceContext> comObj, uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint, uint, ID3D11Buffer**, void>)(handle->LpVtbl[100]))(handle, startSlot, numBuffers, ppConstantBuffers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void HSGetConstantBuffers(this ComPtr<ID3D11DeviceContext> comObj, uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint, uint, ID3D11Buffer**, void>)(handle->LpVtbl[100]))(handle, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void HSGetConstantBuffers(this ComPtr<ID3D11DeviceContext> comObj, uint startSlot, uint numBuffers, out ComPtr<ID3D11Buffer> ppConstantBuffers) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			ppConstantBuffers = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint, uint, ID3D11Buffer**, void>)(handle->LpVtbl[100]))(handle, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DSGetShaderResources(this ComPtr<ID3D11DeviceContext> comObj, uint startSlot, uint numViews, ID3D11ShaderResourceView** ppShaderResourceViews) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint, uint, ID3D11ShaderResourceView**, void>)(handle->LpVtbl[101]))(handle, startSlot, numViews, ppShaderResourceViews);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DSGetShaderResources(this ComPtr<ID3D11DeviceContext> comObj, uint startSlot, uint numViews, ref ID3D11ShaderResourceView* ppShaderResourceViews) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11ShaderResourceView** pppShaderResourceViews = &ppShaderResourceViews)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint, uint, ID3D11ShaderResourceView**, void>)(handle->LpVtbl[101]))(handle, startSlot, numViews, (ID3D11ShaderResourceView**)pppShaderResourceViews);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DSGetShaderResources(this ComPtr<ID3D11DeviceContext> comObj, uint startSlot, uint numViews, out ComPtr<ID3D11ShaderResourceView> ppShaderResourceViews) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			ppShaderResourceViews = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint, uint, ID3D11ShaderResourceView**, void>)(handle->LpVtbl[101]))(handle, startSlot, numViews, (ID3D11ShaderResourceView**)ppShaderResourceViews.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ID3D11DomainShader** ppDomainShader, ID3D11ClassInstance** ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11DomainShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[102]))(handle, ppDomainShader, ppClassInstances, pNumClassInstances);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ref ID3D11DomainShader* ppDomainShader, ID3D11ClassInstance** ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11DomainShader** pppDomainShader = &ppDomainShader)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11DomainShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[102]))(handle, (ID3D11DomainShader**)pppDomainShader, ppClassInstances, pNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ID3D11DomainShader** ppDomainShader, ref ID3D11ClassInstance* ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11DomainShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[102]))(handle, ppDomainShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ID3D11DomainShader** ppDomainShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11DomainShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[102]))(handle, ppDomainShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ref ID3D11DomainShader* ppDomainShader, ref ID3D11ClassInstance* ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11DomainShader** pppDomainShader = &ppDomainShader)
			{
				fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11DomainShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[102]))(handle, (ID3D11DomainShader**)pppDomainShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ref ID3D11DomainShader* ppDomainShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11DomainShader** pppDomainShader = &ppDomainShader)
			{
				fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11DomainShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[102]))(handle, (ID3D11DomainShader**)pppDomainShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ID3D11DomainShader** ppDomainShader, ID3D11ClassInstance** ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (uint* ppNumClassInstances = &pNumClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11DomainShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[102]))(handle, ppDomainShader, ppClassInstances, (uint*)ppNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ref ID3D11DomainShader* ppDomainShader, ID3D11ClassInstance** ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11DomainShader** pppDomainShader = &ppDomainShader)
			{
				fixed (uint* ppNumClassInstances = &pNumClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11DomainShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[102]))(handle, (ID3D11DomainShader**)pppDomainShader, ppClassInstances, (uint*)ppNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ID3D11DomainShader** ppDomainShader, ref ID3D11ClassInstance* ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
			{
				fixed (uint* ppNumClassInstances = &pNumClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11DomainShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[102]))(handle, ppDomainShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ID3D11DomainShader** ppDomainShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
			{
				fixed (uint* ppNumClassInstances = &pNumClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11DomainShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[102]))(handle, ppDomainShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ref ID3D11DomainShader* ppDomainShader, ref ID3D11ClassInstance* ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11DomainShader** pppDomainShader = &ppDomainShader)
			{
				fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
				{
					fixed (uint* ppNumClassInstances = &pNumClassInstances)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11DomainShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[102]))(handle, (ID3D11DomainShader**)pppDomainShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ref ID3D11DomainShader* ppDomainShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11DomainShader** pppDomainShader = &ppDomainShader)
			{
				fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
				{
					fixed (uint* ppNumClassInstances = &pNumClassInstances)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11DomainShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[102]))(handle, (ID3D11DomainShader**)pppDomainShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DSGetSamplers(this ComPtr<ID3D11DeviceContext> comObj, uint startSlot, uint numSamplers, ID3D11SamplerState** ppSamplers) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint, uint, ID3D11SamplerState**, void>)(handle->LpVtbl[103]))(handle, startSlot, numSamplers, ppSamplers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DSGetSamplers(this ComPtr<ID3D11DeviceContext> comObj, uint startSlot, uint numSamplers, ref ID3D11SamplerState* ppSamplers) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11SamplerState** pppSamplers = &ppSamplers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint, uint, ID3D11SamplerState**, void>)(handle->LpVtbl[103]))(handle, startSlot, numSamplers, (ID3D11SamplerState**)pppSamplers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DSGetSamplers(this ComPtr<ID3D11DeviceContext> comObj, uint startSlot, uint numSamplers, out ComPtr<ID3D11SamplerState> ppSamplers) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			ppSamplers = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint, uint, ID3D11SamplerState**, void>)(handle->LpVtbl[103]))(handle, startSlot, numSamplers, (ID3D11SamplerState**)ppSamplers.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DSGetConstantBuffers(this ComPtr<ID3D11DeviceContext> comObj, uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint, uint, ID3D11Buffer**, void>)(handle->LpVtbl[104]))(handle, startSlot, numBuffers, ppConstantBuffers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DSGetConstantBuffers(this ComPtr<ID3D11DeviceContext> comObj, uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint, uint, ID3D11Buffer**, void>)(handle->LpVtbl[104]))(handle, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void DSGetConstantBuffers(this ComPtr<ID3D11DeviceContext> comObj, uint startSlot, uint numBuffers, out ComPtr<ID3D11Buffer> ppConstantBuffers) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			ppConstantBuffers = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint, uint, ID3D11Buffer**, void>)(handle->LpVtbl[104]))(handle, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CSGetShaderResources(this ComPtr<ID3D11DeviceContext> comObj, uint startSlot, uint numViews, ID3D11ShaderResourceView** ppShaderResourceViews) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint, uint, ID3D11ShaderResourceView**, void>)(handle->LpVtbl[105]))(handle, startSlot, numViews, ppShaderResourceViews);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CSGetShaderResources(this ComPtr<ID3D11DeviceContext> comObj, uint startSlot, uint numViews, ref ID3D11ShaderResourceView* ppShaderResourceViews) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11ShaderResourceView** pppShaderResourceViews = &ppShaderResourceViews)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint, uint, ID3D11ShaderResourceView**, void>)(handle->LpVtbl[105]))(handle, startSlot, numViews, (ID3D11ShaderResourceView**)pppShaderResourceViews);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CSGetShaderResources(this ComPtr<ID3D11DeviceContext> comObj, uint startSlot, uint numViews, out ComPtr<ID3D11ShaderResourceView> ppShaderResourceViews) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			ppShaderResourceViews = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint, uint, ID3D11ShaderResourceView**, void>)(handle->LpVtbl[105]))(handle, startSlot, numViews, (ID3D11ShaderResourceView**)ppShaderResourceViews.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CSGetUnorderedAccessViews(this ComPtr<ID3D11DeviceContext> comObj, uint startSlot, uint numUaVs, ID3D11UnorderedAccessView** ppUnorderedAccessViews) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint, uint, ID3D11UnorderedAccessView**, void>)(handle->LpVtbl[106]))(handle, startSlot, numUaVs, ppUnorderedAccessViews);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CSGetUnorderedAccessViews(this ComPtr<ID3D11DeviceContext> comObj, uint startSlot, uint numUaVs, ref ID3D11UnorderedAccessView* ppUnorderedAccessViews) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11UnorderedAccessView** pppUnorderedAccessViews = &ppUnorderedAccessViews)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint, uint, ID3D11UnorderedAccessView**, void>)(handle->LpVtbl[106]))(handle, startSlot, numUaVs, (ID3D11UnorderedAccessView**)pppUnorderedAccessViews);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CSGetUnorderedAccessViews(this ComPtr<ID3D11DeviceContext> comObj, uint startSlot, uint numUaVs, out ComPtr<ID3D11UnorderedAccessView> ppUnorderedAccessViews) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			ppUnorderedAccessViews = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint, uint, ID3D11UnorderedAccessView**, void>)(handle->LpVtbl[106]))(handle, startSlot, numUaVs, (ID3D11UnorderedAccessView**)ppUnorderedAccessViews.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ID3D11ComputeShader** ppComputeShader, ID3D11ClassInstance** ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11ComputeShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[107]))(handle, ppComputeShader, ppClassInstances, pNumClassInstances);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ref ID3D11ComputeShader* ppComputeShader, ID3D11ClassInstance** ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11ComputeShader** pppComputeShader = &ppComputeShader)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11ComputeShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[107]))(handle, (ID3D11ComputeShader**)pppComputeShader, ppClassInstances, pNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ID3D11ComputeShader** ppComputeShader, ref ID3D11ClassInstance* ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11ComputeShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[107]))(handle, ppComputeShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ID3D11ComputeShader** ppComputeShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11ComputeShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[107]))(handle, ppComputeShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ref ID3D11ComputeShader* ppComputeShader, ref ID3D11ClassInstance* ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11ComputeShader** pppComputeShader = &ppComputeShader)
			{
				fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11ComputeShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[107]))(handle, (ID3D11ComputeShader**)pppComputeShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ref ID3D11ComputeShader* ppComputeShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11ComputeShader** pppComputeShader = &ppComputeShader)
			{
				fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11ComputeShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[107]))(handle, (ID3D11ComputeShader**)pppComputeShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ID3D11ComputeShader** ppComputeShader, ID3D11ClassInstance** ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (uint* ppNumClassInstances = &pNumClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11ComputeShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[107]))(handle, ppComputeShader, ppClassInstances, (uint*)ppNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ref ID3D11ComputeShader* ppComputeShader, ID3D11ClassInstance** ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11ComputeShader** pppComputeShader = &ppComputeShader)
			{
				fixed (uint* ppNumClassInstances = &pNumClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11ComputeShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[107]))(handle, (ID3D11ComputeShader**)pppComputeShader, ppClassInstances, (uint*)ppNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ID3D11ComputeShader** ppComputeShader, ref ID3D11ClassInstance* ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
			{
				fixed (uint* ppNumClassInstances = &pNumClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11ComputeShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[107]))(handle, ppComputeShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ID3D11ComputeShader** ppComputeShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
			{
				fixed (uint* ppNumClassInstances = &pNumClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11ComputeShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[107]))(handle, ppComputeShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ref ID3D11ComputeShader* ppComputeShader, ref ID3D11ClassInstance* ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11ComputeShader** pppComputeShader = &ppComputeShader)
			{
				fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
				{
					fixed (uint* ppNumClassInstances = &pNumClassInstances)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11ComputeShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[107]))(handle, (ID3D11ComputeShader**)pppComputeShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CSGetShader(this ComPtr<ID3D11DeviceContext> comObj, ref ID3D11ComputeShader* ppComputeShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11ComputeShader** pppComputeShader = &ppComputeShader)
			{
				fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
				{
					fixed (uint* ppNumClassInstances = &pNumClassInstances)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, ID3D11ComputeShader**, ID3D11ClassInstance**, uint*, void>)(handle->LpVtbl[107]))(handle, (ID3D11ComputeShader**)pppComputeShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CSGetSamplers(this ComPtr<ID3D11DeviceContext> comObj, uint startSlot, uint numSamplers, ID3D11SamplerState** ppSamplers) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint, uint, ID3D11SamplerState**, void>)(handle->LpVtbl[108]))(handle, startSlot, numSamplers, ppSamplers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CSGetSamplers(this ComPtr<ID3D11DeviceContext> comObj, uint startSlot, uint numSamplers, ref ID3D11SamplerState* ppSamplers) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11SamplerState** pppSamplers = &ppSamplers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint, uint, ID3D11SamplerState**, void>)(handle->LpVtbl[108]))(handle, startSlot, numSamplers, (ID3D11SamplerState**)pppSamplers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CSGetSamplers(this ComPtr<ID3D11DeviceContext> comObj, uint startSlot, uint numSamplers, out ComPtr<ID3D11SamplerState> ppSamplers) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			ppSamplers = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint, uint, ID3D11SamplerState**, void>)(handle->LpVtbl[108]))(handle, startSlot, numSamplers, (ID3D11SamplerState**)ppSamplers.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CSGetConstantBuffers(this ComPtr<ID3D11DeviceContext> comObj, uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint, uint, ID3D11Buffer**, void>)(handle->LpVtbl[109]))(handle, startSlot, numBuffers, ppConstantBuffers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CSGetConstantBuffers(this ComPtr<ID3D11DeviceContext> comObj, uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint, uint, ID3D11Buffer**, void>)(handle->LpVtbl[109]))(handle, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void CSGetConstantBuffers(this ComPtr<ID3D11DeviceContext> comObj, uint startSlot, uint numBuffers, out ComPtr<ID3D11Buffer> ppConstantBuffers) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			ppConstantBuffers = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint, uint, ID3D11Buffer**, void>)(handle->LpVtbl[109]))(handle, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ClearState(this ComPtr<ID3D11DeviceContext> comObj) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, void>)(handle->LpVtbl[110]))(handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void Flush(this ComPtr<ID3D11DeviceContext> comObj) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, void>)(handle->LpVtbl[111]))(handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static DeviceContextType GetType(this ComPtr<ID3D11DeviceContext> comObj) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			DeviceContextType ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, DeviceContextType>)(handle->LpVtbl[112]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint GetContextFlags(this ComPtr<ID3D11DeviceContext> comObj) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, uint>)(handle->LpVtbl[113]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult FinishCommandList(this ComPtr<ID3D11DeviceContext> comObj, Bool32 restoreDeferredContextState, ID3D11CommandList** ppCommandList) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, Bool32, ID3D11CommandList**, HResult>)(handle->LpVtbl[114]))(handle, restoreDeferredContextState, ppCommandList);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult FinishCommandList(this ComPtr<ID3D11DeviceContext> comObj, Bool32 restoreDeferredContextState, ref ID3D11CommandList* ppCommandList) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			fixed (ID3D11CommandList** pppCommandList = &ppCommandList)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, Bool32, ID3D11CommandList**, HResult>)(handle->LpVtbl[114]))(handle, restoreDeferredContextState, (ID3D11CommandList**)pppCommandList);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult FinishCommandList(this ComPtr<ID3D11DeviceContext> comObj, Bool32 restoreDeferredContextState, out ComPtr<ID3D11CommandList> ppCommandList) 
		{
			ID3D11DeviceContext* handle = comObj.Handle;
			ppCommandList = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext*, Bool32, ID3D11CommandList**, HResult>)(handle->LpVtbl[114]))(handle, restoreDeferredContextState, (ID3D11CommandList**)ppCommandList.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11CommandList> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D11CommandList* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CommandList*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11CommandList> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D11CommandList* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CommandList*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11CommandList> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11CommandList* handle = comObj.Handle;
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CommandList*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11CommandList> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11CommandList* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CommandList*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D11CommandList> comObj) 
		{
			ID3D11CommandList* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11CommandList*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D11CommandList> comObj) 
		{
			ID3D11CommandList* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11CommandList*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11CommandList> comObj, ID3D11Device** ppDevice) 
		{
			ID3D11CommandList* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11CommandList*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, ppDevice);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11CommandList> comObj, ref ID3D11Device* ppDevice) 
		{
			ID3D11CommandList* handle = comObj.Handle;
			fixed (ID3D11Device** pppDevice = &ppDevice)
			{
				((delegate* unmanaged[Stdcall]<ID3D11CommandList*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)pppDevice);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11CommandList> comObj, out ComPtr<ID3D11Device> ppDevice) 
		{
			ID3D11CommandList* handle = comObj.Handle;
			ppDevice = default;
			((delegate* unmanaged[Stdcall]<ID3D11CommandList*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)ppDevice.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11CommandList> comObj, Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D11CommandList* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CommandList*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11CommandList> comObj, ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D11CommandList* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CommandList*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11CommandList> comObj, Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D11CommandList* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CommandList*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11CommandList> comObj, ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D11CommandList* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CommandList*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11CommandList> comObj, Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11CommandList* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CommandList*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11CommandList> comObj, ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11CommandList* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CommandList*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11CommandList> comObj, Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11CommandList* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CommandList*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11CommandList> comObj, ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11CommandList* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CommandList*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11CommandList> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D11CommandList* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CommandList*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11CommandList> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D11CommandList* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CommandList*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11CommandList> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D11CommandList* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CommandList*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11CommandList> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D11CommandList* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CommandList*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11CommandList> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D11CommandList* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CommandList*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11CommandList> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D11CommandList* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CommandList*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11CommandList> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D11CommandList* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CommandList*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11CommandList> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D11CommandList* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CommandList*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint GetContextFlags(this ComPtr<ID3D11CommandList> comObj) 
		{
			ID3D11CommandList* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11CommandList*, uint>)(handle->LpVtbl[7]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11VideoDecoder> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11VideoDecoder> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11VideoDecoder> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11VideoDecoder> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D11VideoDecoder> comObj) 
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D11VideoDecoder> comObj) 
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11VideoDecoder> comObj, ID3D11Device** ppDevice) 
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, ppDevice);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11VideoDecoder> comObj, ref ID3D11Device* ppDevice) 
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			fixed (ID3D11Device** pppDevice = &ppDevice)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)pppDevice);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11VideoDecoder> comObj, out ComPtr<ID3D11Device> ppDevice) 
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			ppDevice = default;
			((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)ppDevice.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoDecoder> comObj, Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoDecoder> comObj, ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoDecoder> comObj, Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoDecoder> comObj, ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoDecoder> comObj, Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoDecoder> comObj, ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoDecoder> comObj, Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoDecoder> comObj, ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11VideoDecoder> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11VideoDecoder> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoDecoder> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoDecoder> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoDecoder> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoDecoder> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoDecoder> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoDecoder> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetCreationParameters(this ComPtr<ID3D11VideoDecoder> comObj, VideoDecoderDesc* pVideoDesc, VideoDecoderConfig* pConfig) 
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, VideoDecoderDesc*, VideoDecoderConfig*, HResult>)(handle->LpVtbl[7]))(handle, pVideoDesc, pConfig);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetCreationParameters(this ComPtr<ID3D11VideoDecoder> comObj, ref VideoDecoderDesc pVideoDesc, VideoDecoderConfig* pConfig) 
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppVideoDesc = &pVideoDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, VideoDecoderDesc*, VideoDecoderConfig*, HResult>)(handle->LpVtbl[7]))(handle, (VideoDecoderDesc*)ppVideoDesc, pConfig);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetCreationParameters(this ComPtr<ID3D11VideoDecoder> comObj, VideoDecoderDesc* pVideoDesc, ref VideoDecoderConfig pConfig) 
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			fixed (VideoDecoderConfig* ppConfig = &pConfig)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, VideoDecoderDesc*, VideoDecoderConfig*, HResult>)(handle->LpVtbl[7]))(handle, pVideoDesc, (VideoDecoderConfig*)ppConfig);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetCreationParameters(this ComPtr<ID3D11VideoDecoder> comObj, ref VideoDecoderDesc pVideoDesc, ref VideoDecoderConfig pConfig) 
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppVideoDesc = &pVideoDesc)
			{
				fixed (VideoDecoderConfig* ppConfig = &pConfig)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, VideoDecoderDesc*, VideoDecoderConfig*, HResult>)(handle->LpVtbl[7]))(handle, (VideoDecoderDesc*)ppVideoDesc, (VideoDecoderConfig*)ppConfig);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDriverHandle(this ComPtr<ID3D11VideoDecoder> comObj, nint* pDriverHandle) 
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, nint*, HResult>)(handle->LpVtbl[8]))(handle, pDriverHandle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDriverHandle(this ComPtr<ID3D11VideoDecoder> comObj, ref nint pDriverHandle) 
		{
			ID3D11VideoDecoder* handle = comObj.Handle;
			fixed (nint* ppDriverHandle = &pDriverHandle)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoder*, nint*, HResult>)(handle->LpVtbl[8]))(handle, (nint*)ppDriverHandle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D11VideoProcessorEnumerator> comObj) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D11VideoProcessorEnumerator> comObj) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, ID3D11Device** ppDevice) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, ppDevice);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, ref ID3D11Device* ppDevice) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			fixed (ID3D11Device** pppDevice = &ppDevice)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)pppDevice);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, out ComPtr<ID3D11Device> ppDevice) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			ppDevice = default;
			((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)ppDevice.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetVideoProcessorContentDesc(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, VideoProcessorContentDesc* pContentDesc) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, VideoProcessorContentDesc*, HResult>)(handle->LpVtbl[7]))(handle, pContentDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetVideoProcessorContentDesc(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, ref VideoProcessorContentDesc pContentDesc) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			fixed (VideoProcessorContentDesc* ppContentDesc = &pContentDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, VideoProcessorContentDesc*, HResult>)(handle->LpVtbl[7]))(handle, (VideoProcessorContentDesc*)ppContentDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CheckVideoProcessorFormat(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, Format format, uint* pFlags) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, Format, uint*, HResult>)(handle->LpVtbl[8]))(handle, format, pFlags);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CheckVideoProcessorFormat(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, Format format, ref uint pFlags) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, Format, uint*, HResult>)(handle->LpVtbl[8]))(handle, format, (uint*)ppFlags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetVideoProcessorCaps(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, VideoProcessorCaps* pCaps) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, VideoProcessorCaps*, HResult>)(handle->LpVtbl[9]))(handle, pCaps);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetVideoProcessorCaps(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, ref VideoProcessorCaps pCaps) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			fixed (VideoProcessorCaps* ppCaps = &pCaps)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, VideoProcessorCaps*, HResult>)(handle->LpVtbl[9]))(handle, (VideoProcessorCaps*)ppCaps);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetVideoProcessorRateConversionCaps(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, uint typeIndex, VideoProcessorRateConversionCaps* pCaps) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, uint, VideoProcessorRateConversionCaps*, HResult>)(handle->LpVtbl[10]))(handle, typeIndex, pCaps);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetVideoProcessorRateConversionCaps(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, uint typeIndex, ref VideoProcessorRateConversionCaps pCaps) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			fixed (VideoProcessorRateConversionCaps* ppCaps = &pCaps)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, uint, VideoProcessorRateConversionCaps*, HResult>)(handle->LpVtbl[10]))(handle, typeIndex, (VideoProcessorRateConversionCaps*)ppCaps);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetVideoProcessorCustomRate(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, uint typeIndex, uint customRateIndex, VideoProcessorCustomRate* pRate) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, uint, uint, VideoProcessorCustomRate*, HResult>)(handle->LpVtbl[11]))(handle, typeIndex, customRateIndex, pRate);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetVideoProcessorCustomRate(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, uint typeIndex, uint customRateIndex, ref VideoProcessorCustomRate pRate) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			fixed (VideoProcessorCustomRate* ppRate = &pRate)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, uint, uint, VideoProcessorCustomRate*, HResult>)(handle->LpVtbl[11]))(handle, typeIndex, customRateIndex, (VideoProcessorCustomRate*)ppRate);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetVideoProcessorFilterRange(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, VideoProcessorFilter filter, VideoProcessorFilterRange* pRange) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, VideoProcessorFilter, VideoProcessorFilterRange*, HResult>)(handle->LpVtbl[12]))(handle, filter, pRange);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetVideoProcessorFilterRange(this ComPtr<ID3D11VideoProcessorEnumerator> comObj, VideoProcessorFilter filter, ref VideoProcessorFilterRange pRange) 
		{
			ID3D11VideoProcessorEnumerator* handle = comObj.Handle;
			fixed (VideoProcessorFilterRange* ppRange = &pRange)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorEnumerator*, VideoProcessorFilter, VideoProcessorFilterRange*, HResult>)(handle->LpVtbl[12]))(handle, filter, (VideoProcessorFilterRange*)ppRange);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11VideoProcessor> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D11VideoProcessor* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessor*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11VideoProcessor> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D11VideoProcessor* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessor*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11VideoProcessor> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoProcessor* handle = comObj.Handle;
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessor*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11VideoProcessor> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoProcessor* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessor*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D11VideoProcessor> comObj) 
		{
			ID3D11VideoProcessor* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessor*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D11VideoProcessor> comObj) 
		{
			ID3D11VideoProcessor* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessor*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11VideoProcessor> comObj, ID3D11Device** ppDevice) 
		{
			ID3D11VideoProcessor* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoProcessor*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, ppDevice);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11VideoProcessor> comObj, ref ID3D11Device* ppDevice) 
		{
			ID3D11VideoProcessor* handle = comObj.Handle;
			fixed (ID3D11Device** pppDevice = &ppDevice)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoProcessor*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)pppDevice);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11VideoProcessor> comObj, out ComPtr<ID3D11Device> ppDevice) 
		{
			ID3D11VideoProcessor* handle = comObj.Handle;
			ppDevice = default;
			((delegate* unmanaged[Stdcall]<ID3D11VideoProcessor*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)ppDevice.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoProcessor> comObj, Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D11VideoProcessor* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessor*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoProcessor> comObj, ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D11VideoProcessor* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessor*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoProcessor> comObj, Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D11VideoProcessor* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessor*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoProcessor> comObj, ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D11VideoProcessor* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessor*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoProcessor> comObj, Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoProcessor* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessor*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoProcessor> comObj, ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoProcessor* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessor*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoProcessor> comObj, Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoProcessor* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessor*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoProcessor> comObj, ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoProcessor* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessor*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11VideoProcessor> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D11VideoProcessor* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11VideoProcessor> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D11VideoProcessor* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoProcessor> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D11VideoProcessor* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessor*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoProcessor> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D11VideoProcessor* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessor*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoProcessor> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D11VideoProcessor* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessor*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoProcessor> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D11VideoProcessor* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessor*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoProcessor> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D11VideoProcessor* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessor*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoProcessor> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D11VideoProcessor* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessor*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetContentDesc(this ComPtr<ID3D11VideoProcessor> comObj, VideoProcessorContentDesc* pDesc) 
		{
			ID3D11VideoProcessor* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoProcessor*, VideoProcessorContentDesc*, void>)(handle->LpVtbl[7]))(handle, pDesc);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetContentDesc(this ComPtr<ID3D11VideoProcessor> comObj, ref VideoProcessorContentDesc pDesc) 
		{
			ID3D11VideoProcessor* handle = comObj.Handle;
			fixed (VideoProcessorContentDesc* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoProcessor*, VideoProcessorContentDesc*, void>)(handle->LpVtbl[7]))(handle, (VideoProcessorContentDesc*)ppDesc);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetRateConversionCaps(this ComPtr<ID3D11VideoProcessor> comObj, VideoProcessorRateConversionCaps* pCaps) 
		{
			ID3D11VideoProcessor* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoProcessor*, VideoProcessorRateConversionCaps*, void>)(handle->LpVtbl[8]))(handle, pCaps);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetRateConversionCaps(this ComPtr<ID3D11VideoProcessor> comObj, ref VideoProcessorRateConversionCaps pCaps) 
		{
			ID3D11VideoProcessor* handle = comObj.Handle;
			fixed (VideoProcessorRateConversionCaps* ppCaps = &pCaps)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoProcessor*, VideoProcessorRateConversionCaps*, void>)(handle->LpVtbl[8]))(handle, (VideoProcessorRateConversionCaps*)ppCaps);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11AuthenticatedChannel> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11AuthenticatedChannel> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11AuthenticatedChannel> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11AuthenticatedChannel> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D11AuthenticatedChannel> comObj) 
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D11AuthenticatedChannel> comObj) 
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11AuthenticatedChannel> comObj, ID3D11Device** ppDevice) 
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, ppDevice);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11AuthenticatedChannel> comObj, ref ID3D11Device* ppDevice) 
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			fixed (ID3D11Device** pppDevice = &ppDevice)
			{
				((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)pppDevice);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11AuthenticatedChannel> comObj, out ComPtr<ID3D11Device> ppDevice) 
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			ppDevice = default;
			((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)ppDevice.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11AuthenticatedChannel> comObj, Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11AuthenticatedChannel> comObj, ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11AuthenticatedChannel> comObj, Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11AuthenticatedChannel> comObj, ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11AuthenticatedChannel> comObj, Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11AuthenticatedChannel> comObj, ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11AuthenticatedChannel> comObj, Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11AuthenticatedChannel> comObj, ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11AuthenticatedChannel> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11AuthenticatedChannel> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11AuthenticatedChannel> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11AuthenticatedChannel> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11AuthenticatedChannel> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11AuthenticatedChannel> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11AuthenticatedChannel> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11AuthenticatedChannel> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetCertificateSize(this ComPtr<ID3D11AuthenticatedChannel> comObj, uint* pCertificateSize) 
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, uint*, HResult>)(handle->LpVtbl[7]))(handle, pCertificateSize);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetCertificateSize(this ComPtr<ID3D11AuthenticatedChannel> comObj, ref uint pCertificateSize) 
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			fixed (uint* ppCertificateSize = &pCertificateSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, uint*, HResult>)(handle->LpVtbl[7]))(handle, (uint*)ppCertificateSize);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetCertificate(this ComPtr<ID3D11AuthenticatedChannel> comObj, uint certificateSize, byte* pCertificate) 
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, uint, byte*, HResult>)(handle->LpVtbl[8]))(handle, certificateSize, pCertificate);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetCertificate(this ComPtr<ID3D11AuthenticatedChannel> comObj, uint certificateSize, ref byte pCertificate) 
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			fixed (byte* ppCertificate = &pCertificate)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, uint, byte*, HResult>)(handle->LpVtbl[8]))(handle, certificateSize, (byte*)ppCertificate);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetChannelHandle(this ComPtr<ID3D11AuthenticatedChannel> comObj, nint* pChannelHandle) 
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, nint*, void>)(handle->LpVtbl[9]))(handle, pChannelHandle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetChannelHandle(this ComPtr<ID3D11AuthenticatedChannel> comObj, ref nint pChannelHandle) 
		{
			ID3D11AuthenticatedChannel* handle = comObj.Handle;
			fixed (nint* ppChannelHandle = &pChannelHandle)
			{
				((delegate* unmanaged[Stdcall]<ID3D11AuthenticatedChannel*, nint*, void>)(handle->LpVtbl[9]))(handle, (nint*)ppChannelHandle);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11CryptoSession> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11CryptoSession> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11CryptoSession> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11CryptoSession> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D11CryptoSession> comObj) 
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D11CryptoSession> comObj) 
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11CryptoSession> comObj, ID3D11Device** ppDevice) 
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, ppDevice);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11CryptoSession> comObj, ref ID3D11Device* ppDevice) 
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			fixed (ID3D11Device** pppDevice = &ppDevice)
			{
				((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)pppDevice);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11CryptoSession> comObj, out ComPtr<ID3D11Device> ppDevice) 
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			ppDevice = default;
			((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)ppDevice.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11CryptoSession> comObj, Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11CryptoSession> comObj, ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11CryptoSession> comObj, Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11CryptoSession> comObj, ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11CryptoSession> comObj, Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11CryptoSession> comObj, ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11CryptoSession> comObj, Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11CryptoSession> comObj, ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11CryptoSession> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11CryptoSession> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11CryptoSession> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11CryptoSession> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11CryptoSession> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11CryptoSession> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11CryptoSession> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11CryptoSession> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetCryptoType(this ComPtr<ID3D11CryptoSession> comObj, Guid* pCryptoType) 
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, void>)(handle->LpVtbl[7]))(handle, pCryptoType);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetCryptoType(this ComPtr<ID3D11CryptoSession> comObj, ref Guid pCryptoType) 
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, void>)(handle->LpVtbl[7]))(handle, (Guid*)ppCryptoType);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDecoderProfile(this ComPtr<ID3D11CryptoSession> comObj, Guid* pDecoderProfile) 
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, void>)(handle->LpVtbl[8]))(handle, pDecoderProfile);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDecoderProfile(this ComPtr<ID3D11CryptoSession> comObj, ref Guid pDecoderProfile) 
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, void>)(handle->LpVtbl[8]))(handle, (Guid*)ppDecoderProfile);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetCertificateSize(this ComPtr<ID3D11CryptoSession> comObj, uint* pCertificateSize) 
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, uint*, HResult>)(handle->LpVtbl[9]))(handle, pCertificateSize);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetCertificateSize(this ComPtr<ID3D11CryptoSession> comObj, ref uint pCertificateSize) 
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			fixed (uint* ppCertificateSize = &pCertificateSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, uint*, HResult>)(handle->LpVtbl[9]))(handle, (uint*)ppCertificateSize);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetCertificate(this ComPtr<ID3D11CryptoSession> comObj, uint certificateSize, byte* pCertificate) 
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, uint, byte*, HResult>)(handle->LpVtbl[10]))(handle, certificateSize, pCertificate);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetCertificate(this ComPtr<ID3D11CryptoSession> comObj, uint certificateSize, ref byte pCertificate) 
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			fixed (byte* ppCertificate = &pCertificate)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, uint, byte*, HResult>)(handle->LpVtbl[10]))(handle, certificateSize, (byte*)ppCertificate);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetCryptoSessionHandle(this ComPtr<ID3D11CryptoSession> comObj, nint* pCryptoSessionHandle) 
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, nint*, void>)(handle->LpVtbl[11]))(handle, pCryptoSessionHandle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetCryptoSessionHandle(this ComPtr<ID3D11CryptoSession> comObj, ref nint pCryptoSessionHandle) 
		{
			ID3D11CryptoSession* handle = comObj.Handle;
			fixed (nint* ppCryptoSessionHandle = &pCryptoSessionHandle)
			{
				((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, nint*, void>)(handle->LpVtbl[11]))(handle, (nint*)ppCryptoSessionHandle);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11VideoDecoderOutputView> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D11VideoDecoderOutputView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoderOutputView*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11VideoDecoderOutputView> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D11VideoDecoderOutputView* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoderOutputView*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11VideoDecoderOutputView> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoDecoderOutputView* handle = comObj.Handle;
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoderOutputView*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11VideoDecoderOutputView> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoDecoderOutputView* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoderOutputView*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D11VideoDecoderOutputView> comObj) 
		{
			ID3D11VideoDecoderOutputView* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoderOutputView*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D11VideoDecoderOutputView> comObj) 
		{
			ID3D11VideoDecoderOutputView* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoderOutputView*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11VideoDecoderOutputView> comObj, ID3D11Device** ppDevice) 
		{
			ID3D11VideoDecoderOutputView* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoDecoderOutputView*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, ppDevice);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11VideoDecoderOutputView> comObj, ref ID3D11Device* ppDevice) 
		{
			ID3D11VideoDecoderOutputView* handle = comObj.Handle;
			fixed (ID3D11Device** pppDevice = &ppDevice)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoDecoderOutputView*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)pppDevice);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11VideoDecoderOutputView> comObj, out ComPtr<ID3D11Device> ppDevice) 
		{
			ID3D11VideoDecoderOutputView* handle = comObj.Handle;
			ppDevice = default;
			((delegate* unmanaged[Stdcall]<ID3D11VideoDecoderOutputView*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)ppDevice.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoDecoderOutputView> comObj, Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D11VideoDecoderOutputView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoderOutputView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoDecoderOutputView> comObj, ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D11VideoDecoderOutputView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoderOutputView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoDecoderOutputView> comObj, Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D11VideoDecoderOutputView* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoderOutputView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoDecoderOutputView> comObj, ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D11VideoDecoderOutputView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoderOutputView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoDecoderOutputView> comObj, Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoDecoderOutputView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoderOutputView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoDecoderOutputView> comObj, ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoDecoderOutputView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoderOutputView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoDecoderOutputView> comObj, Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoDecoderOutputView* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoderOutputView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoDecoderOutputView> comObj, ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoDecoderOutputView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoderOutputView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11VideoDecoderOutputView> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D11VideoDecoderOutputView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoderOutputView*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11VideoDecoderOutputView> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D11VideoDecoderOutputView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoderOutputView*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoDecoderOutputView> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D11VideoDecoderOutputView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoderOutputView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoDecoderOutputView> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D11VideoDecoderOutputView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoderOutputView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoDecoderOutputView> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D11VideoDecoderOutputView* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoderOutputView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoDecoderOutputView> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D11VideoDecoderOutputView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoderOutputView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoDecoderOutputView> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D11VideoDecoderOutputView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoderOutputView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoDecoderOutputView> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D11VideoDecoderOutputView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDecoderOutputView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResource(this ComPtr<ID3D11VideoDecoderOutputView> comObj, ID3D11Resource** ppResource) 
		{
			ID3D11VideoDecoderOutputView* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoDecoderOutputView*, ID3D11Resource**, void>)(handle->LpVtbl[7]))(handle, ppResource);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResource(this ComPtr<ID3D11VideoDecoderOutputView> comObj, ref ID3D11Resource* ppResource) 
		{
			ID3D11VideoDecoderOutputView* handle = comObj.Handle;
			fixed (ID3D11Resource** pppResource = &ppResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoDecoderOutputView*, ID3D11Resource**, void>)(handle->LpVtbl[7]))(handle, (ID3D11Resource**)pppResource);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResource(this ComPtr<ID3D11VideoDecoderOutputView> comObj, out ComPtr<ID3D11Resource> ppResource) 
		{
			ID3D11VideoDecoderOutputView* handle = comObj.Handle;
			ppResource = default;
			((delegate* unmanaged[Stdcall]<ID3D11VideoDecoderOutputView*, ID3D11Resource**, void>)(handle->LpVtbl[7]))(handle, (ID3D11Resource**)ppResource.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDesc(this ComPtr<ID3D11VideoDecoderOutputView> comObj, VideoDecoderOutputViewDesc* pDesc) 
		{
			ID3D11VideoDecoderOutputView* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoDecoderOutputView*, VideoDecoderOutputViewDesc*, void>)(handle->LpVtbl[8]))(handle, pDesc);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDesc(this ComPtr<ID3D11VideoDecoderOutputView> comObj, ref VideoDecoderOutputViewDesc pDesc) 
		{
			ID3D11VideoDecoderOutputView* handle = comObj.Handle;
			fixed (VideoDecoderOutputViewDesc* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoDecoderOutputView*, VideoDecoderOutputViewDesc*, void>)(handle->LpVtbl[8]))(handle, (VideoDecoderOutputViewDesc*)ppDesc);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11VideoProcessorInputView> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D11VideoProcessorInputView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorInputView*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11VideoProcessorInputView> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D11VideoProcessorInputView* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorInputView*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11VideoProcessorInputView> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoProcessorInputView* handle = comObj.Handle;
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorInputView*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11VideoProcessorInputView> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoProcessorInputView* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorInputView*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D11VideoProcessorInputView> comObj) 
		{
			ID3D11VideoProcessorInputView* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorInputView*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D11VideoProcessorInputView> comObj) 
		{
			ID3D11VideoProcessorInputView* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorInputView*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11VideoProcessorInputView> comObj, ID3D11Device** ppDevice) 
		{
			ID3D11VideoProcessorInputView* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorInputView*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, ppDevice);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11VideoProcessorInputView> comObj, ref ID3D11Device* ppDevice) 
		{
			ID3D11VideoProcessorInputView* handle = comObj.Handle;
			fixed (ID3D11Device** pppDevice = &ppDevice)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorInputView*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)pppDevice);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11VideoProcessorInputView> comObj, out ComPtr<ID3D11Device> ppDevice) 
		{
			ID3D11VideoProcessorInputView* handle = comObj.Handle;
			ppDevice = default;
			((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorInputView*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)ppDevice.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoProcessorInputView> comObj, Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D11VideoProcessorInputView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorInputView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoProcessorInputView> comObj, ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D11VideoProcessorInputView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorInputView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoProcessorInputView> comObj, Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D11VideoProcessorInputView* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorInputView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoProcessorInputView> comObj, ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D11VideoProcessorInputView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorInputView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoProcessorInputView> comObj, Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoProcessorInputView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorInputView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoProcessorInputView> comObj, ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoProcessorInputView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorInputView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoProcessorInputView> comObj, Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoProcessorInputView* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorInputView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoProcessorInputView> comObj, ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoProcessorInputView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorInputView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11VideoProcessorInputView> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D11VideoProcessorInputView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorInputView*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11VideoProcessorInputView> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D11VideoProcessorInputView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorInputView*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoProcessorInputView> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D11VideoProcessorInputView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorInputView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoProcessorInputView> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D11VideoProcessorInputView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorInputView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoProcessorInputView> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D11VideoProcessorInputView* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorInputView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoProcessorInputView> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D11VideoProcessorInputView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorInputView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoProcessorInputView> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D11VideoProcessorInputView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorInputView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoProcessorInputView> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D11VideoProcessorInputView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorInputView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResource(this ComPtr<ID3D11VideoProcessorInputView> comObj, ID3D11Resource** ppResource) 
		{
			ID3D11VideoProcessorInputView* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorInputView*, ID3D11Resource**, void>)(handle->LpVtbl[7]))(handle, ppResource);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResource(this ComPtr<ID3D11VideoProcessorInputView> comObj, ref ID3D11Resource* ppResource) 
		{
			ID3D11VideoProcessorInputView* handle = comObj.Handle;
			fixed (ID3D11Resource** pppResource = &ppResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorInputView*, ID3D11Resource**, void>)(handle->LpVtbl[7]))(handle, (ID3D11Resource**)pppResource);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResource(this ComPtr<ID3D11VideoProcessorInputView> comObj, out ComPtr<ID3D11Resource> ppResource) 
		{
			ID3D11VideoProcessorInputView* handle = comObj.Handle;
			ppResource = default;
			((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorInputView*, ID3D11Resource**, void>)(handle->LpVtbl[7]))(handle, (ID3D11Resource**)ppResource.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDesc(this ComPtr<ID3D11VideoProcessorInputView> comObj, VideoProcessorInputViewDesc* pDesc) 
		{
			ID3D11VideoProcessorInputView* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorInputView*, VideoProcessorInputViewDesc*, void>)(handle->LpVtbl[8]))(handle, pDesc);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDesc(this ComPtr<ID3D11VideoProcessorInputView> comObj, ref VideoProcessorInputViewDesc pDesc) 
		{
			ID3D11VideoProcessorInputView* handle = comObj.Handle;
			fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorInputView*, VideoProcessorInputViewDesc*, void>)(handle->LpVtbl[8]))(handle, (VideoProcessorInputViewDesc*)ppDesc);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11VideoProcessorOutputView> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D11VideoProcessorOutputView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorOutputView*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11VideoProcessorOutputView> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D11VideoProcessorOutputView* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorOutputView*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11VideoProcessorOutputView> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoProcessorOutputView* handle = comObj.Handle;
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorOutputView*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11VideoProcessorOutputView> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoProcessorOutputView* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorOutputView*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D11VideoProcessorOutputView> comObj) 
		{
			ID3D11VideoProcessorOutputView* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorOutputView*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D11VideoProcessorOutputView> comObj) 
		{
			ID3D11VideoProcessorOutputView* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorOutputView*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11VideoProcessorOutputView> comObj, ID3D11Device** ppDevice) 
		{
			ID3D11VideoProcessorOutputView* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorOutputView*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, ppDevice);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11VideoProcessorOutputView> comObj, ref ID3D11Device* ppDevice) 
		{
			ID3D11VideoProcessorOutputView* handle = comObj.Handle;
			fixed (ID3D11Device** pppDevice = &ppDevice)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorOutputView*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)pppDevice);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11VideoProcessorOutputView> comObj, out ComPtr<ID3D11Device> ppDevice) 
		{
			ID3D11VideoProcessorOutputView* handle = comObj.Handle;
			ppDevice = default;
			((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorOutputView*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)ppDevice.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoProcessorOutputView> comObj, Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D11VideoProcessorOutputView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorOutputView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoProcessorOutputView> comObj, ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D11VideoProcessorOutputView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorOutputView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoProcessorOutputView> comObj, Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D11VideoProcessorOutputView* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorOutputView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoProcessorOutputView> comObj, ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D11VideoProcessorOutputView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorOutputView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoProcessorOutputView> comObj, Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoProcessorOutputView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorOutputView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoProcessorOutputView> comObj, ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoProcessorOutputView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorOutputView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoProcessorOutputView> comObj, Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoProcessorOutputView* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorOutputView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoProcessorOutputView> comObj, ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoProcessorOutputView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorOutputView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11VideoProcessorOutputView> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D11VideoProcessorOutputView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorOutputView*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11VideoProcessorOutputView> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D11VideoProcessorOutputView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorOutputView*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoProcessorOutputView> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D11VideoProcessorOutputView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorOutputView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoProcessorOutputView> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D11VideoProcessorOutputView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorOutputView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoProcessorOutputView> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D11VideoProcessorOutputView* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorOutputView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoProcessorOutputView> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D11VideoProcessorOutputView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorOutputView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoProcessorOutputView> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D11VideoProcessorOutputView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorOutputView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoProcessorOutputView> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D11VideoProcessorOutputView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorOutputView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResource(this ComPtr<ID3D11VideoProcessorOutputView> comObj, ID3D11Resource** ppResource) 
		{
			ID3D11VideoProcessorOutputView* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorOutputView*, ID3D11Resource**, void>)(handle->LpVtbl[7]))(handle, ppResource);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResource(this ComPtr<ID3D11VideoProcessorOutputView> comObj, ref ID3D11Resource* ppResource) 
		{
			ID3D11VideoProcessorOutputView* handle = comObj.Handle;
			fixed (ID3D11Resource** pppResource = &ppResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorOutputView*, ID3D11Resource**, void>)(handle->LpVtbl[7]))(handle, (ID3D11Resource**)pppResource);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResource(this ComPtr<ID3D11VideoProcessorOutputView> comObj, out ComPtr<ID3D11Resource> ppResource) 
		{
			ID3D11VideoProcessorOutputView* handle = comObj.Handle;
			ppResource = default;
			((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorOutputView*, ID3D11Resource**, void>)(handle->LpVtbl[7]))(handle, (ID3D11Resource**)ppResource.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDesc(this ComPtr<ID3D11VideoProcessorOutputView> comObj, VideoProcessorOutputViewDesc* pDesc) 
		{
			ID3D11VideoProcessorOutputView* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorOutputView*, VideoProcessorOutputViewDesc*, void>)(handle->LpVtbl[8]))(handle, pDesc);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDesc(this ComPtr<ID3D11VideoProcessorOutputView> comObj, ref VideoProcessorOutputViewDesc pDesc) 
		{
			ID3D11VideoProcessorOutputView* handle = comObj.Handle;
			fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoProcessorOutputView*, VideoProcessorOutputViewDesc*, void>)(handle->LpVtbl[8]))(handle, (VideoProcessorOutputViewDesc*)ppDesc);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11VideoContext> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11VideoContext> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11VideoContext> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext* handle = comObj.Handle;
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11VideoContext> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D11VideoContext> comObj) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D11VideoContext> comObj) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11VideoContext> comObj, ID3D11Device** ppDevice) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, ppDevice);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11VideoContext> comObj, ref ID3D11Device* ppDevice) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (ID3D11Device** pppDevice = &ppDevice)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)pppDevice);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11VideoContext> comObj, out ComPtr<ID3D11Device> ppDevice) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			ppDevice = default;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)ppDevice.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoContext> comObj, Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoContext> comObj, ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoContext> comObj, Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoContext> comObj, ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoContext> comObj, Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoContext> comObj, ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoContext> comObj, Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoContext> comObj, ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11VideoContext> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11VideoContext> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoContext> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoContext> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoContext> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoContext> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoContext> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoContext> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDecoderBuffer(this ComPtr<ID3D11VideoContext> comObj, ID3D11VideoDecoder* pDecoder, VideoDecoderBufferType type, uint* pBufferSize, void** ppBuffer) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, VideoDecoderBufferType, uint*, void**, HResult>)(handle->LpVtbl[7]))(handle, pDecoder, type, pBufferSize, ppBuffer);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDecoderBuffer(this ComPtr<ID3D11VideoContext> comObj, ref ID3D11VideoDecoder pDecoder, VideoDecoderBufferType type, uint* pBufferSize, void** ppBuffer) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, VideoDecoderBufferType, uint*, void**, HResult>)(handle->LpVtbl[7]))(handle, (ID3D11VideoDecoder*)ppDecoder, type, pBufferSize, ppBuffer);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDecoderBuffer(this ComPtr<ID3D11VideoContext> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, VideoDecoderBufferType type, uint* pBufferSize, void** ppBuffer) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, VideoDecoderBufferType, uint*, void**, HResult>)(handle->LpVtbl[7]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, type, pBufferSize, ppBuffer);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDecoderBuffer(this ComPtr<ID3D11VideoContext> comObj, ID3D11VideoDecoder* pDecoder, VideoDecoderBufferType type, ref uint pBufferSize, void** ppBuffer) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (uint* ppBufferSize = &pBufferSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, VideoDecoderBufferType, uint*, void**, HResult>)(handle->LpVtbl[7]))(handle, pDecoder, type, (uint*)ppBufferSize, ppBuffer);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDecoderBuffer(this ComPtr<ID3D11VideoContext> comObj, ref ID3D11VideoDecoder pDecoder, VideoDecoderBufferType type, ref uint pBufferSize, void** ppBuffer) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (uint* ppBufferSize = &pBufferSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, VideoDecoderBufferType, uint*, void**, HResult>)(handle->LpVtbl[7]))(handle, (ID3D11VideoDecoder*)ppDecoder, type, (uint*)ppBufferSize, ppBuffer);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDecoderBuffer(this ComPtr<ID3D11VideoContext> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, VideoDecoderBufferType type, ref uint pBufferSize, void** ppBuffer) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (uint* ppBufferSize = &pBufferSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, VideoDecoderBufferType, uint*, void**, HResult>)(handle->LpVtbl[7]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, type, (uint*)ppBufferSize, ppBuffer);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDecoderBuffer<T>(this ComPtr<ID3D11VideoContext> comObj, ID3D11VideoDecoder* pDecoder, VideoDecoderBufferType type, uint* pBufferSize, out ComPtr<T> ppBuffer) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext* handle = comObj.Handle;
			ppBuffer = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, VideoDecoderBufferType, uint*, void**, HResult>)(handle->LpVtbl[7]))(handle, pDecoder, type, pBufferSize, (void**)ppBuffer.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDecoderBuffer<T>(this ComPtr<ID3D11VideoContext> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, VideoDecoderBufferType type, uint* pBufferSize, out ComPtr<T> ppBuffer) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext* handle = comObj.Handle;
			ppBuffer = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, VideoDecoderBufferType, uint*, void**, HResult>)(handle->LpVtbl[7]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, type, pBufferSize, (void**)ppBuffer.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDecoderBuffer<T>(this ComPtr<ID3D11VideoContext> comObj, ID3D11VideoDecoder* pDecoder, VideoDecoderBufferType type, ref uint pBufferSize, out ComPtr<T> ppBuffer) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (uint* ppBufferSize = &pBufferSize)
			{
				ppBuffer = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, VideoDecoderBufferType, uint*, void**, HResult>)(handle->LpVtbl[7]))(handle, pDecoder, type, (uint*)ppBufferSize, (void**)ppBuffer.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDecoderBuffer<T>(this ComPtr<ID3D11VideoContext> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, VideoDecoderBufferType type, ref uint pBufferSize, out ComPtr<T> ppBuffer) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (uint* ppBufferSize = &pBufferSize)
			{
				ppBuffer = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, VideoDecoderBufferType, uint*, void**, HResult>)(handle->LpVtbl[7]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, type, (uint*)ppBufferSize, (void**)ppBuffer.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult ReleaseDecoderBuffer(this ComPtr<ID3D11VideoContext> comObj, ID3D11VideoDecoder* pDecoder, VideoDecoderBufferType type) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, VideoDecoderBufferType, HResult>)(handle->LpVtbl[8]))(handle, pDecoder, type);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult ReleaseDecoderBuffer(this ComPtr<ID3D11VideoContext> comObj, ref ID3D11VideoDecoder pDecoder, VideoDecoderBufferType type) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, VideoDecoderBufferType, HResult>)(handle->LpVtbl[8]))(handle, (ID3D11VideoDecoder*)ppDecoder, type);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult ReleaseDecoderBuffer(this ComPtr<ID3D11VideoContext> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, VideoDecoderBufferType type) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, VideoDecoderBufferType, HResult>)(handle->LpVtbl[8]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, type);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame(this ComPtr<ID3D11VideoContext> comObj, ID3D11VideoDecoder* pDecoder, ID3D11VideoDecoderOutputView* pView, uint contentKeySize, void* pContentKey) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, HResult>)(handle->LpVtbl[9]))(handle, pDecoder, pView, contentKeySize, pContentKey);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame(this ComPtr<ID3D11VideoContext> comObj, ref ID3D11VideoDecoder pDecoder, ID3D11VideoDecoderOutputView* pView, uint contentKeySize, void* pContentKey) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, HResult>)(handle->LpVtbl[9]))(handle, (ID3D11VideoDecoder*)ppDecoder, pView, contentKeySize, pContentKey);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame(this ComPtr<ID3D11VideoContext> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, ID3D11VideoDecoderOutputView* pView, uint contentKeySize, void* pContentKey) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, HResult>)(handle->LpVtbl[9]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, pView, contentKeySize, pContentKey);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame(this ComPtr<ID3D11VideoContext> comObj, ID3D11VideoDecoder* pDecoder, ref ID3D11VideoDecoderOutputView pView, uint contentKeySize, void* pContentKey) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (ID3D11VideoDecoderOutputView* ppView = &pView)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, HResult>)(handle->LpVtbl[9]))(handle, pDecoder, (ID3D11VideoDecoderOutputView*)ppView, contentKeySize, pContentKey);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame(this ComPtr<ID3D11VideoContext> comObj, ID3D11VideoDecoder* pDecoder, ComPtr<ID3D11VideoDecoderOutputView> pView, uint contentKeySize, void* pContentKey) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, HResult>)(handle->LpVtbl[9]))(handle, pDecoder, (ID3D11VideoDecoderOutputView*)pView.Handle, contentKeySize, pContentKey);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame(this ComPtr<ID3D11VideoContext> comObj, ref ID3D11VideoDecoder pDecoder, ref ID3D11VideoDecoderOutputView pView, uint contentKeySize, void* pContentKey) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (ID3D11VideoDecoderOutputView* ppView = &pView)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, HResult>)(handle->LpVtbl[9]))(handle, (ID3D11VideoDecoder*)ppDecoder, (ID3D11VideoDecoderOutputView*)ppView, contentKeySize, pContentKey);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame(this ComPtr<ID3D11VideoContext> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, ComPtr<ID3D11VideoDecoderOutputView> pView, uint contentKeySize, void* pContentKey) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, HResult>)(handle->LpVtbl[9]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, (ID3D11VideoDecoderOutputView*)pView.Handle, contentKeySize, pContentKey);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderEndFrame(this ComPtr<ID3D11VideoContext> comObj, ID3D11VideoDecoder* pDecoder) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, HResult>)(handle->LpVtbl[10]))(handle, pDecoder);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderEndFrame(this ComPtr<ID3D11VideoContext> comObj, ref ID3D11VideoDecoder pDecoder) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, HResult>)(handle->LpVtbl[10]))(handle, (ID3D11VideoDecoder*)ppDecoder);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderEndFrame(this ComPtr<ID3D11VideoContext> comObj, ComPtr<ID3D11VideoDecoder> pDecoder) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, HResult>)(handle->LpVtbl[10]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SubmitDecoderBuffers(this ComPtr<ID3D11VideoContext> comObj, ID3D11VideoDecoder* pDecoder, uint numBuffers, VideoDecoderBufferDesc* pBufferDesc) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, uint, VideoDecoderBufferDesc*, HResult>)(handle->LpVtbl[11]))(handle, pDecoder, numBuffers, pBufferDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SubmitDecoderBuffers(this ComPtr<ID3D11VideoContext> comObj, ref ID3D11VideoDecoder pDecoder, uint numBuffers, VideoDecoderBufferDesc* pBufferDesc) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, uint, VideoDecoderBufferDesc*, HResult>)(handle->LpVtbl[11]))(handle, (ID3D11VideoDecoder*)ppDecoder, numBuffers, pBufferDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SubmitDecoderBuffers(this ComPtr<ID3D11VideoContext> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, uint numBuffers, VideoDecoderBufferDesc* pBufferDesc) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, uint, VideoDecoderBufferDesc*, HResult>)(handle->LpVtbl[11]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, numBuffers, pBufferDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SubmitDecoderBuffers(this ComPtr<ID3D11VideoContext> comObj, ID3D11VideoDecoder* pDecoder, uint numBuffers, ref VideoDecoderBufferDesc pBufferDesc) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (VideoDecoderBufferDesc* ppBufferDesc = &pBufferDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, uint, VideoDecoderBufferDesc*, HResult>)(handle->LpVtbl[11]))(handle, pDecoder, numBuffers, (VideoDecoderBufferDesc*)ppBufferDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SubmitDecoderBuffers(this ComPtr<ID3D11VideoContext> comObj, ref ID3D11VideoDecoder pDecoder, uint numBuffers, ref VideoDecoderBufferDesc pBufferDesc) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (VideoDecoderBufferDesc* ppBufferDesc = &pBufferDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, uint, VideoDecoderBufferDesc*, HResult>)(handle->LpVtbl[11]))(handle, (ID3D11VideoDecoder*)ppDecoder, numBuffers, (VideoDecoderBufferDesc*)ppBufferDesc);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SubmitDecoderBuffers(this ComPtr<ID3D11VideoContext> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, uint numBuffers, ref VideoDecoderBufferDesc pBufferDesc) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (VideoDecoderBufferDesc* ppBufferDesc = &pBufferDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, uint, VideoDecoderBufferDesc*, HResult>)(handle->LpVtbl[11]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, numBuffers, (VideoDecoderBufferDesc*)ppBufferDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderExtension(this ComPtr<ID3D11VideoContext> comObj, ID3D11VideoDecoder* pDecoder, VideoDecoderExtension* pExtensionData) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, VideoDecoderExtension*, HResult>)(handle->LpVtbl[12]))(handle, pDecoder, pExtensionData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderExtension(this ComPtr<ID3D11VideoContext> comObj, ref ID3D11VideoDecoder pDecoder, VideoDecoderExtension* pExtensionData) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, VideoDecoderExtension*, HResult>)(handle->LpVtbl[12]))(handle, (ID3D11VideoDecoder*)ppDecoder, pExtensionData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderExtension(this ComPtr<ID3D11VideoContext> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, VideoDecoderExtension* pExtensionData) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, VideoDecoderExtension*, HResult>)(handle->LpVtbl[12]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, pExtensionData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderExtension(this ComPtr<ID3D11VideoContext> comObj, ID3D11VideoDecoder* pDecoder, ref VideoDecoderExtension pExtensionData) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (VideoDecoderExtension* ppExtensionData = &pExtensionData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, VideoDecoderExtension*, HResult>)(handle->LpVtbl[12]))(handle, pDecoder, (VideoDecoderExtension*)ppExtensionData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderExtension(this ComPtr<ID3D11VideoContext> comObj, ref ID3D11VideoDecoder pDecoder, ref VideoDecoderExtension pExtensionData) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (VideoDecoderExtension* ppExtensionData = &pExtensionData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, VideoDecoderExtension*, HResult>)(handle->LpVtbl[12]))(handle, (ID3D11VideoDecoder*)ppDecoder, (VideoDecoderExtension*)ppExtensionData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderExtension(this ComPtr<ID3D11VideoContext> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, ref VideoDecoderExtension pExtensionData) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			fixed (VideoDecoderExtension* ppExtensionData = &pExtensionData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoDecoder*, VideoDecoderExtension*, HResult>)(handle->LpVtbl[12]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, (VideoDecoderExtension*)ppExtensionData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputTargetRect(this ComPtr<ID3D11VideoContext> comObj, ID3D11VideoProcessor* pVideoProcessor, Bool32 enable, Rect32* pRect) 
		{
			ID3D11VideoContext* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext*, ID3D11VideoProcessor*, Bool32, Rect32*, void>)(handle->LpVtbl[13]))(handle, pVideoProcessor, enable, pRect);
		}
	}
}
