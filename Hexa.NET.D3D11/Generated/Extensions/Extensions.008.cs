// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D11
{
	public static unsafe partial class Extensions
	{

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11Device> comObj, Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Device* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[34]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11Device> comObj, ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Device* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[34]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11Device> comObj, Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Device* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[34]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11Device> comObj, ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Device* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[34]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11Device> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D11Device* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device*, Guid*, uint, void*, HResult>)(handle->LpVtbl[35]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11Device> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D11Device* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device*, Guid*, uint, void*, HResult>)(handle->LpVtbl[35]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Device> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D11Device* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[36]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Device> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D11Device* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[36]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Device> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D11Device* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[36]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Device> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D11Device* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[36]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Device> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D11Device* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[36]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Device> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D11Device* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[36]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static FeatureLevel GetFeatureLevel(this ComPtr<ID3D11Device> comObj) 
		{
			ID3D11Device* handle = comObj.Handle;
			FeatureLevel ret = ((delegate* unmanaged[Stdcall]<ID3D11Device*, FeatureLevel>)(handle->LpVtbl[37]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint GetCreationFlags(this ComPtr<ID3D11Device> comObj) 
		{
			ID3D11Device* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11Device*, uint>)(handle->LpVtbl[38]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDeviceRemovedReason(this ComPtr<ID3D11Device> comObj) 
		{
			ID3D11Device* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device*, HResult>)(handle->LpVtbl[39]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetImmediateContext(this ComPtr<ID3D11Device> comObj, ID3D11DeviceContext** ppImmediateContext) 
		{
			ID3D11Device* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Device*, ID3D11DeviceContext**, void>)(handle->LpVtbl[40]))(handle, ppImmediateContext);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetImmediateContext(this ComPtr<ID3D11Device> comObj, ref ID3D11DeviceContext* ppImmediateContext) 
		{
			ID3D11Device* handle = comObj.Handle;
			fixed (ID3D11DeviceContext** pppImmediateContext = &ppImmediateContext)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Device*, ID3D11DeviceContext**, void>)(handle->LpVtbl[40]))(handle, (ID3D11DeviceContext**)pppImmediateContext);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetImmediateContext(this ComPtr<ID3D11Device> comObj, out ComPtr<ID3D11DeviceContext> ppImmediateContext) 
		{
			ID3D11Device* handle = comObj.Handle;
			ppImmediateContext = default;
			((delegate* unmanaged[Stdcall]<ID3D11Device*, ID3D11DeviceContext**, void>)(handle->LpVtbl[40]))(handle, (ID3D11DeviceContext**)ppImmediateContext.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetExceptionMode(this ComPtr<ID3D11Device> comObj, uint raiseFlags) 
		{
			ID3D11Device* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device*, uint, HResult>)(handle->LpVtbl[41]))(handle, raiseFlags);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint GetExceptionMode(this ComPtr<ID3D11Device> comObj) 
		{
			ID3D11Device* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11Device*, uint>)(handle->LpVtbl[42]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11Buffer> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D11Buffer* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Buffer*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11Buffer> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D11Buffer* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Buffer*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11Buffer> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Buffer* handle = comObj.Handle;
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Buffer*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11Buffer> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Buffer* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Buffer*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D11Buffer> comObj) 
		{
			ID3D11Buffer* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11Buffer*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D11Buffer> comObj) 
		{
			ID3D11Buffer* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11Buffer*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11Buffer> comObj, ID3D11Device** ppDevice) 
		{
			ID3D11Buffer* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Buffer*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, ppDevice);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11Buffer> comObj, ref ID3D11Device* ppDevice) 
		{
			ID3D11Buffer* handle = comObj.Handle;
			fixed (ID3D11Device** pppDevice = &ppDevice)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Buffer*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)pppDevice);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11Buffer> comObj, out ComPtr<ID3D11Device> ppDevice) 
		{
			ID3D11Buffer* handle = comObj.Handle;
			ppDevice = default;
			((delegate* unmanaged[Stdcall]<ID3D11Buffer*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)ppDevice.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11Buffer> comObj, Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D11Buffer* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Buffer*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11Buffer> comObj, ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D11Buffer* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Buffer*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11Buffer> comObj, Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D11Buffer* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Buffer*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11Buffer> comObj, ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D11Buffer* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Buffer*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11Buffer> comObj, Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Buffer* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Buffer*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11Buffer> comObj, ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Buffer* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Buffer*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11Buffer> comObj, Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Buffer* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Buffer*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11Buffer> comObj, ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Buffer* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Buffer*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11Buffer> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D11Buffer* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Buffer*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11Buffer> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D11Buffer* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Buffer*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Buffer> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D11Buffer* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Buffer*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Buffer> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D11Buffer* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Buffer*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Buffer> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D11Buffer* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Buffer*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Buffer> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D11Buffer* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Buffer*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Buffer> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D11Buffer* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Buffer*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Buffer> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D11Buffer* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Buffer*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetType(this ComPtr<ID3D11Buffer> comObj, ResourceDimension* pResourceDimension) 
		{
			ID3D11Buffer* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Buffer*, ResourceDimension*, void>)(handle->LpVtbl[7]))(handle, pResourceDimension);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetType(this ComPtr<ID3D11Buffer> comObj, ref ResourceDimension pResourceDimension) 
		{
			ID3D11Buffer* handle = comObj.Handle;
			fixed (ResourceDimension* ppResourceDimension = &pResourceDimension)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Buffer*, ResourceDimension*, void>)(handle->LpVtbl[7]))(handle, (ResourceDimension*)ppResourceDimension);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetEvictionPriority(this ComPtr<ID3D11Buffer> comObj, uint evictionPriority) 
		{
			ID3D11Buffer* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Buffer*, uint, void>)(handle->LpVtbl[8]))(handle, evictionPriority);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint GetEvictionPriority(this ComPtr<ID3D11Buffer> comObj) 
		{
			ID3D11Buffer* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11Buffer*, uint>)(handle->LpVtbl[9]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDesc(this ComPtr<ID3D11Buffer> comObj, BufferDesc* pDesc) 
		{
			ID3D11Buffer* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Buffer*, BufferDesc*, void>)(handle->LpVtbl[10]))(handle, pDesc);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDesc(this ComPtr<ID3D11Buffer> comObj, ref BufferDesc pDesc) 
		{
			ID3D11Buffer* handle = comObj.Handle;
			fixed (BufferDesc* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Buffer*, BufferDesc*, void>)(handle->LpVtbl[10]))(handle, (BufferDesc*)ppDesc);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11Resource> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D11Resource* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Resource*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11Resource> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D11Resource* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Resource*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11Resource> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Resource* handle = comObj.Handle;
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Resource*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11Resource> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Resource* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Resource*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D11Resource> comObj) 
		{
			ID3D11Resource* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11Resource*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D11Resource> comObj) 
		{
			ID3D11Resource* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11Resource*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11Resource> comObj, ID3D11Device** ppDevice) 
		{
			ID3D11Resource* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Resource*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, ppDevice);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11Resource> comObj, ref ID3D11Device* ppDevice) 
		{
			ID3D11Resource* handle = comObj.Handle;
			fixed (ID3D11Device** pppDevice = &ppDevice)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Resource*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)pppDevice);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11Resource> comObj, out ComPtr<ID3D11Device> ppDevice) 
		{
			ID3D11Resource* handle = comObj.Handle;
			ppDevice = default;
			((delegate* unmanaged[Stdcall]<ID3D11Resource*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)ppDevice.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11Resource> comObj, Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D11Resource* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Resource*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11Resource> comObj, ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D11Resource* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Resource*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11Resource> comObj, Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D11Resource* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Resource*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11Resource> comObj, ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D11Resource* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Resource*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11Resource> comObj, Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Resource* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Resource*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11Resource> comObj, ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Resource* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Resource*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11Resource> comObj, Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Resource* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Resource*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11Resource> comObj, ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Resource* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Resource*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11Resource> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D11Resource* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Resource*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11Resource> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D11Resource* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Resource*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Resource> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D11Resource* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Resource*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Resource> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D11Resource* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Resource*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Resource> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D11Resource* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Resource*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Resource> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D11Resource* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Resource*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Resource> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D11Resource* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Resource*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Resource> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D11Resource* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Resource*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetType(this ComPtr<ID3D11Resource> comObj, ResourceDimension* pResourceDimension) 
		{
			ID3D11Resource* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Resource*, ResourceDimension*, void>)(handle->LpVtbl[7]))(handle, pResourceDimension);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetType(this ComPtr<ID3D11Resource> comObj, ref ResourceDimension pResourceDimension) 
		{
			ID3D11Resource* handle = comObj.Handle;
			fixed (ResourceDimension* ppResourceDimension = &pResourceDimension)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Resource*, ResourceDimension*, void>)(handle->LpVtbl[7]))(handle, (ResourceDimension*)ppResourceDimension);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetEvictionPriority(this ComPtr<ID3D11Resource> comObj, uint evictionPriority) 
		{
			ID3D11Resource* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Resource*, uint, void>)(handle->LpVtbl[8]))(handle, evictionPriority);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint GetEvictionPriority(this ComPtr<ID3D11Resource> comObj) 
		{
			ID3D11Resource* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11Resource*, uint>)(handle->LpVtbl[9]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11Texture1D> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D11Texture1D* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11Texture1D> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D11Texture1D* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11Texture1D> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Texture1D* handle = comObj.Handle;
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11Texture1D> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Texture1D* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D11Texture1D> comObj) 
		{
			ID3D11Texture1D* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D11Texture1D> comObj) 
		{
			ID3D11Texture1D* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11Texture1D> comObj, ID3D11Device** ppDevice) 
		{
			ID3D11Texture1D* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, ppDevice);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11Texture1D> comObj, ref ID3D11Device* ppDevice) 
		{
			ID3D11Texture1D* handle = comObj.Handle;
			fixed (ID3D11Device** pppDevice = &ppDevice)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)pppDevice);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11Texture1D> comObj, out ComPtr<ID3D11Device> ppDevice) 
		{
			ID3D11Texture1D* handle = comObj.Handle;
			ppDevice = default;
			((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)ppDevice.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11Texture1D> comObj, Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D11Texture1D* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11Texture1D> comObj, ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D11Texture1D* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11Texture1D> comObj, Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D11Texture1D* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11Texture1D> comObj, ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D11Texture1D* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11Texture1D> comObj, Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Texture1D* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11Texture1D> comObj, ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Texture1D* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11Texture1D> comObj, Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Texture1D* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11Texture1D> comObj, ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Texture1D* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11Texture1D> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D11Texture1D* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11Texture1D> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D11Texture1D* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Texture1D> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D11Texture1D* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Texture1D> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D11Texture1D* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Texture1D> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D11Texture1D* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Texture1D> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D11Texture1D* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Texture1D> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D11Texture1D* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Texture1D> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D11Texture1D* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetType(this ComPtr<ID3D11Texture1D> comObj, ResourceDimension* pResourceDimension) 
		{
			ID3D11Texture1D* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, ResourceDimension*, void>)(handle->LpVtbl[7]))(handle, pResourceDimension);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetType(this ComPtr<ID3D11Texture1D> comObj, ref ResourceDimension pResourceDimension) 
		{
			ID3D11Texture1D* handle = comObj.Handle;
			fixed (ResourceDimension* ppResourceDimension = &pResourceDimension)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, ResourceDimension*, void>)(handle->LpVtbl[7]))(handle, (ResourceDimension*)ppResourceDimension);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetEvictionPriority(this ComPtr<ID3D11Texture1D> comObj, uint evictionPriority) 
		{
			ID3D11Texture1D* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, uint, void>)(handle->LpVtbl[8]))(handle, evictionPriority);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint GetEvictionPriority(this ComPtr<ID3D11Texture1D> comObj) 
		{
			ID3D11Texture1D* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, uint>)(handle->LpVtbl[9]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDesc(this ComPtr<ID3D11Texture1D> comObj, Texture1DDesc* pDesc) 
		{
			ID3D11Texture1D* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, Texture1DDesc*, void>)(handle->LpVtbl[10]))(handle, pDesc);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDesc(this ComPtr<ID3D11Texture1D> comObj, ref Texture1DDesc pDesc) 
		{
			ID3D11Texture1D* handle = comObj.Handle;
			fixed (Texture1DDesc* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Texture1D*, Texture1DDesc*, void>)(handle->LpVtbl[10]))(handle, (Texture1DDesc*)ppDesc);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11Texture2D> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D11Texture2D* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11Texture2D> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D11Texture2D* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11Texture2D> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Texture2D* handle = comObj.Handle;
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11Texture2D> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Texture2D* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D11Texture2D> comObj) 
		{
			ID3D11Texture2D* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D11Texture2D> comObj) 
		{
			ID3D11Texture2D* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11Texture2D> comObj, ID3D11Device** ppDevice) 
		{
			ID3D11Texture2D* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, ppDevice);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11Texture2D> comObj, ref ID3D11Device* ppDevice) 
		{
			ID3D11Texture2D* handle = comObj.Handle;
			fixed (ID3D11Device** pppDevice = &ppDevice)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)pppDevice);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11Texture2D> comObj, out ComPtr<ID3D11Device> ppDevice) 
		{
			ID3D11Texture2D* handle = comObj.Handle;
			ppDevice = default;
			((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)ppDevice.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11Texture2D> comObj, Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D11Texture2D* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11Texture2D> comObj, ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D11Texture2D* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11Texture2D> comObj, Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D11Texture2D* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11Texture2D> comObj, ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D11Texture2D* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11Texture2D> comObj, Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Texture2D* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11Texture2D> comObj, ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Texture2D* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11Texture2D> comObj, Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Texture2D* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11Texture2D> comObj, ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Texture2D* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11Texture2D> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D11Texture2D* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11Texture2D> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D11Texture2D* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Texture2D> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D11Texture2D* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Texture2D> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D11Texture2D* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Texture2D> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D11Texture2D* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Texture2D> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D11Texture2D* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Texture2D> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D11Texture2D* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Texture2D> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D11Texture2D* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetType(this ComPtr<ID3D11Texture2D> comObj, ResourceDimension* pResourceDimension) 
		{
			ID3D11Texture2D* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, ResourceDimension*, void>)(handle->LpVtbl[7]))(handle, pResourceDimension);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetType(this ComPtr<ID3D11Texture2D> comObj, ref ResourceDimension pResourceDimension) 
		{
			ID3D11Texture2D* handle = comObj.Handle;
			fixed (ResourceDimension* ppResourceDimension = &pResourceDimension)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, ResourceDimension*, void>)(handle->LpVtbl[7]))(handle, (ResourceDimension*)ppResourceDimension);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetEvictionPriority(this ComPtr<ID3D11Texture2D> comObj, uint evictionPriority) 
		{
			ID3D11Texture2D* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, uint, void>)(handle->LpVtbl[8]))(handle, evictionPriority);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint GetEvictionPriority(this ComPtr<ID3D11Texture2D> comObj) 
		{
			ID3D11Texture2D* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, uint>)(handle->LpVtbl[9]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDesc(this ComPtr<ID3D11Texture2D> comObj, Texture2DDesc* pDesc) 
		{
			ID3D11Texture2D* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, Texture2DDesc*, void>)(handle->LpVtbl[10]))(handle, pDesc);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDesc(this ComPtr<ID3D11Texture2D> comObj, ref Texture2DDesc pDesc) 
		{
			ID3D11Texture2D* handle = comObj.Handle;
			fixed (Texture2DDesc* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Texture2D*, Texture2DDesc*, void>)(handle->LpVtbl[10]))(handle, (Texture2DDesc*)ppDesc);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11Texture3D> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D11Texture3D* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11Texture3D> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D11Texture3D* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11Texture3D> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Texture3D* handle = comObj.Handle;
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11Texture3D> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Texture3D* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D11Texture3D> comObj) 
		{
			ID3D11Texture3D* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D11Texture3D> comObj) 
		{
			ID3D11Texture3D* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11Texture3D> comObj, ID3D11Device** ppDevice) 
		{
			ID3D11Texture3D* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, ppDevice);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11Texture3D> comObj, ref ID3D11Device* ppDevice) 
		{
			ID3D11Texture3D* handle = comObj.Handle;
			fixed (ID3D11Device** pppDevice = &ppDevice)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)pppDevice);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11Texture3D> comObj, out ComPtr<ID3D11Device> ppDevice) 
		{
			ID3D11Texture3D* handle = comObj.Handle;
			ppDevice = default;
			((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)ppDevice.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11Texture3D> comObj, Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D11Texture3D* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11Texture3D> comObj, ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D11Texture3D* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11Texture3D> comObj, Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D11Texture3D* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11Texture3D> comObj, ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D11Texture3D* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11Texture3D> comObj, Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Texture3D* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11Texture3D> comObj, ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Texture3D* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11Texture3D> comObj, Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Texture3D* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11Texture3D> comObj, ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Texture3D* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11Texture3D> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D11Texture3D* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11Texture3D> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D11Texture3D* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Texture3D> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D11Texture3D* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Texture3D> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D11Texture3D* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Texture3D> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D11Texture3D* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Texture3D> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D11Texture3D* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Texture3D> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D11Texture3D* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11Texture3D> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D11Texture3D* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetType(this ComPtr<ID3D11Texture3D> comObj, ResourceDimension* pResourceDimension) 
		{
			ID3D11Texture3D* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, ResourceDimension*, void>)(handle->LpVtbl[7]))(handle, pResourceDimension);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetType(this ComPtr<ID3D11Texture3D> comObj, ref ResourceDimension pResourceDimension) 
		{
			ID3D11Texture3D* handle = comObj.Handle;
			fixed (ResourceDimension* ppResourceDimension = &pResourceDimension)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, ResourceDimension*, void>)(handle->LpVtbl[7]))(handle, (ResourceDimension*)ppResourceDimension);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void SetEvictionPriority(this ComPtr<ID3D11Texture3D> comObj, uint evictionPriority) 
		{
			ID3D11Texture3D* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, uint, void>)(handle->LpVtbl[8]))(handle, evictionPriority);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint GetEvictionPriority(this ComPtr<ID3D11Texture3D> comObj) 
		{
			ID3D11Texture3D* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, uint>)(handle->LpVtbl[9]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDesc(this ComPtr<ID3D11Texture3D> comObj, Texture3DDesc* pDesc) 
		{
			ID3D11Texture3D* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, Texture3DDesc*, void>)(handle->LpVtbl[10]))(handle, pDesc);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDesc(this ComPtr<ID3D11Texture3D> comObj, ref Texture3DDesc pDesc) 
		{
			ID3D11Texture3D* handle = comObj.Handle;
			fixed (Texture3DDesc* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Texture3D*, Texture3DDesc*, void>)(handle->LpVtbl[10]))(handle, (Texture3DDesc*)ppDesc);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11ShaderResourceView> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D11ShaderResourceView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderResourceView*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11ShaderResourceView> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D11ShaderResourceView* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderResourceView*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11ShaderResourceView> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11ShaderResourceView* handle = comObj.Handle;
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderResourceView*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11ShaderResourceView> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11ShaderResourceView* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderResourceView*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D11ShaderResourceView> comObj) 
		{
			ID3D11ShaderResourceView* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderResourceView*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D11ShaderResourceView> comObj) 
		{
			ID3D11ShaderResourceView* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderResourceView*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11ShaderResourceView> comObj, ID3D11Device** ppDevice) 
		{
			ID3D11ShaderResourceView* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11ShaderResourceView*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, ppDevice);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11ShaderResourceView> comObj, ref ID3D11Device* ppDevice) 
		{
			ID3D11ShaderResourceView* handle = comObj.Handle;
			fixed (ID3D11Device** pppDevice = &ppDevice)
			{
				((delegate* unmanaged[Stdcall]<ID3D11ShaderResourceView*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)pppDevice);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11ShaderResourceView> comObj, out ComPtr<ID3D11Device> ppDevice) 
		{
			ID3D11ShaderResourceView* handle = comObj.Handle;
			ppDevice = default;
			((delegate* unmanaged[Stdcall]<ID3D11ShaderResourceView*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)ppDevice.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11ShaderResourceView> comObj, Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D11ShaderResourceView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderResourceView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11ShaderResourceView> comObj, ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D11ShaderResourceView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderResourceView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11ShaderResourceView> comObj, Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D11ShaderResourceView* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderResourceView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11ShaderResourceView> comObj, ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D11ShaderResourceView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderResourceView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11ShaderResourceView> comObj, Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11ShaderResourceView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderResourceView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11ShaderResourceView> comObj, ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11ShaderResourceView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderResourceView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11ShaderResourceView> comObj, Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11ShaderResourceView* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderResourceView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11ShaderResourceView> comObj, ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11ShaderResourceView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderResourceView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11ShaderResourceView> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D11ShaderResourceView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderResourceView*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11ShaderResourceView> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D11ShaderResourceView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderResourceView*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11ShaderResourceView> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D11ShaderResourceView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderResourceView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11ShaderResourceView> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D11ShaderResourceView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderResourceView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11ShaderResourceView> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D11ShaderResourceView* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderResourceView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11ShaderResourceView> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D11ShaderResourceView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderResourceView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11ShaderResourceView> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D11ShaderResourceView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderResourceView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11ShaderResourceView> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D11ShaderResourceView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderResourceView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResource(this ComPtr<ID3D11ShaderResourceView> comObj, ID3D11Resource** ppResource) 
		{
			ID3D11ShaderResourceView* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11ShaderResourceView*, ID3D11Resource**, void>)(handle->LpVtbl[7]))(handle, ppResource);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResource(this ComPtr<ID3D11ShaderResourceView> comObj, ref ID3D11Resource* ppResource) 
		{
			ID3D11ShaderResourceView* handle = comObj.Handle;
			fixed (ID3D11Resource** pppResource = &ppResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D11ShaderResourceView*, ID3D11Resource**, void>)(handle->LpVtbl[7]))(handle, (ID3D11Resource**)pppResource);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResource(this ComPtr<ID3D11ShaderResourceView> comObj, out ComPtr<ID3D11Resource> ppResource) 
		{
			ID3D11ShaderResourceView* handle = comObj.Handle;
			ppResource = default;
			((delegate* unmanaged[Stdcall]<ID3D11ShaderResourceView*, ID3D11Resource**, void>)(handle->LpVtbl[7]))(handle, (ID3D11Resource**)ppResource.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDesc(this ComPtr<ID3D11ShaderResourceView> comObj, ShaderResourceViewDesc* pDesc) 
		{
			ID3D11ShaderResourceView* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11ShaderResourceView*, ShaderResourceViewDesc*, void>)(handle->LpVtbl[8]))(handle, pDesc);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDesc(this ComPtr<ID3D11ShaderResourceView> comObj, ref ShaderResourceViewDesc pDesc) 
		{
			ID3D11ShaderResourceView* handle = comObj.Handle;
			fixed (ShaderResourceViewDesc* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D11ShaderResourceView*, ShaderResourceViewDesc*, void>)(handle->LpVtbl[8]))(handle, (ShaderResourceViewDesc*)ppDesc);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11View> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D11View* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11View*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11View> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D11View* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11View*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11View> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11View* handle = comObj.Handle;
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11View*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11View> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11View* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11View*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D11View> comObj) 
		{
			ID3D11View* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11View*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D11View> comObj) 
		{
			ID3D11View* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11View*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11View> comObj, ID3D11Device** ppDevice) 
		{
			ID3D11View* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11View*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, ppDevice);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11View> comObj, ref ID3D11Device* ppDevice) 
		{
			ID3D11View* handle = comObj.Handle;
			fixed (ID3D11Device** pppDevice = &ppDevice)
			{
				((delegate* unmanaged[Stdcall]<ID3D11View*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)pppDevice);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11View> comObj, out ComPtr<ID3D11Device> ppDevice) 
		{
			ID3D11View* handle = comObj.Handle;
			ppDevice = default;
			((delegate* unmanaged[Stdcall]<ID3D11View*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)ppDevice.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11View> comObj, Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D11View* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11View*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11View> comObj, ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D11View* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11View*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11View> comObj, Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D11View* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11View*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11View> comObj, ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D11View* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11View*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11View> comObj, Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11View* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11View*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11View> comObj, ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11View* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11View*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11View> comObj, Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11View* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11View*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11View> comObj, ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11View* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11View*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11View> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D11View* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11View*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11View> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D11View* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11View*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11View> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D11View* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11View*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11View> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D11View* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11View*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11View> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D11View* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11View*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11View> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D11View* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11View*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11View> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D11View* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11View*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11View> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D11View* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11View*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResource(this ComPtr<ID3D11View> comObj, ID3D11Resource** ppResource) 
		{
			ID3D11View* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11View*, ID3D11Resource**, void>)(handle->LpVtbl[7]))(handle, ppResource);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResource(this ComPtr<ID3D11View> comObj, ref ID3D11Resource* ppResource) 
		{
			ID3D11View* handle = comObj.Handle;
			fixed (ID3D11Resource** pppResource = &ppResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D11View*, ID3D11Resource**, void>)(handle->LpVtbl[7]))(handle, (ID3D11Resource**)pppResource);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResource(this ComPtr<ID3D11View> comObj, out ComPtr<ID3D11Resource> ppResource) 
		{
			ID3D11View* handle = comObj.Handle;
			ppResource = default;
			((delegate* unmanaged[Stdcall]<ID3D11View*, ID3D11Resource**, void>)(handle->LpVtbl[7]))(handle, (ID3D11Resource**)ppResource.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11UnorderedAccessView> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D11UnorderedAccessView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11UnorderedAccessView*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11UnorderedAccessView> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D11UnorderedAccessView* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11UnorderedAccessView*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11UnorderedAccessView> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11UnorderedAccessView* handle = comObj.Handle;
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11UnorderedAccessView*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11UnorderedAccessView> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11UnorderedAccessView* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11UnorderedAccessView*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D11UnorderedAccessView> comObj) 
		{
			ID3D11UnorderedAccessView* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11UnorderedAccessView*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D11UnorderedAccessView> comObj) 
		{
			ID3D11UnorderedAccessView* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11UnorderedAccessView*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11UnorderedAccessView> comObj, ID3D11Device** ppDevice) 
		{
			ID3D11UnorderedAccessView* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11UnorderedAccessView*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, ppDevice);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11UnorderedAccessView> comObj, ref ID3D11Device* ppDevice) 
		{
			ID3D11UnorderedAccessView* handle = comObj.Handle;
			fixed (ID3D11Device** pppDevice = &ppDevice)
			{
				((delegate* unmanaged[Stdcall]<ID3D11UnorderedAccessView*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)pppDevice);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11UnorderedAccessView> comObj, out ComPtr<ID3D11Device> ppDevice) 
		{
			ID3D11UnorderedAccessView* handle = comObj.Handle;
			ppDevice = default;
			((delegate* unmanaged[Stdcall]<ID3D11UnorderedAccessView*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)ppDevice.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11UnorderedAccessView> comObj, Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D11UnorderedAccessView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11UnorderedAccessView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11UnorderedAccessView> comObj, ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D11UnorderedAccessView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11UnorderedAccessView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11UnorderedAccessView> comObj, Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D11UnorderedAccessView* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11UnorderedAccessView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11UnorderedAccessView> comObj, ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D11UnorderedAccessView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11UnorderedAccessView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11UnorderedAccessView> comObj, Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11UnorderedAccessView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11UnorderedAccessView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11UnorderedAccessView> comObj, ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11UnorderedAccessView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11UnorderedAccessView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11UnorderedAccessView> comObj, Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11UnorderedAccessView* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11UnorderedAccessView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11UnorderedAccessView> comObj, ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11UnorderedAccessView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11UnorderedAccessView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11UnorderedAccessView> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D11UnorderedAccessView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11UnorderedAccessView*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11UnorderedAccessView> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D11UnorderedAccessView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11UnorderedAccessView*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11UnorderedAccessView> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D11UnorderedAccessView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11UnorderedAccessView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11UnorderedAccessView> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D11UnorderedAccessView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11UnorderedAccessView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11UnorderedAccessView> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D11UnorderedAccessView* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11UnorderedAccessView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11UnorderedAccessView> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D11UnorderedAccessView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11UnorderedAccessView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11UnorderedAccessView> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D11UnorderedAccessView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11UnorderedAccessView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11UnorderedAccessView> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D11UnorderedAccessView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11UnorderedAccessView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResource(this ComPtr<ID3D11UnorderedAccessView> comObj, ID3D11Resource** ppResource) 
		{
			ID3D11UnorderedAccessView* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11UnorderedAccessView*, ID3D11Resource**, void>)(handle->LpVtbl[7]))(handle, ppResource);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResource(this ComPtr<ID3D11UnorderedAccessView> comObj, ref ID3D11Resource* ppResource) 
		{
			ID3D11UnorderedAccessView* handle = comObj.Handle;
			fixed (ID3D11Resource** pppResource = &ppResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D11UnorderedAccessView*, ID3D11Resource**, void>)(handle->LpVtbl[7]))(handle, (ID3D11Resource**)pppResource);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResource(this ComPtr<ID3D11UnorderedAccessView> comObj, out ComPtr<ID3D11Resource> ppResource) 
		{
			ID3D11UnorderedAccessView* handle = comObj.Handle;
			ppResource = default;
			((delegate* unmanaged[Stdcall]<ID3D11UnorderedAccessView*, ID3D11Resource**, void>)(handle->LpVtbl[7]))(handle, (ID3D11Resource**)ppResource.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDesc(this ComPtr<ID3D11UnorderedAccessView> comObj, UnorderedAccessViewDesc* pDesc) 
		{
			ID3D11UnorderedAccessView* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11UnorderedAccessView*, UnorderedAccessViewDesc*, void>)(handle->LpVtbl[8]))(handle, pDesc);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDesc(this ComPtr<ID3D11UnorderedAccessView> comObj, ref UnorderedAccessViewDesc pDesc) 
		{
			ID3D11UnorderedAccessView* handle = comObj.Handle;
			fixed (UnorderedAccessViewDesc* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D11UnorderedAccessView*, UnorderedAccessViewDesc*, void>)(handle->LpVtbl[8]))(handle, (UnorderedAccessViewDesc*)ppDesc);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11RenderTargetView> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D11RenderTargetView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11RenderTargetView*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11RenderTargetView> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D11RenderTargetView* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11RenderTargetView*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11RenderTargetView> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11RenderTargetView* handle = comObj.Handle;
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11RenderTargetView*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11RenderTargetView> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11RenderTargetView* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11RenderTargetView*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D11RenderTargetView> comObj) 
		{
			ID3D11RenderTargetView* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11RenderTargetView*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D11RenderTargetView> comObj) 
		{
			ID3D11RenderTargetView* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11RenderTargetView*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11RenderTargetView> comObj, ID3D11Device** ppDevice) 
		{
			ID3D11RenderTargetView* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11RenderTargetView*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, ppDevice);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11RenderTargetView> comObj, ref ID3D11Device* ppDevice) 
		{
			ID3D11RenderTargetView* handle = comObj.Handle;
			fixed (ID3D11Device** pppDevice = &ppDevice)
			{
				((delegate* unmanaged[Stdcall]<ID3D11RenderTargetView*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)pppDevice);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11RenderTargetView> comObj, out ComPtr<ID3D11Device> ppDevice) 
		{
			ID3D11RenderTargetView* handle = comObj.Handle;
			ppDevice = default;
			((delegate* unmanaged[Stdcall]<ID3D11RenderTargetView*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)ppDevice.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11RenderTargetView> comObj, Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D11RenderTargetView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11RenderTargetView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11RenderTargetView> comObj, ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D11RenderTargetView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11RenderTargetView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11RenderTargetView> comObj, Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D11RenderTargetView* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11RenderTargetView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11RenderTargetView> comObj, ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D11RenderTargetView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11RenderTargetView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11RenderTargetView> comObj, Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11RenderTargetView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11RenderTargetView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11RenderTargetView> comObj, ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11RenderTargetView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11RenderTargetView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11RenderTargetView> comObj, Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11RenderTargetView* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11RenderTargetView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11RenderTargetView> comObj, ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11RenderTargetView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11RenderTargetView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11RenderTargetView> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D11RenderTargetView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11RenderTargetView*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11RenderTargetView> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D11RenderTargetView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11RenderTargetView*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11RenderTargetView> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D11RenderTargetView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11RenderTargetView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11RenderTargetView> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D11RenderTargetView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11RenderTargetView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11RenderTargetView> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D11RenderTargetView* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11RenderTargetView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11RenderTargetView> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D11RenderTargetView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11RenderTargetView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11RenderTargetView> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D11RenderTargetView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11RenderTargetView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11RenderTargetView> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D11RenderTargetView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11RenderTargetView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResource(this ComPtr<ID3D11RenderTargetView> comObj, ID3D11Resource** ppResource) 
		{
			ID3D11RenderTargetView* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11RenderTargetView*, ID3D11Resource**, void>)(handle->LpVtbl[7]))(handle, ppResource);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResource(this ComPtr<ID3D11RenderTargetView> comObj, ref ID3D11Resource* ppResource) 
		{
			ID3D11RenderTargetView* handle = comObj.Handle;
			fixed (ID3D11Resource** pppResource = &ppResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D11RenderTargetView*, ID3D11Resource**, void>)(handle->LpVtbl[7]))(handle, (ID3D11Resource**)pppResource);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResource(this ComPtr<ID3D11RenderTargetView> comObj, out ComPtr<ID3D11Resource> ppResource) 
		{
			ID3D11RenderTargetView* handle = comObj.Handle;
			ppResource = default;
			((delegate* unmanaged[Stdcall]<ID3D11RenderTargetView*, ID3D11Resource**, void>)(handle->LpVtbl[7]))(handle, (ID3D11Resource**)ppResource.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDesc(this ComPtr<ID3D11RenderTargetView> comObj, RenderTargetViewDesc* pDesc) 
		{
			ID3D11RenderTargetView* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11RenderTargetView*, RenderTargetViewDesc*, void>)(handle->LpVtbl[8]))(handle, pDesc);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDesc(this ComPtr<ID3D11RenderTargetView> comObj, ref RenderTargetViewDesc pDesc) 
		{
			ID3D11RenderTargetView* handle = comObj.Handle;
			fixed (RenderTargetViewDesc* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D11RenderTargetView*, RenderTargetViewDesc*, void>)(handle->LpVtbl[8]))(handle, (RenderTargetViewDesc*)ppDesc);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11DepthStencilView> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D11DepthStencilView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DepthStencilView*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11DepthStencilView> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D11DepthStencilView* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DepthStencilView*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11DepthStencilView> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11DepthStencilView* handle = comObj.Handle;
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DepthStencilView*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11DepthStencilView> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11DepthStencilView* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DepthStencilView*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D11DepthStencilView> comObj) 
		{
			ID3D11DepthStencilView* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11DepthStencilView*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D11DepthStencilView> comObj) 
		{
			ID3D11DepthStencilView* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11DepthStencilView*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11DepthStencilView> comObj, ID3D11Device** ppDevice) 
		{
			ID3D11DepthStencilView* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11DepthStencilView*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, ppDevice);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11DepthStencilView> comObj, ref ID3D11Device* ppDevice) 
		{
			ID3D11DepthStencilView* handle = comObj.Handle;
			fixed (ID3D11Device** pppDevice = &ppDevice)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DepthStencilView*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)pppDevice);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11DepthStencilView> comObj, out ComPtr<ID3D11Device> ppDevice) 
		{
			ID3D11DepthStencilView* handle = comObj.Handle;
			ppDevice = default;
			((delegate* unmanaged[Stdcall]<ID3D11DepthStencilView*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)ppDevice.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11DepthStencilView> comObj, Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D11DepthStencilView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DepthStencilView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11DepthStencilView> comObj, ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D11DepthStencilView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DepthStencilView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11DepthStencilView> comObj, Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D11DepthStencilView* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DepthStencilView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11DepthStencilView> comObj, ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D11DepthStencilView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DepthStencilView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11DepthStencilView> comObj, Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11DepthStencilView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DepthStencilView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11DepthStencilView> comObj, ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11DepthStencilView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DepthStencilView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11DepthStencilView> comObj, Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11DepthStencilView* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DepthStencilView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11DepthStencilView> comObj, ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11DepthStencilView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DepthStencilView*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11DepthStencilView> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D11DepthStencilView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DepthStencilView*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11DepthStencilView> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D11DepthStencilView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DepthStencilView*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11DepthStencilView> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D11DepthStencilView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DepthStencilView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11DepthStencilView> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D11DepthStencilView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DepthStencilView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11DepthStencilView> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D11DepthStencilView* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DepthStencilView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11DepthStencilView> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D11DepthStencilView* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DepthStencilView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11DepthStencilView> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D11DepthStencilView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DepthStencilView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11DepthStencilView> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D11DepthStencilView* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DepthStencilView*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResource(this ComPtr<ID3D11DepthStencilView> comObj, ID3D11Resource** ppResource) 
		{
			ID3D11DepthStencilView* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11DepthStencilView*, ID3D11Resource**, void>)(handle->LpVtbl[7]))(handle, ppResource);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResource(this ComPtr<ID3D11DepthStencilView> comObj, ref ID3D11Resource* ppResource) 
		{
			ID3D11DepthStencilView* handle = comObj.Handle;
			fixed (ID3D11Resource** pppResource = &ppResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DepthStencilView*, ID3D11Resource**, void>)(handle->LpVtbl[7]))(handle, (ID3D11Resource**)pppResource);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResource(this ComPtr<ID3D11DepthStencilView> comObj, out ComPtr<ID3D11Resource> ppResource) 
		{
			ID3D11DepthStencilView* handle = comObj.Handle;
			ppResource = default;
			((delegate* unmanaged[Stdcall]<ID3D11DepthStencilView*, ID3D11Resource**, void>)(handle->LpVtbl[7]))(handle, (ID3D11Resource**)ppResource.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDesc(this ComPtr<ID3D11DepthStencilView> comObj, DepthStencilViewDesc* pDesc) 
		{
			ID3D11DepthStencilView* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11DepthStencilView*, DepthStencilViewDesc*, void>)(handle->LpVtbl[8]))(handle, pDesc);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDesc(this ComPtr<ID3D11DepthStencilView> comObj, ref DepthStencilViewDesc pDesc) 
		{
			ID3D11DepthStencilView* handle = comObj.Handle;
			fixed (DepthStencilViewDesc* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DepthStencilView*, DepthStencilViewDesc*, void>)(handle->LpVtbl[8]))(handle, (DepthStencilViewDesc*)ppDesc);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11InputLayout> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D11InputLayout* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11InputLayout*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11InputLayout> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D11InputLayout* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11InputLayout*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11InputLayout> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11InputLayout* handle = comObj.Handle;
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11InputLayout*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11InputLayout> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11InputLayout* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11InputLayout*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D11InputLayout> comObj) 
		{
			ID3D11InputLayout* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11InputLayout*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D11InputLayout> comObj) 
		{
			ID3D11InputLayout* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11InputLayout*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11InputLayout> comObj, ID3D11Device** ppDevice) 
		{
			ID3D11InputLayout* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11InputLayout*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, ppDevice);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11InputLayout> comObj, ref ID3D11Device* ppDevice) 
		{
			ID3D11InputLayout* handle = comObj.Handle;
			fixed (ID3D11Device** pppDevice = &ppDevice)
			{
				((delegate* unmanaged[Stdcall]<ID3D11InputLayout*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)pppDevice);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11InputLayout> comObj, out ComPtr<ID3D11Device> ppDevice) 
		{
			ID3D11InputLayout* handle = comObj.Handle;
			ppDevice = default;
			((delegate* unmanaged[Stdcall]<ID3D11InputLayout*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)ppDevice.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11InputLayout> comObj, Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D11InputLayout* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11InputLayout*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11InputLayout> comObj, ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D11InputLayout* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11InputLayout*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11InputLayout> comObj, Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D11InputLayout* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11InputLayout*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11InputLayout> comObj, ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D11InputLayout* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11InputLayout*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11InputLayout> comObj, Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11InputLayout* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11InputLayout*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11InputLayout> comObj, ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11InputLayout* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11InputLayout*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11InputLayout> comObj, Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11InputLayout* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11InputLayout*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11InputLayout> comObj, ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11InputLayout* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11InputLayout*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11InputLayout> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D11InputLayout* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11InputLayout*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11InputLayout> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D11InputLayout* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11InputLayout*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11InputLayout> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D11InputLayout* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11InputLayout*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11InputLayout> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D11InputLayout* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11InputLayout*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11InputLayout> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D11InputLayout* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11InputLayout*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11InputLayout> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D11InputLayout* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11InputLayout*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11InputLayout> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D11InputLayout* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11InputLayout*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11InputLayout> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D11InputLayout* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11InputLayout*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11ClassLinkage> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11ClassLinkage> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11ClassLinkage> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11ClassLinkage> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D11ClassLinkage> comObj) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D11ClassLinkage> comObj) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11ClassLinkage> comObj, ID3D11Device** ppDevice) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, ppDevice);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11ClassLinkage> comObj, ref ID3D11Device* ppDevice) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			fixed (ID3D11Device** pppDevice = &ppDevice)
			{
				((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)pppDevice);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11ClassLinkage> comObj, out ComPtr<ID3D11Device> ppDevice) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			ppDevice = default;
			((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)ppDevice.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11ClassLinkage> comObj, Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11ClassLinkage> comObj, ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11ClassLinkage> comObj, Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11ClassLinkage> comObj, ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11ClassLinkage> comObj, Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11ClassLinkage> comObj, ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11ClassLinkage> comObj, Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11ClassLinkage> comObj, ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11ClassLinkage> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11ClassLinkage> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11ClassLinkage> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11ClassLinkage> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11ClassLinkage> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11ClassLinkage> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11ClassLinkage> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11ClassLinkage> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetClassInstance(this ComPtr<ID3D11ClassLinkage> comObj, byte* pClassInstanceName, uint instanceIndex, ID3D11ClassInstance** ppInstance) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, byte*, uint, ID3D11ClassInstance**, HResult>)(handle->LpVtbl[7]))(handle, pClassInstanceName, instanceIndex, ppInstance);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetClassInstance(this ComPtr<ID3D11ClassLinkage> comObj, ReadOnlySpan<byte> pClassInstanceName, uint instanceIndex, ID3D11ClassInstance** ppInstance) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			fixed (byte* ppClassInstanceName = pClassInstanceName)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, byte*, uint, ID3D11ClassInstance**, HResult>)(handle->LpVtbl[7]))(handle, (byte*)ppClassInstanceName, instanceIndex, ppInstance);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetClassInstance(this ComPtr<ID3D11ClassLinkage> comObj, string pClassInstanceName, uint instanceIndex, ID3D11ClassInstance** ppInstance) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (pClassInstanceName != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(pClassInstanceName);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(pClassInstanceName, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, byte*, uint, ID3D11ClassInstance**, HResult>)(handle->LpVtbl[7]))(handle, pStr0, instanceIndex, ppInstance);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetClassInstance(this ComPtr<ID3D11ClassLinkage> comObj, byte* pClassInstanceName, uint instanceIndex, ref ID3D11ClassInstance* ppInstance) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			fixed (ID3D11ClassInstance** pppInstance = &ppInstance)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, byte*, uint, ID3D11ClassInstance**, HResult>)(handle->LpVtbl[7]))(handle, pClassInstanceName, instanceIndex, (ID3D11ClassInstance**)pppInstance);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetClassInstance(this ComPtr<ID3D11ClassLinkage> comObj, byte* pClassInstanceName, uint instanceIndex, out ComPtr<ID3D11ClassInstance> ppInstance) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			ppInstance = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, byte*, uint, ID3D11ClassInstance**, HResult>)(handle->LpVtbl[7]))(handle, pClassInstanceName, instanceIndex, (ID3D11ClassInstance**)ppInstance.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetClassInstance(this ComPtr<ID3D11ClassLinkage> comObj, ReadOnlySpan<byte> pClassInstanceName, uint instanceIndex, ref ID3D11ClassInstance* ppInstance) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			fixed (byte* ppClassInstanceName = pClassInstanceName)
			{
				fixed (ID3D11ClassInstance** pppInstance = &ppInstance)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, byte*, uint, ID3D11ClassInstance**, HResult>)(handle->LpVtbl[7]))(handle, (byte*)ppClassInstanceName, instanceIndex, (ID3D11ClassInstance**)pppInstance);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetClassInstance(this ComPtr<ID3D11ClassLinkage> comObj, string pClassInstanceName, uint instanceIndex, ref ID3D11ClassInstance* ppInstance) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (pClassInstanceName != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(pClassInstanceName);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(pClassInstanceName, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			fixed (ID3D11ClassInstance** pppInstance = &ppInstance)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, byte*, uint, ID3D11ClassInstance**, HResult>)(handle->LpVtbl[7]))(handle, pStr0, instanceIndex, (ID3D11ClassInstance**)pppInstance);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateClassInstance(this ComPtr<ID3D11ClassLinkage> comObj, byte* pClassTypeName, uint constantBufferOffset, uint constantVectorOffset, uint textureOffset, uint samplerOffset, ID3D11ClassInstance** ppInstance) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, byte*, uint, uint, uint, uint, ID3D11ClassInstance**, HResult>)(handle->LpVtbl[8]))(handle, pClassTypeName, constantBufferOffset, constantVectorOffset, textureOffset, samplerOffset, ppInstance);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateClassInstance(this ComPtr<ID3D11ClassLinkage> comObj, ReadOnlySpan<byte> pClassTypeName, uint constantBufferOffset, uint constantVectorOffset, uint textureOffset, uint samplerOffset, ID3D11ClassInstance** ppInstance) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			fixed (byte* ppClassTypeName = pClassTypeName)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, byte*, uint, uint, uint, uint, ID3D11ClassInstance**, HResult>)(handle->LpVtbl[8]))(handle, (byte*)ppClassTypeName, constantBufferOffset, constantVectorOffset, textureOffset, samplerOffset, ppInstance);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateClassInstance(this ComPtr<ID3D11ClassLinkage> comObj, string pClassTypeName, uint constantBufferOffset, uint constantVectorOffset, uint textureOffset, uint samplerOffset, ID3D11ClassInstance** ppInstance) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (pClassTypeName != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(pClassTypeName);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(pClassTypeName, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, byte*, uint, uint, uint, uint, ID3D11ClassInstance**, HResult>)(handle->LpVtbl[8]))(handle, pStr0, constantBufferOffset, constantVectorOffset, textureOffset, samplerOffset, ppInstance);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateClassInstance(this ComPtr<ID3D11ClassLinkage> comObj, byte* pClassTypeName, uint constantBufferOffset, uint constantVectorOffset, uint textureOffset, uint samplerOffset, ref ID3D11ClassInstance* ppInstance) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			fixed (ID3D11ClassInstance** pppInstance = &ppInstance)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, byte*, uint, uint, uint, uint, ID3D11ClassInstance**, HResult>)(handle->LpVtbl[8]))(handle, pClassTypeName, constantBufferOffset, constantVectorOffset, textureOffset, samplerOffset, (ID3D11ClassInstance**)pppInstance);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateClassInstance(this ComPtr<ID3D11ClassLinkage> comObj, byte* pClassTypeName, uint constantBufferOffset, uint constantVectorOffset, uint textureOffset, uint samplerOffset, out ComPtr<ID3D11ClassInstance> ppInstance) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			ppInstance = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, byte*, uint, uint, uint, uint, ID3D11ClassInstance**, HResult>)(handle->LpVtbl[8]))(handle, pClassTypeName, constantBufferOffset, constantVectorOffset, textureOffset, samplerOffset, (ID3D11ClassInstance**)ppInstance.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateClassInstance(this ComPtr<ID3D11ClassLinkage> comObj, ReadOnlySpan<byte> pClassTypeName, uint constantBufferOffset, uint constantVectorOffset, uint textureOffset, uint samplerOffset, ref ID3D11ClassInstance* ppInstance) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			fixed (byte* ppClassTypeName = pClassTypeName)
			{
				fixed (ID3D11ClassInstance** pppInstance = &ppInstance)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, byte*, uint, uint, uint, uint, ID3D11ClassInstance**, HResult>)(handle->LpVtbl[8]))(handle, (byte*)ppClassTypeName, constantBufferOffset, constantVectorOffset, textureOffset, samplerOffset, (ID3D11ClassInstance**)pppInstance);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateClassInstance(this ComPtr<ID3D11ClassLinkage> comObj, string pClassTypeName, uint constantBufferOffset, uint constantVectorOffset, uint textureOffset, uint samplerOffset, ref ID3D11ClassInstance* ppInstance) 
		{
			ID3D11ClassLinkage* handle = comObj.Handle;
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (pClassTypeName != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(pClassTypeName);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(pClassTypeName, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			fixed (ID3D11ClassInstance** pppInstance = &ppInstance)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassLinkage*, byte*, uint, uint, uint, uint, ID3D11ClassInstance**, HResult>)(handle->LpVtbl[8]))(handle, pStr0, constantBufferOffset, constantVectorOffset, textureOffset, samplerOffset, (ID3D11ClassInstance**)pppInstance);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11ClassInstance> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11ClassInstance> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11ClassInstance> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11ClassInstance> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D11ClassInstance> comObj) 
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D11ClassInstance> comObj) 
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11ClassInstance> comObj, ID3D11Device** ppDevice) 
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, ppDevice);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11ClassInstance> comObj, ref ID3D11Device* ppDevice) 
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			fixed (ID3D11Device** pppDevice = &ppDevice)
			{
				((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)pppDevice);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11ClassInstance> comObj, out ComPtr<ID3D11Device> ppDevice) 
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			ppDevice = default;
			((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)ppDevice.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11ClassInstance> comObj, Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11ClassInstance> comObj, ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11ClassInstance> comObj, Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11ClassInstance> comObj, ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11ClassInstance> comObj, Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11ClassInstance> comObj, ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11ClassInstance> comObj, Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11ClassInstance> comObj, ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11ClassInstance> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11ClassInstance> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11ClassInstance> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11ClassInstance> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11ClassInstance> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11ClassInstance> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11ClassInstance> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11ClassInstance> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetClassLinkage(this ComPtr<ID3D11ClassInstance> comObj, ID3D11ClassLinkage** ppLinkage) 
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, ID3D11ClassLinkage**, void>)(handle->LpVtbl[7]))(handle, ppLinkage);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetClassLinkage(this ComPtr<ID3D11ClassInstance> comObj, ref ID3D11ClassLinkage* ppLinkage) 
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			fixed (ID3D11ClassLinkage** pppLinkage = &ppLinkage)
			{
				((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, ID3D11ClassLinkage**, void>)(handle->LpVtbl[7]))(handle, (ID3D11ClassLinkage**)pppLinkage);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetClassLinkage(this ComPtr<ID3D11ClassInstance> comObj, out ComPtr<ID3D11ClassLinkage> ppLinkage) 
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			ppLinkage = default;
			((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, ID3D11ClassLinkage**, void>)(handle->LpVtbl[7]))(handle, (ID3D11ClassLinkage**)ppLinkage.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDesc(this ComPtr<ID3D11ClassInstance> comObj, ClassInstanceDesc* pDesc) 
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, ClassInstanceDesc*, void>)(handle->LpVtbl[8]))(handle, pDesc);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDesc(this ComPtr<ID3D11ClassInstance> comObj, ref ClassInstanceDesc pDesc) 
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			fixed (ClassInstanceDesc* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, ClassInstanceDesc*, void>)(handle->LpVtbl[8]))(handle, (ClassInstanceDesc*)ppDesc);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetInstanceName(this ComPtr<ID3D11ClassInstance> comObj, byte* pInstanceName, nuint* pBufferLength) 
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, byte*, nuint*, void>)(handle->LpVtbl[9]))(handle, pInstanceName, pBufferLength);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetInstanceName(this ComPtr<ID3D11ClassInstance> comObj, ReadOnlySpan<byte> pInstanceName, nuint* pBufferLength) 
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			fixed (byte* ppInstanceName = pInstanceName)
			{
				((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, byte*, nuint*, void>)(handle->LpVtbl[9]))(handle, (byte*)ppInstanceName, pBufferLength);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetInstanceName(this ComPtr<ID3D11ClassInstance> comObj, string pInstanceName, nuint* pBufferLength) 
		{
			ID3D11ClassInstance* handle = comObj.Handle;
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (pInstanceName != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(pInstanceName);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(pInstanceName, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			((delegate* unmanaged[Stdcall]<ID3D11ClassInstance*, byte*, nuint*, void>)(handle->LpVtbl[9]))(handle, pStr0, pBufferLength);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}
	}
}
