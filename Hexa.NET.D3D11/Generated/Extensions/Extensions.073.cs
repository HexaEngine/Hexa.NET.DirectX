// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D11
{
	public static unsafe partial class Extensions
	{

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateDeferredContext2(this ComPtr<ID3D11Device5> comObj, uint contextFlags, ID3D11DeviceContext2** ppDeferredContext) 
		{
			ID3D11Device5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, uint, ID3D11DeviceContext2**, HResult>)(handle->LpVtbl[51]))(handle, contextFlags, ppDeferredContext);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateDeferredContext2(this ComPtr<ID3D11Device5> comObj, uint contextFlags, ref ID3D11DeviceContext2* ppDeferredContext) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11DeviceContext2** pppDeferredContext = &ppDeferredContext)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, uint, ID3D11DeviceContext2**, HResult>)(handle->LpVtbl[51]))(handle, contextFlags, (ID3D11DeviceContext2**)pppDeferredContext);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateDeferredContext2(this ComPtr<ID3D11Device5> comObj, uint contextFlags, out ComPtr<ID3D11DeviceContext2> ppDeferredContext) 
		{
			ID3D11Device5* handle = comObj.Handle;
			ppDeferredContext = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, uint, ID3D11DeviceContext2**, HResult>)(handle->LpVtbl[51]))(handle, contextFlags, (ID3D11DeviceContext2**)ppDeferredContext.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, uint* pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, uint* pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, uint* pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, ref uint pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, ref uint pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, ref uint pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, pNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
				{
					((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, pNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, pNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
				{
					((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
					{
						((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
				{
					((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, uint* pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, pNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, uint* pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, pNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, uint* pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, pNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, ref uint pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, ref uint pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, ref uint pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, pNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, pNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, pNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
					{
						fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
						{
							((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, uint* pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, uint* pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
				{
					((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, uint* pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, ref uint pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
				{
					((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, ref uint pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, ref uint pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
				{
					((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
			{
				fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
				{
					((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, pNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, pNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
			{
				fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
				{
					((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, pNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
					{
						fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
						{
							((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, uint* pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
			{
				fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
				{
					((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, pNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, uint* pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, pNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, uint* pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
			{
				fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
				{
					((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, pNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, ref uint pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, ref uint pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
						{
							((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, ref uint pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, pNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
						{
							((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, pNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, pNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
						{
							((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
					{
						fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
						{
							fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
							{
								((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
						{
							((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, uint* pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, uint* pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
				{
					((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, uint* pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, ref uint pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
				{
					((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, ref uint pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, ref uint pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
				{
					((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
			{
				fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
				{
					((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, pNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, pNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
			{
				fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
				{
					((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, pNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
					{
						fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
						{
							((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, uint* pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
			{
				fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
				{
					((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, pNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, uint* pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, pNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, uint* pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
			{
				fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
				{
					((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, pNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, ref uint pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, ref uint pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
						{
							((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, ref uint pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, pNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
						{
							((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, pNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, pNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
						{
							((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
					{
						fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
						{
							fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
							{
								((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
						{
							((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, pNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, uint* pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
			{
				fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
				{
					((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, uint* pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, uint* pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
			{
				fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
				{
					((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, ref uint pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, ref uint pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
						{
							((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, ref uint pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
			{
				fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, pNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
						{
							((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, pNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
			{
				fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, pNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
						{
							((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
					{
						fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
						{
							fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
							{
								((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
						{
							((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, pStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, uint* pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
			{
				fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, pNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, uint* pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
						{
							((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, pNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, uint* pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
			{
				fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
				{
					fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
					{
						((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, pNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, ref uint pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
						{
							((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, ref uint pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
						{
							fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
							{
								((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, ref uint pNumTilesForEntireResource, PackedMipDesc* pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
						{
							((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, pPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
						{
							((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, pNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
						{
							fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
							{
								((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, pNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, uint* pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
			{
				fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
				{
					fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
					{
						fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
						{
							((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, pNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
						{
							fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
							{
								((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, pTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
				{
					fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
					{
						fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
						{
							fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
							{
								fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
								{
									((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)ppTiledResource, (uint*)ppNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
								}
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetResourceTiling(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pTiledResource, ref uint pNumTilesForEntireResource, ref PackedMipDesc pPackedMipDesc, ref TileShape pStandardTileShapeForNonPackedMips, ref uint pNumSubresourceTilings, uint firstSubresourceTilingToGet, ref SubresourceTiling pSubresourceTilingsForNonPackedMips) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumTilesForEntireResource = &pNumTilesForEntireResource)
			{
				fixed (PackedMipDesc* ppPackedMipDesc = &pPackedMipDesc)
				{
					fixed (TileShape* ppStandardTileShapeForNonPackedMips = &pStandardTileShapeForNonPackedMips)
					{
						fixed (uint* ppNumSubresourceTilings = &pNumSubresourceTilings)
						{
							fixed (SubresourceTiling* ppSubresourceTilingsForNonPackedMips = &pSubresourceTilingsForNonPackedMips)
							{
								((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint*, PackedMipDesc*, TileShape*, uint*, uint, SubresourceTiling*, void>)(handle->LpVtbl[52]))(handle, (ID3D11Resource*)pTiledResource.Handle, (uint*)ppNumTilesForEntireResource, (PackedMipDesc*)ppPackedMipDesc, (TileShape*)ppStandardTileShapeForNonPackedMips, (uint*)ppNumSubresourceTilings, firstSubresourceTilingToGet, (SubresourceTiling*)ppSubresourceTilingsForNonPackedMips);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CheckMultisampleQualityLevels1(this ComPtr<ID3D11Device5> comObj, Format format, uint sampleCount, uint flags, uint* pNumQualityLevels) 
		{
			ID3D11Device5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, Format, uint, uint, uint*, HResult>)(handle->LpVtbl[53]))(handle, format, sampleCount, flags, pNumQualityLevels);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CheckMultisampleQualityLevels1(this ComPtr<ID3D11Device5> comObj, Format format, uint sampleCount, uint flags, ref uint pNumQualityLevels) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppNumQualityLevels = &pNumQualityLevels)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, Format, uint, uint, uint*, HResult>)(handle->LpVtbl[53]))(handle, format, sampleCount, flags, (uint*)ppNumQualityLevels);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateTexture2D1(this ComPtr<ID3D11Device5> comObj, Texture2DDesc1* pDesc1, SubresourceData* pInitialData, ID3D11Texture2D1** ppTexture2D) 
		{
			ID3D11Device5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, Texture2DDesc1*, SubresourceData*, ID3D11Texture2D1**, HResult>)(handle->LpVtbl[54]))(handle, pDesc1, pInitialData, ppTexture2D);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateTexture2D1(this ComPtr<ID3D11Device5> comObj, ref Texture2DDesc1 pDesc1, SubresourceData* pInitialData, ID3D11Texture2D1** ppTexture2D) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (Texture2DDesc1* ppDesc1 = &pDesc1)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, Texture2DDesc1*, SubresourceData*, ID3D11Texture2D1**, HResult>)(handle->LpVtbl[54]))(handle, (Texture2DDesc1*)ppDesc1, pInitialData, ppTexture2D);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateTexture2D1(this ComPtr<ID3D11Device5> comObj, Texture2DDesc1* pDesc1, ref SubresourceData pInitialData, ID3D11Texture2D1** ppTexture2D) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (SubresourceData* ppInitialData = &pInitialData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, Texture2DDesc1*, SubresourceData*, ID3D11Texture2D1**, HResult>)(handle->LpVtbl[54]))(handle, pDesc1, (SubresourceData*)ppInitialData, ppTexture2D);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateTexture2D1(this ComPtr<ID3D11Device5> comObj, ref Texture2DDesc1 pDesc1, ref SubresourceData pInitialData, ID3D11Texture2D1** ppTexture2D) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (Texture2DDesc1* ppDesc1 = &pDesc1)
			{
				fixed (SubresourceData* ppInitialData = &pInitialData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, Texture2DDesc1*, SubresourceData*, ID3D11Texture2D1**, HResult>)(handle->LpVtbl[54]))(handle, (Texture2DDesc1*)ppDesc1, (SubresourceData*)ppInitialData, ppTexture2D);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateTexture2D1(this ComPtr<ID3D11Device5> comObj, Texture2DDesc1* pDesc1, SubresourceData* pInitialData, ref ID3D11Texture2D1* ppTexture2D) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Texture2D1** pppTexture2D = &ppTexture2D)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, Texture2DDesc1*, SubresourceData*, ID3D11Texture2D1**, HResult>)(handle->LpVtbl[54]))(handle, pDesc1, pInitialData, (ID3D11Texture2D1**)pppTexture2D);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateTexture2D1(this ComPtr<ID3D11Device5> comObj, Texture2DDesc1* pDesc1, SubresourceData* pInitialData, out ComPtr<ID3D11Texture2D1> ppTexture2D) 
		{
			ID3D11Device5* handle = comObj.Handle;
			ppTexture2D = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, Texture2DDesc1*, SubresourceData*, ID3D11Texture2D1**, HResult>)(handle->LpVtbl[54]))(handle, pDesc1, pInitialData, (ID3D11Texture2D1**)ppTexture2D.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateTexture2D1(this ComPtr<ID3D11Device5> comObj, ref Texture2DDesc1 pDesc1, SubresourceData* pInitialData, ref ID3D11Texture2D1* ppTexture2D) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (Texture2DDesc1* ppDesc1 = &pDesc1)
			{
				fixed (ID3D11Texture2D1** pppTexture2D = &ppTexture2D)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, Texture2DDesc1*, SubresourceData*, ID3D11Texture2D1**, HResult>)(handle->LpVtbl[54]))(handle, (Texture2DDesc1*)ppDesc1, pInitialData, (ID3D11Texture2D1**)pppTexture2D);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateTexture2D1(this ComPtr<ID3D11Device5> comObj, ref Texture2DDesc1 pDesc1, SubresourceData* pInitialData, out ComPtr<ID3D11Texture2D1> ppTexture2D) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (Texture2DDesc1* ppDesc1 = &pDesc1)
			{
				ppTexture2D = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, Texture2DDesc1*, SubresourceData*, ID3D11Texture2D1**, HResult>)(handle->LpVtbl[54]))(handle, (Texture2DDesc1*)ppDesc1, pInitialData, (ID3D11Texture2D1**)ppTexture2D.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateTexture2D1(this ComPtr<ID3D11Device5> comObj, Texture2DDesc1* pDesc1, ref SubresourceData pInitialData, ref ID3D11Texture2D1* ppTexture2D) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (SubresourceData* ppInitialData = &pInitialData)
			{
				fixed (ID3D11Texture2D1** pppTexture2D = &ppTexture2D)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, Texture2DDesc1*, SubresourceData*, ID3D11Texture2D1**, HResult>)(handle->LpVtbl[54]))(handle, pDesc1, (SubresourceData*)ppInitialData, (ID3D11Texture2D1**)pppTexture2D);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateTexture2D1(this ComPtr<ID3D11Device5> comObj, Texture2DDesc1* pDesc1, ref SubresourceData pInitialData, out ComPtr<ID3D11Texture2D1> ppTexture2D) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (SubresourceData* ppInitialData = &pInitialData)
			{
				ppTexture2D = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, Texture2DDesc1*, SubresourceData*, ID3D11Texture2D1**, HResult>)(handle->LpVtbl[54]))(handle, pDesc1, (SubresourceData*)ppInitialData, (ID3D11Texture2D1**)ppTexture2D.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateTexture2D1(this ComPtr<ID3D11Device5> comObj, ref Texture2DDesc1 pDesc1, ref SubresourceData pInitialData, ref ID3D11Texture2D1* ppTexture2D) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (Texture2DDesc1* ppDesc1 = &pDesc1)
			{
				fixed (SubresourceData* ppInitialData = &pInitialData)
				{
					fixed (ID3D11Texture2D1** pppTexture2D = &ppTexture2D)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, Texture2DDesc1*, SubresourceData*, ID3D11Texture2D1**, HResult>)(handle->LpVtbl[54]))(handle, (Texture2DDesc1*)ppDesc1, (SubresourceData*)ppInitialData, (ID3D11Texture2D1**)pppTexture2D);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateTexture2D1(this ComPtr<ID3D11Device5> comObj, ref Texture2DDesc1 pDesc1, ref SubresourceData pInitialData, out ComPtr<ID3D11Texture2D1> ppTexture2D) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (Texture2DDesc1* ppDesc1 = &pDesc1)
			{
				fixed (SubresourceData* ppInitialData = &pInitialData)
				{
					ppTexture2D = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, Texture2DDesc1*, SubresourceData*, ID3D11Texture2D1**, HResult>)(handle->LpVtbl[54]))(handle, (Texture2DDesc1*)ppDesc1, (SubresourceData*)ppInitialData, (ID3D11Texture2D1**)ppTexture2D.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateTexture3D1(this ComPtr<ID3D11Device5> comObj, Texture3DDesc1* pDesc1, SubresourceData* pInitialData, ID3D11Texture3D1** ppTexture3D) 
		{
			ID3D11Device5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, Texture3DDesc1*, SubresourceData*, ID3D11Texture3D1**, HResult>)(handle->LpVtbl[55]))(handle, pDesc1, pInitialData, ppTexture3D);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateTexture3D1(this ComPtr<ID3D11Device5> comObj, ref Texture3DDesc1 pDesc1, SubresourceData* pInitialData, ID3D11Texture3D1** ppTexture3D) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (Texture3DDesc1* ppDesc1 = &pDesc1)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, Texture3DDesc1*, SubresourceData*, ID3D11Texture3D1**, HResult>)(handle->LpVtbl[55]))(handle, (Texture3DDesc1*)ppDesc1, pInitialData, ppTexture3D);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateTexture3D1(this ComPtr<ID3D11Device5> comObj, Texture3DDesc1* pDesc1, ref SubresourceData pInitialData, ID3D11Texture3D1** ppTexture3D) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (SubresourceData* ppInitialData = &pInitialData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, Texture3DDesc1*, SubresourceData*, ID3D11Texture3D1**, HResult>)(handle->LpVtbl[55]))(handle, pDesc1, (SubresourceData*)ppInitialData, ppTexture3D);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateTexture3D1(this ComPtr<ID3D11Device5> comObj, ref Texture3DDesc1 pDesc1, ref SubresourceData pInitialData, ID3D11Texture3D1** ppTexture3D) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (Texture3DDesc1* ppDesc1 = &pDesc1)
			{
				fixed (SubresourceData* ppInitialData = &pInitialData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, Texture3DDesc1*, SubresourceData*, ID3D11Texture3D1**, HResult>)(handle->LpVtbl[55]))(handle, (Texture3DDesc1*)ppDesc1, (SubresourceData*)ppInitialData, ppTexture3D);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateTexture3D1(this ComPtr<ID3D11Device5> comObj, Texture3DDesc1* pDesc1, SubresourceData* pInitialData, ref ID3D11Texture3D1* ppTexture3D) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Texture3D1** pppTexture3D = &ppTexture3D)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, Texture3DDesc1*, SubresourceData*, ID3D11Texture3D1**, HResult>)(handle->LpVtbl[55]))(handle, pDesc1, pInitialData, (ID3D11Texture3D1**)pppTexture3D);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateTexture3D1(this ComPtr<ID3D11Device5> comObj, Texture3DDesc1* pDesc1, SubresourceData* pInitialData, out ComPtr<ID3D11Texture3D1> ppTexture3D) 
		{
			ID3D11Device5* handle = comObj.Handle;
			ppTexture3D = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, Texture3DDesc1*, SubresourceData*, ID3D11Texture3D1**, HResult>)(handle->LpVtbl[55]))(handle, pDesc1, pInitialData, (ID3D11Texture3D1**)ppTexture3D.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateTexture3D1(this ComPtr<ID3D11Device5> comObj, ref Texture3DDesc1 pDesc1, SubresourceData* pInitialData, ref ID3D11Texture3D1* ppTexture3D) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (Texture3DDesc1* ppDesc1 = &pDesc1)
			{
				fixed (ID3D11Texture3D1** pppTexture3D = &ppTexture3D)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, Texture3DDesc1*, SubresourceData*, ID3D11Texture3D1**, HResult>)(handle->LpVtbl[55]))(handle, (Texture3DDesc1*)ppDesc1, pInitialData, (ID3D11Texture3D1**)pppTexture3D);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateTexture3D1(this ComPtr<ID3D11Device5> comObj, ref Texture3DDesc1 pDesc1, SubresourceData* pInitialData, out ComPtr<ID3D11Texture3D1> ppTexture3D) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (Texture3DDesc1* ppDesc1 = &pDesc1)
			{
				ppTexture3D = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, Texture3DDesc1*, SubresourceData*, ID3D11Texture3D1**, HResult>)(handle->LpVtbl[55]))(handle, (Texture3DDesc1*)ppDesc1, pInitialData, (ID3D11Texture3D1**)ppTexture3D.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateTexture3D1(this ComPtr<ID3D11Device5> comObj, Texture3DDesc1* pDesc1, ref SubresourceData pInitialData, ref ID3D11Texture3D1* ppTexture3D) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (SubresourceData* ppInitialData = &pInitialData)
			{
				fixed (ID3D11Texture3D1** pppTexture3D = &ppTexture3D)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, Texture3DDesc1*, SubresourceData*, ID3D11Texture3D1**, HResult>)(handle->LpVtbl[55]))(handle, pDesc1, (SubresourceData*)ppInitialData, (ID3D11Texture3D1**)pppTexture3D);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateTexture3D1(this ComPtr<ID3D11Device5> comObj, Texture3DDesc1* pDesc1, ref SubresourceData pInitialData, out ComPtr<ID3D11Texture3D1> ppTexture3D) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (SubresourceData* ppInitialData = &pInitialData)
			{
				ppTexture3D = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, Texture3DDesc1*, SubresourceData*, ID3D11Texture3D1**, HResult>)(handle->LpVtbl[55]))(handle, pDesc1, (SubresourceData*)ppInitialData, (ID3D11Texture3D1**)ppTexture3D.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateTexture3D1(this ComPtr<ID3D11Device5> comObj, ref Texture3DDesc1 pDesc1, ref SubresourceData pInitialData, ref ID3D11Texture3D1* ppTexture3D) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (Texture3DDesc1* ppDesc1 = &pDesc1)
			{
				fixed (SubresourceData* ppInitialData = &pInitialData)
				{
					fixed (ID3D11Texture3D1** pppTexture3D = &ppTexture3D)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, Texture3DDesc1*, SubresourceData*, ID3D11Texture3D1**, HResult>)(handle->LpVtbl[55]))(handle, (Texture3DDesc1*)ppDesc1, (SubresourceData*)ppInitialData, (ID3D11Texture3D1**)pppTexture3D);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateTexture3D1(this ComPtr<ID3D11Device5> comObj, ref Texture3DDesc1 pDesc1, ref SubresourceData pInitialData, out ComPtr<ID3D11Texture3D1> ppTexture3D) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (Texture3DDesc1* ppDesc1 = &pDesc1)
			{
				fixed (SubresourceData* ppInitialData = &pInitialData)
				{
					ppTexture3D = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, Texture3DDesc1*, SubresourceData*, ID3D11Texture3D1**, HResult>)(handle->LpVtbl[55]))(handle, (Texture3DDesc1*)ppDesc1, (SubresourceData*)ppInitialData, (ID3D11Texture3D1**)ppTexture3D.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateRasterizerState2(this ComPtr<ID3D11Device5> comObj, RasterizerDesc2* pRasterizerDesc, ID3D11RasterizerState2** ppRasterizerState) 
		{
			ID3D11Device5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, RasterizerDesc2*, ID3D11RasterizerState2**, HResult>)(handle->LpVtbl[56]))(handle, pRasterizerDesc, ppRasterizerState);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateRasterizerState2(this ComPtr<ID3D11Device5> comObj, ref RasterizerDesc2 pRasterizerDesc, ID3D11RasterizerState2** ppRasterizerState) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (RasterizerDesc2* ppRasterizerDesc = &pRasterizerDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, RasterizerDesc2*, ID3D11RasterizerState2**, HResult>)(handle->LpVtbl[56]))(handle, (RasterizerDesc2*)ppRasterizerDesc, ppRasterizerState);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateRasterizerState2(this ComPtr<ID3D11Device5> comObj, RasterizerDesc2* pRasterizerDesc, ref ID3D11RasterizerState2* ppRasterizerState) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11RasterizerState2** pppRasterizerState = &ppRasterizerState)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, RasterizerDesc2*, ID3D11RasterizerState2**, HResult>)(handle->LpVtbl[56]))(handle, pRasterizerDesc, (ID3D11RasterizerState2**)pppRasterizerState);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateRasterizerState2(this ComPtr<ID3D11Device5> comObj, RasterizerDesc2* pRasterizerDesc, out ComPtr<ID3D11RasterizerState2> ppRasterizerState) 
		{
			ID3D11Device5* handle = comObj.Handle;
			ppRasterizerState = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, RasterizerDesc2*, ID3D11RasterizerState2**, HResult>)(handle->LpVtbl[56]))(handle, pRasterizerDesc, (ID3D11RasterizerState2**)ppRasterizerState.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateRasterizerState2(this ComPtr<ID3D11Device5> comObj, ref RasterizerDesc2 pRasterizerDesc, ref ID3D11RasterizerState2* ppRasterizerState) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (RasterizerDesc2* ppRasterizerDesc = &pRasterizerDesc)
			{
				fixed (ID3D11RasterizerState2** pppRasterizerState = &ppRasterizerState)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, RasterizerDesc2*, ID3D11RasterizerState2**, HResult>)(handle->LpVtbl[56]))(handle, (RasterizerDesc2*)ppRasterizerDesc, (ID3D11RasterizerState2**)pppRasterizerState);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateRasterizerState2(this ComPtr<ID3D11Device5> comObj, ref RasterizerDesc2 pRasterizerDesc, out ComPtr<ID3D11RasterizerState2> ppRasterizerState) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (RasterizerDesc2* ppRasterizerDesc = &pRasterizerDesc)
			{
				ppRasterizerState = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, RasterizerDesc2*, ID3D11RasterizerState2**, HResult>)(handle->LpVtbl[56]))(handle, (RasterizerDesc2*)ppRasterizerDesc, (ID3D11RasterizerState2**)ppRasterizerState.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateShaderResourceView1(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pResource, ShaderResourceViewDesc1* pDesc1, ID3D11ShaderResourceView1** ppSRView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, ShaderResourceViewDesc1*, ID3D11ShaderResourceView1**, HResult>)(handle->LpVtbl[57]))(handle, pResource, pDesc1, ppSRView1);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateShaderResourceView1(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pResource, ShaderResourceViewDesc1* pDesc1, ID3D11ShaderResourceView1** ppSRView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, ShaderResourceViewDesc1*, ID3D11ShaderResourceView1**, HResult>)(handle->LpVtbl[57]))(handle, (ID3D11Resource*)ppResource, pDesc1, ppSRView1);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateShaderResourceView1(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pResource, ShaderResourceViewDesc1* pDesc1, ID3D11ShaderResourceView1** ppSRView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, ShaderResourceViewDesc1*, ID3D11ShaderResourceView1**, HResult>)(handle->LpVtbl[57]))(handle, (ID3D11Resource*)pResource.Handle, pDesc1, ppSRView1);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateShaderResourceView1(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pResource, ref ShaderResourceViewDesc1 pDesc1, ID3D11ShaderResourceView1** ppSRView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ShaderResourceViewDesc1* ppDesc1 = &pDesc1)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, ShaderResourceViewDesc1*, ID3D11ShaderResourceView1**, HResult>)(handle->LpVtbl[57]))(handle, pResource, (ShaderResourceViewDesc1*)ppDesc1, ppSRView1);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateShaderResourceView1(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pResource, ref ShaderResourceViewDesc1 pDesc1, ID3D11ShaderResourceView1** ppSRView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ShaderResourceViewDesc1* ppDesc1 = &pDesc1)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, ShaderResourceViewDesc1*, ID3D11ShaderResourceView1**, HResult>)(handle->LpVtbl[57]))(handle, (ID3D11Resource*)ppResource, (ShaderResourceViewDesc1*)ppDesc1, ppSRView1);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateShaderResourceView1(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pResource, ref ShaderResourceViewDesc1 pDesc1, ID3D11ShaderResourceView1** ppSRView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ShaderResourceViewDesc1* ppDesc1 = &pDesc1)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, ShaderResourceViewDesc1*, ID3D11ShaderResourceView1**, HResult>)(handle->LpVtbl[57]))(handle, (ID3D11Resource*)pResource.Handle, (ShaderResourceViewDesc1*)ppDesc1, ppSRView1);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateShaderResourceView1(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pResource, ShaderResourceViewDesc1* pDesc1, ref ID3D11ShaderResourceView1* ppSRView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11ShaderResourceView1** pppSRView1 = &ppSRView1)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, ShaderResourceViewDesc1*, ID3D11ShaderResourceView1**, HResult>)(handle->LpVtbl[57]))(handle, pResource, pDesc1, (ID3D11ShaderResourceView1**)pppSRView1);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateShaderResourceView1(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pResource, ShaderResourceViewDesc1* pDesc1, out ComPtr<ID3D11ShaderResourceView1> ppSRView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			ppSRView1 = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, ShaderResourceViewDesc1*, ID3D11ShaderResourceView1**, HResult>)(handle->LpVtbl[57]))(handle, pResource, pDesc1, (ID3D11ShaderResourceView1**)ppSRView1.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateShaderResourceView1(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pResource, ShaderResourceViewDesc1* pDesc1, ref ID3D11ShaderResourceView1* ppSRView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11ShaderResourceView1** pppSRView1 = &ppSRView1)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, ShaderResourceViewDesc1*, ID3D11ShaderResourceView1**, HResult>)(handle->LpVtbl[57]))(handle, (ID3D11Resource*)ppResource, pDesc1, (ID3D11ShaderResourceView1**)pppSRView1);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateShaderResourceView1(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pResource, ShaderResourceViewDesc1* pDesc1, out ComPtr<ID3D11ShaderResourceView1> ppSRView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			ppSRView1 = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, ShaderResourceViewDesc1*, ID3D11ShaderResourceView1**, HResult>)(handle->LpVtbl[57]))(handle, (ID3D11Resource*)pResource.Handle, pDesc1, (ID3D11ShaderResourceView1**)ppSRView1.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateShaderResourceView1(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pResource, ref ShaderResourceViewDesc1 pDesc1, ref ID3D11ShaderResourceView1* ppSRView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ShaderResourceViewDesc1* ppDesc1 = &pDesc1)
			{
				fixed (ID3D11ShaderResourceView1** pppSRView1 = &ppSRView1)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, ShaderResourceViewDesc1*, ID3D11ShaderResourceView1**, HResult>)(handle->LpVtbl[57]))(handle, pResource, (ShaderResourceViewDesc1*)ppDesc1, (ID3D11ShaderResourceView1**)pppSRView1);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateShaderResourceView1(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pResource, ref ShaderResourceViewDesc1 pDesc1, out ComPtr<ID3D11ShaderResourceView1> ppSRView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ShaderResourceViewDesc1* ppDesc1 = &pDesc1)
			{
				ppSRView1 = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, ShaderResourceViewDesc1*, ID3D11ShaderResourceView1**, HResult>)(handle->LpVtbl[57]))(handle, pResource, (ShaderResourceViewDesc1*)ppDesc1, (ID3D11ShaderResourceView1**)ppSRView1.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateShaderResourceView1(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pResource, ref ShaderResourceViewDesc1 pDesc1, ref ID3D11ShaderResourceView1* ppSRView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ShaderResourceViewDesc1* ppDesc1 = &pDesc1)
				{
					fixed (ID3D11ShaderResourceView1** pppSRView1 = &ppSRView1)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, ShaderResourceViewDesc1*, ID3D11ShaderResourceView1**, HResult>)(handle->LpVtbl[57]))(handle, (ID3D11Resource*)ppResource, (ShaderResourceViewDesc1*)ppDesc1, (ID3D11ShaderResourceView1**)pppSRView1);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateShaderResourceView1(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pResource, ref ShaderResourceViewDesc1 pDesc1, out ComPtr<ID3D11ShaderResourceView1> ppSRView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ShaderResourceViewDesc1* ppDesc1 = &pDesc1)
			{
				ppSRView1 = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, ShaderResourceViewDesc1*, ID3D11ShaderResourceView1**, HResult>)(handle->LpVtbl[57]))(handle, (ID3D11Resource*)pResource.Handle, (ShaderResourceViewDesc1*)ppDesc1, (ID3D11ShaderResourceView1**)ppSRView1.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateUnorderedAccessView1(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pResource, UnorderedAccessViewDesc1* pDesc1, ID3D11UnorderedAccessView1** ppUAView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, UnorderedAccessViewDesc1*, ID3D11UnorderedAccessView1**, HResult>)(handle->LpVtbl[58]))(handle, pResource, pDesc1, ppUAView1);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateUnorderedAccessView1(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pResource, UnorderedAccessViewDesc1* pDesc1, ID3D11UnorderedAccessView1** ppUAView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, UnorderedAccessViewDesc1*, ID3D11UnorderedAccessView1**, HResult>)(handle->LpVtbl[58]))(handle, (ID3D11Resource*)ppResource, pDesc1, ppUAView1);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateUnorderedAccessView1(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pResource, UnorderedAccessViewDesc1* pDesc1, ID3D11UnorderedAccessView1** ppUAView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, UnorderedAccessViewDesc1*, ID3D11UnorderedAccessView1**, HResult>)(handle->LpVtbl[58]))(handle, (ID3D11Resource*)pResource.Handle, pDesc1, ppUAView1);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateUnorderedAccessView1(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pResource, ref UnorderedAccessViewDesc1 pDesc1, ID3D11UnorderedAccessView1** ppUAView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (UnorderedAccessViewDesc1* ppDesc1 = &pDesc1)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, UnorderedAccessViewDesc1*, ID3D11UnorderedAccessView1**, HResult>)(handle->LpVtbl[58]))(handle, pResource, (UnorderedAccessViewDesc1*)ppDesc1, ppUAView1);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateUnorderedAccessView1(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pResource, ref UnorderedAccessViewDesc1 pDesc1, ID3D11UnorderedAccessView1** ppUAView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (UnorderedAccessViewDesc1* ppDesc1 = &pDesc1)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, UnorderedAccessViewDesc1*, ID3D11UnorderedAccessView1**, HResult>)(handle->LpVtbl[58]))(handle, (ID3D11Resource*)ppResource, (UnorderedAccessViewDesc1*)ppDesc1, ppUAView1);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateUnorderedAccessView1(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pResource, ref UnorderedAccessViewDesc1 pDesc1, ID3D11UnorderedAccessView1** ppUAView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (UnorderedAccessViewDesc1* ppDesc1 = &pDesc1)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, UnorderedAccessViewDesc1*, ID3D11UnorderedAccessView1**, HResult>)(handle->LpVtbl[58]))(handle, (ID3D11Resource*)pResource.Handle, (UnorderedAccessViewDesc1*)ppDesc1, ppUAView1);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateUnorderedAccessView1(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pResource, UnorderedAccessViewDesc1* pDesc1, ref ID3D11UnorderedAccessView1* ppUAView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11UnorderedAccessView1** pppUAView1 = &ppUAView1)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, UnorderedAccessViewDesc1*, ID3D11UnorderedAccessView1**, HResult>)(handle->LpVtbl[58]))(handle, pResource, pDesc1, (ID3D11UnorderedAccessView1**)pppUAView1);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateUnorderedAccessView1(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pResource, UnorderedAccessViewDesc1* pDesc1, out ComPtr<ID3D11UnorderedAccessView1> ppUAView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			ppUAView1 = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, UnorderedAccessViewDesc1*, ID3D11UnorderedAccessView1**, HResult>)(handle->LpVtbl[58]))(handle, pResource, pDesc1, (ID3D11UnorderedAccessView1**)ppUAView1.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateUnorderedAccessView1(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pResource, UnorderedAccessViewDesc1* pDesc1, ref ID3D11UnorderedAccessView1* ppUAView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11UnorderedAccessView1** pppUAView1 = &ppUAView1)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, UnorderedAccessViewDesc1*, ID3D11UnorderedAccessView1**, HResult>)(handle->LpVtbl[58]))(handle, (ID3D11Resource*)ppResource, pDesc1, (ID3D11UnorderedAccessView1**)pppUAView1);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateUnorderedAccessView1(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pResource, UnorderedAccessViewDesc1* pDesc1, out ComPtr<ID3D11UnorderedAccessView1> ppUAView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			ppUAView1 = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, UnorderedAccessViewDesc1*, ID3D11UnorderedAccessView1**, HResult>)(handle->LpVtbl[58]))(handle, (ID3D11Resource*)pResource.Handle, pDesc1, (ID3D11UnorderedAccessView1**)ppUAView1.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateUnorderedAccessView1(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pResource, ref UnorderedAccessViewDesc1 pDesc1, ref ID3D11UnorderedAccessView1* ppUAView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (UnorderedAccessViewDesc1* ppDesc1 = &pDesc1)
			{
				fixed (ID3D11UnorderedAccessView1** pppUAView1 = &ppUAView1)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, UnorderedAccessViewDesc1*, ID3D11UnorderedAccessView1**, HResult>)(handle->LpVtbl[58]))(handle, pResource, (UnorderedAccessViewDesc1*)ppDesc1, (ID3D11UnorderedAccessView1**)pppUAView1);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateUnorderedAccessView1(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pResource, ref UnorderedAccessViewDesc1 pDesc1, out ComPtr<ID3D11UnorderedAccessView1> ppUAView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (UnorderedAccessViewDesc1* ppDesc1 = &pDesc1)
			{
				ppUAView1 = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, UnorderedAccessViewDesc1*, ID3D11UnorderedAccessView1**, HResult>)(handle->LpVtbl[58]))(handle, pResource, (UnorderedAccessViewDesc1*)ppDesc1, (ID3D11UnorderedAccessView1**)ppUAView1.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateUnorderedAccessView1(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pResource, ref UnorderedAccessViewDesc1 pDesc1, ref ID3D11UnorderedAccessView1* ppUAView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (UnorderedAccessViewDesc1* ppDesc1 = &pDesc1)
				{
					fixed (ID3D11UnorderedAccessView1** pppUAView1 = &ppUAView1)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, UnorderedAccessViewDesc1*, ID3D11UnorderedAccessView1**, HResult>)(handle->LpVtbl[58]))(handle, (ID3D11Resource*)ppResource, (UnorderedAccessViewDesc1*)ppDesc1, (ID3D11UnorderedAccessView1**)pppUAView1);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateUnorderedAccessView1(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pResource, ref UnorderedAccessViewDesc1 pDesc1, out ComPtr<ID3D11UnorderedAccessView1> ppUAView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (UnorderedAccessViewDesc1* ppDesc1 = &pDesc1)
			{
				ppUAView1 = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, UnorderedAccessViewDesc1*, ID3D11UnorderedAccessView1**, HResult>)(handle->LpVtbl[58]))(handle, (ID3D11Resource*)pResource.Handle, (UnorderedAccessViewDesc1*)ppDesc1, (ID3D11UnorderedAccessView1**)ppUAView1.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateRenderTargetView1(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pResource, RenderTargetViewDesc1* pDesc1, ID3D11RenderTargetView1** ppRTView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, RenderTargetViewDesc1*, ID3D11RenderTargetView1**, HResult>)(handle->LpVtbl[59]))(handle, pResource, pDesc1, ppRTView1);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateRenderTargetView1(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pResource, RenderTargetViewDesc1* pDesc1, ID3D11RenderTargetView1** ppRTView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, RenderTargetViewDesc1*, ID3D11RenderTargetView1**, HResult>)(handle->LpVtbl[59]))(handle, (ID3D11Resource*)ppResource, pDesc1, ppRTView1);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateRenderTargetView1(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pResource, RenderTargetViewDesc1* pDesc1, ID3D11RenderTargetView1** ppRTView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, RenderTargetViewDesc1*, ID3D11RenderTargetView1**, HResult>)(handle->LpVtbl[59]))(handle, (ID3D11Resource*)pResource.Handle, pDesc1, ppRTView1);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateRenderTargetView1(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pResource, ref RenderTargetViewDesc1 pDesc1, ID3D11RenderTargetView1** ppRTView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (RenderTargetViewDesc1* ppDesc1 = &pDesc1)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, RenderTargetViewDesc1*, ID3D11RenderTargetView1**, HResult>)(handle->LpVtbl[59]))(handle, pResource, (RenderTargetViewDesc1*)ppDesc1, ppRTView1);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateRenderTargetView1(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pResource, ref RenderTargetViewDesc1 pDesc1, ID3D11RenderTargetView1** ppRTView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (RenderTargetViewDesc1* ppDesc1 = &pDesc1)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, RenderTargetViewDesc1*, ID3D11RenderTargetView1**, HResult>)(handle->LpVtbl[59]))(handle, (ID3D11Resource*)ppResource, (RenderTargetViewDesc1*)ppDesc1, ppRTView1);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateRenderTargetView1(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pResource, ref RenderTargetViewDesc1 pDesc1, ID3D11RenderTargetView1** ppRTView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (RenderTargetViewDesc1* ppDesc1 = &pDesc1)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, RenderTargetViewDesc1*, ID3D11RenderTargetView1**, HResult>)(handle->LpVtbl[59]))(handle, (ID3D11Resource*)pResource.Handle, (RenderTargetViewDesc1*)ppDesc1, ppRTView1);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateRenderTargetView1(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pResource, RenderTargetViewDesc1* pDesc1, ref ID3D11RenderTargetView1* ppRTView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11RenderTargetView1** pppRTView1 = &ppRTView1)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, RenderTargetViewDesc1*, ID3D11RenderTargetView1**, HResult>)(handle->LpVtbl[59]))(handle, pResource, pDesc1, (ID3D11RenderTargetView1**)pppRTView1);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateRenderTargetView1(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pResource, RenderTargetViewDesc1* pDesc1, out ComPtr<ID3D11RenderTargetView1> ppRTView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			ppRTView1 = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, RenderTargetViewDesc1*, ID3D11RenderTargetView1**, HResult>)(handle->LpVtbl[59]))(handle, pResource, pDesc1, (ID3D11RenderTargetView1**)ppRTView1.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateRenderTargetView1(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pResource, RenderTargetViewDesc1* pDesc1, ref ID3D11RenderTargetView1* ppRTView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11RenderTargetView1** pppRTView1 = &ppRTView1)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, RenderTargetViewDesc1*, ID3D11RenderTargetView1**, HResult>)(handle->LpVtbl[59]))(handle, (ID3D11Resource*)ppResource, pDesc1, (ID3D11RenderTargetView1**)pppRTView1);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateRenderTargetView1(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pResource, RenderTargetViewDesc1* pDesc1, out ComPtr<ID3D11RenderTargetView1> ppRTView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			ppRTView1 = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, RenderTargetViewDesc1*, ID3D11RenderTargetView1**, HResult>)(handle->LpVtbl[59]))(handle, (ID3D11Resource*)pResource.Handle, pDesc1, (ID3D11RenderTargetView1**)ppRTView1.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateRenderTargetView1(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pResource, ref RenderTargetViewDesc1 pDesc1, ref ID3D11RenderTargetView1* ppRTView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (RenderTargetViewDesc1* ppDesc1 = &pDesc1)
			{
				fixed (ID3D11RenderTargetView1** pppRTView1 = &ppRTView1)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, RenderTargetViewDesc1*, ID3D11RenderTargetView1**, HResult>)(handle->LpVtbl[59]))(handle, pResource, (RenderTargetViewDesc1*)ppDesc1, (ID3D11RenderTargetView1**)pppRTView1);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateRenderTargetView1(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pResource, ref RenderTargetViewDesc1 pDesc1, out ComPtr<ID3D11RenderTargetView1> ppRTView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (RenderTargetViewDesc1* ppDesc1 = &pDesc1)
			{
				ppRTView1 = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, RenderTargetViewDesc1*, ID3D11RenderTargetView1**, HResult>)(handle->LpVtbl[59]))(handle, pResource, (RenderTargetViewDesc1*)ppDesc1, (ID3D11RenderTargetView1**)ppRTView1.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateRenderTargetView1(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pResource, ref RenderTargetViewDesc1 pDesc1, ref ID3D11RenderTargetView1* ppRTView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (RenderTargetViewDesc1* ppDesc1 = &pDesc1)
				{
					fixed (ID3D11RenderTargetView1** pppRTView1 = &ppRTView1)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, RenderTargetViewDesc1*, ID3D11RenderTargetView1**, HResult>)(handle->LpVtbl[59]))(handle, (ID3D11Resource*)ppResource, (RenderTargetViewDesc1*)ppDesc1, (ID3D11RenderTargetView1**)pppRTView1);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateRenderTargetView1(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pResource, ref RenderTargetViewDesc1 pDesc1, out ComPtr<ID3D11RenderTargetView1> ppRTView1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (RenderTargetViewDesc1* ppDesc1 = &pDesc1)
			{
				ppRTView1 = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, RenderTargetViewDesc1*, ID3D11RenderTargetView1**, HResult>)(handle->LpVtbl[59]))(handle, (ID3D11Resource*)pResource.Handle, (RenderTargetViewDesc1*)ppDesc1, (ID3D11RenderTargetView1**)ppRTView1.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateQuery1(this ComPtr<ID3D11Device5> comObj, QueryDesc1* pQueryDesc1, ID3D11Query1** ppQuery1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, QueryDesc1*, ID3D11Query1**, HResult>)(handle->LpVtbl[60]))(handle, pQueryDesc1, ppQuery1);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateQuery1(this ComPtr<ID3D11Device5> comObj, ref QueryDesc1 pQueryDesc1, ID3D11Query1** ppQuery1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (QueryDesc1* ppQueryDesc1 = &pQueryDesc1)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, QueryDesc1*, ID3D11Query1**, HResult>)(handle->LpVtbl[60]))(handle, (QueryDesc1*)ppQueryDesc1, ppQuery1);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateQuery1(this ComPtr<ID3D11Device5> comObj, QueryDesc1* pQueryDesc1, ref ID3D11Query1* ppQuery1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Query1** pppQuery1 = &ppQuery1)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, QueryDesc1*, ID3D11Query1**, HResult>)(handle->LpVtbl[60]))(handle, pQueryDesc1, (ID3D11Query1**)pppQuery1);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateQuery1(this ComPtr<ID3D11Device5> comObj, QueryDesc1* pQueryDesc1, out ComPtr<ID3D11Query1> ppQuery1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			ppQuery1 = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, QueryDesc1*, ID3D11Query1**, HResult>)(handle->LpVtbl[60]))(handle, pQueryDesc1, (ID3D11Query1**)ppQuery1.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateQuery1(this ComPtr<ID3D11Device5> comObj, ref QueryDesc1 pQueryDesc1, ref ID3D11Query1* ppQuery1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (QueryDesc1* ppQueryDesc1 = &pQueryDesc1)
			{
				fixed (ID3D11Query1** pppQuery1 = &ppQuery1)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, QueryDesc1*, ID3D11Query1**, HResult>)(handle->LpVtbl[60]))(handle, (QueryDesc1*)ppQueryDesc1, (ID3D11Query1**)pppQuery1);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateQuery1(this ComPtr<ID3D11Device5> comObj, ref QueryDesc1 pQueryDesc1, out ComPtr<ID3D11Query1> ppQuery1) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (QueryDesc1* ppQueryDesc1 = &pQueryDesc1)
			{
				ppQuery1 = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, QueryDesc1*, ID3D11Query1**, HResult>)(handle->LpVtbl[60]))(handle, (QueryDesc1*)ppQueryDesc1, (ID3D11Query1**)ppQuery1.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetImmediateContext3(this ComPtr<ID3D11Device5> comObj, ID3D11DeviceContext3** ppImmediateContext) 
		{
			ID3D11Device5* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11DeviceContext3**, void>)(handle->LpVtbl[61]))(handle, ppImmediateContext);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetImmediateContext3(this ComPtr<ID3D11Device5> comObj, ref ID3D11DeviceContext3* ppImmediateContext) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11DeviceContext3** pppImmediateContext = &ppImmediateContext)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11DeviceContext3**, void>)(handle->LpVtbl[61]))(handle, (ID3D11DeviceContext3**)pppImmediateContext);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetImmediateContext3(this ComPtr<ID3D11Device5> comObj, out ComPtr<ID3D11DeviceContext3> ppImmediateContext) 
		{
			ID3D11Device5* handle = comObj.Handle;
			ppImmediateContext = default;
			((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11DeviceContext3**, void>)(handle->LpVtbl[61]))(handle, (ID3D11DeviceContext3**)ppImmediateContext.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateDeferredContext3(this ComPtr<ID3D11Device5> comObj, uint contextFlags, ID3D11DeviceContext3** ppDeferredContext) 
		{
			ID3D11Device5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, uint, ID3D11DeviceContext3**, HResult>)(handle->LpVtbl[62]))(handle, contextFlags, ppDeferredContext);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateDeferredContext3(this ComPtr<ID3D11Device5> comObj, uint contextFlags, ref ID3D11DeviceContext3* ppDeferredContext) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11DeviceContext3** pppDeferredContext = &ppDeferredContext)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, uint, ID3D11DeviceContext3**, HResult>)(handle->LpVtbl[62]))(handle, contextFlags, (ID3D11DeviceContext3**)pppDeferredContext);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateDeferredContext3(this ComPtr<ID3D11Device5> comObj, uint contextFlags, out ComPtr<ID3D11DeviceContext3> ppDeferredContext) 
		{
			ID3D11Device5* handle = comObj.Handle;
			ppDeferredContext = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, uint, ID3D11DeviceContext3**, HResult>)(handle->LpVtbl[62]))(handle, contextFlags, (ID3D11DeviceContext3**)ppDeferredContext.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void WriteToSubresource(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pDstResource, uint dstSubresource, Box* pDstBox, void* pSrcData, uint srcRowPitch, uint srcDepthPitch) 
		{
			ID3D11Device5* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint, Box*, void*, uint, uint, void>)(handle->LpVtbl[63]))(handle, pDstResource, dstSubresource, pDstBox, pSrcData, srcRowPitch, srcDepthPitch);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void WriteToSubresource(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pDstResource, uint dstSubresource, Box* pDstBox, void* pSrcData, uint srcRowPitch, uint srcDepthPitch) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppDstResource = &pDstResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint, Box*, void*, uint, uint, void>)(handle->LpVtbl[63]))(handle, (ID3D11Resource*)ppDstResource, dstSubresource, pDstBox, pSrcData, srcRowPitch, srcDepthPitch);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void WriteToSubresource(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pDstResource, uint dstSubresource, Box* pDstBox, void* pSrcData, uint srcRowPitch, uint srcDepthPitch) 
		{
			ID3D11Device5* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint, Box*, void*, uint, uint, void>)(handle->LpVtbl[63]))(handle, (ID3D11Resource*)pDstResource.Handle, dstSubresource, pDstBox, pSrcData, srcRowPitch, srcDepthPitch);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void WriteToSubresource(this ComPtr<ID3D11Device5> comObj, ID3D11Resource* pDstResource, uint dstSubresource, ref Box pDstBox, void* pSrcData, uint srcRowPitch, uint srcDepthPitch) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (Box* ppDstBox = &pDstBox)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint, Box*, void*, uint, uint, void>)(handle->LpVtbl[63]))(handle, pDstResource, dstSubresource, (Box*)ppDstBox, pSrcData, srcRowPitch, srcDepthPitch);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void WriteToSubresource(this ComPtr<ID3D11Device5> comObj, ref ID3D11Resource pDstResource, uint dstSubresource, ref Box pDstBox, void* pSrcData, uint srcRowPitch, uint srcDepthPitch) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppDstResource = &pDstResource)
			{
				fixed (Box* ppDstBox = &pDstBox)
				{
					((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint, Box*, void*, uint, uint, void>)(handle->LpVtbl[63]))(handle, (ID3D11Resource*)ppDstResource, dstSubresource, (Box*)ppDstBox, pSrcData, srcRowPitch, srcDepthPitch);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void WriteToSubresource(this ComPtr<ID3D11Device5> comObj, ComPtr<ID3D11Resource> pDstResource, uint dstSubresource, ref Box pDstBox, void* pSrcData, uint srcRowPitch, uint srcDepthPitch) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (Box* ppDstBox = &pDstBox)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Device5*, ID3D11Resource*, uint, Box*, void*, uint, uint, void>)(handle->LpVtbl[63]))(handle, (ID3D11Resource*)pDstResource.Handle, dstSubresource, (Box*)ppDstBox, pSrcData, srcRowPitch, srcDepthPitch);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ReadFromSubresource(this ComPtr<ID3D11Device5> comObj, void* pDstData, uint dstRowPitch, uint dstDepthPitch, ID3D11Resource* pSrcResource, uint srcSubresource, Box* pSrcBox) 
		{
			ID3D11Device5* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Device5*, void*, uint, uint, ID3D11Resource*, uint, Box*, void>)(handle->LpVtbl[64]))(handle, pDstData, dstRowPitch, dstDepthPitch, pSrcResource, srcSubresource, pSrcBox);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ReadFromSubresource<T>(this ComPtr<ID3D11Device5> comObj, ComPtr<T> pDstData, uint dstRowPitch, uint dstDepthPitch, ID3D11Resource* pSrcResource, uint srcSubresource, Box* pSrcBox) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Device5* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Device5*, void*, uint, uint, ID3D11Resource*, uint, Box*, void>)(handle->LpVtbl[64]))(handle, (void*)pDstData.Handle, dstRowPitch, dstDepthPitch, pSrcResource, srcSubresource, pSrcBox);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ReadFromSubresource(this ComPtr<ID3D11Device5> comObj, void* pDstData, uint dstRowPitch, uint dstDepthPitch, ref ID3D11Resource pSrcResource, uint srcSubresource, Box* pSrcBox) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppSrcResource = &pSrcResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Device5*, void*, uint, uint, ID3D11Resource*, uint, Box*, void>)(handle->LpVtbl[64]))(handle, pDstData, dstRowPitch, dstDepthPitch, (ID3D11Resource*)ppSrcResource, srcSubresource, pSrcBox);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ReadFromSubresource(this ComPtr<ID3D11Device5> comObj, void* pDstData, uint dstRowPitch, uint dstDepthPitch, ComPtr<ID3D11Resource> pSrcResource, uint srcSubresource, Box* pSrcBox) 
		{
			ID3D11Device5* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Device5*, void*, uint, uint, ID3D11Resource*, uint, Box*, void>)(handle->LpVtbl[64]))(handle, pDstData, dstRowPitch, dstDepthPitch, (ID3D11Resource*)pSrcResource.Handle, srcSubresource, pSrcBox);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ReadFromSubresource<T>(this ComPtr<ID3D11Device5> comObj, ComPtr<T> pDstData, uint dstRowPitch, uint dstDepthPitch, ComPtr<ID3D11Resource> pSrcResource, uint srcSubresource, Box* pSrcBox) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Device5* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Device5*, void*, uint, uint, ID3D11Resource*, uint, Box*, void>)(handle->LpVtbl[64]))(handle, (void*)pDstData.Handle, dstRowPitch, dstDepthPitch, (ID3D11Resource*)pSrcResource.Handle, srcSubresource, pSrcBox);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ReadFromSubresource(this ComPtr<ID3D11Device5> comObj, void* pDstData, uint dstRowPitch, uint dstDepthPitch, ID3D11Resource* pSrcResource, uint srcSubresource, ref Box pSrcBox) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (Box* ppSrcBox = &pSrcBox)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Device5*, void*, uint, uint, ID3D11Resource*, uint, Box*, void>)(handle->LpVtbl[64]))(handle, pDstData, dstRowPitch, dstDepthPitch, pSrcResource, srcSubresource, (Box*)ppSrcBox);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ReadFromSubresource<T>(this ComPtr<ID3D11Device5> comObj, ComPtr<T> pDstData, uint dstRowPitch, uint dstDepthPitch, ID3D11Resource* pSrcResource, uint srcSubresource, ref Box pSrcBox) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (Box* ppSrcBox = &pSrcBox)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Device5*, void*, uint, uint, ID3D11Resource*, uint, Box*, void>)(handle->LpVtbl[64]))(handle, (void*)pDstData.Handle, dstRowPitch, dstDepthPitch, pSrcResource, srcSubresource, (Box*)ppSrcBox);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ReadFromSubresource(this ComPtr<ID3D11Device5> comObj, void* pDstData, uint dstRowPitch, uint dstDepthPitch, ref ID3D11Resource pSrcResource, uint srcSubresource, ref Box pSrcBox) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (ID3D11Resource* ppSrcResource = &pSrcResource)
			{
				fixed (Box* ppSrcBox = &pSrcBox)
				{
					((delegate* unmanaged[Stdcall]<ID3D11Device5*, void*, uint, uint, ID3D11Resource*, uint, Box*, void>)(handle->LpVtbl[64]))(handle, pDstData, dstRowPitch, dstDepthPitch, (ID3D11Resource*)ppSrcResource, srcSubresource, (Box*)ppSrcBox);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ReadFromSubresource(this ComPtr<ID3D11Device5> comObj, void* pDstData, uint dstRowPitch, uint dstDepthPitch, ComPtr<ID3D11Resource> pSrcResource, uint srcSubresource, ref Box pSrcBox) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (Box* ppSrcBox = &pSrcBox)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Device5*, void*, uint, uint, ID3D11Resource*, uint, Box*, void>)(handle->LpVtbl[64]))(handle, pDstData, dstRowPitch, dstDepthPitch, (ID3D11Resource*)pSrcResource.Handle, srcSubresource, (Box*)ppSrcBox);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void ReadFromSubresource<T>(this ComPtr<ID3D11Device5> comObj, ComPtr<T> pDstData, uint dstRowPitch, uint dstDepthPitch, ComPtr<ID3D11Resource> pSrcResource, uint srcSubresource, ref Box pSrcBox) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (Box* ppSrcBox = &pSrcBox)
			{
				((delegate* unmanaged[Stdcall]<ID3D11Device5*, void*, uint, uint, ID3D11Resource*, uint, Box*, void>)(handle->LpVtbl[64]))(handle, (void*)pDstData.Handle, dstRowPitch, dstDepthPitch, (ID3D11Resource*)pSrcResource.Handle, srcSubresource, (Box*)ppSrcBox);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult RegisterDeviceRemovedEvent(this ComPtr<ID3D11Device5> comObj, nint hEvent, uint* pdwCookie) 
		{
			ID3D11Device5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, nint, uint*, HResult>)(handle->LpVtbl[65]))(handle, hEvent, pdwCookie);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult RegisterDeviceRemovedEvent(this ComPtr<ID3D11Device5> comObj, nint hEvent, ref uint pdwCookie) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, nint, uint*, HResult>)(handle->LpVtbl[65]))(handle, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void UnregisterDeviceRemoved(this ComPtr<ID3D11Device5> comObj, uint dwCookie) 
		{
			ID3D11Device5* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Device5*, uint, void>)(handle->LpVtbl[66]))(handle, dwCookie);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult OpenSharedFence(this ComPtr<ID3D11Device5> comObj, nint hFence, Guid* returnedInterface, void** ppFence) 
		{
			ID3D11Device5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, nint, Guid*, void**, HResult>)(handle->LpVtbl[67]))(handle, hFence, returnedInterface, ppFence);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult OpenSharedFence(this ComPtr<ID3D11Device5> comObj, nint hFence, ref Guid returnedInterface, void** ppFence) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (Guid* preturnedInterface = &returnedInterface)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, nint, Guid*, void**, HResult>)(handle->LpVtbl[67]))(handle, hFence, (Guid*)preturnedInterface, ppFence);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult OpenSharedFence<T>(this ComPtr<ID3D11Device5> comObj, nint hFence, out ComPtr<T> ppFence) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Device5* handle = comObj.Handle;
			ppFence = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, nint, Guid*, void**, HResult>)(handle->LpVtbl[67]))(handle, hFence, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppFence.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult OpenSharedFence<T>(this ComPtr<ID3D11Device5> comObj, nint hFence, ref Guid returnedInterface, out ComPtr<T> ppFence) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (Guid* preturnedInterface = &returnedInterface)
			{
				ppFence = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, nint, Guid*, void**, HResult>)(handle->LpVtbl[67]))(handle, hFence, (Guid*)preturnedInterface, (void**)ppFence.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateFence(this ComPtr<ID3D11Device5> comObj, ulong initialValue, FenceFlag flags, Guid* returnedInterface, void** ppFence) 
		{
			ID3D11Device5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ulong, FenceFlag, Guid*, void**, HResult>)(handle->LpVtbl[68]))(handle, initialValue, flags, returnedInterface, ppFence);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateFence(this ComPtr<ID3D11Device5> comObj, ulong initialValue, FenceFlag flags, ref Guid returnedInterface, void** ppFence) 
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (Guid* preturnedInterface = &returnedInterface)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ulong, FenceFlag, Guid*, void**, HResult>)(handle->LpVtbl[68]))(handle, initialValue, flags, (Guid*)preturnedInterface, ppFence);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateFence<T>(this ComPtr<ID3D11Device5> comObj, ulong initialValue, FenceFlag flags, out ComPtr<T> ppFence) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Device5* handle = comObj.Handle;
			ppFence = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ulong, FenceFlag, Guid*, void**, HResult>)(handle->LpVtbl[68]))(handle, initialValue, flags, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppFence.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult CreateFence<T>(this ComPtr<ID3D11Device5> comObj, ulong initialValue, FenceFlag flags, ref Guid returnedInterface, out ComPtr<T> ppFence) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Device5* handle = comObj.Handle;
			fixed (Guid* preturnedInterface = &returnedInterface)
			{
				ppFence = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Device5*, ulong, FenceFlag, Guid*, void**, HResult>)(handle->LpVtbl[68]))(handle, initialValue, flags, (Guid*)preturnedInterface, (void**)ppFence.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11Multithread> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D11Multithread* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Multithread*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11Multithread> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D11Multithread* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Multithread*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11Multithread> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Multithread* handle = comObj.Handle;
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Multithread*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11Multithread> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11Multithread* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11Multithread*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D11Multithread> comObj) 
		{
			ID3D11Multithread* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11Multithread*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D11Multithread> comObj) 
		{
			ID3D11Multithread* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11Multithread*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void Enter(this ComPtr<ID3D11Multithread> comObj) 
		{
			ID3D11Multithread* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Multithread*, void>)(handle->LpVtbl[3]))(handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void Leave(this ComPtr<ID3D11Multithread> comObj) 
		{
			ID3D11Multithread* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11Multithread*, void>)(handle->LpVtbl[4]))(handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static Bool32 SetMultithreadProtected(this ComPtr<ID3D11Multithread> comObj, Bool32 bMTProtect) 
		{
			ID3D11Multithread* handle = comObj.Handle;
			Bool32 ret = ((delegate* unmanaged[Stdcall]<ID3D11Multithread*, Bool32, Bool32>)(handle->LpVtbl[5]))(handle, bMTProtect);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static Bool32 GetMultithreadProtected(this ComPtr<ID3D11Multithread> comObj) 
		{
			ID3D11Multithread* handle = comObj.Handle;
			Bool32 ret = ((delegate* unmanaged[Stdcall]<ID3D11Multithread*, Bool32>)(handle->LpVtbl[6]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11VideoContext2> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface(this ComPtr<ID3D11VideoContext2> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11VideoContext2> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult QueryInterface<T>(this ComPtr<ID3D11VideoContext2> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, void**, HResult>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D11VideoContext2> comObj) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D11VideoContext2> comObj) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11VideoContext2> comObj, ID3D11Device** ppDevice) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, ppDevice);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11Device* ppDevice) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11Device** pppDevice = &ppDevice)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)pppDevice);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void GetDevice(this ComPtr<ID3D11VideoContext2> comObj, out ComPtr<ID3D11Device> ppDevice) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			ppDevice = default;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11Device**, void>)(handle->LpVtbl[3]))(handle, (ID3D11Device**)ppDevice.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoContext2> comObj, Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoContext2> comObj, ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoContext2> comObj, Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData(this ComPtr<ID3D11VideoContext2> comObj, ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoContext2> comObj, Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoContext2> comObj, ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoContext2> comObj, Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetPrivateData<T>(this ComPtr<ID3D11VideoContext2> comObj, ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11VideoContext2> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateData(this ComPtr<ID3D11VideoContext2> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, uint, void*, HResult>)(handle->LpVtbl[5]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoContext2> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoContext2> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoContext2> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoContext2> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoContext2> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SetPrivateDataInterface(this ComPtr<ID3D11VideoContext2> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDecoderBuffer(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoDecoder* pDecoder, VideoDecoderBufferType type, uint* pBufferSize, void** ppBuffer) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderBufferType, uint*, void**, HResult>)(handle->LpVtbl[7]))(handle, pDecoder, type, pBufferSize, ppBuffer);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDecoderBuffer(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoDecoder pDecoder, VideoDecoderBufferType type, uint* pBufferSize, void** ppBuffer) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderBufferType, uint*, void**, HResult>)(handle->LpVtbl[7]))(handle, (ID3D11VideoDecoder*)ppDecoder, type, pBufferSize, ppBuffer);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDecoderBuffer(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, VideoDecoderBufferType type, uint* pBufferSize, void** ppBuffer) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderBufferType, uint*, void**, HResult>)(handle->LpVtbl[7]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, type, pBufferSize, ppBuffer);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDecoderBuffer(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoDecoder* pDecoder, VideoDecoderBufferType type, ref uint pBufferSize, void** ppBuffer) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (uint* ppBufferSize = &pBufferSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderBufferType, uint*, void**, HResult>)(handle->LpVtbl[7]))(handle, pDecoder, type, (uint*)ppBufferSize, ppBuffer);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDecoderBuffer(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoDecoder pDecoder, VideoDecoderBufferType type, ref uint pBufferSize, void** ppBuffer) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (uint* ppBufferSize = &pBufferSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderBufferType, uint*, void**, HResult>)(handle->LpVtbl[7]))(handle, (ID3D11VideoDecoder*)ppDecoder, type, (uint*)ppBufferSize, ppBuffer);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDecoderBuffer(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, VideoDecoderBufferType type, ref uint pBufferSize, void** ppBuffer) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (uint* ppBufferSize = &pBufferSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderBufferType, uint*, void**, HResult>)(handle->LpVtbl[7]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, type, (uint*)ppBufferSize, ppBuffer);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDecoderBuffer<T>(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoDecoder* pDecoder, VideoDecoderBufferType type, uint* pBufferSize, out ComPtr<T> ppBuffer) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			ppBuffer = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderBufferType, uint*, void**, HResult>)(handle->LpVtbl[7]))(handle, pDecoder, type, pBufferSize, (void**)ppBuffer.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDecoderBuffer<T>(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, VideoDecoderBufferType type, uint* pBufferSize, out ComPtr<T> ppBuffer) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			ppBuffer = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderBufferType, uint*, void**, HResult>)(handle->LpVtbl[7]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, type, pBufferSize, (void**)ppBuffer.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDecoderBuffer<T>(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoDecoder* pDecoder, VideoDecoderBufferType type, ref uint pBufferSize, out ComPtr<T> ppBuffer) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (uint* ppBufferSize = &pBufferSize)
			{
				ppBuffer = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderBufferType, uint*, void**, HResult>)(handle->LpVtbl[7]))(handle, pDecoder, type, (uint*)ppBufferSize, (void**)ppBuffer.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult GetDecoderBuffer<T>(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, VideoDecoderBufferType type, ref uint pBufferSize, out ComPtr<T> ppBuffer) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (uint* ppBufferSize = &pBufferSize)
			{
				ppBuffer = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderBufferType, uint*, void**, HResult>)(handle->LpVtbl[7]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, type, (uint*)ppBufferSize, (void**)ppBuffer.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult ReleaseDecoderBuffer(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoDecoder* pDecoder, VideoDecoderBufferType type) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderBufferType, HResult>)(handle->LpVtbl[8]))(handle, pDecoder, type);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult ReleaseDecoderBuffer(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoDecoder pDecoder, VideoDecoderBufferType type) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderBufferType, HResult>)(handle->LpVtbl[8]))(handle, (ID3D11VideoDecoder*)ppDecoder, type);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult ReleaseDecoderBuffer(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, VideoDecoderBufferType type) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderBufferType, HResult>)(handle->LpVtbl[8]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, type);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoDecoder* pDecoder, ID3D11VideoDecoderOutputView* pView, uint contentKeySize, void* pContentKey) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, HResult>)(handle->LpVtbl[9]))(handle, pDecoder, pView, contentKeySize, pContentKey);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoDecoder pDecoder, ID3D11VideoDecoderOutputView* pView, uint contentKeySize, void* pContentKey) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, HResult>)(handle->LpVtbl[9]))(handle, (ID3D11VideoDecoder*)ppDecoder, pView, contentKeySize, pContentKey);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, ID3D11VideoDecoderOutputView* pView, uint contentKeySize, void* pContentKey) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, HResult>)(handle->LpVtbl[9]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, pView, contentKeySize, pContentKey);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoDecoder* pDecoder, ref ID3D11VideoDecoderOutputView pView, uint contentKeySize, void* pContentKey) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoDecoderOutputView* ppView = &pView)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, HResult>)(handle->LpVtbl[9]))(handle, pDecoder, (ID3D11VideoDecoderOutputView*)ppView, contentKeySize, pContentKey);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoDecoder* pDecoder, ComPtr<ID3D11VideoDecoderOutputView> pView, uint contentKeySize, void* pContentKey) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, HResult>)(handle->LpVtbl[9]))(handle, pDecoder, (ID3D11VideoDecoderOutputView*)pView.Handle, contentKeySize, pContentKey);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoDecoder pDecoder, ref ID3D11VideoDecoderOutputView pView, uint contentKeySize, void* pContentKey) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (ID3D11VideoDecoderOutputView* ppView = &pView)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, HResult>)(handle->LpVtbl[9]))(handle, (ID3D11VideoDecoder*)ppDecoder, (ID3D11VideoDecoderOutputView*)ppView, contentKeySize, pContentKey);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, ComPtr<ID3D11VideoDecoderOutputView> pView, uint contentKeySize, void* pContentKey) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, HResult>)(handle->LpVtbl[9]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, (ID3D11VideoDecoderOutputView*)pView.Handle, contentKeySize, pContentKey);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderEndFrame(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoDecoder* pDecoder) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, HResult>)(handle->LpVtbl[10]))(handle, pDecoder);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderEndFrame(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoDecoder pDecoder) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, HResult>)(handle->LpVtbl[10]))(handle, (ID3D11VideoDecoder*)ppDecoder);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderEndFrame(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoDecoder> pDecoder) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, HResult>)(handle->LpVtbl[10]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SubmitDecoderBuffers(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoDecoder* pDecoder, uint numBuffers, VideoDecoderBufferDesc* pBufferDesc) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, uint, VideoDecoderBufferDesc*, HResult>)(handle->LpVtbl[11]))(handle, pDecoder, numBuffers, pBufferDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SubmitDecoderBuffers(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoDecoder pDecoder, uint numBuffers, VideoDecoderBufferDesc* pBufferDesc) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, uint, VideoDecoderBufferDesc*, HResult>)(handle->LpVtbl[11]))(handle, (ID3D11VideoDecoder*)ppDecoder, numBuffers, pBufferDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SubmitDecoderBuffers(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, uint numBuffers, VideoDecoderBufferDesc* pBufferDesc) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, uint, VideoDecoderBufferDesc*, HResult>)(handle->LpVtbl[11]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, numBuffers, pBufferDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SubmitDecoderBuffers(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoDecoder* pDecoder, uint numBuffers, ref VideoDecoderBufferDesc pBufferDesc) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (VideoDecoderBufferDesc* ppBufferDesc = &pBufferDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, uint, VideoDecoderBufferDesc*, HResult>)(handle->LpVtbl[11]))(handle, pDecoder, numBuffers, (VideoDecoderBufferDesc*)ppBufferDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SubmitDecoderBuffers(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoDecoder pDecoder, uint numBuffers, ref VideoDecoderBufferDesc pBufferDesc) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (VideoDecoderBufferDesc* ppBufferDesc = &pBufferDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, uint, VideoDecoderBufferDesc*, HResult>)(handle->LpVtbl[11]))(handle, (ID3D11VideoDecoder*)ppDecoder, numBuffers, (VideoDecoderBufferDesc*)ppBufferDesc);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SubmitDecoderBuffers(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, uint numBuffers, ref VideoDecoderBufferDesc pBufferDesc) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (VideoDecoderBufferDesc* ppBufferDesc = &pBufferDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, uint, VideoDecoderBufferDesc*, HResult>)(handle->LpVtbl[11]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, numBuffers, (VideoDecoderBufferDesc*)ppBufferDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderExtension(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoDecoder* pDecoder, VideoDecoderExtension* pExtensionData) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderExtension*, HResult>)(handle->LpVtbl[12]))(handle, pDecoder, pExtensionData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderExtension(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoDecoder pDecoder, VideoDecoderExtension* pExtensionData) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderExtension*, HResult>)(handle->LpVtbl[12]))(handle, (ID3D11VideoDecoder*)ppDecoder, pExtensionData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderExtension(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, VideoDecoderExtension* pExtensionData) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderExtension*, HResult>)(handle->LpVtbl[12]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, pExtensionData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderExtension(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoDecoder* pDecoder, ref VideoDecoderExtension pExtensionData) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (VideoDecoderExtension* ppExtensionData = &pExtensionData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderExtension*, HResult>)(handle->LpVtbl[12]))(handle, pDecoder, (VideoDecoderExtension*)ppExtensionData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderExtension(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoDecoder pDecoder, ref VideoDecoderExtension pExtensionData) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (VideoDecoderExtension* ppExtensionData = &pExtensionData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderExtension*, HResult>)(handle->LpVtbl[12]))(handle, (ID3D11VideoDecoder*)ppDecoder, (VideoDecoderExtension*)ppExtensionData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderExtension(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, ref VideoDecoderExtension pExtensionData) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (VideoDecoderExtension* ppExtensionData = &pExtensionData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderExtension*, HResult>)(handle->LpVtbl[12]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, (VideoDecoderExtension*)ppExtensionData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputTargetRect(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoProcessor* pVideoProcessor, Bool32 enable, Rect32* pRect) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, Rect32*, void>)(handle->LpVtbl[13]))(handle, pVideoProcessor, enable, pRect);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputTargetRect(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoProcessor pVideoProcessor, Bool32 enable, Rect32* pRect) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, Rect32*, void>)(handle->LpVtbl[13]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, enable, pRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputTargetRect(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, Bool32 enable, Rect32* pRect) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, Rect32*, void>)(handle->LpVtbl[13]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, enable, pRect);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputTargetRect(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoProcessor* pVideoProcessor, Bool32 enable, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (Rect32* ppRect = &pRect)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, Rect32*, void>)(handle->LpVtbl[13]))(handle, pVideoProcessor, enable, (Rect32*)ppRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputTargetRect(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoProcessor pVideoProcessor, Bool32 enable, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Rect32* ppRect = &pRect)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, Rect32*, void>)(handle->LpVtbl[13]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, enable, (Rect32*)ppRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputTargetRect(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, Bool32 enable, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (Rect32* ppRect = &pRect)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, Rect32*, void>)(handle->LpVtbl[13]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, enable, (Rect32*)ppRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputBackgroundColor(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoProcessor* pVideoProcessor, Bool32 yCbCr, VideoColor* pColor) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, VideoColor*, void>)(handle->LpVtbl[14]))(handle, pVideoProcessor, yCbCr, pColor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputBackgroundColor(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoProcessor pVideoProcessor, Bool32 yCbCr, VideoColor* pColor) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, VideoColor*, void>)(handle->LpVtbl[14]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, yCbCr, pColor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputBackgroundColor(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, Bool32 yCbCr, VideoColor* pColor) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, VideoColor*, void>)(handle->LpVtbl[14]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, yCbCr, pColor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputBackgroundColor(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoProcessor* pVideoProcessor, Bool32 yCbCr, ref VideoColor pColor) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (VideoColor* ppColor = &pColor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, VideoColor*, void>)(handle->LpVtbl[14]))(handle, pVideoProcessor, yCbCr, (VideoColor*)ppColor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputBackgroundColor(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoProcessor pVideoProcessor, Bool32 yCbCr, ref VideoColor pColor) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoColor* ppColor = &pColor)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, VideoColor*, void>)(handle->LpVtbl[14]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, yCbCr, (VideoColor*)ppColor);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputBackgroundColor(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, Bool32 yCbCr, ref VideoColor pColor) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (VideoColor* ppColor = &pColor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, VideoColor*, void>)(handle->LpVtbl[14]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, yCbCr, (VideoColor*)ppColor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputColorSpace(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoProcessor* pVideoProcessor, VideoProcessorColorSpace* pColorSpace) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorColorSpace*, void>)(handle->LpVtbl[15]))(handle, pVideoProcessor, pColorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputColorSpace(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoProcessor pVideoProcessor, VideoProcessorColorSpace* pColorSpace) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorColorSpace*, void>)(handle->LpVtbl[15]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, pColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputColorSpace(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, VideoProcessorColorSpace* pColorSpace) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorColorSpace*, void>)(handle->LpVtbl[15]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pColorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputColorSpace(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoProcessor* pVideoProcessor, ref VideoProcessorColorSpace pColorSpace) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (VideoProcessorColorSpace* ppColorSpace = &pColorSpace)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorColorSpace*, void>)(handle->LpVtbl[15]))(handle, pVideoProcessor, (VideoProcessorColorSpace*)ppColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputColorSpace(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoProcessor pVideoProcessor, ref VideoProcessorColorSpace pColorSpace) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorColorSpace* ppColorSpace = &pColorSpace)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorColorSpace*, void>)(handle->LpVtbl[15]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, (VideoProcessorColorSpace*)ppColorSpace);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputColorSpace(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref VideoProcessorColorSpace pColorSpace) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (VideoProcessorColorSpace* ppColorSpace = &pColorSpace)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorColorSpace*, void>)(handle->LpVtbl[15]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (VideoProcessorColorSpace*)ppColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputAlphaFillMode(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoProcessor* pVideoProcessor, VideoProcessorAlphaFillMode alphaFillMode, uint streamIndex) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorAlphaFillMode, uint, void>)(handle->LpVtbl[16]))(handle, pVideoProcessor, alphaFillMode, streamIndex);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputAlphaFillMode(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoProcessor pVideoProcessor, VideoProcessorAlphaFillMode alphaFillMode, uint streamIndex) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorAlphaFillMode, uint, void>)(handle->LpVtbl[16]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, alphaFillMode, streamIndex);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputAlphaFillMode(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, VideoProcessorAlphaFillMode alphaFillMode, uint streamIndex) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorAlphaFillMode, uint, void>)(handle->LpVtbl[16]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, alphaFillMode, streamIndex);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputConstriction(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoProcessor* pVideoProcessor, Bool32 enable, nint size) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, nint, void>)(handle->LpVtbl[17]))(handle, pVideoProcessor, enable, size);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputConstriction(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoProcessor pVideoProcessor, Bool32 enable, nint size) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, nint, void>)(handle->LpVtbl[17]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, enable, size);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputConstriction(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, Bool32 enable, nint size) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, nint, void>)(handle->LpVtbl[17]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, enable, size);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputStereoMode(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoProcessor* pVideoProcessor, Bool32 enable) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, void>)(handle->LpVtbl[18]))(handle, pVideoProcessor, enable);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputStereoMode(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoProcessor pVideoProcessor, Bool32 enable) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, void>)(handle->LpVtbl[18]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, enable);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputStereoMode(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, Bool32 enable) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, void>)(handle->LpVtbl[18]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, enable);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult VideoProcessorSetOutputExtension(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoProcessor* pVideoProcessor, Guid* pExtensionGuid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(handle->LpVtbl[19]))(handle, pVideoProcessor, pExtensionGuid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult VideoProcessorSetOutputExtension(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoProcessor pVideoProcessor, Guid* pExtensionGuid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(handle->LpVtbl[19]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, pExtensionGuid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult VideoProcessorSetOutputExtension(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, Guid* pExtensionGuid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(handle->LpVtbl[19]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pExtensionGuid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult VideoProcessorSetOutputExtension(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoProcessor* pVideoProcessor, ref Guid pExtensionGuid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (Guid* ppExtensionGuid = &pExtensionGuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(handle->LpVtbl[19]))(handle, pVideoProcessor, (Guid*)ppExtensionGuid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult VideoProcessorSetOutputExtension(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoProcessor pVideoProcessor, ref Guid pExtensionGuid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Guid* ppExtensionGuid = &pExtensionGuid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(handle->LpVtbl[19]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, (Guid*)ppExtensionGuid, dataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult VideoProcessorSetOutputExtension(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref Guid pExtensionGuid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (Guid* ppExtensionGuid = &pExtensionGuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(handle->LpVtbl[19]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (Guid*)ppExtensionGuid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult VideoProcessorSetOutputExtension<T>(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoProcessor* pVideoProcessor, Guid* pExtensionGuid, uint dataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(handle->LpVtbl[19]))(handle, pVideoProcessor, pExtensionGuid, dataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult VideoProcessorSetOutputExtension<T>(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, Guid* pExtensionGuid, uint dataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(handle->LpVtbl[19]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pExtensionGuid, dataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult VideoProcessorSetOutputExtension<T>(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoProcessor* pVideoProcessor, ref Guid pExtensionGuid, uint dataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (Guid* ppExtensionGuid = &pExtensionGuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(handle->LpVtbl[19]))(handle, pVideoProcessor, (Guid*)ppExtensionGuid, dataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult VideoProcessorSetOutputExtension<T>(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref Guid pExtensionGuid, uint dataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (Guid* ppExtensionGuid = &pExtensionGuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(handle->LpVtbl[19]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (Guid*)ppExtensionGuid, dataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputTargetRect(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoProcessor* pVideoProcessor, Bool32* enabled, Rect32* pRect) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, Rect32*, void>)(handle->LpVtbl[20]))(handle, pVideoProcessor, enabled, pRect);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputTargetRect(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoProcessor pVideoProcessor, Bool32* enabled, Rect32* pRect) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, Rect32*, void>)(handle->LpVtbl[20]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, enabled, pRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputTargetRect(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, Bool32* enabled, Rect32* pRect) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, Rect32*, void>)(handle->LpVtbl[20]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, enabled, pRect);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputTargetRect(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoProcessor* pVideoProcessor, ref Bool32 enabled, Rect32* pRect) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (Bool32* penabled = &enabled)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, Rect32*, void>)(handle->LpVtbl[20]))(handle, pVideoProcessor, (Bool32*)penabled, pRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputTargetRect(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoProcessor pVideoProcessor, ref Bool32 enabled, Rect32* pRect) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* penabled = &enabled)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, Rect32*, void>)(handle->LpVtbl[20]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, (Bool32*)penabled, pRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputTargetRect(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref Bool32 enabled, Rect32* pRect) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (Bool32* penabled = &enabled)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, Rect32*, void>)(handle->LpVtbl[20]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (Bool32*)penabled, pRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputTargetRect(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoProcessor* pVideoProcessor, Bool32* enabled, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (Rect32* ppRect = &pRect)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, Rect32*, void>)(handle->LpVtbl[20]))(handle, pVideoProcessor, enabled, (Rect32*)ppRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputTargetRect(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoProcessor pVideoProcessor, Bool32* enabled, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Rect32* ppRect = &pRect)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, Rect32*, void>)(handle->LpVtbl[20]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, enabled, (Rect32*)ppRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputTargetRect(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, Bool32* enabled, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (Rect32* ppRect = &pRect)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, Rect32*, void>)(handle->LpVtbl[20]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, enabled, (Rect32*)ppRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputTargetRect(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoProcessor* pVideoProcessor, ref Bool32 enabled, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (Bool32* penabled = &enabled)
			{
				fixed (Rect32* ppRect = &pRect)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, Rect32*, void>)(handle->LpVtbl[20]))(handle, pVideoProcessor, (Bool32*)penabled, (Rect32*)ppRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputTargetRect(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoProcessor pVideoProcessor, ref Bool32 enabled, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* penabled = &enabled)
				{
					fixed (Rect32* ppRect = &pRect)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, Rect32*, void>)(handle->LpVtbl[20]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, (Bool32*)penabled, (Rect32*)ppRect);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputTargetRect(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref Bool32 enabled, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (Bool32* penabled = &enabled)
			{
				fixed (Rect32* ppRect = &pRect)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, Rect32*, void>)(handle->LpVtbl[20]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (Bool32*)penabled, (Rect32*)ppRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputBackgroundColor(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoProcessor* pVideoProcessor, Bool32* pYCbCr, VideoColor* pColor) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, VideoColor*, void>)(handle->LpVtbl[21]))(handle, pVideoProcessor, pYCbCr, pColor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputBackgroundColor(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoProcessor pVideoProcessor, Bool32* pYCbCr, VideoColor* pColor) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, VideoColor*, void>)(handle->LpVtbl[21]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, pYCbCr, pColor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputBackgroundColor(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, Bool32* pYCbCr, VideoColor* pColor) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, VideoColor*, void>)(handle->LpVtbl[21]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pYCbCr, pColor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputBackgroundColor(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoProcessor* pVideoProcessor, ref Bool32 pYCbCr, VideoColor* pColor) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (Bool32* ppYCbCr = &pYCbCr)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, VideoColor*, void>)(handle->LpVtbl[21]))(handle, pVideoProcessor, (Bool32*)ppYCbCr, pColor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputBackgroundColor(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoProcessor pVideoProcessor, ref Bool32 pYCbCr, VideoColor* pColor) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppYCbCr = &pYCbCr)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, VideoColor*, void>)(handle->LpVtbl[21]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, (Bool32*)ppYCbCr, pColor);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputBackgroundColor(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref Bool32 pYCbCr, VideoColor* pColor) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (Bool32* ppYCbCr = &pYCbCr)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, VideoColor*, void>)(handle->LpVtbl[21]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (Bool32*)ppYCbCr, pColor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputBackgroundColor(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoProcessor* pVideoProcessor, Bool32* pYCbCr, ref VideoColor pColor) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (VideoColor* ppColor = &pColor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, VideoColor*, void>)(handle->LpVtbl[21]))(handle, pVideoProcessor, pYCbCr, (VideoColor*)ppColor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputBackgroundColor(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoProcessor pVideoProcessor, Bool32* pYCbCr, ref VideoColor pColor) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoColor* ppColor = &pColor)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, VideoColor*, void>)(handle->LpVtbl[21]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, pYCbCr, (VideoColor*)ppColor);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputBackgroundColor(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, Bool32* pYCbCr, ref VideoColor pColor) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (VideoColor* ppColor = &pColor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, VideoColor*, void>)(handle->LpVtbl[21]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pYCbCr, (VideoColor*)ppColor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputBackgroundColor(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoProcessor* pVideoProcessor, ref Bool32 pYCbCr, ref VideoColor pColor) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (Bool32* ppYCbCr = &pYCbCr)
			{
				fixed (VideoColor* ppColor = &pColor)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, VideoColor*, void>)(handle->LpVtbl[21]))(handle, pVideoProcessor, (Bool32*)ppYCbCr, (VideoColor*)ppColor);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputBackgroundColor(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoProcessor pVideoProcessor, ref Bool32 pYCbCr, ref VideoColor pColor) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppYCbCr = &pYCbCr)
				{
					fixed (VideoColor* ppColor = &pColor)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, VideoColor*, void>)(handle->LpVtbl[21]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, (Bool32*)ppYCbCr, (VideoColor*)ppColor);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputBackgroundColor(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref Bool32 pYCbCr, ref VideoColor pColor) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (Bool32* ppYCbCr = &pYCbCr)
			{
				fixed (VideoColor* ppColor = &pColor)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, VideoColor*, void>)(handle->LpVtbl[21]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (Bool32*)ppYCbCr, (VideoColor*)ppColor);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputColorSpace(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoProcessor* pVideoProcessor, VideoProcessorColorSpace* pColorSpace) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorColorSpace*, void>)(handle->LpVtbl[22]))(handle, pVideoProcessor, pColorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputColorSpace(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoProcessor pVideoProcessor, VideoProcessorColorSpace* pColorSpace) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorColorSpace*, void>)(handle->LpVtbl[22]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, pColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputColorSpace(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, VideoProcessorColorSpace* pColorSpace) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorColorSpace*, void>)(handle->LpVtbl[22]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pColorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputColorSpace(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoProcessor* pVideoProcessor, ref VideoProcessorColorSpace pColorSpace) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (VideoProcessorColorSpace* ppColorSpace = &pColorSpace)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorColorSpace*, void>)(handle->LpVtbl[22]))(handle, pVideoProcessor, (VideoProcessorColorSpace*)ppColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputColorSpace(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoProcessor pVideoProcessor, ref VideoProcessorColorSpace pColorSpace) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorColorSpace* ppColorSpace = &pColorSpace)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorColorSpace*, void>)(handle->LpVtbl[22]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, (VideoProcessorColorSpace*)ppColorSpace);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputColorSpace(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref VideoProcessorColorSpace pColorSpace) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (VideoProcessorColorSpace* ppColorSpace = &pColorSpace)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorColorSpace*, void>)(handle->LpVtbl[22]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (VideoProcessorColorSpace*)ppColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputAlphaFillMode(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoProcessor* pVideoProcessor, VideoProcessorAlphaFillMode* pAlphaFillMode, uint* pStreamIndex) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorAlphaFillMode*, uint*, void>)(handle->LpVtbl[23]))(handle, pVideoProcessor, pAlphaFillMode, pStreamIndex);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputAlphaFillMode(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoProcessor pVideoProcessor, VideoProcessorAlphaFillMode* pAlphaFillMode, uint* pStreamIndex) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorAlphaFillMode*, uint*, void>)(handle->LpVtbl[23]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, pAlphaFillMode, pStreamIndex);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputAlphaFillMode(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, VideoProcessorAlphaFillMode* pAlphaFillMode, uint* pStreamIndex) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorAlphaFillMode*, uint*, void>)(handle->LpVtbl[23]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pAlphaFillMode, pStreamIndex);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputAlphaFillMode(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoProcessor* pVideoProcessor, ref VideoProcessorAlphaFillMode pAlphaFillMode, uint* pStreamIndex) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (VideoProcessorAlphaFillMode* ppAlphaFillMode = &pAlphaFillMode)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorAlphaFillMode*, uint*, void>)(handle->LpVtbl[23]))(handle, pVideoProcessor, (VideoProcessorAlphaFillMode*)ppAlphaFillMode, pStreamIndex);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputAlphaFillMode(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoProcessor pVideoProcessor, ref VideoProcessorAlphaFillMode pAlphaFillMode, uint* pStreamIndex) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorAlphaFillMode* ppAlphaFillMode = &pAlphaFillMode)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorAlphaFillMode*, uint*, void>)(handle->LpVtbl[23]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, (VideoProcessorAlphaFillMode*)ppAlphaFillMode, pStreamIndex);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputAlphaFillMode(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref VideoProcessorAlphaFillMode pAlphaFillMode, uint* pStreamIndex) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (VideoProcessorAlphaFillMode* ppAlphaFillMode = &pAlphaFillMode)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorAlphaFillMode*, uint*, void>)(handle->LpVtbl[23]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (VideoProcessorAlphaFillMode*)ppAlphaFillMode, pStreamIndex);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputAlphaFillMode(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoProcessor* pVideoProcessor, VideoProcessorAlphaFillMode* pAlphaFillMode, ref uint pStreamIndex) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (uint* ppStreamIndex = &pStreamIndex)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorAlphaFillMode*, uint*, void>)(handle->LpVtbl[23]))(handle, pVideoProcessor, pAlphaFillMode, (uint*)ppStreamIndex);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputAlphaFillMode(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoProcessor pVideoProcessor, VideoProcessorAlphaFillMode* pAlphaFillMode, ref uint pStreamIndex) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (uint* ppStreamIndex = &pStreamIndex)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorAlphaFillMode*, uint*, void>)(handle->LpVtbl[23]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, pAlphaFillMode, (uint*)ppStreamIndex);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputAlphaFillMode(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, VideoProcessorAlphaFillMode* pAlphaFillMode, ref uint pStreamIndex) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (uint* ppStreamIndex = &pStreamIndex)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorAlphaFillMode*, uint*, void>)(handle->LpVtbl[23]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pAlphaFillMode, (uint*)ppStreamIndex);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputAlphaFillMode(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoProcessor* pVideoProcessor, ref VideoProcessorAlphaFillMode pAlphaFillMode, ref uint pStreamIndex) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (VideoProcessorAlphaFillMode* ppAlphaFillMode = &pAlphaFillMode)
			{
				fixed (uint* ppStreamIndex = &pStreamIndex)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorAlphaFillMode*, uint*, void>)(handle->LpVtbl[23]))(handle, pVideoProcessor, (VideoProcessorAlphaFillMode*)ppAlphaFillMode, (uint*)ppStreamIndex);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputAlphaFillMode(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoProcessor pVideoProcessor, ref VideoProcessorAlphaFillMode pAlphaFillMode, ref uint pStreamIndex) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorAlphaFillMode* ppAlphaFillMode = &pAlphaFillMode)
				{
					fixed (uint* ppStreamIndex = &pStreamIndex)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorAlphaFillMode*, uint*, void>)(handle->LpVtbl[23]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, (VideoProcessorAlphaFillMode*)ppAlphaFillMode, (uint*)ppStreamIndex);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputAlphaFillMode(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref VideoProcessorAlphaFillMode pAlphaFillMode, ref uint pStreamIndex) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (VideoProcessorAlphaFillMode* ppAlphaFillMode = &pAlphaFillMode)
			{
				fixed (uint* ppStreamIndex = &pStreamIndex)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorAlphaFillMode*, uint*, void>)(handle->LpVtbl[23]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (VideoProcessorAlphaFillMode*)ppAlphaFillMode, (uint*)ppStreamIndex);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputConstriction(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoProcessor* pVideoProcessor, Bool32* pEnabled, nint* pSize) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, nint*, void>)(handle->LpVtbl[24]))(handle, pVideoProcessor, pEnabled, pSize);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputConstriction(this ComPtr<ID3D11VideoContext2> comObj, ref ID3D11VideoProcessor pVideoProcessor, Bool32* pEnabled, nint* pSize) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, nint*, void>)(handle->LpVtbl[24]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, pEnabled, pSize);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputConstriction(this ComPtr<ID3D11VideoContext2> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, Bool32* pEnabled, nint* pSize) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, nint*, void>)(handle->LpVtbl[24]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pEnabled, pSize);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputConstriction(this ComPtr<ID3D11VideoContext2> comObj, ID3D11VideoProcessor* pVideoProcessor, ref Bool32 pEnabled, nint* pSize) 
		{
			ID3D11VideoContext2* handle = comObj.Handle;
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, nint*, void>)(handle->LpVtbl[24]))(handle, pVideoProcessor, (Bool32*)ppEnabled, pSize);
			}
		}
	}
}
