// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D11
{
	public static unsafe partial class Extensions
	{

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputShaderUsage(this ComPtr<ID3D11VideoContext1> comObj, ref ID3D11VideoProcessor pVideoProcessor, int shaderUsage) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, int, void>)(handle->LpVtbl[71]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, shaderUsage);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputShaderUsage(this ComPtr<ID3D11VideoContext1> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, int shaderUsage) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, int, void>)(handle->LpVtbl[71]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, shaderUsage);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputColorSpace1(this ComPtr<ID3D11VideoContext1> comObj, ID3D11VideoProcessor* pVideoProcessor, ColorSpaceType* pColorSpace) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, ColorSpaceType*, void>)(handle->LpVtbl[72]))(handle, pVideoProcessor, pColorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputColorSpace1(this ComPtr<ID3D11VideoContext1> comObj, ref ID3D11VideoProcessor pVideoProcessor, ColorSpaceType* pColorSpace) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, ColorSpaceType*, void>)(handle->LpVtbl[72]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, pColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputColorSpace1(this ComPtr<ID3D11VideoContext1> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, ColorSpaceType* pColorSpace) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, ColorSpaceType*, void>)(handle->LpVtbl[72]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pColorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputColorSpace1(this ComPtr<ID3D11VideoContext1> comObj, ID3D11VideoProcessor* pVideoProcessor, ref ColorSpaceType pColorSpace) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (ColorSpaceType* ppColorSpace = &pColorSpace)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, ColorSpaceType*, void>)(handle->LpVtbl[72]))(handle, pVideoProcessor, (ColorSpaceType*)ppColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputColorSpace1(this ComPtr<ID3D11VideoContext1> comObj, ref ID3D11VideoProcessor pVideoProcessor, ref ColorSpaceType pColorSpace) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (ColorSpaceType* ppColorSpace = &pColorSpace)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, ColorSpaceType*, void>)(handle->LpVtbl[72]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, (ColorSpaceType*)ppColorSpace);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputColorSpace1(this ComPtr<ID3D11VideoContext1> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref ColorSpaceType pColorSpace) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (ColorSpaceType* ppColorSpace = &pColorSpace)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, ColorSpaceType*, void>)(handle->LpVtbl[72]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (ColorSpaceType*)ppColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputShaderUsage(this ComPtr<ID3D11VideoContext1> comObj, ID3D11VideoProcessor* pVideoProcessor, int* pShaderUsage) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, int*, void>)(handle->LpVtbl[73]))(handle, pVideoProcessor, pShaderUsage);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputShaderUsage(this ComPtr<ID3D11VideoContext1> comObj, ref ID3D11VideoProcessor pVideoProcessor, int* pShaderUsage) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, int*, void>)(handle->LpVtbl[73]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, pShaderUsage);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputShaderUsage(this ComPtr<ID3D11VideoContext1> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, int* pShaderUsage) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, int*, void>)(handle->LpVtbl[73]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pShaderUsage);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputShaderUsage(this ComPtr<ID3D11VideoContext1> comObj, ID3D11VideoProcessor* pVideoProcessor, ref int pShaderUsage) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (int* ppShaderUsage = &pShaderUsage)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, int*, void>)(handle->LpVtbl[73]))(handle, pVideoProcessor, (int*)ppShaderUsage);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputShaderUsage(this ComPtr<ID3D11VideoContext1> comObj, ref ID3D11VideoProcessor pVideoProcessor, ref int pShaderUsage) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (int* ppShaderUsage = &pShaderUsage)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, int*, void>)(handle->LpVtbl[73]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, (int*)ppShaderUsage);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputShaderUsage(this ComPtr<ID3D11VideoContext1> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref int pShaderUsage) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (int* ppShaderUsage = &pShaderUsage)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, int*, void>)(handle->LpVtbl[73]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (int*)ppShaderUsage);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetStreamColorSpace1(this ComPtr<ID3D11VideoContext1> comObj, ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ColorSpaceType colorSpace) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, ColorSpaceType, void>)(handle->LpVtbl[74]))(handle, pVideoProcessor, streamIndex, colorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetStreamColorSpace1(this ComPtr<ID3D11VideoContext1> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ColorSpaceType colorSpace) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, ColorSpaceType, void>)(handle->LpVtbl[74]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, colorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetStreamColorSpace1(this ComPtr<ID3D11VideoContext1> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ColorSpaceType colorSpace) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, ColorSpaceType, void>)(handle->LpVtbl[74]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, colorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetStreamMirror(this ComPtr<ID3D11VideoContext1> comObj, ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, int enable, int flipHorizontal, int flipVertical) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, int, int, int, void>)(handle->LpVtbl[75]))(handle, pVideoProcessor, streamIndex, enable, flipHorizontal, flipVertical);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetStreamMirror(this ComPtr<ID3D11VideoContext1> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, int enable, int flipHorizontal, int flipVertical) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, int, int, int, void>)(handle->LpVtbl[75]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, enable, flipHorizontal, flipVertical);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetStreamMirror(this ComPtr<ID3D11VideoContext1> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, int enable, int flipHorizontal, int flipVertical) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, int, int, int, void>)(handle->LpVtbl[75]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, enable, flipHorizontal, flipVertical);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamColorSpace1(this ComPtr<ID3D11VideoContext1> comObj, ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ColorSpaceType* pColorSpace) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, ColorSpaceType*, void>)(handle->LpVtbl[76]))(handle, pVideoProcessor, streamIndex, pColorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamColorSpace1(this ComPtr<ID3D11VideoContext1> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ColorSpaceType* pColorSpace) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, ColorSpaceType*, void>)(handle->LpVtbl[76]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamColorSpace1(this ComPtr<ID3D11VideoContext1> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ColorSpaceType* pColorSpace) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, ColorSpaceType*, void>)(handle->LpVtbl[76]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pColorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamColorSpace1(this ComPtr<ID3D11VideoContext1> comObj, ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref ColorSpaceType pColorSpace) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (ColorSpaceType* ppColorSpace = &pColorSpace)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, ColorSpaceType*, void>)(handle->LpVtbl[76]))(handle, pVideoProcessor, streamIndex, (ColorSpaceType*)ppColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamColorSpace1(this ComPtr<ID3D11VideoContext1> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref ColorSpaceType pColorSpace) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (ColorSpaceType* ppColorSpace = &pColorSpace)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, ColorSpaceType*, void>)(handle->LpVtbl[76]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (ColorSpaceType*)ppColorSpace);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamColorSpace1(this ComPtr<ID3D11VideoContext1> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref ColorSpaceType pColorSpace) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (ColorSpaceType* ppColorSpace = &pColorSpace)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, ColorSpaceType*, void>)(handle->LpVtbl[76]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (ColorSpaceType*)ppColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext1> comObj, ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, int* pEnable, int* pFlipHorizontal, int* pFlipVertical) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, int*, int*, int*, void>)(handle->LpVtbl[77]))(handle, pVideoProcessor, streamIndex, pEnable, pFlipHorizontal, pFlipVertical);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext1> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, int* pEnable, int* pFlipHorizontal, int* pFlipVertical) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, int*, int*, int*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, pFlipHorizontal, pFlipVertical);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext1> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, int* pEnable, int* pFlipHorizontal, int* pFlipVertical) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, int*, int*, int*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, pFlipHorizontal, pFlipVertical);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext1> comObj, ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref int pEnable, int* pFlipHorizontal, int* pFlipVertical) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (int* ppEnable = &pEnable)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, int*, int*, int*, void>)(handle->LpVtbl[77]))(handle, pVideoProcessor, streamIndex, (int*)ppEnable, pFlipHorizontal, pFlipVertical);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext1> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref int pEnable, int* pFlipHorizontal, int* pFlipVertical) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (int* ppEnable = &pEnable)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, int*, int*, int*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (int*)ppEnable, pFlipHorizontal, pFlipVertical);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext1> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref int pEnable, int* pFlipHorizontal, int* pFlipVertical) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (int* ppEnable = &pEnable)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, int*, int*, int*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (int*)ppEnable, pFlipHorizontal, pFlipVertical);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext1> comObj, ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, int* pEnable, ref int pFlipHorizontal, int* pFlipVertical) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (int* ppFlipHorizontal = &pFlipHorizontal)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, int*, int*, int*, void>)(handle->LpVtbl[77]))(handle, pVideoProcessor, streamIndex, pEnable, (int*)ppFlipHorizontal, pFlipVertical);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext1> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, int* pEnable, ref int pFlipHorizontal, int* pFlipVertical) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (int* ppFlipHorizontal = &pFlipHorizontal)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, int*, int*, int*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, (int*)ppFlipHorizontal, pFlipVertical);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext1> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, int* pEnable, ref int pFlipHorizontal, int* pFlipVertical) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (int* ppFlipHorizontal = &pFlipHorizontal)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, int*, int*, int*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, (int*)ppFlipHorizontal, pFlipVertical);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext1> comObj, ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref int pEnable, ref int pFlipHorizontal, int* pFlipVertical) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (int* ppEnable = &pEnable)
			{
				fixed (int* ppFlipHorizontal = &pFlipHorizontal)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, int*, int*, int*, void>)(handle->LpVtbl[77]))(handle, pVideoProcessor, streamIndex, (int*)ppEnable, (int*)ppFlipHorizontal, pFlipVertical);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext1> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref int pEnable, ref int pFlipHorizontal, int* pFlipVertical) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (int* ppEnable = &pEnable)
				{
					fixed (int* ppFlipHorizontal = &pFlipHorizontal)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, int*, int*, int*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (int*)ppEnable, (int*)ppFlipHorizontal, pFlipVertical);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext1> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref int pEnable, ref int pFlipHorizontal, int* pFlipVertical) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (int* ppEnable = &pEnable)
			{
				fixed (int* ppFlipHorizontal = &pFlipHorizontal)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, int*, int*, int*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (int*)ppEnable, (int*)ppFlipHorizontal, pFlipVertical);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext1> comObj, ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, int* pEnable, int* pFlipHorizontal, ref int pFlipVertical) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (int* ppFlipVertical = &pFlipVertical)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, int*, int*, int*, void>)(handle->LpVtbl[77]))(handle, pVideoProcessor, streamIndex, pEnable, pFlipHorizontal, (int*)ppFlipVertical);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext1> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, int* pEnable, int* pFlipHorizontal, ref int pFlipVertical) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (int* ppFlipVertical = &pFlipVertical)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, int*, int*, int*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, pFlipHorizontal, (int*)ppFlipVertical);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext1> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, int* pEnable, int* pFlipHorizontal, ref int pFlipVertical) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (int* ppFlipVertical = &pFlipVertical)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, int*, int*, int*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, pFlipHorizontal, (int*)ppFlipVertical);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext1> comObj, ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref int pEnable, int* pFlipHorizontal, ref int pFlipVertical) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (int* ppEnable = &pEnable)
			{
				fixed (int* ppFlipVertical = &pFlipVertical)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, int*, int*, int*, void>)(handle->LpVtbl[77]))(handle, pVideoProcessor, streamIndex, (int*)ppEnable, pFlipHorizontal, (int*)ppFlipVertical);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext1> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref int pEnable, int* pFlipHorizontal, ref int pFlipVertical) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (int* ppEnable = &pEnable)
				{
					fixed (int* ppFlipVertical = &pFlipVertical)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, int*, int*, int*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (int*)ppEnable, pFlipHorizontal, (int*)ppFlipVertical);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext1> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref int pEnable, int* pFlipHorizontal, ref int pFlipVertical) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (int* ppEnable = &pEnable)
			{
				fixed (int* ppFlipVertical = &pFlipVertical)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, int*, int*, int*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (int*)ppEnable, pFlipHorizontal, (int*)ppFlipVertical);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext1> comObj, ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, int* pEnable, ref int pFlipHorizontal, ref int pFlipVertical) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (int* ppFlipHorizontal = &pFlipHorizontal)
			{
				fixed (int* ppFlipVertical = &pFlipVertical)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, int*, int*, int*, void>)(handle->LpVtbl[77]))(handle, pVideoProcessor, streamIndex, pEnable, (int*)ppFlipHorizontal, (int*)ppFlipVertical);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext1> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, int* pEnable, ref int pFlipHorizontal, ref int pFlipVertical) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (int* ppFlipHorizontal = &pFlipHorizontal)
				{
					fixed (int* ppFlipVertical = &pFlipVertical)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, int*, int*, int*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, (int*)ppFlipHorizontal, (int*)ppFlipVertical);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext1> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, int* pEnable, ref int pFlipHorizontal, ref int pFlipVertical) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (int* ppFlipHorizontal = &pFlipHorizontal)
			{
				fixed (int* ppFlipVertical = &pFlipVertical)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, int*, int*, int*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, (int*)ppFlipHorizontal, (int*)ppFlipVertical);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext1> comObj, ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref int pEnable, ref int pFlipHorizontal, ref int pFlipVertical) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (int* ppEnable = &pEnable)
			{
				fixed (int* ppFlipHorizontal = &pFlipHorizontal)
				{
					fixed (int* ppFlipVertical = &pFlipVertical)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, int*, int*, int*, void>)(handle->LpVtbl[77]))(handle, pVideoProcessor, streamIndex, (int*)ppEnable, (int*)ppFlipHorizontal, (int*)ppFlipVertical);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext1> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref int pEnable, ref int pFlipHorizontal, ref int pFlipVertical) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (int* ppEnable = &pEnable)
				{
					fixed (int* ppFlipHorizontal = &pFlipHorizontal)
					{
						fixed (int* ppFlipVertical = &pFlipVertical)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, int*, int*, int*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (int*)ppEnable, (int*)ppFlipHorizontal, (int*)ppFlipVertical);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext1> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref int pEnable, ref int pFlipHorizontal, ref int pFlipVertical) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (int* ppEnable = &pEnable)
			{
				fixed (int* ppFlipHorizontal = &pFlipHorizontal)
				{
					fixed (int* ppFlipVertical = &pFlipVertical)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, int*, int*, int*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (int*)ppEnable, (int*)ppFlipHorizontal, (int*)ppFlipVertical);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int VideoProcessorGetBehaviorHints(this ComPtr<ID3D11VideoContext1> comObj, ID3D11VideoProcessor* pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, VideoProcessorStreamBehaviorHint* pStreams, uint* pBehaviorHints) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, int>)(handle->LpVtbl[78]))(handle, pVideoProcessor, outputWidth, outputHeight, outputFormat, streamCount, pStreams, pBehaviorHints);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int VideoProcessorGetBehaviorHints(this ComPtr<ID3D11VideoContext1> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, VideoProcessorStreamBehaviorHint* pStreams, uint* pBehaviorHints) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, int>)(handle->LpVtbl[78]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, outputWidth, outputHeight, outputFormat, streamCount, pStreams, pBehaviorHints);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int VideoProcessorGetBehaviorHints(this ComPtr<ID3D11VideoContext1> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, VideoProcessorStreamBehaviorHint* pStreams, uint* pBehaviorHints) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, int>)(handle->LpVtbl[78]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, outputWidth, outputHeight, outputFormat, streamCount, pStreams, pBehaviorHints);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int VideoProcessorGetBehaviorHints(this ComPtr<ID3D11VideoContext1> comObj, ID3D11VideoProcessor* pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, ref VideoProcessorStreamBehaviorHint pStreams, uint* pBehaviorHints) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (VideoProcessorStreamBehaviorHint* ppStreams = &pStreams)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, int>)(handle->LpVtbl[78]))(handle, pVideoProcessor, outputWidth, outputHeight, outputFormat, streamCount, (VideoProcessorStreamBehaviorHint*)ppStreams, pBehaviorHints);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int VideoProcessorGetBehaviorHints(this ComPtr<ID3D11VideoContext1> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, ref VideoProcessorStreamBehaviorHint pStreams, uint* pBehaviorHints) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorStreamBehaviorHint* ppStreams = &pStreams)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, int>)(handle->LpVtbl[78]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, outputWidth, outputHeight, outputFormat, streamCount, (VideoProcessorStreamBehaviorHint*)ppStreams, pBehaviorHints);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int VideoProcessorGetBehaviorHints(this ComPtr<ID3D11VideoContext1> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, ref VideoProcessorStreamBehaviorHint pStreams, uint* pBehaviorHints) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (VideoProcessorStreamBehaviorHint* ppStreams = &pStreams)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, int>)(handle->LpVtbl[78]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, outputWidth, outputHeight, outputFormat, streamCount, (VideoProcessorStreamBehaviorHint*)ppStreams, pBehaviorHints);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int VideoProcessorGetBehaviorHints(this ComPtr<ID3D11VideoContext1> comObj, ID3D11VideoProcessor* pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, VideoProcessorStreamBehaviorHint* pStreams, ref uint pBehaviorHints) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (uint* ppBehaviorHints = &pBehaviorHints)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, int>)(handle->LpVtbl[78]))(handle, pVideoProcessor, outputWidth, outputHeight, outputFormat, streamCount, pStreams, (uint*)ppBehaviorHints);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int VideoProcessorGetBehaviorHints(this ComPtr<ID3D11VideoContext1> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, VideoProcessorStreamBehaviorHint* pStreams, ref uint pBehaviorHints) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (uint* ppBehaviorHints = &pBehaviorHints)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, int>)(handle->LpVtbl[78]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, outputWidth, outputHeight, outputFormat, streamCount, pStreams, (uint*)ppBehaviorHints);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int VideoProcessorGetBehaviorHints(this ComPtr<ID3D11VideoContext1> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, VideoProcessorStreamBehaviorHint* pStreams, ref uint pBehaviorHints) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (uint* ppBehaviorHints = &pBehaviorHints)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, int>)(handle->LpVtbl[78]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, outputWidth, outputHeight, outputFormat, streamCount, pStreams, (uint*)ppBehaviorHints);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int VideoProcessorGetBehaviorHints(this ComPtr<ID3D11VideoContext1> comObj, ID3D11VideoProcessor* pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, ref VideoProcessorStreamBehaviorHint pStreams, ref uint pBehaviorHints) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (VideoProcessorStreamBehaviorHint* ppStreams = &pStreams)
			{
				fixed (uint* ppBehaviorHints = &pBehaviorHints)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, int>)(handle->LpVtbl[78]))(handle, pVideoProcessor, outputWidth, outputHeight, outputFormat, streamCount, (VideoProcessorStreamBehaviorHint*)ppStreams, (uint*)ppBehaviorHints);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int VideoProcessorGetBehaviorHints(this ComPtr<ID3D11VideoContext1> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, ref VideoProcessorStreamBehaviorHint pStreams, ref uint pBehaviorHints) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorStreamBehaviorHint* ppStreams = &pStreams)
				{
					fixed (uint* ppBehaviorHints = &pBehaviorHints)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, int>)(handle->LpVtbl[78]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, outputWidth, outputHeight, outputFormat, streamCount, (VideoProcessorStreamBehaviorHint*)ppStreams, (uint*)ppBehaviorHints);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int VideoProcessorGetBehaviorHints(this ComPtr<ID3D11VideoContext1> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, ref VideoProcessorStreamBehaviorHint pStreams, ref uint pBehaviorHints) 
		{
			ID3D11VideoContext1* handle = comObj.Handle;
			fixed (VideoProcessorStreamBehaviorHint* ppStreams = &pStreams)
			{
				fixed (uint* ppBehaviorHints = &pBehaviorHints)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext1*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, int>)(handle->LpVtbl[78]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, outputWidth, outputHeight, outputFormat, streamCount, (VideoProcessorStreamBehaviorHint*)ppStreams, (uint*)ppBehaviorHints);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int QueryInterface(this ComPtr<ID3D11VideoDevice1> comObj, Guid* riid, void** ppvObject) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int QueryInterface(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid riid, void** ppvObject) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int QueryInterface<T>(this ComPtr<ID3D11VideoDevice1> comObj, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int QueryInterface<T>(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint AddRef(this ComPtr<ID3D11VideoDevice1> comObj) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint Release(this ComPtr<ID3D11VideoDevice1> comObj) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pVideoDesc, VideoDecoderConfig* pConfig, ID3D11VideoDecoder** ppDecoder) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, VideoDecoderConfig*, ID3D11VideoDecoder**, int>)(handle->LpVtbl[3]))(handle, pVideoDesc, pConfig, ppDecoder);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pVideoDesc, VideoDecoderConfig* pConfig, ID3D11VideoDecoder** ppDecoder) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppVideoDesc = &pVideoDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, VideoDecoderConfig*, ID3D11VideoDecoder**, int>)(handle->LpVtbl[3]))(handle, (VideoDecoderDesc*)ppVideoDesc, pConfig, ppDecoder);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pVideoDesc, ref VideoDecoderConfig pConfig, ID3D11VideoDecoder** ppDecoder) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderConfig* ppConfig = &pConfig)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, VideoDecoderConfig*, ID3D11VideoDecoder**, int>)(handle->LpVtbl[3]))(handle, pVideoDesc, (VideoDecoderConfig*)ppConfig, ppDecoder);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pVideoDesc, ref VideoDecoderConfig pConfig, ID3D11VideoDecoder** ppDecoder) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppVideoDesc = &pVideoDesc)
			{
				fixed (VideoDecoderConfig* ppConfig = &pConfig)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, VideoDecoderConfig*, ID3D11VideoDecoder**, int>)(handle->LpVtbl[3]))(handle, (VideoDecoderDesc*)ppVideoDesc, (VideoDecoderConfig*)ppConfig, ppDecoder);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pVideoDesc, VideoDecoderConfig* pConfig, ref ID3D11VideoDecoder* ppDecoder) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder** pppDecoder = &ppDecoder)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, VideoDecoderConfig*, ID3D11VideoDecoder**, int>)(handle->LpVtbl[3]))(handle, pVideoDesc, pConfig, (ID3D11VideoDecoder**)pppDecoder);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pVideoDesc, VideoDecoderConfig* pConfig, out ComPtr<ID3D11VideoDecoder> ppDecoder) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			ppDecoder = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, VideoDecoderConfig*, ID3D11VideoDecoder**, int>)(handle->LpVtbl[3]))(handle, pVideoDesc, pConfig, (ID3D11VideoDecoder**)ppDecoder.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pVideoDesc, VideoDecoderConfig* pConfig, ref ID3D11VideoDecoder* ppDecoder) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppVideoDesc = &pVideoDesc)
			{
				fixed (ID3D11VideoDecoder** pppDecoder = &ppDecoder)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, VideoDecoderConfig*, ID3D11VideoDecoder**, int>)(handle->LpVtbl[3]))(handle, (VideoDecoderDesc*)ppVideoDesc, pConfig, (ID3D11VideoDecoder**)pppDecoder);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pVideoDesc, VideoDecoderConfig* pConfig, out ComPtr<ID3D11VideoDecoder> ppDecoder) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppVideoDesc = &pVideoDesc)
			{
				ppDecoder = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, VideoDecoderConfig*, ID3D11VideoDecoder**, int>)(handle->LpVtbl[3]))(handle, (VideoDecoderDesc*)ppVideoDesc, pConfig, (ID3D11VideoDecoder**)ppDecoder.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pVideoDesc, ref VideoDecoderConfig pConfig, ref ID3D11VideoDecoder* ppDecoder) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderConfig* ppConfig = &pConfig)
			{
				fixed (ID3D11VideoDecoder** pppDecoder = &ppDecoder)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, VideoDecoderConfig*, ID3D11VideoDecoder**, int>)(handle->LpVtbl[3]))(handle, pVideoDesc, (VideoDecoderConfig*)ppConfig, (ID3D11VideoDecoder**)pppDecoder);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pVideoDesc, ref VideoDecoderConfig pConfig, out ComPtr<ID3D11VideoDecoder> ppDecoder) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderConfig* ppConfig = &pConfig)
			{
				ppDecoder = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, VideoDecoderConfig*, ID3D11VideoDecoder**, int>)(handle->LpVtbl[3]))(handle, pVideoDesc, (VideoDecoderConfig*)ppConfig, (ID3D11VideoDecoder**)ppDecoder.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pVideoDesc, ref VideoDecoderConfig pConfig, ref ID3D11VideoDecoder* ppDecoder) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppVideoDesc = &pVideoDesc)
			{
				fixed (VideoDecoderConfig* ppConfig = &pConfig)
				{
					fixed (ID3D11VideoDecoder** pppDecoder = &ppDecoder)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, VideoDecoderConfig*, ID3D11VideoDecoder**, int>)(handle->LpVtbl[3]))(handle, (VideoDecoderDesc*)ppVideoDesc, (VideoDecoderConfig*)ppConfig, (ID3D11VideoDecoder**)pppDecoder);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoder(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pVideoDesc, ref VideoDecoderConfig pConfig, out ComPtr<ID3D11VideoDecoder> ppDecoder) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppVideoDesc = &pVideoDesc)
			{
				fixed (VideoDecoderConfig* ppConfig = &pConfig)
				{
					ppDecoder = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, VideoDecoderConfig*, ID3D11VideoDecoder**, int>)(handle->LpVtbl[3]))(handle, (VideoDecoderDesc*)ppVideoDesc, (VideoDecoderConfig*)ppConfig, (ID3D11VideoDecoder**)ppDecoder.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11VideoProcessorEnumerator* pEnum, uint rateConversionIndex, ID3D11VideoProcessor** ppVideoProcessor) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11VideoProcessorEnumerator*, uint, ID3D11VideoProcessor**, int>)(handle->LpVtbl[4]))(handle, pEnum, rateConversionIndex, ppVideoProcessor);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor(this ComPtr<ID3D11VideoDevice1> comObj, ref ID3D11VideoProcessorEnumerator pEnum, uint rateConversionIndex, ID3D11VideoProcessor** ppVideoProcessor) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11VideoProcessorEnumerator*, uint, ID3D11VideoProcessor**, int>)(handle->LpVtbl[4]))(handle, (ID3D11VideoProcessorEnumerator*)ppEnum, rateConversionIndex, ppVideoProcessor);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor(this ComPtr<ID3D11VideoDevice1> comObj, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, uint rateConversionIndex, ID3D11VideoProcessor** ppVideoProcessor) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11VideoProcessorEnumerator*, uint, ID3D11VideoProcessor**, int>)(handle->LpVtbl[4]))(handle, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, rateConversionIndex, ppVideoProcessor);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11VideoProcessorEnumerator* pEnum, uint rateConversionIndex, ref ID3D11VideoProcessor* ppVideoProcessor) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor** pppVideoProcessor = &ppVideoProcessor)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11VideoProcessorEnumerator*, uint, ID3D11VideoProcessor**, int>)(handle->LpVtbl[4]))(handle, pEnum, rateConversionIndex, (ID3D11VideoProcessor**)pppVideoProcessor);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11VideoProcessorEnumerator* pEnum, uint rateConversionIndex, out ComPtr<ID3D11VideoProcessor> ppVideoProcessor) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			ppVideoProcessor = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11VideoProcessorEnumerator*, uint, ID3D11VideoProcessor**, int>)(handle->LpVtbl[4]))(handle, pEnum, rateConversionIndex, (ID3D11VideoProcessor**)ppVideoProcessor.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor(this ComPtr<ID3D11VideoDevice1> comObj, ref ID3D11VideoProcessorEnumerator pEnum, uint rateConversionIndex, ref ID3D11VideoProcessor* ppVideoProcessor) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
			{
				fixed (ID3D11VideoProcessor** pppVideoProcessor = &ppVideoProcessor)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11VideoProcessorEnumerator*, uint, ID3D11VideoProcessor**, int>)(handle->LpVtbl[4]))(handle, (ID3D11VideoProcessorEnumerator*)ppEnum, rateConversionIndex, (ID3D11VideoProcessor**)pppVideoProcessor);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessor(this ComPtr<ID3D11VideoDevice1> comObj, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, uint rateConversionIndex, out ComPtr<ID3D11VideoProcessor> ppVideoProcessor) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			ppVideoProcessor = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11VideoProcessorEnumerator*, uint, ID3D11VideoProcessor**, int>)(handle->LpVtbl[4]))(handle, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, rateConversionIndex, (ID3D11VideoProcessor**)ppVideoProcessor.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateAuthenticatedChannel(this ComPtr<ID3D11VideoDevice1> comObj, AuthenticatedChannelType channelType, ID3D11AuthenticatedChannel** ppAuthenticatedChannel) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, AuthenticatedChannelType, ID3D11AuthenticatedChannel**, int>)(handle->LpVtbl[5]))(handle, channelType, ppAuthenticatedChannel);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateAuthenticatedChannel(this ComPtr<ID3D11VideoDevice1> comObj, AuthenticatedChannelType channelType, ref ID3D11AuthenticatedChannel* ppAuthenticatedChannel) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11AuthenticatedChannel** pppAuthenticatedChannel = &ppAuthenticatedChannel)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, AuthenticatedChannelType, ID3D11AuthenticatedChannel**, int>)(handle->LpVtbl[5]))(handle, channelType, (ID3D11AuthenticatedChannel**)pppAuthenticatedChannel);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateAuthenticatedChannel(this ComPtr<ID3D11VideoDevice1> comObj, AuthenticatedChannelType channelType, out ComPtr<ID3D11AuthenticatedChannel> ppAuthenticatedChannel) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			ppAuthenticatedChannel = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, AuthenticatedChannelType, ID3D11AuthenticatedChannel**, int>)(handle->LpVtbl[5]))(handle, channelType, (ID3D11AuthenticatedChannel**)ppAuthenticatedChannel.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateCryptoSession(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, Guid* pDecoderProfile, Guid* pKeyExchangeType, ID3D11CryptoSession** ppCryptoSession) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(handle->LpVtbl[6]))(handle, pCryptoType, pDecoderProfile, pKeyExchangeType, ppCryptoSession);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateCryptoSession(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, Guid* pDecoderProfile, Guid* pKeyExchangeType, ID3D11CryptoSession** ppCryptoSession) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(handle->LpVtbl[6]))(handle, (Guid*)ppCryptoType, pDecoderProfile, pKeyExchangeType, ppCryptoSession);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateCryptoSession(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, ref Guid pDecoderProfile, Guid* pKeyExchangeType, ID3D11CryptoSession** ppCryptoSession) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(handle->LpVtbl[6]))(handle, pCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, ppCryptoSession);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateCryptoSession(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, ref Guid pDecoderProfile, Guid* pKeyExchangeType, ID3D11CryptoSession** ppCryptoSession) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(handle->LpVtbl[6]))(handle, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, ppCryptoSession);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateCryptoSession(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, Guid* pDecoderProfile, ref Guid pKeyExchangeType, ID3D11CryptoSession** ppCryptoSession) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(handle->LpVtbl[6]))(handle, pCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, ppCryptoSession);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateCryptoSession(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, Guid* pDecoderProfile, ref Guid pKeyExchangeType, ID3D11CryptoSession** ppCryptoSession) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(handle->LpVtbl[6]))(handle, (Guid*)ppCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, ppCryptoSession);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateCryptoSession(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, ref Guid pDecoderProfile, ref Guid pKeyExchangeType, ID3D11CryptoSession** ppCryptoSession) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(handle->LpVtbl[6]))(handle, pCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, ppCryptoSession);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateCryptoSession(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, ref Guid pDecoderProfile, ref Guid pKeyExchangeType, ID3D11CryptoSession** ppCryptoSession) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(handle->LpVtbl[6]))(handle, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, ppCryptoSession);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateCryptoSession(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, Guid* pDecoderProfile, Guid* pKeyExchangeType, ref ID3D11CryptoSession* ppCryptoSession) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11CryptoSession** pppCryptoSession = &ppCryptoSession)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(handle->LpVtbl[6]))(handle, pCryptoType, pDecoderProfile, pKeyExchangeType, (ID3D11CryptoSession**)pppCryptoSession);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateCryptoSession(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, Guid* pDecoderProfile, Guid* pKeyExchangeType, out ComPtr<ID3D11CryptoSession> ppCryptoSession) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			ppCryptoSession = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(handle->LpVtbl[6]))(handle, pCryptoType, pDecoderProfile, pKeyExchangeType, (ID3D11CryptoSession**)ppCryptoSession.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateCryptoSession(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, Guid* pDecoderProfile, Guid* pKeyExchangeType, ref ID3D11CryptoSession* ppCryptoSession) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (ID3D11CryptoSession** pppCryptoSession = &ppCryptoSession)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(handle->LpVtbl[6]))(handle, (Guid*)ppCryptoType, pDecoderProfile, pKeyExchangeType, (ID3D11CryptoSession**)pppCryptoSession);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateCryptoSession(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, Guid* pDecoderProfile, Guid* pKeyExchangeType, out ComPtr<ID3D11CryptoSession> ppCryptoSession) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				ppCryptoSession = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(handle->LpVtbl[6]))(handle, (Guid*)ppCryptoType, pDecoderProfile, pKeyExchangeType, (ID3D11CryptoSession**)ppCryptoSession.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateCryptoSession(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, ref Guid pDecoderProfile, Guid* pKeyExchangeType, ref ID3D11CryptoSession* ppCryptoSession) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (ID3D11CryptoSession** pppCryptoSession = &ppCryptoSession)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(handle->LpVtbl[6]))(handle, pCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, (ID3D11CryptoSession**)pppCryptoSession);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateCryptoSession(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, ref Guid pDecoderProfile, Guid* pKeyExchangeType, out ComPtr<ID3D11CryptoSession> ppCryptoSession) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				ppCryptoSession = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(handle->LpVtbl[6]))(handle, pCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, (ID3D11CryptoSession**)ppCryptoSession.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateCryptoSession(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, ref Guid pDecoderProfile, Guid* pKeyExchangeType, ref ID3D11CryptoSession* ppCryptoSession) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (ID3D11CryptoSession** pppCryptoSession = &ppCryptoSession)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(handle->LpVtbl[6]))(handle, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, (ID3D11CryptoSession**)pppCryptoSession);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateCryptoSession(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, ref Guid pDecoderProfile, Guid* pKeyExchangeType, out ComPtr<ID3D11CryptoSession> ppCryptoSession) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					ppCryptoSession = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(handle->LpVtbl[6]))(handle, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, (ID3D11CryptoSession**)ppCryptoSession.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateCryptoSession(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, Guid* pDecoderProfile, ref Guid pKeyExchangeType, ref ID3D11CryptoSession* ppCryptoSession) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
			{
				fixed (ID3D11CryptoSession** pppCryptoSession = &ppCryptoSession)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(handle->LpVtbl[6]))(handle, pCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, (ID3D11CryptoSession**)pppCryptoSession);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateCryptoSession(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, Guid* pDecoderProfile, ref Guid pKeyExchangeType, out ComPtr<ID3D11CryptoSession> ppCryptoSession) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
			{
				ppCryptoSession = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(handle->LpVtbl[6]))(handle, pCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, (ID3D11CryptoSession**)ppCryptoSession.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateCryptoSession(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, Guid* pDecoderProfile, ref Guid pKeyExchangeType, ref ID3D11CryptoSession* ppCryptoSession) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					fixed (ID3D11CryptoSession** pppCryptoSession = &ppCryptoSession)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(handle->LpVtbl[6]))(handle, (Guid*)ppCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, (ID3D11CryptoSession**)pppCryptoSession);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateCryptoSession(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, Guid* pDecoderProfile, ref Guid pKeyExchangeType, out ComPtr<ID3D11CryptoSession> ppCryptoSession) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					ppCryptoSession = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(handle->LpVtbl[6]))(handle, (Guid*)ppCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, (ID3D11CryptoSession**)ppCryptoSession.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateCryptoSession(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, ref Guid pDecoderProfile, ref Guid pKeyExchangeType, ref ID3D11CryptoSession* ppCryptoSession) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					fixed (ID3D11CryptoSession** pppCryptoSession = &ppCryptoSession)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(handle->LpVtbl[6]))(handle, pCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, (ID3D11CryptoSession**)pppCryptoSession);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateCryptoSession(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, ref Guid pDecoderProfile, ref Guid pKeyExchangeType, out ComPtr<ID3D11CryptoSession> ppCryptoSession) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					ppCryptoSession = default;
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(handle->LpVtbl[6]))(handle, pCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, (ID3D11CryptoSession**)ppCryptoSession.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateCryptoSession(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, ref Guid pDecoderProfile, ref Guid pKeyExchangeType, ref ID3D11CryptoSession* ppCryptoSession) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
					{
						fixed (ID3D11CryptoSession** pppCryptoSession = &ppCryptoSession)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(handle->LpVtbl[6]))(handle, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, (ID3D11CryptoSession**)pppCryptoSession);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateCryptoSession(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, ref Guid pDecoderProfile, ref Guid pKeyExchangeType, out ComPtr<ID3D11CryptoSession> ppCryptoSession) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
					{
						ppCryptoSession = default;
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, int>)(handle->LpVtbl[6]))(handle, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, (ID3D11CryptoSession**)ppCryptoSession.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, VideoDecoderOutputViewDesc* pDesc, ID3D11VideoDecoderOutputView** ppVDOVView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, int>)(handle->LpVtbl[7]))(handle, pResource, pDesc, ppVDOVView);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ref ID3D11Resource pResource, VideoDecoderOutputViewDesc* pDesc, ID3D11VideoDecoderOutputView** ppVDOVView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, int>)(handle->LpVtbl[7]))(handle, (ID3D11Resource*)ppResource, pDesc, ppVDOVView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ComPtr<ID3D11Resource> pResource, VideoDecoderOutputViewDesc* pDesc, ID3D11VideoDecoderOutputView** ppVDOVView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, int>)(handle->LpVtbl[7]))(handle, (ID3D11Resource*)pResource.Handle, pDesc, ppVDOVView);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ref VideoDecoderOutputViewDesc pDesc, ID3D11VideoDecoderOutputView** ppVDOVView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderOutputViewDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, int>)(handle->LpVtbl[7]))(handle, pResource, (VideoDecoderOutputViewDesc*)ppDesc, ppVDOVView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ref ID3D11Resource pResource, ref VideoDecoderOutputViewDesc pDesc, ID3D11VideoDecoderOutputView** ppVDOVView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (VideoDecoderOutputViewDesc* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, int>)(handle->LpVtbl[7]))(handle, (ID3D11Resource*)ppResource, (VideoDecoderOutputViewDesc*)ppDesc, ppVDOVView);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ComPtr<ID3D11Resource> pResource, ref VideoDecoderOutputViewDesc pDesc, ID3D11VideoDecoderOutputView** ppVDOVView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderOutputViewDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, int>)(handle->LpVtbl[7]))(handle, (ID3D11Resource*)pResource.Handle, (VideoDecoderOutputViewDesc*)ppDesc, ppVDOVView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, VideoDecoderOutputViewDesc* pDesc, ref ID3D11VideoDecoderOutputView* ppVDOVView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11VideoDecoderOutputView** pppVDOVView = &ppVDOVView)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, int>)(handle->LpVtbl[7]))(handle, pResource, pDesc, (ID3D11VideoDecoderOutputView**)pppVDOVView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, VideoDecoderOutputViewDesc* pDesc, out ComPtr<ID3D11VideoDecoderOutputView> ppVDOVView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			ppVDOVView = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, int>)(handle->LpVtbl[7]))(handle, pResource, pDesc, (ID3D11VideoDecoderOutputView**)ppVDOVView.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ref ID3D11Resource pResource, VideoDecoderOutputViewDesc* pDesc, ref ID3D11VideoDecoderOutputView* ppVDOVView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoDecoderOutputView** pppVDOVView = &ppVDOVView)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, int>)(handle->LpVtbl[7]))(handle, (ID3D11Resource*)ppResource, pDesc, (ID3D11VideoDecoderOutputView**)pppVDOVView);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ComPtr<ID3D11Resource> pResource, VideoDecoderOutputViewDesc* pDesc, out ComPtr<ID3D11VideoDecoderOutputView> ppVDOVView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			ppVDOVView = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, int>)(handle->LpVtbl[7]))(handle, (ID3D11Resource*)pResource.Handle, pDesc, (ID3D11VideoDecoderOutputView**)ppVDOVView.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ref VideoDecoderOutputViewDesc pDesc, ref ID3D11VideoDecoderOutputView* ppVDOVView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderOutputViewDesc* ppDesc = &pDesc)
			{
				fixed (ID3D11VideoDecoderOutputView** pppVDOVView = &ppVDOVView)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, int>)(handle->LpVtbl[7]))(handle, pResource, (VideoDecoderOutputViewDesc*)ppDesc, (ID3D11VideoDecoderOutputView**)pppVDOVView);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ref VideoDecoderOutputViewDesc pDesc, out ComPtr<ID3D11VideoDecoderOutputView> ppVDOVView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderOutputViewDesc* ppDesc = &pDesc)
			{
				ppVDOVView = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, int>)(handle->LpVtbl[7]))(handle, pResource, (VideoDecoderOutputViewDesc*)ppDesc, (ID3D11VideoDecoderOutputView**)ppVDOVView.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ref ID3D11Resource pResource, ref VideoDecoderOutputViewDesc pDesc, ref ID3D11VideoDecoderOutputView* ppVDOVView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (VideoDecoderOutputViewDesc* ppDesc = &pDesc)
				{
					fixed (ID3D11VideoDecoderOutputView** pppVDOVView = &ppVDOVView)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, int>)(handle->LpVtbl[7]))(handle, (ID3D11Resource*)ppResource, (VideoDecoderOutputViewDesc*)ppDesc, (ID3D11VideoDecoderOutputView**)pppVDOVView);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoDecoderOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ComPtr<ID3D11Resource> pResource, ref VideoDecoderOutputViewDesc pDesc, out ComPtr<ID3D11VideoDecoderOutputView> ppVDOVView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderOutputViewDesc* ppDesc = &pDesc)
			{
				ppVDOVView = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, int>)(handle->LpVtbl[7]))(handle, (ID3D11Resource*)pResource.Handle, (VideoDecoderOutputViewDesc*)ppDesc, (ID3D11VideoDecoderOutputView**)ppVDOVView.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorInputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ID3D11VideoProcessorEnumerator* pEnum, VideoProcessorInputViewDesc* pDesc, ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(handle->LpVtbl[8]))(handle, pResource, pEnum, pDesc, ppVPIView);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorInputView(this ComPtr<ID3D11VideoDevice1> comObj, ref ID3D11Resource pResource, ID3D11VideoProcessorEnumerator* pEnum, VideoProcessorInputViewDesc* pDesc, ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(handle->LpVtbl[8]))(handle, (ID3D11Resource*)ppResource, pEnum, pDesc, ppVPIView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorInputView(this ComPtr<ID3D11VideoDevice1> comObj, ComPtr<ID3D11Resource> pResource, ID3D11VideoProcessorEnumerator* pEnum, VideoProcessorInputViewDesc* pDesc, ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(handle->LpVtbl[8]))(handle, (ID3D11Resource*)pResource.Handle, pEnum, pDesc, ppVPIView);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorInputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ref ID3D11VideoProcessorEnumerator pEnum, VideoProcessorInputViewDesc* pDesc, ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(handle->LpVtbl[8]))(handle, pResource, (ID3D11VideoProcessorEnumerator*)ppEnum, pDesc, ppVPIView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorInputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, VideoProcessorInputViewDesc* pDesc, ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(handle->LpVtbl[8]))(handle, pResource, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, pDesc, ppVPIView);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorInputView(this ComPtr<ID3D11VideoDevice1> comObj, ref ID3D11Resource pResource, ref ID3D11VideoProcessorEnumerator pEnum, VideoProcessorInputViewDesc* pDesc, ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(handle->LpVtbl[8]))(handle, (ID3D11Resource*)ppResource, (ID3D11VideoProcessorEnumerator*)ppEnum, pDesc, ppVPIView);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorInputView(this ComPtr<ID3D11VideoDevice1> comObj, ComPtr<ID3D11Resource> pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, VideoProcessorInputViewDesc* pDesc, ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(handle->LpVtbl[8]))(handle, (ID3D11Resource*)pResource.Handle, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, pDesc, ppVPIView);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorInputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ID3D11VideoProcessorEnumerator* pEnum, ref VideoProcessorInputViewDesc pDesc, ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(handle->LpVtbl[8]))(handle, pResource, pEnum, (VideoProcessorInputViewDesc*)ppDesc, ppVPIView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorInputView(this ComPtr<ID3D11VideoDevice1> comObj, ref ID3D11Resource pResource, ID3D11VideoProcessorEnumerator* pEnum, ref VideoProcessorInputViewDesc pDesc, ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(handle->LpVtbl[8]))(handle, (ID3D11Resource*)ppResource, pEnum, (VideoProcessorInputViewDesc*)ppDesc, ppVPIView);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorInputView(this ComPtr<ID3D11VideoDevice1> comObj, ComPtr<ID3D11Resource> pResource, ID3D11VideoProcessorEnumerator* pEnum, ref VideoProcessorInputViewDesc pDesc, ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(handle->LpVtbl[8]))(handle, (ID3D11Resource*)pResource.Handle, pEnum, (VideoProcessorInputViewDesc*)ppDesc, ppVPIView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorInputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ref ID3D11VideoProcessorEnumerator pEnum, ref VideoProcessorInputViewDesc pDesc, ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
			{
				fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(handle->LpVtbl[8]))(handle, pResource, (ID3D11VideoProcessorEnumerator*)ppEnum, (VideoProcessorInputViewDesc*)ppDesc, ppVPIView);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorInputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, ref VideoProcessorInputViewDesc pDesc, ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(handle->LpVtbl[8]))(handle, pResource, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, (VideoProcessorInputViewDesc*)ppDesc, ppVPIView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorInputView(this ComPtr<ID3D11VideoDevice1> comObj, ref ID3D11Resource pResource, ref ID3D11VideoProcessorEnumerator pEnum, ref VideoProcessorInputViewDesc pDesc, ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
				{
					fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(handle->LpVtbl[8]))(handle, (ID3D11Resource*)ppResource, (ID3D11VideoProcessorEnumerator*)ppEnum, (VideoProcessorInputViewDesc*)ppDesc, ppVPIView);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorInputView(this ComPtr<ID3D11VideoDevice1> comObj, ComPtr<ID3D11Resource> pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, ref VideoProcessorInputViewDesc pDesc, ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(handle->LpVtbl[8]))(handle, (ID3D11Resource*)pResource.Handle, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, (VideoProcessorInputViewDesc*)ppDesc, ppVPIView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorInputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ID3D11VideoProcessorEnumerator* pEnum, VideoProcessorInputViewDesc* pDesc, ref ID3D11VideoProcessorInputView* ppVPIView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessorInputView** pppVPIView = &ppVPIView)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(handle->LpVtbl[8]))(handle, pResource, pEnum, pDesc, (ID3D11VideoProcessorInputView**)pppVPIView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorInputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ID3D11VideoProcessorEnumerator* pEnum, VideoProcessorInputViewDesc* pDesc, out ComPtr<ID3D11VideoProcessorInputView> ppVPIView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			ppVPIView = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(handle->LpVtbl[8]))(handle, pResource, pEnum, pDesc, (ID3D11VideoProcessorInputView**)ppVPIView.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorInputView(this ComPtr<ID3D11VideoDevice1> comObj, ref ID3D11Resource pResource, ID3D11VideoProcessorEnumerator* pEnum, VideoProcessorInputViewDesc* pDesc, ref ID3D11VideoProcessorInputView* ppVPIView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoProcessorInputView** pppVPIView = &ppVPIView)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(handle->LpVtbl[8]))(handle, (ID3D11Resource*)ppResource, pEnum, pDesc, (ID3D11VideoProcessorInputView**)pppVPIView);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorInputView(this ComPtr<ID3D11VideoDevice1> comObj, ComPtr<ID3D11Resource> pResource, ID3D11VideoProcessorEnumerator* pEnum, VideoProcessorInputViewDesc* pDesc, out ComPtr<ID3D11VideoProcessorInputView> ppVPIView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			ppVPIView = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(handle->LpVtbl[8]))(handle, (ID3D11Resource*)pResource.Handle, pEnum, pDesc, (ID3D11VideoProcessorInputView**)ppVPIView.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorInputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ref ID3D11VideoProcessorEnumerator pEnum, VideoProcessorInputViewDesc* pDesc, ref ID3D11VideoProcessorInputView* ppVPIView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
			{
				fixed (ID3D11VideoProcessorInputView** pppVPIView = &ppVPIView)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(handle->LpVtbl[8]))(handle, pResource, (ID3D11VideoProcessorEnumerator*)ppEnum, pDesc, (ID3D11VideoProcessorInputView**)pppVPIView);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorInputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, VideoProcessorInputViewDesc* pDesc, out ComPtr<ID3D11VideoProcessorInputView> ppVPIView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			ppVPIView = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(handle->LpVtbl[8]))(handle, pResource, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, pDesc, (ID3D11VideoProcessorInputView**)ppVPIView.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorInputView(this ComPtr<ID3D11VideoDevice1> comObj, ref ID3D11Resource pResource, ref ID3D11VideoProcessorEnumerator pEnum, VideoProcessorInputViewDesc* pDesc, ref ID3D11VideoProcessorInputView* ppVPIView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
				{
					fixed (ID3D11VideoProcessorInputView** pppVPIView = &ppVPIView)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(handle->LpVtbl[8]))(handle, (ID3D11Resource*)ppResource, (ID3D11VideoProcessorEnumerator*)ppEnum, pDesc, (ID3D11VideoProcessorInputView**)pppVPIView);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorInputView(this ComPtr<ID3D11VideoDevice1> comObj, ComPtr<ID3D11Resource> pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, VideoProcessorInputViewDesc* pDesc, out ComPtr<ID3D11VideoProcessorInputView> ppVPIView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			ppVPIView = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(handle->LpVtbl[8]))(handle, (ID3D11Resource*)pResource.Handle, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, pDesc, (ID3D11VideoProcessorInputView**)ppVPIView.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorInputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ID3D11VideoProcessorEnumerator* pEnum, ref VideoProcessorInputViewDesc pDesc, ref ID3D11VideoProcessorInputView* ppVPIView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
			{
				fixed (ID3D11VideoProcessorInputView** pppVPIView = &ppVPIView)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(handle->LpVtbl[8]))(handle, pResource, pEnum, (VideoProcessorInputViewDesc*)ppDesc, (ID3D11VideoProcessorInputView**)pppVPIView);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorInputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ID3D11VideoProcessorEnumerator* pEnum, ref VideoProcessorInputViewDesc pDesc, out ComPtr<ID3D11VideoProcessorInputView> ppVPIView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
			{
				ppVPIView = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(handle->LpVtbl[8]))(handle, pResource, pEnum, (VideoProcessorInputViewDesc*)ppDesc, (ID3D11VideoProcessorInputView**)ppVPIView.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorInputView(this ComPtr<ID3D11VideoDevice1> comObj, ref ID3D11Resource pResource, ID3D11VideoProcessorEnumerator* pEnum, ref VideoProcessorInputViewDesc pDesc, ref ID3D11VideoProcessorInputView* ppVPIView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
				{
					fixed (ID3D11VideoProcessorInputView** pppVPIView = &ppVPIView)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(handle->LpVtbl[8]))(handle, (ID3D11Resource*)ppResource, pEnum, (VideoProcessorInputViewDesc*)ppDesc, (ID3D11VideoProcessorInputView**)pppVPIView);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorInputView(this ComPtr<ID3D11VideoDevice1> comObj, ComPtr<ID3D11Resource> pResource, ID3D11VideoProcessorEnumerator* pEnum, ref VideoProcessorInputViewDesc pDesc, out ComPtr<ID3D11VideoProcessorInputView> ppVPIView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
			{
				ppVPIView = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(handle->LpVtbl[8]))(handle, (ID3D11Resource*)pResource.Handle, pEnum, (VideoProcessorInputViewDesc*)ppDesc, (ID3D11VideoProcessorInputView**)ppVPIView.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorInputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ref ID3D11VideoProcessorEnumerator pEnum, ref VideoProcessorInputViewDesc pDesc, ref ID3D11VideoProcessorInputView* ppVPIView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
			{
				fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
				{
					fixed (ID3D11VideoProcessorInputView** pppVPIView = &ppVPIView)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(handle->LpVtbl[8]))(handle, pResource, (ID3D11VideoProcessorEnumerator*)ppEnum, (VideoProcessorInputViewDesc*)ppDesc, (ID3D11VideoProcessorInputView**)pppVPIView);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorInputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, ref VideoProcessorInputViewDesc pDesc, out ComPtr<ID3D11VideoProcessorInputView> ppVPIView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
			{
				ppVPIView = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(handle->LpVtbl[8]))(handle, pResource, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, (VideoProcessorInputViewDesc*)ppDesc, (ID3D11VideoProcessorInputView**)ppVPIView.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorInputView(this ComPtr<ID3D11VideoDevice1> comObj, ref ID3D11Resource pResource, ref ID3D11VideoProcessorEnumerator pEnum, ref VideoProcessorInputViewDesc pDesc, ref ID3D11VideoProcessorInputView* ppVPIView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
				{
					fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
					{
						fixed (ID3D11VideoProcessorInputView** pppVPIView = &ppVPIView)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(handle->LpVtbl[8]))(handle, (ID3D11Resource*)ppResource, (ID3D11VideoProcessorEnumerator*)ppEnum, (VideoProcessorInputViewDesc*)ppDesc, (ID3D11VideoProcessorInputView**)pppVPIView);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorInputView(this ComPtr<ID3D11VideoDevice1> comObj, ComPtr<ID3D11Resource> pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, ref VideoProcessorInputViewDesc pDesc, out ComPtr<ID3D11VideoProcessorInputView> ppVPIView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
			{
				ppVPIView = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, int>)(handle->LpVtbl[8]))(handle, (ID3D11Resource*)pResource.Handle, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, (VideoProcessorInputViewDesc*)ppDesc, (ID3D11VideoProcessorInputView**)ppVPIView.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ID3D11VideoProcessorEnumerator* pEnum, VideoProcessorOutputViewDesc* pDesc, ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(handle->LpVtbl[9]))(handle, pResource, pEnum, pDesc, ppVPOView);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ref ID3D11Resource pResource, ID3D11VideoProcessorEnumerator* pEnum, VideoProcessorOutputViewDesc* pDesc, ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(handle->LpVtbl[9]))(handle, (ID3D11Resource*)ppResource, pEnum, pDesc, ppVPOView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ComPtr<ID3D11Resource> pResource, ID3D11VideoProcessorEnumerator* pEnum, VideoProcessorOutputViewDesc* pDesc, ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(handle->LpVtbl[9]))(handle, (ID3D11Resource*)pResource.Handle, pEnum, pDesc, ppVPOView);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ref ID3D11VideoProcessorEnumerator pEnum, VideoProcessorOutputViewDesc* pDesc, ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(handle->LpVtbl[9]))(handle, pResource, (ID3D11VideoProcessorEnumerator*)ppEnum, pDesc, ppVPOView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, VideoProcessorOutputViewDesc* pDesc, ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(handle->LpVtbl[9]))(handle, pResource, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, pDesc, ppVPOView);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ref ID3D11Resource pResource, ref ID3D11VideoProcessorEnumerator pEnum, VideoProcessorOutputViewDesc* pDesc, ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(handle->LpVtbl[9]))(handle, (ID3D11Resource*)ppResource, (ID3D11VideoProcessorEnumerator*)ppEnum, pDesc, ppVPOView);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ComPtr<ID3D11Resource> pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, VideoProcessorOutputViewDesc* pDesc, ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(handle->LpVtbl[9]))(handle, (ID3D11Resource*)pResource.Handle, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, pDesc, ppVPOView);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ID3D11VideoProcessorEnumerator* pEnum, ref VideoProcessorOutputViewDesc pDesc, ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(handle->LpVtbl[9]))(handle, pResource, pEnum, (VideoProcessorOutputViewDesc*)ppDesc, ppVPOView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ref ID3D11Resource pResource, ID3D11VideoProcessorEnumerator* pEnum, ref VideoProcessorOutputViewDesc pDesc, ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(handle->LpVtbl[9]))(handle, (ID3D11Resource*)ppResource, pEnum, (VideoProcessorOutputViewDesc*)ppDesc, ppVPOView);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ComPtr<ID3D11Resource> pResource, ID3D11VideoProcessorEnumerator* pEnum, ref VideoProcessorOutputViewDesc pDesc, ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(handle->LpVtbl[9]))(handle, (ID3D11Resource*)pResource.Handle, pEnum, (VideoProcessorOutputViewDesc*)ppDesc, ppVPOView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ref ID3D11VideoProcessorEnumerator pEnum, ref VideoProcessorOutputViewDesc pDesc, ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
			{
				fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(handle->LpVtbl[9]))(handle, pResource, (ID3D11VideoProcessorEnumerator*)ppEnum, (VideoProcessorOutputViewDesc*)ppDesc, ppVPOView);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, ref VideoProcessorOutputViewDesc pDesc, ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(handle->LpVtbl[9]))(handle, pResource, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, (VideoProcessorOutputViewDesc*)ppDesc, ppVPOView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ref ID3D11Resource pResource, ref ID3D11VideoProcessorEnumerator pEnum, ref VideoProcessorOutputViewDesc pDesc, ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
				{
					fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(handle->LpVtbl[9]))(handle, (ID3D11Resource*)ppResource, (ID3D11VideoProcessorEnumerator*)ppEnum, (VideoProcessorOutputViewDesc*)ppDesc, ppVPOView);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ComPtr<ID3D11Resource> pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, ref VideoProcessorOutputViewDesc pDesc, ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(handle->LpVtbl[9]))(handle, (ID3D11Resource*)pResource.Handle, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, (VideoProcessorOutputViewDesc*)ppDesc, ppVPOView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ID3D11VideoProcessorEnumerator* pEnum, VideoProcessorOutputViewDesc* pDesc, ref ID3D11VideoProcessorOutputView* ppVPOView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessorOutputView** pppVPOView = &ppVPOView)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(handle->LpVtbl[9]))(handle, pResource, pEnum, pDesc, (ID3D11VideoProcessorOutputView**)pppVPOView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ID3D11VideoProcessorEnumerator* pEnum, VideoProcessorOutputViewDesc* pDesc, out ComPtr<ID3D11VideoProcessorOutputView> ppVPOView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			ppVPOView = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(handle->LpVtbl[9]))(handle, pResource, pEnum, pDesc, (ID3D11VideoProcessorOutputView**)ppVPOView.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ref ID3D11Resource pResource, ID3D11VideoProcessorEnumerator* pEnum, VideoProcessorOutputViewDesc* pDesc, ref ID3D11VideoProcessorOutputView* ppVPOView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoProcessorOutputView** pppVPOView = &ppVPOView)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(handle->LpVtbl[9]))(handle, (ID3D11Resource*)ppResource, pEnum, pDesc, (ID3D11VideoProcessorOutputView**)pppVPOView);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ComPtr<ID3D11Resource> pResource, ID3D11VideoProcessorEnumerator* pEnum, VideoProcessorOutputViewDesc* pDesc, out ComPtr<ID3D11VideoProcessorOutputView> ppVPOView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			ppVPOView = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(handle->LpVtbl[9]))(handle, (ID3D11Resource*)pResource.Handle, pEnum, pDesc, (ID3D11VideoProcessorOutputView**)ppVPOView.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ref ID3D11VideoProcessorEnumerator pEnum, VideoProcessorOutputViewDesc* pDesc, ref ID3D11VideoProcessorOutputView* ppVPOView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
			{
				fixed (ID3D11VideoProcessorOutputView** pppVPOView = &ppVPOView)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(handle->LpVtbl[9]))(handle, pResource, (ID3D11VideoProcessorEnumerator*)ppEnum, pDesc, (ID3D11VideoProcessorOutputView**)pppVPOView);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, VideoProcessorOutputViewDesc* pDesc, out ComPtr<ID3D11VideoProcessorOutputView> ppVPOView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			ppVPOView = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(handle->LpVtbl[9]))(handle, pResource, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, pDesc, (ID3D11VideoProcessorOutputView**)ppVPOView.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ref ID3D11Resource pResource, ref ID3D11VideoProcessorEnumerator pEnum, VideoProcessorOutputViewDesc* pDesc, ref ID3D11VideoProcessorOutputView* ppVPOView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
				{
					fixed (ID3D11VideoProcessorOutputView** pppVPOView = &ppVPOView)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(handle->LpVtbl[9]))(handle, (ID3D11Resource*)ppResource, (ID3D11VideoProcessorEnumerator*)ppEnum, pDesc, (ID3D11VideoProcessorOutputView**)pppVPOView);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ComPtr<ID3D11Resource> pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, VideoProcessorOutputViewDesc* pDesc, out ComPtr<ID3D11VideoProcessorOutputView> ppVPOView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			ppVPOView = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(handle->LpVtbl[9]))(handle, (ID3D11Resource*)pResource.Handle, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, pDesc, (ID3D11VideoProcessorOutputView**)ppVPOView.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ID3D11VideoProcessorEnumerator* pEnum, ref VideoProcessorOutputViewDesc pDesc, ref ID3D11VideoProcessorOutputView* ppVPOView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
			{
				fixed (ID3D11VideoProcessorOutputView** pppVPOView = &ppVPOView)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(handle->LpVtbl[9]))(handle, pResource, pEnum, (VideoProcessorOutputViewDesc*)ppDesc, (ID3D11VideoProcessorOutputView**)pppVPOView);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ID3D11VideoProcessorEnumerator* pEnum, ref VideoProcessorOutputViewDesc pDesc, out ComPtr<ID3D11VideoProcessorOutputView> ppVPOView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
			{
				ppVPOView = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(handle->LpVtbl[9]))(handle, pResource, pEnum, (VideoProcessorOutputViewDesc*)ppDesc, (ID3D11VideoProcessorOutputView**)ppVPOView.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ref ID3D11Resource pResource, ID3D11VideoProcessorEnumerator* pEnum, ref VideoProcessorOutputViewDesc pDesc, ref ID3D11VideoProcessorOutputView* ppVPOView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
				{
					fixed (ID3D11VideoProcessorOutputView** pppVPOView = &ppVPOView)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(handle->LpVtbl[9]))(handle, (ID3D11Resource*)ppResource, pEnum, (VideoProcessorOutputViewDesc*)ppDesc, (ID3D11VideoProcessorOutputView**)pppVPOView);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ComPtr<ID3D11Resource> pResource, ID3D11VideoProcessorEnumerator* pEnum, ref VideoProcessorOutputViewDesc pDesc, out ComPtr<ID3D11VideoProcessorOutputView> ppVPOView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
			{
				ppVPOView = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(handle->LpVtbl[9]))(handle, (ID3D11Resource*)pResource.Handle, pEnum, (VideoProcessorOutputViewDesc*)ppDesc, (ID3D11VideoProcessorOutputView**)ppVPOView.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ref ID3D11VideoProcessorEnumerator pEnum, ref VideoProcessorOutputViewDesc pDesc, ref ID3D11VideoProcessorOutputView* ppVPOView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
			{
				fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
				{
					fixed (ID3D11VideoProcessorOutputView** pppVPOView = &ppVPOView)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(handle->LpVtbl[9]))(handle, pResource, (ID3D11VideoProcessorEnumerator*)ppEnum, (VideoProcessorOutputViewDesc*)ppDesc, (ID3D11VideoProcessorOutputView**)pppVPOView);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ID3D11Resource* pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, ref VideoProcessorOutputViewDesc pDesc, out ComPtr<ID3D11VideoProcessorOutputView> ppVPOView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
			{
				ppVPOView = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(handle->LpVtbl[9]))(handle, pResource, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, (VideoProcessorOutputViewDesc*)ppDesc, (ID3D11VideoProcessorOutputView**)ppVPOView.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ref ID3D11Resource pResource, ref ID3D11VideoProcessorEnumerator pEnum, ref VideoProcessorOutputViewDesc pDesc, ref ID3D11VideoProcessorOutputView* ppVPOView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
				{
					fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
					{
						fixed (ID3D11VideoProcessorOutputView** pppVPOView = &ppVPOView)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(handle->LpVtbl[9]))(handle, (ID3D11Resource*)ppResource, (ID3D11VideoProcessorEnumerator*)ppEnum, (VideoProcessorOutputViewDesc*)ppDesc, (ID3D11VideoProcessorOutputView**)pppVPOView);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorOutputView(this ComPtr<ID3D11VideoDevice1> comObj, ComPtr<ID3D11Resource> pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, ref VideoProcessorOutputViewDesc pDesc, out ComPtr<ID3D11VideoProcessorOutputView> ppVPOView) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
			{
				ppVPOView = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, int>)(handle->LpVtbl[9]))(handle, (ID3D11Resource*)pResource.Handle, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, (VideoProcessorOutputViewDesc*)ppDesc, (ID3D11VideoProcessorOutputView**)ppVPOView.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorEnumerator(this ComPtr<ID3D11VideoDevice1> comObj, VideoProcessorContentDesc* pDesc, ID3D11VideoProcessorEnumerator** ppEnum) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoProcessorContentDesc*, ID3D11VideoProcessorEnumerator**, int>)(handle->LpVtbl[10]))(handle, pDesc, ppEnum);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorEnumerator(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoProcessorContentDesc pDesc, ID3D11VideoProcessorEnumerator** ppEnum) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoProcessorContentDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoProcessorContentDesc*, ID3D11VideoProcessorEnumerator**, int>)(handle->LpVtbl[10]))(handle, (VideoProcessorContentDesc*)ppDesc, ppEnum);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorEnumerator(this ComPtr<ID3D11VideoDevice1> comObj, VideoProcessorContentDesc* pDesc, ref ID3D11VideoProcessorEnumerator* ppEnum) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (ID3D11VideoProcessorEnumerator** pppEnum = &ppEnum)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoProcessorContentDesc*, ID3D11VideoProcessorEnumerator**, int>)(handle->LpVtbl[10]))(handle, pDesc, (ID3D11VideoProcessorEnumerator**)pppEnum);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorEnumerator(this ComPtr<ID3D11VideoDevice1> comObj, VideoProcessorContentDesc* pDesc, out ComPtr<ID3D11VideoProcessorEnumerator> ppEnum) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			ppEnum = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoProcessorContentDesc*, ID3D11VideoProcessorEnumerator**, int>)(handle->LpVtbl[10]))(handle, pDesc, (ID3D11VideoProcessorEnumerator**)ppEnum.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorEnumerator(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoProcessorContentDesc pDesc, ref ID3D11VideoProcessorEnumerator* ppEnum) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoProcessorContentDesc* ppDesc = &pDesc)
			{
				fixed (ID3D11VideoProcessorEnumerator** pppEnum = &ppEnum)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoProcessorContentDesc*, ID3D11VideoProcessorEnumerator**, int>)(handle->LpVtbl[10]))(handle, (VideoProcessorContentDesc*)ppDesc, (ID3D11VideoProcessorEnumerator**)pppEnum);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CreateVideoProcessorEnumerator(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoProcessorContentDesc pDesc, out ComPtr<ID3D11VideoProcessorEnumerator> ppEnum) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoProcessorContentDesc* ppDesc = &pDesc)
			{
				ppEnum = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoProcessorContentDesc*, ID3D11VideoProcessorEnumerator**, int>)(handle->LpVtbl[10]))(handle, (VideoProcessorContentDesc*)ppDesc, (ID3D11VideoProcessorEnumerator**)ppEnum.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static uint GetVideoDecoderProfileCount(this ComPtr<ID3D11VideoDevice1> comObj) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, uint>)(handle->LpVtbl[11]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetVideoDecoderProfile(this ComPtr<ID3D11VideoDevice1> comObj, uint index, Guid* pDecoderProfile) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, uint, Guid*, int>)(handle->LpVtbl[12]))(handle, index, pDecoderProfile);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetVideoDecoderProfile(this ComPtr<ID3D11VideoDevice1> comObj, uint index, ref Guid pDecoderProfile) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, uint, Guid*, int>)(handle->LpVtbl[12]))(handle, index, (Guid*)ppDecoderProfile);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderFormat(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pDecoderProfile, Format format, int* pSupported) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Format, int*, int>)(handle->LpVtbl[13]))(handle, pDecoderProfile, format, pSupported);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderFormat(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pDecoderProfile, Format format, int* pSupported) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Format, int*, int>)(handle->LpVtbl[13]))(handle, (Guid*)ppDecoderProfile, format, pSupported);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderFormat(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pDecoderProfile, Format format, ref int pSupported) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (int* ppSupported = &pSupported)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Format, int*, int>)(handle->LpVtbl[13]))(handle, pDecoderProfile, format, (int*)ppSupported);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderFormat(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pDecoderProfile, Format format, ref int pSupported) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (int* ppSupported = &pSupported)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Format, int*, int>)(handle->LpVtbl[13]))(handle, (Guid*)ppDecoderProfile, format, (int*)ppSupported);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetVideoDecoderConfigCount(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pDesc, uint* pCount) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, uint*, int>)(handle->LpVtbl[14]))(handle, pDesc, pCount);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetVideoDecoderConfigCount(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pDesc, uint* pCount) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, uint*, int>)(handle->LpVtbl[14]))(handle, (VideoDecoderDesc*)ppDesc, pCount);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetVideoDecoderConfigCount(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pDesc, ref uint pCount) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (uint* ppCount = &pCount)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, uint*, int>)(handle->LpVtbl[14]))(handle, pDesc, (uint*)ppCount);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetVideoDecoderConfigCount(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pDesc, ref uint pCount) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppDesc = &pDesc)
			{
				fixed (uint* ppCount = &pCount)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, uint*, int>)(handle->LpVtbl[14]))(handle, (VideoDecoderDesc*)ppDesc, (uint*)ppCount);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetVideoDecoderConfig(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pDesc, uint index, VideoDecoderConfig* pConfig) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, uint, VideoDecoderConfig*, int>)(handle->LpVtbl[15]))(handle, pDesc, index, pConfig);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetVideoDecoderConfig(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pDesc, uint index, VideoDecoderConfig* pConfig) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, uint, VideoDecoderConfig*, int>)(handle->LpVtbl[15]))(handle, (VideoDecoderDesc*)ppDesc, index, pConfig);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetVideoDecoderConfig(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pDesc, uint index, ref VideoDecoderConfig pConfig) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderConfig* ppConfig = &pConfig)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, uint, VideoDecoderConfig*, int>)(handle->LpVtbl[15]))(handle, pDesc, index, (VideoDecoderConfig*)ppConfig);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetVideoDecoderConfig(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pDesc, uint index, ref VideoDecoderConfig pConfig) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppDesc = &pDesc)
			{
				fixed (VideoDecoderConfig* ppConfig = &pConfig)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, uint, VideoDecoderConfig*, int>)(handle->LpVtbl[15]))(handle, (VideoDecoderDesc*)ppDesc, index, (VideoDecoderConfig*)ppConfig);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetContentProtectionCaps(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, Guid* pDecoderProfile, VideoContentProtectionCaps* pCaps) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, VideoContentProtectionCaps*, int>)(handle->LpVtbl[16]))(handle, pCryptoType, pDecoderProfile, pCaps);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetContentProtectionCaps(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, Guid* pDecoderProfile, VideoContentProtectionCaps* pCaps) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, VideoContentProtectionCaps*, int>)(handle->LpVtbl[16]))(handle, (Guid*)ppCryptoType, pDecoderProfile, pCaps);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetContentProtectionCaps(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, ref Guid pDecoderProfile, VideoContentProtectionCaps* pCaps) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, VideoContentProtectionCaps*, int>)(handle->LpVtbl[16]))(handle, pCryptoType, (Guid*)ppDecoderProfile, pCaps);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetContentProtectionCaps(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, ref Guid pDecoderProfile, VideoContentProtectionCaps* pCaps) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, VideoContentProtectionCaps*, int>)(handle->LpVtbl[16]))(handle, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, pCaps);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetContentProtectionCaps(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, Guid* pDecoderProfile, ref VideoContentProtectionCaps pCaps) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoContentProtectionCaps* ppCaps = &pCaps)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, VideoContentProtectionCaps*, int>)(handle->LpVtbl[16]))(handle, pCryptoType, pDecoderProfile, (VideoContentProtectionCaps*)ppCaps);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetContentProtectionCaps(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, Guid* pDecoderProfile, ref VideoContentProtectionCaps pCaps) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (VideoContentProtectionCaps* ppCaps = &pCaps)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, VideoContentProtectionCaps*, int>)(handle->LpVtbl[16]))(handle, (Guid*)ppCryptoType, pDecoderProfile, (VideoContentProtectionCaps*)ppCaps);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetContentProtectionCaps(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, ref Guid pDecoderProfile, ref VideoContentProtectionCaps pCaps) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (VideoContentProtectionCaps* ppCaps = &pCaps)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, VideoContentProtectionCaps*, int>)(handle->LpVtbl[16]))(handle, pCryptoType, (Guid*)ppDecoderProfile, (VideoContentProtectionCaps*)ppCaps);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetContentProtectionCaps(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, ref Guid pDecoderProfile, ref VideoContentProtectionCaps pCaps) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (VideoContentProtectionCaps* ppCaps = &pCaps)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, VideoContentProtectionCaps*, int>)(handle->LpVtbl[16]))(handle, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, (VideoContentProtectionCaps*)ppCaps);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckCryptoKeyExchange(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, Guid* pDecoderProfile, uint index, Guid* pKeyExchangeType) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, uint, Guid*, int>)(handle->LpVtbl[17]))(handle, pCryptoType, pDecoderProfile, index, pKeyExchangeType);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckCryptoKeyExchange(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, Guid* pDecoderProfile, uint index, Guid* pKeyExchangeType) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, uint, Guid*, int>)(handle->LpVtbl[17]))(handle, (Guid*)ppCryptoType, pDecoderProfile, index, pKeyExchangeType);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckCryptoKeyExchange(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, ref Guid pDecoderProfile, uint index, Guid* pKeyExchangeType) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, uint, Guid*, int>)(handle->LpVtbl[17]))(handle, pCryptoType, (Guid*)ppDecoderProfile, index, pKeyExchangeType);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckCryptoKeyExchange(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, ref Guid pDecoderProfile, uint index, Guid* pKeyExchangeType) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, uint, Guid*, int>)(handle->LpVtbl[17]))(handle, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, index, pKeyExchangeType);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckCryptoKeyExchange(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, Guid* pDecoderProfile, uint index, ref Guid pKeyExchangeType) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, uint, Guid*, int>)(handle->LpVtbl[17]))(handle, pCryptoType, pDecoderProfile, index, (Guid*)ppKeyExchangeType);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckCryptoKeyExchange(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, Guid* pDecoderProfile, uint index, ref Guid pKeyExchangeType) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, uint, Guid*, int>)(handle->LpVtbl[17]))(handle, (Guid*)ppCryptoType, pDecoderProfile, index, (Guid*)ppKeyExchangeType);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckCryptoKeyExchange(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, ref Guid pDecoderProfile, uint index, ref Guid pKeyExchangeType) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, uint, Guid*, int>)(handle->LpVtbl[17]))(handle, pCryptoType, (Guid*)ppDecoderProfile, index, (Guid*)ppKeyExchangeType);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckCryptoKeyExchange(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, ref Guid pDecoderProfile, uint index, ref Guid pKeyExchangeType) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, uint, Guid*, int>)(handle->LpVtbl[17]))(handle, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, index, (Guid*)ppKeyExchangeType);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateData(this ComPtr<ID3D11VideoDevice1> comObj, Guid* guid, uint dataSize, void* pData) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, void*, int>)(handle->LpVtbl[18]))(handle, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateData(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, void*, int>)(handle->LpVtbl[18]))(handle, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateDataInterface(this ComPtr<ID3D11VideoDevice1> comObj, Guid* guid, IUnknown* pData) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, IUnknown*, int>)(handle->LpVtbl[19]))(handle, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateDataInterface(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid guid, IUnknown* pData) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, IUnknown*, int>)(handle->LpVtbl[19]))(handle, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateDataInterface(this ComPtr<ID3D11VideoDevice1> comObj, Guid* guid, ref IUnknown pData) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (IUnknown* ppData = &pData)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, IUnknown*, int>)(handle->LpVtbl[19]))(handle, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateDataInterface(this ComPtr<ID3D11VideoDevice1> comObj, Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, IUnknown*, int>)(handle->LpVtbl[19]))(handle, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateDataInterface(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid guid, ref IUnknown pData) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, IUnknown*, int>)(handle->LpVtbl[19]))(handle, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int SetPrivateDataInterface(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, IUnknown*, int>)(handle->LpVtbl[19]))(handle, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, Guid* pDecoderProfile, Guid* pKeyExchangeType, uint* pPrivateInputSize, uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, pCryptoType, pDecoderProfile, pKeyExchangeType, pPrivateInputSize, pPrivateOutputSize);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, Guid* pDecoderProfile, Guid* pKeyExchangeType, uint* pPrivateInputSize, uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, (Guid*)ppCryptoType, pDecoderProfile, pKeyExchangeType, pPrivateInputSize, pPrivateOutputSize);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, ref Guid pDecoderProfile, Guid* pKeyExchangeType, uint* pPrivateInputSize, uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, pCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, pPrivateInputSize, pPrivateOutputSize);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, ref Guid pDecoderProfile, Guid* pKeyExchangeType, uint* pPrivateInputSize, uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, pPrivateInputSize, pPrivateOutputSize);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, Guid* pDecoderProfile, ref Guid pKeyExchangeType, uint* pPrivateInputSize, uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, pCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, pPrivateInputSize, pPrivateOutputSize);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, Guid* pDecoderProfile, ref Guid pKeyExchangeType, uint* pPrivateInputSize, uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, (Guid*)ppCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, pPrivateInputSize, pPrivateOutputSize);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, ref Guid pDecoderProfile, ref Guid pKeyExchangeType, uint* pPrivateInputSize, uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, pCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, pPrivateInputSize, pPrivateOutputSize);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, ref Guid pDecoderProfile, ref Guid pKeyExchangeType, uint* pPrivateInputSize, uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, pPrivateInputSize, pPrivateOutputSize);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, Guid* pDecoderProfile, Guid* pKeyExchangeType, ref uint pPrivateInputSize, uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, pCryptoType, pDecoderProfile, pKeyExchangeType, (uint*)ppPrivateInputSize, pPrivateOutputSize);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, Guid* pDecoderProfile, Guid* pKeyExchangeType, ref uint pPrivateInputSize, uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, (Guid*)ppCryptoType, pDecoderProfile, pKeyExchangeType, (uint*)ppPrivateInputSize, pPrivateOutputSize);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, ref Guid pDecoderProfile, Guid* pKeyExchangeType, ref uint pPrivateInputSize, uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, pCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, (uint*)ppPrivateInputSize, pPrivateOutputSize);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, ref Guid pDecoderProfile, Guid* pKeyExchangeType, ref uint pPrivateInputSize, uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, (uint*)ppPrivateInputSize, pPrivateOutputSize);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, Guid* pDecoderProfile, ref Guid pKeyExchangeType, ref uint pPrivateInputSize, uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
			{
				fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, pCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, (uint*)ppPrivateInputSize, pPrivateOutputSize);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, Guid* pDecoderProfile, ref Guid pKeyExchangeType, ref uint pPrivateInputSize, uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, (Guid*)ppCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, (uint*)ppPrivateInputSize, pPrivateOutputSize);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, ref Guid pDecoderProfile, ref Guid pKeyExchangeType, ref uint pPrivateInputSize, uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, pCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, (uint*)ppPrivateInputSize, pPrivateOutputSize);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, ref Guid pDecoderProfile, ref Guid pKeyExchangeType, ref uint pPrivateInputSize, uint* pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
					{
						fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, (uint*)ppPrivateInputSize, pPrivateOutputSize);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, Guid* pDecoderProfile, Guid* pKeyExchangeType, uint* pPrivateInputSize, ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, pCryptoType, pDecoderProfile, pKeyExchangeType, pPrivateInputSize, (uint*)ppPrivateOutputSize);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, Guid* pDecoderProfile, Guid* pKeyExchangeType, uint* pPrivateInputSize, ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, (Guid*)ppCryptoType, pDecoderProfile, pKeyExchangeType, pPrivateInputSize, (uint*)ppPrivateOutputSize);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, ref Guid pDecoderProfile, Guid* pKeyExchangeType, uint* pPrivateInputSize, ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, pCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, pPrivateInputSize, (uint*)ppPrivateOutputSize);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, ref Guid pDecoderProfile, Guid* pKeyExchangeType, uint* pPrivateInputSize, ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, pPrivateInputSize, (uint*)ppPrivateOutputSize);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, Guid* pDecoderProfile, ref Guid pKeyExchangeType, uint* pPrivateInputSize, ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
			{
				fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, pCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, pPrivateInputSize, (uint*)ppPrivateOutputSize);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, Guid* pDecoderProfile, ref Guid pKeyExchangeType, uint* pPrivateInputSize, ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, (Guid*)ppCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, pPrivateInputSize, (uint*)ppPrivateOutputSize);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, ref Guid pDecoderProfile, ref Guid pKeyExchangeType, uint* pPrivateInputSize, ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, pCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, pPrivateInputSize, (uint*)ppPrivateOutputSize);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, ref Guid pDecoderProfile, ref Guid pKeyExchangeType, uint* pPrivateInputSize, ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
					{
						fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, pPrivateInputSize, (uint*)ppPrivateOutputSize);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, Guid* pDecoderProfile, Guid* pKeyExchangeType, ref uint pPrivateInputSize, ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
			{
				fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, pCryptoType, pDecoderProfile, pKeyExchangeType, (uint*)ppPrivateInputSize, (uint*)ppPrivateOutputSize);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, Guid* pDecoderProfile, Guid* pKeyExchangeType, ref uint pPrivateInputSize, ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
				{
					fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, (Guid*)ppCryptoType, pDecoderProfile, pKeyExchangeType, (uint*)ppPrivateInputSize, (uint*)ppPrivateOutputSize);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, ref Guid pDecoderProfile, Guid* pKeyExchangeType, ref uint pPrivateInputSize, ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
				{
					fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, pCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, (uint*)ppPrivateInputSize, (uint*)ppPrivateOutputSize);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, ref Guid pDecoderProfile, Guid* pKeyExchangeType, ref uint pPrivateInputSize, ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
					{
						fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, (uint*)ppPrivateInputSize, (uint*)ppPrivateOutputSize);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, Guid* pDecoderProfile, ref Guid pKeyExchangeType, ref uint pPrivateInputSize, ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
			{
				fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
				{
					fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, pCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, (uint*)ppPrivateInputSize, (uint*)ppPrivateOutputSize);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, Guid* pDecoderProfile, ref Guid pKeyExchangeType, ref uint pPrivateInputSize, ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
					{
						fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, (Guid*)ppCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, (uint*)ppPrivateInputSize, (uint*)ppPrivateOutputSize);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pCryptoType, ref Guid pDecoderProfile, ref Guid pKeyExchangeType, ref uint pPrivateInputSize, ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
					{
						fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, pCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, (uint*)ppPrivateInputSize, (uint*)ppPrivateOutputSize);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetCryptoSessionPrivateDataSize(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pCryptoType, ref Guid pDecoderProfile, ref Guid pKeyExchangeType, ref uint pPrivateInputSize, ref uint pPrivateOutputSize) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
					{
						fixed (uint* ppPrivateInputSize = &pPrivateInputSize)
						{
							fixed (uint* ppPrivateOutputSize = &pPrivateOutputSize)
							{
								int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, Guid*, Guid*, uint*, uint*, int>)(handle->LpVtbl[20]))(handle, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, (uint*)ppPrivateInputSize, (uint*)ppPrivateOutputSize);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetVideoDecoderCaps(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pDecoderProfile, uint sampleWidth, uint sampleHeight, Rational* pFrameRate, uint bitRate, Guid* pCryptoType, uint* pDecoderCaps) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, Rational*, uint, Guid*, uint*, int>)(handle->LpVtbl[21]))(handle, pDecoderProfile, sampleWidth, sampleHeight, pFrameRate, bitRate, pCryptoType, pDecoderCaps);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetVideoDecoderCaps(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pDecoderProfile, uint sampleWidth, uint sampleHeight, Rational* pFrameRate, uint bitRate, Guid* pCryptoType, uint* pDecoderCaps) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, Rational*, uint, Guid*, uint*, int>)(handle->LpVtbl[21]))(handle, (Guid*)ppDecoderProfile, sampleWidth, sampleHeight, pFrameRate, bitRate, pCryptoType, pDecoderCaps);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetVideoDecoderCaps(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pDecoderProfile, uint sampleWidth, uint sampleHeight, ref Rational pFrameRate, uint bitRate, Guid* pCryptoType, uint* pDecoderCaps) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Rational* ppFrameRate = &pFrameRate)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, Rational*, uint, Guid*, uint*, int>)(handle->LpVtbl[21]))(handle, pDecoderProfile, sampleWidth, sampleHeight, (Rational*)ppFrameRate, bitRate, pCryptoType, pDecoderCaps);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetVideoDecoderCaps(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pDecoderProfile, uint sampleWidth, uint sampleHeight, ref Rational pFrameRate, uint bitRate, Guid* pCryptoType, uint* pDecoderCaps) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (Rational* ppFrameRate = &pFrameRate)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, Rational*, uint, Guid*, uint*, int>)(handle->LpVtbl[21]))(handle, (Guid*)ppDecoderProfile, sampleWidth, sampleHeight, (Rational*)ppFrameRate, bitRate, pCryptoType, pDecoderCaps);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetVideoDecoderCaps(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pDecoderProfile, uint sampleWidth, uint sampleHeight, Rational* pFrameRate, uint bitRate, ref Guid pCryptoType, uint* pDecoderCaps) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, Rational*, uint, Guid*, uint*, int>)(handle->LpVtbl[21]))(handle, pDecoderProfile, sampleWidth, sampleHeight, pFrameRate, bitRate, (Guid*)ppCryptoType, pDecoderCaps);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetVideoDecoderCaps(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pDecoderProfile, uint sampleWidth, uint sampleHeight, Rational* pFrameRate, uint bitRate, ref Guid pCryptoType, uint* pDecoderCaps) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (Guid* ppCryptoType = &pCryptoType)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, Rational*, uint, Guid*, uint*, int>)(handle->LpVtbl[21]))(handle, (Guid*)ppDecoderProfile, sampleWidth, sampleHeight, pFrameRate, bitRate, (Guid*)ppCryptoType, pDecoderCaps);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetVideoDecoderCaps(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pDecoderProfile, uint sampleWidth, uint sampleHeight, ref Rational pFrameRate, uint bitRate, ref Guid pCryptoType, uint* pDecoderCaps) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Rational* ppFrameRate = &pFrameRate)
			{
				fixed (Guid* ppCryptoType = &pCryptoType)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, Rational*, uint, Guid*, uint*, int>)(handle->LpVtbl[21]))(handle, pDecoderProfile, sampleWidth, sampleHeight, (Rational*)ppFrameRate, bitRate, (Guid*)ppCryptoType, pDecoderCaps);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetVideoDecoderCaps(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pDecoderProfile, uint sampleWidth, uint sampleHeight, ref Rational pFrameRate, uint bitRate, ref Guid pCryptoType, uint* pDecoderCaps) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (Rational* ppFrameRate = &pFrameRate)
				{
					fixed (Guid* ppCryptoType = &pCryptoType)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, Rational*, uint, Guid*, uint*, int>)(handle->LpVtbl[21]))(handle, (Guid*)ppDecoderProfile, sampleWidth, sampleHeight, (Rational*)ppFrameRate, bitRate, (Guid*)ppCryptoType, pDecoderCaps);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetVideoDecoderCaps(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pDecoderProfile, uint sampleWidth, uint sampleHeight, Rational* pFrameRate, uint bitRate, Guid* pCryptoType, ref uint pDecoderCaps) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (uint* ppDecoderCaps = &pDecoderCaps)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, Rational*, uint, Guid*, uint*, int>)(handle->LpVtbl[21]))(handle, pDecoderProfile, sampleWidth, sampleHeight, pFrameRate, bitRate, pCryptoType, (uint*)ppDecoderCaps);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetVideoDecoderCaps(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pDecoderProfile, uint sampleWidth, uint sampleHeight, Rational* pFrameRate, uint bitRate, Guid* pCryptoType, ref uint pDecoderCaps) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (uint* ppDecoderCaps = &pDecoderCaps)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, Rational*, uint, Guid*, uint*, int>)(handle->LpVtbl[21]))(handle, (Guid*)ppDecoderProfile, sampleWidth, sampleHeight, pFrameRate, bitRate, pCryptoType, (uint*)ppDecoderCaps);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetVideoDecoderCaps(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pDecoderProfile, uint sampleWidth, uint sampleHeight, ref Rational pFrameRate, uint bitRate, Guid* pCryptoType, ref uint pDecoderCaps) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Rational* ppFrameRate = &pFrameRate)
			{
				fixed (uint* ppDecoderCaps = &pDecoderCaps)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, Rational*, uint, Guid*, uint*, int>)(handle->LpVtbl[21]))(handle, pDecoderProfile, sampleWidth, sampleHeight, (Rational*)ppFrameRate, bitRate, pCryptoType, (uint*)ppDecoderCaps);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetVideoDecoderCaps(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pDecoderProfile, uint sampleWidth, uint sampleHeight, ref Rational pFrameRate, uint bitRate, Guid* pCryptoType, ref uint pDecoderCaps) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (Rational* ppFrameRate = &pFrameRate)
				{
					fixed (uint* ppDecoderCaps = &pDecoderCaps)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, Rational*, uint, Guid*, uint*, int>)(handle->LpVtbl[21]))(handle, (Guid*)ppDecoderProfile, sampleWidth, sampleHeight, (Rational*)ppFrameRate, bitRate, pCryptoType, (uint*)ppDecoderCaps);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetVideoDecoderCaps(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pDecoderProfile, uint sampleWidth, uint sampleHeight, Rational* pFrameRate, uint bitRate, ref Guid pCryptoType, ref uint pDecoderCaps) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (uint* ppDecoderCaps = &pDecoderCaps)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, Rational*, uint, Guid*, uint*, int>)(handle->LpVtbl[21]))(handle, pDecoderProfile, sampleWidth, sampleHeight, pFrameRate, bitRate, (Guid*)ppCryptoType, (uint*)ppDecoderCaps);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetVideoDecoderCaps(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pDecoderProfile, uint sampleWidth, uint sampleHeight, Rational* pFrameRate, uint bitRate, ref Guid pCryptoType, ref uint pDecoderCaps) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (Guid* ppCryptoType = &pCryptoType)
				{
					fixed (uint* ppDecoderCaps = &pDecoderCaps)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, Rational*, uint, Guid*, uint*, int>)(handle->LpVtbl[21]))(handle, (Guid*)ppDecoderProfile, sampleWidth, sampleHeight, pFrameRate, bitRate, (Guid*)ppCryptoType, (uint*)ppDecoderCaps);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetVideoDecoderCaps(this ComPtr<ID3D11VideoDevice1> comObj, Guid* pDecoderProfile, uint sampleWidth, uint sampleHeight, ref Rational pFrameRate, uint bitRate, ref Guid pCryptoType, ref uint pDecoderCaps) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Rational* ppFrameRate = &pFrameRate)
			{
				fixed (Guid* ppCryptoType = &pCryptoType)
				{
					fixed (uint* ppDecoderCaps = &pDecoderCaps)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, Rational*, uint, Guid*, uint*, int>)(handle->LpVtbl[21]))(handle, pDecoderProfile, sampleWidth, sampleHeight, (Rational*)ppFrameRate, bitRate, (Guid*)ppCryptoType, (uint*)ppDecoderCaps);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int GetVideoDecoderCaps(this ComPtr<ID3D11VideoDevice1> comObj, ref Guid pDecoderProfile, uint sampleWidth, uint sampleHeight, ref Rational pFrameRate, uint bitRate, ref Guid pCryptoType, ref uint pDecoderCaps) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (Rational* ppFrameRate = &pFrameRate)
				{
					fixed (Guid* ppCryptoType = &pCryptoType)
					{
						fixed (uint* ppDecoderCaps = &pDecoderCaps)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, Guid*, uint, uint, Rational*, uint, Guid*, uint*, int>)(handle->LpVtbl[21]))(handle, (Guid*)ppDecoderProfile, sampleWidth, sampleHeight, (Rational*)ppFrameRate, bitRate, (Guid*)ppCryptoType, (uint*)ppDecoderCaps);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pInputDesc, ColorSpaceType inputColorSpace, VideoDecoderConfig* pInputConfig, Rational* pFrameRate, VideoSampleDesc* pOutputDesc, int* pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, pInputDesc, inputColorSpace, pInputConfig, pFrameRate, pOutputDesc, pSupported, pRealTimeHint);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pInputDesc, ColorSpaceType inputColorSpace, VideoDecoderConfig* pInputConfig, Rational* pFrameRate, VideoSampleDesc* pOutputDesc, int* pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, (VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, pFrameRate, pOutputDesc, pSupported, pRealTimeHint);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pInputDesc, ColorSpaceType inputColorSpace, ref VideoDecoderConfig pInputConfig, Rational* pFrameRate, VideoSampleDesc* pOutputDesc, int* pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, pInputDesc, inputColorSpace, (VideoDecoderConfig*)ppInputConfig, pFrameRate, pOutputDesc, pSupported, pRealTimeHint);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pInputDesc, ColorSpaceType inputColorSpace, ref VideoDecoderConfig pInputConfig, Rational* pFrameRate, VideoSampleDesc* pOutputDesc, int* pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, (VideoDecoderDesc*)ppInputDesc, inputColorSpace, (VideoDecoderConfig*)ppInputConfig, pFrameRate, pOutputDesc, pSupported, pRealTimeHint);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pInputDesc, ColorSpaceType inputColorSpace, VideoDecoderConfig* pInputConfig, ref Rational pFrameRate, VideoSampleDesc* pOutputDesc, int* pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Rational* ppFrameRate = &pFrameRate)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, pInputDesc, inputColorSpace, pInputConfig, (Rational*)ppFrameRate, pOutputDesc, pSupported, pRealTimeHint);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pInputDesc, ColorSpaceType inputColorSpace, VideoDecoderConfig* pInputConfig, ref Rational pFrameRate, VideoSampleDesc* pOutputDesc, int* pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (Rational* ppFrameRate = &pFrameRate)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, (VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, (Rational*)ppFrameRate, pOutputDesc, pSupported, pRealTimeHint);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pInputDesc, ColorSpaceType inputColorSpace, ref VideoDecoderConfig pInputConfig, ref Rational pFrameRate, VideoSampleDesc* pOutputDesc, int* pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (Rational* ppFrameRate = &pFrameRate)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, pInputDesc, inputColorSpace, (VideoDecoderConfig*)ppInputConfig, (Rational*)ppFrameRate, pOutputDesc, pSupported, pRealTimeHint);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pInputDesc, ColorSpaceType inputColorSpace, ref VideoDecoderConfig pInputConfig, ref Rational pFrameRate, VideoSampleDesc* pOutputDesc, int* pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (Rational* ppFrameRate = &pFrameRate)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, (VideoDecoderDesc*)ppInputDesc, inputColorSpace, (VideoDecoderConfig*)ppInputConfig, (Rational*)ppFrameRate, pOutputDesc, pSupported, pRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pInputDesc, ColorSpaceType inputColorSpace, VideoDecoderConfig* pInputConfig, Rational* pFrameRate, ref VideoSampleDesc pOutputDesc, int* pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, pInputDesc, inputColorSpace, pInputConfig, pFrameRate, (VideoSampleDesc*)ppOutputDesc, pSupported, pRealTimeHint);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pInputDesc, ColorSpaceType inputColorSpace, VideoDecoderConfig* pInputConfig, Rational* pFrameRate, ref VideoSampleDesc pOutputDesc, int* pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, (VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, pFrameRate, (VideoSampleDesc*)ppOutputDesc, pSupported, pRealTimeHint);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pInputDesc, ColorSpaceType inputColorSpace, ref VideoDecoderConfig pInputConfig, Rational* pFrameRate, ref VideoSampleDesc pOutputDesc, int* pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, pInputDesc, inputColorSpace, (VideoDecoderConfig*)ppInputConfig, pFrameRate, (VideoSampleDesc*)ppOutputDesc, pSupported, pRealTimeHint);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pInputDesc, ColorSpaceType inputColorSpace, ref VideoDecoderConfig pInputConfig, Rational* pFrameRate, ref VideoSampleDesc pOutputDesc, int* pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, (VideoDecoderDesc*)ppInputDesc, inputColorSpace, (VideoDecoderConfig*)ppInputConfig, pFrameRate, (VideoSampleDesc*)ppOutputDesc, pSupported, pRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pInputDesc, ColorSpaceType inputColorSpace, VideoDecoderConfig* pInputConfig, ref Rational pFrameRate, ref VideoSampleDesc pOutputDesc, int* pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Rational* ppFrameRate = &pFrameRate)
			{
				fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, pInputDesc, inputColorSpace, pInputConfig, (Rational*)ppFrameRate, (VideoSampleDesc*)ppOutputDesc, pSupported, pRealTimeHint);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pInputDesc, ColorSpaceType inputColorSpace, VideoDecoderConfig* pInputConfig, ref Rational pFrameRate, ref VideoSampleDesc pOutputDesc, int* pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (Rational* ppFrameRate = &pFrameRate)
				{
					fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, (VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, (Rational*)ppFrameRate, (VideoSampleDesc*)ppOutputDesc, pSupported, pRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pInputDesc, ColorSpaceType inputColorSpace, ref VideoDecoderConfig pInputConfig, ref Rational pFrameRate, ref VideoSampleDesc pOutputDesc, int* pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (Rational* ppFrameRate = &pFrameRate)
				{
					fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, pInputDesc, inputColorSpace, (VideoDecoderConfig*)ppInputConfig, (Rational*)ppFrameRate, (VideoSampleDesc*)ppOutputDesc, pSupported, pRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pInputDesc, ColorSpaceType inputColorSpace, ref VideoDecoderConfig pInputConfig, ref Rational pFrameRate, ref VideoSampleDesc pOutputDesc, int* pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (Rational* ppFrameRate = &pFrameRate)
					{
						fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, (VideoDecoderDesc*)ppInputDesc, inputColorSpace, (VideoDecoderConfig*)ppInputConfig, (Rational*)ppFrameRate, (VideoSampleDesc*)ppOutputDesc, pSupported, pRealTimeHint);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pInputDesc, ColorSpaceType inputColorSpace, VideoDecoderConfig* pInputConfig, Rational* pFrameRate, VideoSampleDesc* pOutputDesc, ref int pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (int* ppSupported = &pSupported)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, pInputDesc, inputColorSpace, pInputConfig, pFrameRate, pOutputDesc, (int*)ppSupported, pRealTimeHint);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pInputDesc, ColorSpaceType inputColorSpace, VideoDecoderConfig* pInputConfig, Rational* pFrameRate, VideoSampleDesc* pOutputDesc, ref int pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (int* ppSupported = &pSupported)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, (VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, pFrameRate, pOutputDesc, (int*)ppSupported, pRealTimeHint);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pInputDesc, ColorSpaceType inputColorSpace, ref VideoDecoderConfig pInputConfig, Rational* pFrameRate, VideoSampleDesc* pOutputDesc, ref int pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (int* ppSupported = &pSupported)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, pInputDesc, inputColorSpace, (VideoDecoderConfig*)ppInputConfig, pFrameRate, pOutputDesc, (int*)ppSupported, pRealTimeHint);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pInputDesc, ColorSpaceType inputColorSpace, ref VideoDecoderConfig pInputConfig, Rational* pFrameRate, VideoSampleDesc* pOutputDesc, ref int pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (int* ppSupported = &pSupported)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, (VideoDecoderDesc*)ppInputDesc, inputColorSpace, (VideoDecoderConfig*)ppInputConfig, pFrameRate, pOutputDesc, (int*)ppSupported, pRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pInputDesc, ColorSpaceType inputColorSpace, VideoDecoderConfig* pInputConfig, ref Rational pFrameRate, VideoSampleDesc* pOutputDesc, ref int pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Rational* ppFrameRate = &pFrameRate)
			{
				fixed (int* ppSupported = &pSupported)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, pInputDesc, inputColorSpace, pInputConfig, (Rational*)ppFrameRate, pOutputDesc, (int*)ppSupported, pRealTimeHint);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pInputDesc, ColorSpaceType inputColorSpace, VideoDecoderConfig* pInputConfig, ref Rational pFrameRate, VideoSampleDesc* pOutputDesc, ref int pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (Rational* ppFrameRate = &pFrameRate)
				{
					fixed (int* ppSupported = &pSupported)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, (VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, (Rational*)ppFrameRate, pOutputDesc, (int*)ppSupported, pRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pInputDesc, ColorSpaceType inputColorSpace, ref VideoDecoderConfig pInputConfig, ref Rational pFrameRate, VideoSampleDesc* pOutputDesc, ref int pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (Rational* ppFrameRate = &pFrameRate)
				{
					fixed (int* ppSupported = &pSupported)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, pInputDesc, inputColorSpace, (VideoDecoderConfig*)ppInputConfig, (Rational*)ppFrameRate, pOutputDesc, (int*)ppSupported, pRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pInputDesc, ColorSpaceType inputColorSpace, ref VideoDecoderConfig pInputConfig, ref Rational pFrameRate, VideoSampleDesc* pOutputDesc, ref int pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (Rational* ppFrameRate = &pFrameRate)
					{
						fixed (int* ppSupported = &pSupported)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, (VideoDecoderDesc*)ppInputDesc, inputColorSpace, (VideoDecoderConfig*)ppInputConfig, (Rational*)ppFrameRate, pOutputDesc, (int*)ppSupported, pRealTimeHint);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pInputDesc, ColorSpaceType inputColorSpace, VideoDecoderConfig* pInputConfig, Rational* pFrameRate, ref VideoSampleDesc pOutputDesc, ref int pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
			{
				fixed (int* ppSupported = &pSupported)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, pInputDesc, inputColorSpace, pInputConfig, pFrameRate, (VideoSampleDesc*)ppOutputDesc, (int*)ppSupported, pRealTimeHint);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pInputDesc, ColorSpaceType inputColorSpace, VideoDecoderConfig* pInputConfig, Rational* pFrameRate, ref VideoSampleDesc pOutputDesc, ref int pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
				{
					fixed (int* ppSupported = &pSupported)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, (VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, pFrameRate, (VideoSampleDesc*)ppOutputDesc, (int*)ppSupported, pRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pInputDesc, ColorSpaceType inputColorSpace, ref VideoDecoderConfig pInputConfig, Rational* pFrameRate, ref VideoSampleDesc pOutputDesc, ref int pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
				{
					fixed (int* ppSupported = &pSupported)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, pInputDesc, inputColorSpace, (VideoDecoderConfig*)ppInputConfig, pFrameRate, (VideoSampleDesc*)ppOutputDesc, (int*)ppSupported, pRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pInputDesc, ColorSpaceType inputColorSpace, ref VideoDecoderConfig pInputConfig, Rational* pFrameRate, ref VideoSampleDesc pOutputDesc, ref int pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
					{
						fixed (int* ppSupported = &pSupported)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, (VideoDecoderDesc*)ppInputDesc, inputColorSpace, (VideoDecoderConfig*)ppInputConfig, pFrameRate, (VideoSampleDesc*)ppOutputDesc, (int*)ppSupported, pRealTimeHint);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pInputDesc, ColorSpaceType inputColorSpace, VideoDecoderConfig* pInputConfig, ref Rational pFrameRate, ref VideoSampleDesc pOutputDesc, ref int pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Rational* ppFrameRate = &pFrameRate)
			{
				fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
				{
					fixed (int* ppSupported = &pSupported)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, pInputDesc, inputColorSpace, pInputConfig, (Rational*)ppFrameRate, (VideoSampleDesc*)ppOutputDesc, (int*)ppSupported, pRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pInputDesc, ColorSpaceType inputColorSpace, VideoDecoderConfig* pInputConfig, ref Rational pFrameRate, ref VideoSampleDesc pOutputDesc, ref int pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (Rational* ppFrameRate = &pFrameRate)
				{
					fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
					{
						fixed (int* ppSupported = &pSupported)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, (VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, (Rational*)ppFrameRate, (VideoSampleDesc*)ppOutputDesc, (int*)ppSupported, pRealTimeHint);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pInputDesc, ColorSpaceType inputColorSpace, ref VideoDecoderConfig pInputConfig, ref Rational pFrameRate, ref VideoSampleDesc pOutputDesc, ref int pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (Rational* ppFrameRate = &pFrameRate)
				{
					fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
					{
						fixed (int* ppSupported = &pSupported)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, pInputDesc, inputColorSpace, (VideoDecoderConfig*)ppInputConfig, (Rational*)ppFrameRate, (VideoSampleDesc*)ppOutputDesc, (int*)ppSupported, pRealTimeHint);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pInputDesc, ColorSpaceType inputColorSpace, ref VideoDecoderConfig pInputConfig, ref Rational pFrameRate, ref VideoSampleDesc pOutputDesc, ref int pSupported, int* pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (Rational* ppFrameRate = &pFrameRate)
					{
						fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
						{
							fixed (int* ppSupported = &pSupported)
							{
								int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, (VideoDecoderDesc*)ppInputDesc, inputColorSpace, (VideoDecoderConfig*)ppInputConfig, (Rational*)ppFrameRate, (VideoSampleDesc*)ppOutputDesc, (int*)ppSupported, pRealTimeHint);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pInputDesc, ColorSpaceType inputColorSpace, VideoDecoderConfig* pInputConfig, Rational* pFrameRate, VideoSampleDesc* pOutputDesc, int* pSupported, ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (int* ppRealTimeHint = &pRealTimeHint)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, pInputDesc, inputColorSpace, pInputConfig, pFrameRate, pOutputDesc, pSupported, (int*)ppRealTimeHint);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pInputDesc, ColorSpaceType inputColorSpace, VideoDecoderConfig* pInputConfig, Rational* pFrameRate, VideoSampleDesc* pOutputDesc, int* pSupported, ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (int* ppRealTimeHint = &pRealTimeHint)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, (VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, pFrameRate, pOutputDesc, pSupported, (int*)ppRealTimeHint);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pInputDesc, ColorSpaceType inputColorSpace, ref VideoDecoderConfig pInputConfig, Rational* pFrameRate, VideoSampleDesc* pOutputDesc, int* pSupported, ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (int* ppRealTimeHint = &pRealTimeHint)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, pInputDesc, inputColorSpace, (VideoDecoderConfig*)ppInputConfig, pFrameRate, pOutputDesc, pSupported, (int*)ppRealTimeHint);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pInputDesc, ColorSpaceType inputColorSpace, ref VideoDecoderConfig pInputConfig, Rational* pFrameRate, VideoSampleDesc* pOutputDesc, int* pSupported, ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (int* ppRealTimeHint = &pRealTimeHint)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, (VideoDecoderDesc*)ppInputDesc, inputColorSpace, (VideoDecoderConfig*)ppInputConfig, pFrameRate, pOutputDesc, pSupported, (int*)ppRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pInputDesc, ColorSpaceType inputColorSpace, VideoDecoderConfig* pInputConfig, ref Rational pFrameRate, VideoSampleDesc* pOutputDesc, int* pSupported, ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Rational* ppFrameRate = &pFrameRate)
			{
				fixed (int* ppRealTimeHint = &pRealTimeHint)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, pInputDesc, inputColorSpace, pInputConfig, (Rational*)ppFrameRate, pOutputDesc, pSupported, (int*)ppRealTimeHint);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pInputDesc, ColorSpaceType inputColorSpace, VideoDecoderConfig* pInputConfig, ref Rational pFrameRate, VideoSampleDesc* pOutputDesc, int* pSupported, ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (Rational* ppFrameRate = &pFrameRate)
				{
					fixed (int* ppRealTimeHint = &pRealTimeHint)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, (VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, (Rational*)ppFrameRate, pOutputDesc, pSupported, (int*)ppRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pInputDesc, ColorSpaceType inputColorSpace, ref VideoDecoderConfig pInputConfig, ref Rational pFrameRate, VideoSampleDesc* pOutputDesc, int* pSupported, ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (Rational* ppFrameRate = &pFrameRate)
				{
					fixed (int* ppRealTimeHint = &pRealTimeHint)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, pInputDesc, inputColorSpace, (VideoDecoderConfig*)ppInputConfig, (Rational*)ppFrameRate, pOutputDesc, pSupported, (int*)ppRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pInputDesc, ColorSpaceType inputColorSpace, ref VideoDecoderConfig pInputConfig, ref Rational pFrameRate, VideoSampleDesc* pOutputDesc, int* pSupported, ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (Rational* ppFrameRate = &pFrameRate)
					{
						fixed (int* ppRealTimeHint = &pRealTimeHint)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, (VideoDecoderDesc*)ppInputDesc, inputColorSpace, (VideoDecoderConfig*)ppInputConfig, (Rational*)ppFrameRate, pOutputDesc, pSupported, (int*)ppRealTimeHint);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pInputDesc, ColorSpaceType inputColorSpace, VideoDecoderConfig* pInputConfig, Rational* pFrameRate, ref VideoSampleDesc pOutputDesc, int* pSupported, ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
			{
				fixed (int* ppRealTimeHint = &pRealTimeHint)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, pInputDesc, inputColorSpace, pInputConfig, pFrameRate, (VideoSampleDesc*)ppOutputDesc, pSupported, (int*)ppRealTimeHint);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pInputDesc, ColorSpaceType inputColorSpace, VideoDecoderConfig* pInputConfig, Rational* pFrameRate, ref VideoSampleDesc pOutputDesc, int* pSupported, ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
				{
					fixed (int* ppRealTimeHint = &pRealTimeHint)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, (VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, pFrameRate, (VideoSampleDesc*)ppOutputDesc, pSupported, (int*)ppRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pInputDesc, ColorSpaceType inputColorSpace, ref VideoDecoderConfig pInputConfig, Rational* pFrameRate, ref VideoSampleDesc pOutputDesc, int* pSupported, ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
				{
					fixed (int* ppRealTimeHint = &pRealTimeHint)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, pInputDesc, inputColorSpace, (VideoDecoderConfig*)ppInputConfig, pFrameRate, (VideoSampleDesc*)ppOutputDesc, pSupported, (int*)ppRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pInputDesc, ColorSpaceType inputColorSpace, ref VideoDecoderConfig pInputConfig, Rational* pFrameRate, ref VideoSampleDesc pOutputDesc, int* pSupported, ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
					{
						fixed (int* ppRealTimeHint = &pRealTimeHint)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, (VideoDecoderDesc*)ppInputDesc, inputColorSpace, (VideoDecoderConfig*)ppInputConfig, pFrameRate, (VideoSampleDesc*)ppOutputDesc, pSupported, (int*)ppRealTimeHint);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pInputDesc, ColorSpaceType inputColorSpace, VideoDecoderConfig* pInputConfig, ref Rational pFrameRate, ref VideoSampleDesc pOutputDesc, int* pSupported, ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Rational* ppFrameRate = &pFrameRate)
			{
				fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
				{
					fixed (int* ppRealTimeHint = &pRealTimeHint)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, pInputDesc, inputColorSpace, pInputConfig, (Rational*)ppFrameRate, (VideoSampleDesc*)ppOutputDesc, pSupported, (int*)ppRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pInputDesc, ColorSpaceType inputColorSpace, VideoDecoderConfig* pInputConfig, ref Rational pFrameRate, ref VideoSampleDesc pOutputDesc, int* pSupported, ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (Rational* ppFrameRate = &pFrameRate)
				{
					fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
					{
						fixed (int* ppRealTimeHint = &pRealTimeHint)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, (VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, (Rational*)ppFrameRate, (VideoSampleDesc*)ppOutputDesc, pSupported, (int*)ppRealTimeHint);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pInputDesc, ColorSpaceType inputColorSpace, ref VideoDecoderConfig pInputConfig, ref Rational pFrameRate, ref VideoSampleDesc pOutputDesc, int* pSupported, ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (Rational* ppFrameRate = &pFrameRate)
				{
					fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
					{
						fixed (int* ppRealTimeHint = &pRealTimeHint)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, pInputDesc, inputColorSpace, (VideoDecoderConfig*)ppInputConfig, (Rational*)ppFrameRate, (VideoSampleDesc*)ppOutputDesc, pSupported, (int*)ppRealTimeHint);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pInputDesc, ColorSpaceType inputColorSpace, ref VideoDecoderConfig pInputConfig, ref Rational pFrameRate, ref VideoSampleDesc pOutputDesc, int* pSupported, ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (Rational* ppFrameRate = &pFrameRate)
					{
						fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
						{
							fixed (int* ppRealTimeHint = &pRealTimeHint)
							{
								int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, (VideoDecoderDesc*)ppInputDesc, inputColorSpace, (VideoDecoderConfig*)ppInputConfig, (Rational*)ppFrameRate, (VideoSampleDesc*)ppOutputDesc, pSupported, (int*)ppRealTimeHint);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pInputDesc, ColorSpaceType inputColorSpace, VideoDecoderConfig* pInputConfig, Rational* pFrameRate, VideoSampleDesc* pOutputDesc, ref int pSupported, ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (int* ppSupported = &pSupported)
			{
				fixed (int* ppRealTimeHint = &pRealTimeHint)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, pInputDesc, inputColorSpace, pInputConfig, pFrameRate, pOutputDesc, (int*)ppSupported, (int*)ppRealTimeHint);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pInputDesc, ColorSpaceType inputColorSpace, VideoDecoderConfig* pInputConfig, Rational* pFrameRate, VideoSampleDesc* pOutputDesc, ref int pSupported, ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (int* ppSupported = &pSupported)
				{
					fixed (int* ppRealTimeHint = &pRealTimeHint)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, (VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, pFrameRate, pOutputDesc, (int*)ppSupported, (int*)ppRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pInputDesc, ColorSpaceType inputColorSpace, ref VideoDecoderConfig pInputConfig, Rational* pFrameRate, VideoSampleDesc* pOutputDesc, ref int pSupported, ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (int* ppSupported = &pSupported)
				{
					fixed (int* ppRealTimeHint = &pRealTimeHint)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, pInputDesc, inputColorSpace, (VideoDecoderConfig*)ppInputConfig, pFrameRate, pOutputDesc, (int*)ppSupported, (int*)ppRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pInputDesc, ColorSpaceType inputColorSpace, ref VideoDecoderConfig pInputConfig, Rational* pFrameRate, VideoSampleDesc* pOutputDesc, ref int pSupported, ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (int* ppSupported = &pSupported)
					{
						fixed (int* ppRealTimeHint = &pRealTimeHint)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, (VideoDecoderDesc*)ppInputDesc, inputColorSpace, (VideoDecoderConfig*)ppInputConfig, pFrameRate, pOutputDesc, (int*)ppSupported, (int*)ppRealTimeHint);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pInputDesc, ColorSpaceType inputColorSpace, VideoDecoderConfig* pInputConfig, ref Rational pFrameRate, VideoSampleDesc* pOutputDesc, ref int pSupported, ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (Rational* ppFrameRate = &pFrameRate)
			{
				fixed (int* ppSupported = &pSupported)
				{
					fixed (int* ppRealTimeHint = &pRealTimeHint)
					{
						int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, pInputDesc, inputColorSpace, pInputConfig, (Rational*)ppFrameRate, pOutputDesc, (int*)ppSupported, (int*)ppRealTimeHint);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pInputDesc, ColorSpaceType inputColorSpace, VideoDecoderConfig* pInputConfig, ref Rational pFrameRate, VideoSampleDesc* pOutputDesc, ref int pSupported, ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (Rational* ppFrameRate = &pFrameRate)
				{
					fixed (int* ppSupported = &pSupported)
					{
						fixed (int* ppRealTimeHint = &pRealTimeHint)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, (VideoDecoderDesc*)ppInputDesc, inputColorSpace, pInputConfig, (Rational*)ppFrameRate, pOutputDesc, (int*)ppSupported, (int*)ppRealTimeHint);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, VideoDecoderDesc* pInputDesc, ColorSpaceType inputColorSpace, ref VideoDecoderConfig pInputConfig, ref Rational pFrameRate, VideoSampleDesc* pOutputDesc, ref int pSupported, ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderConfig* ppInputConfig = &pInputConfig)
			{
				fixed (Rational* ppFrameRate = &pFrameRate)
				{
					fixed (int* ppSupported = &pSupported)
					{
						fixed (int* ppRealTimeHint = &pRealTimeHint)
						{
							int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, pInputDesc, inputColorSpace, (VideoDecoderConfig*)ppInputConfig, (Rational*)ppFrameRate, pOutputDesc, (int*)ppSupported, (int*)ppRealTimeHint);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static int CheckVideoDecoderDownsampling(this ComPtr<ID3D11VideoDevice1> comObj, ref VideoDecoderDesc pInputDesc, ColorSpaceType inputColorSpace, ref VideoDecoderConfig pInputConfig, ref Rational pFrameRate, VideoSampleDesc* pOutputDesc, ref int pSupported, ref int pRealTimeHint) 
		{
			ID3D11VideoDevice1* handle = comObj.Handle;
			fixed (VideoDecoderDesc* ppInputDesc = &pInputDesc)
			{
				fixed (VideoDecoderConfig* ppInputConfig = &pInputConfig)
				{
					fixed (Rational* ppFrameRate = &pFrameRate)
					{
						fixed (int* ppSupported = &pSupported)
						{
							fixed (int* ppRealTimeHint = &pRealTimeHint)
							{
								int ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice1*, VideoDecoderDesc*, ColorSpaceType, VideoDecoderConfig*, Rational*, VideoSampleDesc*, int*, int*, int>)(handle->LpVtbl[22]))(handle, (VideoDecoderDesc*)ppInputDesc, inputColorSpace, (VideoDecoderConfig*)ppInputConfig, (Rational*)ppFrameRate, pOutputDesc, (int*)ppSupported, (int*)ppRealTimeHint);
								return ret;
							}
						}
					}
				}
			}
		}
	}
}
