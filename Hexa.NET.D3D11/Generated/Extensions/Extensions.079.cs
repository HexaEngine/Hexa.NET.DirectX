// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D11
{
	public static unsafe partial class Extensions
	{

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderUpdateDownsampling(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, ref VideoSampleDesc pOutputDesc) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, VideoSampleDesc*, HResult>)(handle->LpVtbl[69]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, (VideoSampleDesc*)ppOutputDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputColorSpace1(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, ColorSpaceType colorSpace) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, ColorSpaceType, void>)(handle->LpVtbl[70]))(handle, pVideoProcessor, colorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputColorSpace1(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoProcessor pVideoProcessor, ColorSpaceType colorSpace) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, ColorSpaceType, void>)(handle->LpVtbl[70]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, colorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputColorSpace1(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, ColorSpaceType colorSpace) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, ColorSpaceType, void>)(handle->LpVtbl[70]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, colorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputShaderUsage(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, Bool32 shaderUsage) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, Bool32, void>)(handle->LpVtbl[71]))(handle, pVideoProcessor, shaderUsage);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputShaderUsage(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoProcessor pVideoProcessor, Bool32 shaderUsage) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, Bool32, void>)(handle->LpVtbl[71]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, shaderUsage);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputShaderUsage(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, Bool32 shaderUsage) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, Bool32, void>)(handle->LpVtbl[71]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, shaderUsage);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputColorSpace1(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, ColorSpaceType* pColorSpace) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, ColorSpaceType*, void>)(handle->LpVtbl[72]))(handle, pVideoProcessor, pColorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputColorSpace1(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoProcessor pVideoProcessor, ColorSpaceType* pColorSpace) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, ColorSpaceType*, void>)(handle->LpVtbl[72]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, pColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputColorSpace1(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, ColorSpaceType* pColorSpace) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, ColorSpaceType*, void>)(handle->LpVtbl[72]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pColorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputColorSpace1(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, ref ColorSpaceType pColorSpace) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ColorSpaceType* ppColorSpace = &pColorSpace)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, ColorSpaceType*, void>)(handle->LpVtbl[72]))(handle, pVideoProcessor, (ColorSpaceType*)ppColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputColorSpace1(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoProcessor pVideoProcessor, ref ColorSpaceType pColorSpace) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (ColorSpaceType* ppColorSpace = &pColorSpace)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, ColorSpaceType*, void>)(handle->LpVtbl[72]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, (ColorSpaceType*)ppColorSpace);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputColorSpace1(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref ColorSpaceType pColorSpace) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ColorSpaceType* ppColorSpace = &pColorSpace)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, ColorSpaceType*, void>)(handle->LpVtbl[72]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (ColorSpaceType*)ppColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputShaderUsage(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, Bool32* pShaderUsage) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, Bool32*, void>)(handle->LpVtbl[73]))(handle, pVideoProcessor, pShaderUsage);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputShaderUsage(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoProcessor pVideoProcessor, Bool32* pShaderUsage) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, Bool32*, void>)(handle->LpVtbl[73]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, pShaderUsage);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputShaderUsage(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, Bool32* pShaderUsage) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, Bool32*, void>)(handle->LpVtbl[73]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pShaderUsage);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputShaderUsage(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, ref Bool32 pShaderUsage) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (Bool32* ppShaderUsage = &pShaderUsage)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, Bool32*, void>)(handle->LpVtbl[73]))(handle, pVideoProcessor, (Bool32*)ppShaderUsage);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputShaderUsage(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoProcessor pVideoProcessor, ref Bool32 pShaderUsage) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppShaderUsage = &pShaderUsage)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, Bool32*, void>)(handle->LpVtbl[73]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, (Bool32*)ppShaderUsage);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputShaderUsage(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref Bool32 pShaderUsage) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (Bool32* ppShaderUsage = &pShaderUsage)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, Bool32*, void>)(handle->LpVtbl[73]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (Bool32*)ppShaderUsage);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetStreamColorSpace1(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ColorSpaceType colorSpace) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, ColorSpaceType, void>)(handle->LpVtbl[74]))(handle, pVideoProcessor, streamIndex, colorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetStreamColorSpace1(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ColorSpaceType colorSpace) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, ColorSpaceType, void>)(handle->LpVtbl[74]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, colorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetStreamColorSpace1(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ColorSpaceType colorSpace) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, ColorSpaceType, void>)(handle->LpVtbl[74]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, colorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetStreamMirror(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32 enable, Bool32 flipHorizontal, Bool32 flipVertical) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, Bool32, Bool32, Bool32, void>)(handle->LpVtbl[75]))(handle, pVideoProcessor, streamIndex, enable, flipHorizontal, flipVertical);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetStreamMirror(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32 enable, Bool32 flipHorizontal, Bool32 flipVertical) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, Bool32, Bool32, Bool32, void>)(handle->LpVtbl[75]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, enable, flipHorizontal, flipVertical);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetStreamMirror(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32 enable, Bool32 flipHorizontal, Bool32 flipVertical) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, Bool32, Bool32, Bool32, void>)(handle->LpVtbl[75]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, enable, flipHorizontal, flipVertical);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamColorSpace1(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ColorSpaceType* pColorSpace) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, ColorSpaceType*, void>)(handle->LpVtbl[76]))(handle, pVideoProcessor, streamIndex, pColorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamColorSpace1(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ColorSpaceType* pColorSpace) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, ColorSpaceType*, void>)(handle->LpVtbl[76]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamColorSpace1(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ColorSpaceType* pColorSpace) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, ColorSpaceType*, void>)(handle->LpVtbl[76]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pColorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamColorSpace1(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref ColorSpaceType pColorSpace) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ColorSpaceType* ppColorSpace = &pColorSpace)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, ColorSpaceType*, void>)(handle->LpVtbl[76]))(handle, pVideoProcessor, streamIndex, (ColorSpaceType*)ppColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamColorSpace1(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref ColorSpaceType pColorSpace) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (ColorSpaceType* ppColorSpace = &pColorSpace)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, ColorSpaceType*, void>)(handle->LpVtbl[76]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (ColorSpaceType*)ppColorSpace);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamColorSpace1(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref ColorSpaceType pColorSpace) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ColorSpaceType* ppColorSpace = &pColorSpace)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, ColorSpaceType*, void>)(handle->LpVtbl[76]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (ColorSpaceType*)ppColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, Bool32* pFlipHorizontal, Bool32* pFlipVertical) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(handle->LpVtbl[77]))(handle, pVideoProcessor, streamIndex, pEnable, pFlipHorizontal, pFlipVertical);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, Bool32* pFlipHorizontal, Bool32* pFlipVertical) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, pFlipHorizontal, pFlipVertical);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, Bool32* pFlipHorizontal, Bool32* pFlipVertical) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, pFlipHorizontal, pFlipVertical);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, Bool32* pFlipHorizontal, Bool32* pFlipVertical) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (Bool32* ppEnable = &pEnable)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(handle->LpVtbl[77]))(handle, pVideoProcessor, streamIndex, (Bool32*)ppEnable, pFlipHorizontal, pFlipVertical);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, Bool32* pFlipHorizontal, Bool32* pFlipVertical) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, pFlipHorizontal, pFlipVertical);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, Bool32* pFlipHorizontal, Bool32* pFlipVertical) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (Bool32* ppEnable = &pEnable)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, pFlipHorizontal, pFlipVertical);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, ref Bool32 pFlipHorizontal, Bool32* pFlipVertical) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (Bool32* ppFlipHorizontal = &pFlipHorizontal)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(handle->LpVtbl[77]))(handle, pVideoProcessor, streamIndex, pEnable, (Bool32*)ppFlipHorizontal, pFlipVertical);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, ref Bool32 pFlipHorizontal, Bool32* pFlipVertical) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppFlipHorizontal = &pFlipHorizontal)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, (Bool32*)ppFlipHorizontal, pFlipVertical);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, ref Bool32 pFlipHorizontal, Bool32* pFlipVertical) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (Bool32* ppFlipHorizontal = &pFlipHorizontal)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, (Bool32*)ppFlipHorizontal, pFlipVertical);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref Bool32 pFlipHorizontal, Bool32* pFlipVertical) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppFlipHorizontal = &pFlipHorizontal)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(handle->LpVtbl[77]))(handle, pVideoProcessor, streamIndex, (Bool32*)ppEnable, (Bool32*)ppFlipHorizontal, pFlipVertical);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref Bool32 pFlipHorizontal, Bool32* pFlipVertical) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (Bool32* ppFlipHorizontal = &pFlipHorizontal)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, (Bool32*)ppFlipHorizontal, pFlipVertical);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref Bool32 pFlipHorizontal, Bool32* pFlipVertical) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppFlipHorizontal = &pFlipHorizontal)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, (Bool32*)ppFlipHorizontal, pFlipVertical);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, Bool32* pFlipHorizontal, ref Bool32 pFlipVertical) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (Bool32* ppFlipVertical = &pFlipVertical)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(handle->LpVtbl[77]))(handle, pVideoProcessor, streamIndex, pEnable, pFlipHorizontal, (Bool32*)ppFlipVertical);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, Bool32* pFlipHorizontal, ref Bool32 pFlipVertical) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppFlipVertical = &pFlipVertical)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, pFlipHorizontal, (Bool32*)ppFlipVertical);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, Bool32* pFlipHorizontal, ref Bool32 pFlipVertical) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (Bool32* ppFlipVertical = &pFlipVertical)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, pFlipHorizontal, (Bool32*)ppFlipVertical);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, Bool32* pFlipHorizontal, ref Bool32 pFlipVertical) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppFlipVertical = &pFlipVertical)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(handle->LpVtbl[77]))(handle, pVideoProcessor, streamIndex, (Bool32*)ppEnable, pFlipHorizontal, (Bool32*)ppFlipVertical);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, Bool32* pFlipHorizontal, ref Bool32 pFlipVertical) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (Bool32* ppFlipVertical = &pFlipVertical)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, pFlipHorizontal, (Bool32*)ppFlipVertical);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, Bool32* pFlipHorizontal, ref Bool32 pFlipVertical) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppFlipVertical = &pFlipVertical)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, pFlipHorizontal, (Bool32*)ppFlipVertical);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, ref Bool32 pFlipHorizontal, ref Bool32 pFlipVertical) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (Bool32* ppFlipHorizontal = &pFlipHorizontal)
			{
				fixed (Bool32* ppFlipVertical = &pFlipVertical)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(handle->LpVtbl[77]))(handle, pVideoProcessor, streamIndex, pEnable, (Bool32*)ppFlipHorizontal, (Bool32*)ppFlipVertical);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, ref Bool32 pFlipHorizontal, ref Bool32 pFlipVertical) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppFlipHorizontal = &pFlipHorizontal)
				{
					fixed (Bool32* ppFlipVertical = &pFlipVertical)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, (Bool32*)ppFlipHorizontal, (Bool32*)ppFlipVertical);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, ref Bool32 pFlipHorizontal, ref Bool32 pFlipVertical) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (Bool32* ppFlipHorizontal = &pFlipHorizontal)
			{
				fixed (Bool32* ppFlipVertical = &pFlipVertical)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, (Bool32*)ppFlipHorizontal, (Bool32*)ppFlipVertical);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref Bool32 pFlipHorizontal, ref Bool32 pFlipVertical) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppFlipHorizontal = &pFlipHorizontal)
				{
					fixed (Bool32* ppFlipVertical = &pFlipVertical)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(handle->LpVtbl[77]))(handle, pVideoProcessor, streamIndex, (Bool32*)ppEnable, (Bool32*)ppFlipHorizontal, (Bool32*)ppFlipVertical);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref Bool32 pFlipHorizontal, ref Bool32 pFlipVertical) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (Bool32* ppFlipHorizontal = &pFlipHorizontal)
					{
						fixed (Bool32* ppFlipVertical = &pFlipVertical)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, (Bool32*)ppFlipHorizontal, (Bool32*)ppFlipVertical);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamMirror(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref Bool32 pFlipHorizontal, ref Bool32 pFlipVertical) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppFlipHorizontal = &pFlipHorizontal)
				{
					fixed (Bool32* ppFlipVertical = &pFlipVertical)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(handle->LpVtbl[77]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, (Bool32*)ppFlipHorizontal, (Bool32*)ppFlipVertical);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult VideoProcessorGetBehaviorHints(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, VideoProcessorStreamBehaviorHint* pStreams, uint* pBehaviorHints) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, HResult>)(handle->LpVtbl[78]))(handle, pVideoProcessor, outputWidth, outputHeight, outputFormat, streamCount, pStreams, pBehaviorHints);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult VideoProcessorGetBehaviorHints(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, VideoProcessorStreamBehaviorHint* pStreams, uint* pBehaviorHints) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, HResult>)(handle->LpVtbl[78]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, outputWidth, outputHeight, outputFormat, streamCount, pStreams, pBehaviorHints);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult VideoProcessorGetBehaviorHints(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, VideoProcessorStreamBehaviorHint* pStreams, uint* pBehaviorHints) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, HResult>)(handle->LpVtbl[78]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, outputWidth, outputHeight, outputFormat, streamCount, pStreams, pBehaviorHints);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult VideoProcessorGetBehaviorHints(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, ref VideoProcessorStreamBehaviorHint pStreams, uint* pBehaviorHints) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (VideoProcessorStreamBehaviorHint* ppStreams = &pStreams)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, HResult>)(handle->LpVtbl[78]))(handle, pVideoProcessor, outputWidth, outputHeight, outputFormat, streamCount, (VideoProcessorStreamBehaviorHint*)ppStreams, pBehaviorHints);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult VideoProcessorGetBehaviorHints(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, ref VideoProcessorStreamBehaviorHint pStreams, uint* pBehaviorHints) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorStreamBehaviorHint* ppStreams = &pStreams)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, HResult>)(handle->LpVtbl[78]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, outputWidth, outputHeight, outputFormat, streamCount, (VideoProcessorStreamBehaviorHint*)ppStreams, pBehaviorHints);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult VideoProcessorGetBehaviorHints(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, ref VideoProcessorStreamBehaviorHint pStreams, uint* pBehaviorHints) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (VideoProcessorStreamBehaviorHint* ppStreams = &pStreams)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, HResult>)(handle->LpVtbl[78]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, outputWidth, outputHeight, outputFormat, streamCount, (VideoProcessorStreamBehaviorHint*)ppStreams, pBehaviorHints);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult VideoProcessorGetBehaviorHints(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, VideoProcessorStreamBehaviorHint* pStreams, ref uint pBehaviorHints) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (uint* ppBehaviorHints = &pBehaviorHints)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, HResult>)(handle->LpVtbl[78]))(handle, pVideoProcessor, outputWidth, outputHeight, outputFormat, streamCount, pStreams, (uint*)ppBehaviorHints);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult VideoProcessorGetBehaviorHints(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, VideoProcessorStreamBehaviorHint* pStreams, ref uint pBehaviorHints) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (uint* ppBehaviorHints = &pBehaviorHints)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, HResult>)(handle->LpVtbl[78]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, outputWidth, outputHeight, outputFormat, streamCount, pStreams, (uint*)ppBehaviorHints);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult VideoProcessorGetBehaviorHints(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, VideoProcessorStreamBehaviorHint* pStreams, ref uint pBehaviorHints) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (uint* ppBehaviorHints = &pBehaviorHints)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, HResult>)(handle->LpVtbl[78]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, outputWidth, outputHeight, outputFormat, streamCount, pStreams, (uint*)ppBehaviorHints);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult VideoProcessorGetBehaviorHints(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, ref VideoProcessorStreamBehaviorHint pStreams, ref uint pBehaviorHints) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (VideoProcessorStreamBehaviorHint* ppStreams = &pStreams)
			{
				fixed (uint* ppBehaviorHints = &pBehaviorHints)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, HResult>)(handle->LpVtbl[78]))(handle, pVideoProcessor, outputWidth, outputHeight, outputFormat, streamCount, (VideoProcessorStreamBehaviorHint*)ppStreams, (uint*)ppBehaviorHints);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult VideoProcessorGetBehaviorHints(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, ref VideoProcessorStreamBehaviorHint pStreams, ref uint pBehaviorHints) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorStreamBehaviorHint* ppStreams = &pStreams)
				{
					fixed (uint* ppBehaviorHints = &pBehaviorHints)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, HResult>)(handle->LpVtbl[78]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, outputWidth, outputHeight, outputFormat, streamCount, (VideoProcessorStreamBehaviorHint*)ppStreams, (uint*)ppBehaviorHints);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult VideoProcessorGetBehaviorHints(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, ref VideoProcessorStreamBehaviorHint pStreams, ref uint pBehaviorHints) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (VideoProcessorStreamBehaviorHint* ppStreams = &pStreams)
			{
				fixed (uint* ppBehaviorHints = &pBehaviorHints)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, HResult>)(handle->LpVtbl[78]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, outputWidth, outputHeight, outputFormat, streamCount, (VideoProcessorStreamBehaviorHint*)ppStreams, (uint*)ppBehaviorHints);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputHDRMetaData(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, HdrMetadataType type, uint size, void* pHDRMetaData) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, HdrMetadataType, uint, void*, void>)(handle->LpVtbl[79]))(handle, pVideoProcessor, type, size, pHDRMetaData);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputHDRMetaData(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoProcessor pVideoProcessor, HdrMetadataType type, uint size, void* pHDRMetaData) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, HdrMetadataType, uint, void*, void>)(handle->LpVtbl[79]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, type, size, pHDRMetaData);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetOutputHDRMetaData(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, HdrMetadataType type, uint size, void* pHDRMetaData) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, HdrMetadataType, uint, void*, void>)(handle->LpVtbl[79]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, type, size, pHDRMetaData);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputHDRMetaData(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, HdrMetadataType* pType, uint size, void* pMetaData) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, HdrMetadataType*, uint, void*, void>)(handle->LpVtbl[80]))(handle, pVideoProcessor, pType, size, pMetaData);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputHDRMetaData(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoProcessor pVideoProcessor, HdrMetadataType* pType, uint size, void* pMetaData) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, HdrMetadataType*, uint, void*, void>)(handle->LpVtbl[80]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, pType, size, pMetaData);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputHDRMetaData(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, HdrMetadataType* pType, uint size, void* pMetaData) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, HdrMetadataType*, uint, void*, void>)(handle->LpVtbl[80]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pType, size, pMetaData);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputHDRMetaData(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, ref HdrMetadataType pType, uint size, void* pMetaData) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (HdrMetadataType* ppType = &pType)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, HdrMetadataType*, uint, void*, void>)(handle->LpVtbl[80]))(handle, pVideoProcessor, (HdrMetadataType*)ppType, size, pMetaData);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputHDRMetaData(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoProcessor pVideoProcessor, ref HdrMetadataType pType, uint size, void* pMetaData) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (HdrMetadataType* ppType = &pType)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, HdrMetadataType*, uint, void*, void>)(handle->LpVtbl[80]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, (HdrMetadataType*)ppType, size, pMetaData);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputHDRMetaData(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref HdrMetadataType pType, uint size, void* pMetaData) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (HdrMetadataType* ppType = &pType)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, HdrMetadataType*, uint, void*, void>)(handle->LpVtbl[80]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (HdrMetadataType*)ppType, size, pMetaData);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputHDRMetaData<T>(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, HdrMetadataType* pType, uint size, ComPtr<T> pMetaData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, HdrMetadataType*, uint, void*, void>)(handle->LpVtbl[80]))(handle, pVideoProcessor, pType, size, (void*)pMetaData.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputHDRMetaData<T>(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, HdrMetadataType* pType, uint size, ComPtr<T> pMetaData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, HdrMetadataType*, uint, void*, void>)(handle->LpVtbl[80]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pType, size, (void*)pMetaData.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputHDRMetaData<T>(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, ref HdrMetadataType pType, uint size, ComPtr<T> pMetaData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (HdrMetadataType* ppType = &pType)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, HdrMetadataType*, uint, void*, void>)(handle->LpVtbl[80]))(handle, pVideoProcessor, (HdrMetadataType*)ppType, size, (void*)pMetaData.Handle);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetOutputHDRMetaData<T>(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref HdrMetadataType pType, uint size, ComPtr<T> pMetaData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (HdrMetadataType* ppType = &pType)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, HdrMetadataType*, uint, void*, void>)(handle->LpVtbl[80]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (HdrMetadataType*)ppType, size, (void*)pMetaData.Handle);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetStreamHDRMetaData(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, HdrMetadataType type, uint size, void* pHDRMetaData) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, HdrMetadataType, uint, void*, void>)(handle->LpVtbl[81]))(handle, pVideoProcessor, streamIndex, type, size, pHDRMetaData);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetStreamHDRMetaData(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, HdrMetadataType type, uint size, void* pHDRMetaData) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, HdrMetadataType, uint, void*, void>)(handle->LpVtbl[81]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, type, size, pHDRMetaData);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorSetStreamHDRMetaData(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, HdrMetadataType type, uint size, void* pHDRMetaData) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, HdrMetadataType, uint, void*, void>)(handle->LpVtbl[81]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, type, size, pHDRMetaData);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamHDRMetaData(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, HdrMetadataType* pType, uint size, void* pMetaData) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, HdrMetadataType*, uint, void*, void>)(handle->LpVtbl[82]))(handle, pVideoProcessor, streamIndex, pType, size, pMetaData);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamHDRMetaData(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, HdrMetadataType* pType, uint size, void* pMetaData) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, HdrMetadataType*, uint, void*, void>)(handle->LpVtbl[82]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pType, size, pMetaData);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamHDRMetaData(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, HdrMetadataType* pType, uint size, void* pMetaData) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, HdrMetadataType*, uint, void*, void>)(handle->LpVtbl[82]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pType, size, pMetaData);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamHDRMetaData(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref HdrMetadataType pType, uint size, void* pMetaData) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (HdrMetadataType* ppType = &pType)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, HdrMetadataType*, uint, void*, void>)(handle->LpVtbl[82]))(handle, pVideoProcessor, streamIndex, (HdrMetadataType*)ppType, size, pMetaData);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamHDRMetaData(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref HdrMetadataType pType, uint size, void* pMetaData) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (HdrMetadataType* ppType = &pType)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, HdrMetadataType*, uint, void*, void>)(handle->LpVtbl[82]))(handle, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (HdrMetadataType*)ppType, size, pMetaData);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamHDRMetaData(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref HdrMetadataType pType, uint size, void* pMetaData) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (HdrMetadataType* ppType = &pType)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, HdrMetadataType*, uint, void*, void>)(handle->LpVtbl[82]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (HdrMetadataType*)ppType, size, pMetaData);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamHDRMetaData<T>(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, HdrMetadataType* pType, uint size, ComPtr<T> pMetaData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, HdrMetadataType*, uint, void*, void>)(handle->LpVtbl[82]))(handle, pVideoProcessor, streamIndex, pType, size, (void*)pMetaData.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamHDRMetaData<T>(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, HdrMetadataType* pType, uint size, ComPtr<T> pMetaData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, HdrMetadataType*, uint, void*, void>)(handle->LpVtbl[82]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pType, size, (void*)pMetaData.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamHDRMetaData<T>(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref HdrMetadataType pType, uint size, ComPtr<T> pMetaData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (HdrMetadataType* ppType = &pType)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, HdrMetadataType*, uint, void*, void>)(handle->LpVtbl[82]))(handle, pVideoProcessor, streamIndex, (HdrMetadataType*)ppType, size, (void*)pMetaData.Handle);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void VideoProcessorGetStreamHDRMetaData<T>(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref HdrMetadataType pType, uint size, ComPtr<T> pMetaData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (HdrMetadataType* ppType = &pType)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoProcessor*, uint, HdrMetadataType*, uint, void*, void>)(handle->LpVtbl[82]))(handle, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (HdrMetadataType*)ppType, size, (void*)pMetaData.Handle);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame1(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoDecoder* pDecoder, ID3D11VideoDecoderOutputView* pView, uint contentKeySize, void* pContentKey, uint numComponentHistograms, uint* pHistogramOffsets, ID3D11Buffer** ppHistogramBuffers) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, uint, uint*, ID3D11Buffer**, HResult>)(handle->LpVtbl[83]))(handle, pDecoder, pView, contentKeySize, pContentKey, numComponentHistograms, pHistogramOffsets, ppHistogramBuffers);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame1(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoDecoder pDecoder, ID3D11VideoDecoderOutputView* pView, uint contentKeySize, void* pContentKey, uint numComponentHistograms, uint* pHistogramOffsets, ID3D11Buffer** ppHistogramBuffers) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, uint, uint*, ID3D11Buffer**, HResult>)(handle->LpVtbl[83]))(handle, (ID3D11VideoDecoder*)ppDecoder, pView, contentKeySize, pContentKey, numComponentHistograms, pHistogramOffsets, ppHistogramBuffers);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame1(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, ID3D11VideoDecoderOutputView* pView, uint contentKeySize, void* pContentKey, uint numComponentHistograms, uint* pHistogramOffsets, ID3D11Buffer** ppHistogramBuffers) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, uint, uint*, ID3D11Buffer**, HResult>)(handle->LpVtbl[83]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, pView, contentKeySize, pContentKey, numComponentHistograms, pHistogramOffsets, ppHistogramBuffers);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame1(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoDecoder* pDecoder, ref ID3D11VideoDecoderOutputView pView, uint contentKeySize, void* pContentKey, uint numComponentHistograms, uint* pHistogramOffsets, ID3D11Buffer** ppHistogramBuffers) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoDecoderOutputView* ppView = &pView)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, uint, uint*, ID3D11Buffer**, HResult>)(handle->LpVtbl[83]))(handle, pDecoder, (ID3D11VideoDecoderOutputView*)ppView, contentKeySize, pContentKey, numComponentHistograms, pHistogramOffsets, ppHistogramBuffers);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame1(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoDecoder* pDecoder, ComPtr<ID3D11VideoDecoderOutputView> pView, uint contentKeySize, void* pContentKey, uint numComponentHistograms, uint* pHistogramOffsets, ID3D11Buffer** ppHistogramBuffers) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, uint, uint*, ID3D11Buffer**, HResult>)(handle->LpVtbl[83]))(handle, pDecoder, (ID3D11VideoDecoderOutputView*)pView.Handle, contentKeySize, pContentKey, numComponentHistograms, pHistogramOffsets, ppHistogramBuffers);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame1(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoDecoder pDecoder, ref ID3D11VideoDecoderOutputView pView, uint contentKeySize, void* pContentKey, uint numComponentHistograms, uint* pHistogramOffsets, ID3D11Buffer** ppHistogramBuffers) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (ID3D11VideoDecoderOutputView* ppView = &pView)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, uint, uint*, ID3D11Buffer**, HResult>)(handle->LpVtbl[83]))(handle, (ID3D11VideoDecoder*)ppDecoder, (ID3D11VideoDecoderOutputView*)ppView, contentKeySize, pContentKey, numComponentHistograms, pHistogramOffsets, ppHistogramBuffers);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame1(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, ComPtr<ID3D11VideoDecoderOutputView> pView, uint contentKeySize, void* pContentKey, uint numComponentHistograms, uint* pHistogramOffsets, ID3D11Buffer** ppHistogramBuffers) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, uint, uint*, ID3D11Buffer**, HResult>)(handle->LpVtbl[83]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, (ID3D11VideoDecoderOutputView*)pView.Handle, contentKeySize, pContentKey, numComponentHistograms, pHistogramOffsets, ppHistogramBuffers);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame1(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoDecoder* pDecoder, ID3D11VideoDecoderOutputView* pView, uint contentKeySize, void* pContentKey, uint numComponentHistograms, ref uint pHistogramOffsets, ID3D11Buffer** ppHistogramBuffers) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (uint* ppHistogramOffsets = &pHistogramOffsets)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, uint, uint*, ID3D11Buffer**, HResult>)(handle->LpVtbl[83]))(handle, pDecoder, pView, contentKeySize, pContentKey, numComponentHistograms, (uint*)ppHistogramOffsets, ppHistogramBuffers);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame1(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoDecoder pDecoder, ID3D11VideoDecoderOutputView* pView, uint contentKeySize, void* pContentKey, uint numComponentHistograms, ref uint pHistogramOffsets, ID3D11Buffer** ppHistogramBuffers) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (uint* ppHistogramOffsets = &pHistogramOffsets)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, uint, uint*, ID3D11Buffer**, HResult>)(handle->LpVtbl[83]))(handle, (ID3D11VideoDecoder*)ppDecoder, pView, contentKeySize, pContentKey, numComponentHistograms, (uint*)ppHistogramOffsets, ppHistogramBuffers);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame1(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, ID3D11VideoDecoderOutputView* pView, uint contentKeySize, void* pContentKey, uint numComponentHistograms, ref uint pHistogramOffsets, ID3D11Buffer** ppHistogramBuffers) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (uint* ppHistogramOffsets = &pHistogramOffsets)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, uint, uint*, ID3D11Buffer**, HResult>)(handle->LpVtbl[83]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, pView, contentKeySize, pContentKey, numComponentHistograms, (uint*)ppHistogramOffsets, ppHistogramBuffers);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame1(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoDecoder* pDecoder, ref ID3D11VideoDecoderOutputView pView, uint contentKeySize, void* pContentKey, uint numComponentHistograms, ref uint pHistogramOffsets, ID3D11Buffer** ppHistogramBuffers) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoDecoderOutputView* ppView = &pView)
			{
				fixed (uint* ppHistogramOffsets = &pHistogramOffsets)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, uint, uint*, ID3D11Buffer**, HResult>)(handle->LpVtbl[83]))(handle, pDecoder, (ID3D11VideoDecoderOutputView*)ppView, contentKeySize, pContentKey, numComponentHistograms, (uint*)ppHistogramOffsets, ppHistogramBuffers);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame1(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoDecoder* pDecoder, ComPtr<ID3D11VideoDecoderOutputView> pView, uint contentKeySize, void* pContentKey, uint numComponentHistograms, ref uint pHistogramOffsets, ID3D11Buffer** ppHistogramBuffers) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (uint* ppHistogramOffsets = &pHistogramOffsets)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, uint, uint*, ID3D11Buffer**, HResult>)(handle->LpVtbl[83]))(handle, pDecoder, (ID3D11VideoDecoderOutputView*)pView.Handle, contentKeySize, pContentKey, numComponentHistograms, (uint*)ppHistogramOffsets, ppHistogramBuffers);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame1(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoDecoder pDecoder, ref ID3D11VideoDecoderOutputView pView, uint contentKeySize, void* pContentKey, uint numComponentHistograms, ref uint pHistogramOffsets, ID3D11Buffer** ppHistogramBuffers) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (ID3D11VideoDecoderOutputView* ppView = &pView)
				{
					fixed (uint* ppHistogramOffsets = &pHistogramOffsets)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, uint, uint*, ID3D11Buffer**, HResult>)(handle->LpVtbl[83]))(handle, (ID3D11VideoDecoder*)ppDecoder, (ID3D11VideoDecoderOutputView*)ppView, contentKeySize, pContentKey, numComponentHistograms, (uint*)ppHistogramOffsets, ppHistogramBuffers);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame1(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, ComPtr<ID3D11VideoDecoderOutputView> pView, uint contentKeySize, void* pContentKey, uint numComponentHistograms, ref uint pHistogramOffsets, ID3D11Buffer** ppHistogramBuffers) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (uint* ppHistogramOffsets = &pHistogramOffsets)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, uint, uint*, ID3D11Buffer**, HResult>)(handle->LpVtbl[83]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, (ID3D11VideoDecoderOutputView*)pView.Handle, contentKeySize, pContentKey, numComponentHistograms, (uint*)ppHistogramOffsets, ppHistogramBuffers);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame1(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoDecoder* pDecoder, ID3D11VideoDecoderOutputView* pView, uint contentKeySize, void* pContentKey, uint numComponentHistograms, uint* pHistogramOffsets, ref ID3D11Buffer* ppHistogramBuffers) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11Buffer** pppHistogramBuffers = &ppHistogramBuffers)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, uint, uint*, ID3D11Buffer**, HResult>)(handle->LpVtbl[83]))(handle, pDecoder, pView, contentKeySize, pContentKey, numComponentHistograms, pHistogramOffsets, (ID3D11Buffer**)pppHistogramBuffers);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame1(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoDecoder* pDecoder, ID3D11VideoDecoderOutputView* pView, uint contentKeySize, void* pContentKey, uint numComponentHistograms, uint* pHistogramOffsets, ComPtr<ID3D11Buffer> ppHistogramBuffers) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, uint, uint*, ID3D11Buffer**, HResult>)(handle->LpVtbl[83]))(handle, pDecoder, pView, contentKeySize, pContentKey, numComponentHistograms, pHistogramOffsets, (ID3D11Buffer**)ppHistogramBuffers.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame1(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoDecoder pDecoder, ID3D11VideoDecoderOutputView* pView, uint contentKeySize, void* pContentKey, uint numComponentHistograms, uint* pHistogramOffsets, ref ID3D11Buffer* ppHistogramBuffers) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (ID3D11Buffer** pppHistogramBuffers = &ppHistogramBuffers)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, uint, uint*, ID3D11Buffer**, HResult>)(handle->LpVtbl[83]))(handle, (ID3D11VideoDecoder*)ppDecoder, pView, contentKeySize, pContentKey, numComponentHistograms, pHistogramOffsets, (ID3D11Buffer**)pppHistogramBuffers);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame1(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, ID3D11VideoDecoderOutputView* pView, uint contentKeySize, void* pContentKey, uint numComponentHistograms, uint* pHistogramOffsets, ComPtr<ID3D11Buffer> ppHistogramBuffers) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, uint, uint*, ID3D11Buffer**, HResult>)(handle->LpVtbl[83]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, pView, contentKeySize, pContentKey, numComponentHistograms, pHistogramOffsets, (ID3D11Buffer**)ppHistogramBuffers.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame1(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoDecoder* pDecoder, ref ID3D11VideoDecoderOutputView pView, uint contentKeySize, void* pContentKey, uint numComponentHistograms, uint* pHistogramOffsets, ref ID3D11Buffer* ppHistogramBuffers) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoDecoderOutputView* ppView = &pView)
			{
				fixed (ID3D11Buffer** pppHistogramBuffers = &ppHistogramBuffers)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, uint, uint*, ID3D11Buffer**, HResult>)(handle->LpVtbl[83]))(handle, pDecoder, (ID3D11VideoDecoderOutputView*)ppView, contentKeySize, pContentKey, numComponentHistograms, pHistogramOffsets, (ID3D11Buffer**)pppHistogramBuffers);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame1(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoDecoder* pDecoder, ComPtr<ID3D11VideoDecoderOutputView> pView, uint contentKeySize, void* pContentKey, uint numComponentHistograms, uint* pHistogramOffsets, ComPtr<ID3D11Buffer> ppHistogramBuffers) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, uint, uint*, ID3D11Buffer**, HResult>)(handle->LpVtbl[83]))(handle, pDecoder, (ID3D11VideoDecoderOutputView*)pView.Handle, contentKeySize, pContentKey, numComponentHistograms, pHistogramOffsets, (ID3D11Buffer**)ppHistogramBuffers.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame1(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoDecoder pDecoder, ref ID3D11VideoDecoderOutputView pView, uint contentKeySize, void* pContentKey, uint numComponentHistograms, uint* pHistogramOffsets, ref ID3D11Buffer* ppHistogramBuffers) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (ID3D11VideoDecoderOutputView* ppView = &pView)
				{
					fixed (ID3D11Buffer** pppHistogramBuffers = &ppHistogramBuffers)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, uint, uint*, ID3D11Buffer**, HResult>)(handle->LpVtbl[83]))(handle, (ID3D11VideoDecoder*)ppDecoder, (ID3D11VideoDecoderOutputView*)ppView, contentKeySize, pContentKey, numComponentHistograms, pHistogramOffsets, (ID3D11Buffer**)pppHistogramBuffers);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame1(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, ComPtr<ID3D11VideoDecoderOutputView> pView, uint contentKeySize, void* pContentKey, uint numComponentHistograms, uint* pHistogramOffsets, ComPtr<ID3D11Buffer> ppHistogramBuffers) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, uint, uint*, ID3D11Buffer**, HResult>)(handle->LpVtbl[83]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, (ID3D11VideoDecoderOutputView*)pView.Handle, contentKeySize, pContentKey, numComponentHistograms, pHistogramOffsets, (ID3D11Buffer**)ppHistogramBuffers.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame1(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoDecoder* pDecoder, ID3D11VideoDecoderOutputView* pView, uint contentKeySize, void* pContentKey, uint numComponentHistograms, ref uint pHistogramOffsets, ref ID3D11Buffer* ppHistogramBuffers) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (uint* ppHistogramOffsets = &pHistogramOffsets)
			{
				fixed (ID3D11Buffer** pppHistogramBuffers = &ppHistogramBuffers)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, uint, uint*, ID3D11Buffer**, HResult>)(handle->LpVtbl[83]))(handle, pDecoder, pView, contentKeySize, pContentKey, numComponentHistograms, (uint*)ppHistogramOffsets, (ID3D11Buffer**)pppHistogramBuffers);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame1(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoDecoder* pDecoder, ID3D11VideoDecoderOutputView* pView, uint contentKeySize, void* pContentKey, uint numComponentHistograms, ref uint pHistogramOffsets, ComPtr<ID3D11Buffer> ppHistogramBuffers) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (uint* ppHistogramOffsets = &pHistogramOffsets)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, uint, uint*, ID3D11Buffer**, HResult>)(handle->LpVtbl[83]))(handle, pDecoder, pView, contentKeySize, pContentKey, numComponentHistograms, (uint*)ppHistogramOffsets, (ID3D11Buffer**)ppHistogramBuffers.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame1(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoDecoder pDecoder, ID3D11VideoDecoderOutputView* pView, uint contentKeySize, void* pContentKey, uint numComponentHistograms, ref uint pHistogramOffsets, ref ID3D11Buffer* ppHistogramBuffers) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (uint* ppHistogramOffsets = &pHistogramOffsets)
				{
					fixed (ID3D11Buffer** pppHistogramBuffers = &ppHistogramBuffers)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, uint, uint*, ID3D11Buffer**, HResult>)(handle->LpVtbl[83]))(handle, (ID3D11VideoDecoder*)ppDecoder, pView, contentKeySize, pContentKey, numComponentHistograms, (uint*)ppHistogramOffsets, (ID3D11Buffer**)pppHistogramBuffers);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame1(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, ID3D11VideoDecoderOutputView* pView, uint contentKeySize, void* pContentKey, uint numComponentHistograms, ref uint pHistogramOffsets, ComPtr<ID3D11Buffer> ppHistogramBuffers) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (uint* ppHistogramOffsets = &pHistogramOffsets)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, uint, uint*, ID3D11Buffer**, HResult>)(handle->LpVtbl[83]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, pView, contentKeySize, pContentKey, numComponentHistograms, (uint*)ppHistogramOffsets, (ID3D11Buffer**)ppHistogramBuffers.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame1(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoDecoder* pDecoder, ref ID3D11VideoDecoderOutputView pView, uint contentKeySize, void* pContentKey, uint numComponentHistograms, ref uint pHistogramOffsets, ref ID3D11Buffer* ppHistogramBuffers) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoDecoderOutputView* ppView = &pView)
			{
				fixed (uint* ppHistogramOffsets = &pHistogramOffsets)
				{
					fixed (ID3D11Buffer** pppHistogramBuffers = &ppHistogramBuffers)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, uint, uint*, ID3D11Buffer**, HResult>)(handle->LpVtbl[83]))(handle, pDecoder, (ID3D11VideoDecoderOutputView*)ppView, contentKeySize, pContentKey, numComponentHistograms, (uint*)ppHistogramOffsets, (ID3D11Buffer**)pppHistogramBuffers);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame1(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoDecoder* pDecoder, ComPtr<ID3D11VideoDecoderOutputView> pView, uint contentKeySize, void* pContentKey, uint numComponentHistograms, ref uint pHistogramOffsets, ComPtr<ID3D11Buffer> ppHistogramBuffers) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (uint* ppHistogramOffsets = &pHistogramOffsets)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, uint, uint*, ID3D11Buffer**, HResult>)(handle->LpVtbl[83]))(handle, pDecoder, (ID3D11VideoDecoderOutputView*)pView.Handle, contentKeySize, pContentKey, numComponentHistograms, (uint*)ppHistogramOffsets, (ID3D11Buffer**)ppHistogramBuffers.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame1(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoDecoder pDecoder, ref ID3D11VideoDecoderOutputView pView, uint contentKeySize, void* pContentKey, uint numComponentHistograms, ref uint pHistogramOffsets, ref ID3D11Buffer* ppHistogramBuffers) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (ID3D11VideoDecoderOutputView* ppView = &pView)
				{
					fixed (uint* ppHistogramOffsets = &pHistogramOffsets)
					{
						fixed (ID3D11Buffer** pppHistogramBuffers = &ppHistogramBuffers)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, uint, uint*, ID3D11Buffer**, HResult>)(handle->LpVtbl[83]))(handle, (ID3D11VideoDecoder*)ppDecoder, (ID3D11VideoDecoderOutputView*)ppView, contentKeySize, pContentKey, numComponentHistograms, (uint*)ppHistogramOffsets, (ID3D11Buffer**)pppHistogramBuffers);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult DecoderBeginFrame1(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, ComPtr<ID3D11VideoDecoderOutputView> pView, uint contentKeySize, void* pContentKey, uint numComponentHistograms, ref uint pHistogramOffsets, ComPtr<ID3D11Buffer> ppHistogramBuffers) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (uint* ppHistogramOffsets = &pHistogramOffsets)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, uint, uint*, ID3D11Buffer**, HResult>)(handle->LpVtbl[83]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, (ID3D11VideoDecoderOutputView*)pView.Handle, contentKeySize, pContentKey, numComponentHistograms, (uint*)ppHistogramOffsets, (ID3D11Buffer**)ppHistogramBuffers.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SubmitDecoderBuffers2(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoDecoder* pDecoder, uint numBuffers, VideoDecoderBufferDesc2* pBufferDesc) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, uint, VideoDecoderBufferDesc2*, HResult>)(handle->LpVtbl[84]))(handle, pDecoder, numBuffers, pBufferDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SubmitDecoderBuffers2(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoDecoder pDecoder, uint numBuffers, VideoDecoderBufferDesc2* pBufferDesc) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, uint, VideoDecoderBufferDesc2*, HResult>)(handle->LpVtbl[84]))(handle, (ID3D11VideoDecoder*)ppDecoder, numBuffers, pBufferDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SubmitDecoderBuffers2(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, uint numBuffers, VideoDecoderBufferDesc2* pBufferDesc) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, uint, VideoDecoderBufferDesc2*, HResult>)(handle->LpVtbl[84]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, numBuffers, pBufferDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SubmitDecoderBuffers2(this ComPtr<ID3D11VideoContext3> comObj, ID3D11VideoDecoder* pDecoder, uint numBuffers, ref VideoDecoderBufferDesc2 pBufferDesc) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (VideoDecoderBufferDesc2* ppBufferDesc = &pBufferDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, uint, VideoDecoderBufferDesc2*, HResult>)(handle->LpVtbl[84]))(handle, pDecoder, numBuffers, (VideoDecoderBufferDesc2*)ppBufferDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SubmitDecoderBuffers2(this ComPtr<ID3D11VideoContext3> comObj, ref ID3D11VideoDecoder pDecoder, uint numBuffers, ref VideoDecoderBufferDesc2 pBufferDesc) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (VideoDecoderBufferDesc2* ppBufferDesc = &pBufferDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, uint, VideoDecoderBufferDesc2*, HResult>)(handle->LpVtbl[84]))(handle, (ID3D11VideoDecoder*)ppDecoder, numBuffers, (VideoDecoderBufferDesc2*)ppBufferDesc);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static HResult SubmitDecoderBuffers2(this ComPtr<ID3D11VideoContext3> comObj, ComPtr<ID3D11VideoDecoder> pDecoder, uint numBuffers, ref VideoDecoderBufferDesc2 pBufferDesc) 
		{
			ID3D11VideoContext3* handle = comObj.Handle;
			fixed (VideoDecoderBufferDesc2* ppBufferDesc = &pBufferDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext3*, ID3D11VideoDecoder*, uint, VideoDecoderBufferDesc2*, HResult>)(handle->LpVtbl[84]))(handle, (ID3D11VideoDecoder*)pDecoder.Handle, numBuffers, (VideoDecoderBufferDesc2*)ppBufferDesc);
				return ret;
			}
		}

	}
}
