// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D11
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("9b32f9ad-bdcc-40a6-a39d-d5c865845720")]
	public partial struct ID3D11CryptoSession : IComObject, IComObject<ID3D11CryptoSession>, IComObject<ID3D11DeviceChild>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("9b32f9ad-bdcc-40a6-a39d-d5c865845720");

		public unsafe ID3D11CryptoSession (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int QueryInterface(Guid* riid, void** ppvObject) 
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, void**, int>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int QueryInterface(ref Guid riid, void** ppvObject) 
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int QueryInterface<T>(out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int QueryInterface<T>(ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, void**, int>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint AddRef() 
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint Release() 
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetDevice(ID3D11Device** ppDevice) 
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, ID3D11Device**, void>)(LpVtbl[3]))(ptr, ppDevice);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetDevice(ref ID3D11Device* ppDevice) 
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Device** pppDevice = &ppDevice)
			{
				((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, ID3D11Device**, void>)(LpVtbl[3]))(ptr, (ID3D11Device**)pppDevice);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetDevice(out ComPtr<ID3D11Device> ppDevice) 
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppDevice = default;
			((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, ID3D11Device**, void>)(LpVtbl[3]))(ptr, (ID3D11Device**)ppDevice.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int GetPrivateData(Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, uint*, void*, int>)(LpVtbl[4]))(ptr, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int GetPrivateData(ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, uint*, void*, int>)(LpVtbl[4]))(ptr, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int GetPrivateData(Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, uint*, void*, int>)(LpVtbl[4]))(ptr, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int GetPrivateData(ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, uint*, void*, int>)(LpVtbl[4]))(ptr, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int GetPrivateData<T>(Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, uint*, void*, int>)(LpVtbl[4]))(ptr, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int GetPrivateData<T>(ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, uint*, void*, int>)(LpVtbl[4]))(ptr, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int GetPrivateData<T>(Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, uint*, void*, int>)(LpVtbl[4]))(ptr, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int GetPrivateData<T>(ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, uint*, void*, int>)(LpVtbl[4]))(ptr, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int SetPrivateData(Guid* guid, uint dataSize, void* pData) 
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, uint, void*, int>)(LpVtbl[5]))(ptr, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int SetPrivateData(ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, uint, void*, int>)(LpVtbl[5]))(ptr, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int SetPrivateDataInterface(Guid* guid, IUnknown* pData) 
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, IUnknown*, int>)(LpVtbl[6]))(ptr, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int SetPrivateDataInterface(ref Guid guid, IUnknown* pData) 
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, IUnknown*, int>)(LpVtbl[6]))(ptr, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int SetPrivateDataInterface(Guid* guid, ref IUnknown pData) 
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppData = &pData)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, IUnknown*, int>)(LpVtbl[6]))(ptr, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int SetPrivateDataInterface(Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, IUnknown*, int>)(LpVtbl[6]))(ptr, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int SetPrivateDataInterface(ref Guid guid, ref IUnknown pData) 
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					int ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, IUnknown*, int>)(LpVtbl[6]))(ptr, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int SetPrivateDataInterface(ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, IUnknown*, int>)(LpVtbl[6]))(ptr, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCryptoType(Guid* pCryptoType) 
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, void>)(LpVtbl[7]))(ptr, pCryptoType);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCryptoType(ref Guid pCryptoType) 
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, void>)(LpVtbl[7]))(ptr, (Guid*)ppCryptoType);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetDecoderProfile(Guid* pDecoderProfile) 
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, void>)(LpVtbl[8]))(ptr, pDecoderProfile);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetDecoderProfile(ref Guid pDecoderProfile) 
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, Guid*, void>)(LpVtbl[8]))(ptr, (Guid*)ppDecoderProfile);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int GetCertificateSize(uint* pCertificateSize) 
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, uint*, int>)(LpVtbl[9]))(ptr, pCertificateSize);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int GetCertificateSize(ref uint pCertificateSize) 
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppCertificateSize = &pCertificateSize)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, uint*, int>)(LpVtbl[9]))(ptr, (uint*)ppCertificateSize);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int GetCertificate(uint certificateSize, byte* pCertificate) 
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, uint, byte*, int>)(LpVtbl[10]))(ptr, certificateSize, pCertificate);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe int GetCertificate(uint certificateSize, ref byte pCertificate) 
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (byte* ppCertificate = &pCertificate)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, uint, byte*, int>)(LpVtbl[10]))(ptr, certificateSize, (byte*)ppCertificate);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCryptoSessionHandle(nint* pCryptoSessionHandle) 
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, nint*, void>)(LpVtbl[11]))(ptr, pCryptoSessionHandle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetCryptoSessionHandle(ref nint pCryptoSessionHandle) 
		{
			ID3D11CryptoSession* ptr = (ID3D11CryptoSession*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nint* ppCryptoSessionHandle = &pCryptoSessionHandle)
			{
				((delegate* unmanaged[Stdcall]<ID3D11CryptoSession*, nint*, void>)(LpVtbl[11]))(ptr, (nint*)ppCryptoSessionHandle);
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator ID3D11DeviceChild (ID3D11CryptoSession value)
		{
			return Unsafe.As<ID3D11CryptoSession, ID3D11DeviceChild>(ref value);
		}

		public unsafe static implicit operator IUnknown (ID3D11CryptoSession value)
		{
			return Unsafe.As<ID3D11CryptoSession, IUnknown>(ref value);
		}

	}

}
