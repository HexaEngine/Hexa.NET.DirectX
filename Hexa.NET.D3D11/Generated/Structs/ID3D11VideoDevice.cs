// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D11
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("10ec4d5b-975a-4689-b9e4-d0aac30fe333")]
	public partial struct ID3D11VideoDevice : IComObject, IComObject<ID3D11VideoDevice>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("10ec4d5b-975a-4689-b9e4-d0aac30fe333");

		public unsafe ID3D11VideoDevice (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface(Guid* riid, void** ppvObject) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface(ref Guid riid, void** ppvObject) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface<T>(out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface<T>(ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint AddRef() 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint Release() 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoDecoder(VideoDecoderDesc* pVideoDesc, VideoDecoderConfig* pConfig, ID3D11VideoDecoder** ppDecoder) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, VideoDecoderDesc*, VideoDecoderConfig*, ID3D11VideoDecoder**, HResult>)(LpVtbl[3]))(ptr, pVideoDesc, pConfig, ppDecoder);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoDecoder(ref VideoDecoderDesc pVideoDesc, VideoDecoderConfig* pConfig, ID3D11VideoDecoder** ppDecoder) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecoderDesc* ppVideoDesc = &pVideoDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, VideoDecoderDesc*, VideoDecoderConfig*, ID3D11VideoDecoder**, HResult>)(LpVtbl[3]))(ptr, (VideoDecoderDesc*)ppVideoDesc, pConfig, ppDecoder);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoDecoder(VideoDecoderDesc* pVideoDesc, ref VideoDecoderConfig pConfig, ID3D11VideoDecoder** ppDecoder) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecoderConfig* ppConfig = &pConfig)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, VideoDecoderDesc*, VideoDecoderConfig*, ID3D11VideoDecoder**, HResult>)(LpVtbl[3]))(ptr, pVideoDesc, (VideoDecoderConfig*)ppConfig, ppDecoder);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoDecoder(ref VideoDecoderDesc pVideoDesc, ref VideoDecoderConfig pConfig, ID3D11VideoDecoder** ppDecoder) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecoderDesc* ppVideoDesc = &pVideoDesc)
			{
				fixed (VideoDecoderConfig* ppConfig = &pConfig)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, VideoDecoderDesc*, VideoDecoderConfig*, ID3D11VideoDecoder**, HResult>)(LpVtbl[3]))(ptr, (VideoDecoderDesc*)ppVideoDesc, (VideoDecoderConfig*)ppConfig, ppDecoder);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoDecoder(VideoDecoderDesc* pVideoDesc, VideoDecoderConfig* pConfig, ref ID3D11VideoDecoder* ppDecoder) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoDecoder** pppDecoder = &ppDecoder)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, VideoDecoderDesc*, VideoDecoderConfig*, ID3D11VideoDecoder**, HResult>)(LpVtbl[3]))(ptr, pVideoDesc, pConfig, (ID3D11VideoDecoder**)pppDecoder);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoDecoder(VideoDecoderDesc* pVideoDesc, VideoDecoderConfig* pConfig, out ComPtr<ID3D11VideoDecoder> ppDecoder) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppDecoder = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, VideoDecoderDesc*, VideoDecoderConfig*, ID3D11VideoDecoder**, HResult>)(LpVtbl[3]))(ptr, pVideoDesc, pConfig, (ID3D11VideoDecoder**)ppDecoder.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoDecoder(ref VideoDecoderDesc pVideoDesc, VideoDecoderConfig* pConfig, ref ID3D11VideoDecoder* ppDecoder) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecoderDesc* ppVideoDesc = &pVideoDesc)
			{
				fixed (ID3D11VideoDecoder** pppDecoder = &ppDecoder)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, VideoDecoderDesc*, VideoDecoderConfig*, ID3D11VideoDecoder**, HResult>)(LpVtbl[3]))(ptr, (VideoDecoderDesc*)ppVideoDesc, pConfig, (ID3D11VideoDecoder**)pppDecoder);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoDecoder(ref VideoDecoderDesc pVideoDesc, VideoDecoderConfig* pConfig, out ComPtr<ID3D11VideoDecoder> ppDecoder) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecoderDesc* ppVideoDesc = &pVideoDesc)
			{
				ppDecoder = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, VideoDecoderDesc*, VideoDecoderConfig*, ID3D11VideoDecoder**, HResult>)(LpVtbl[3]))(ptr, (VideoDecoderDesc*)ppVideoDesc, pConfig, (ID3D11VideoDecoder**)ppDecoder.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoDecoder(VideoDecoderDesc* pVideoDesc, ref VideoDecoderConfig pConfig, ref ID3D11VideoDecoder* ppDecoder) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecoderConfig* ppConfig = &pConfig)
			{
				fixed (ID3D11VideoDecoder** pppDecoder = &ppDecoder)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, VideoDecoderDesc*, VideoDecoderConfig*, ID3D11VideoDecoder**, HResult>)(LpVtbl[3]))(ptr, pVideoDesc, (VideoDecoderConfig*)ppConfig, (ID3D11VideoDecoder**)pppDecoder);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoDecoder(VideoDecoderDesc* pVideoDesc, ref VideoDecoderConfig pConfig, out ComPtr<ID3D11VideoDecoder> ppDecoder) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecoderConfig* ppConfig = &pConfig)
			{
				ppDecoder = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, VideoDecoderDesc*, VideoDecoderConfig*, ID3D11VideoDecoder**, HResult>)(LpVtbl[3]))(ptr, pVideoDesc, (VideoDecoderConfig*)ppConfig, (ID3D11VideoDecoder**)ppDecoder.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoDecoder(ref VideoDecoderDesc pVideoDesc, ref VideoDecoderConfig pConfig, ref ID3D11VideoDecoder* ppDecoder) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecoderDesc* ppVideoDesc = &pVideoDesc)
			{
				fixed (VideoDecoderConfig* ppConfig = &pConfig)
				{
					fixed (ID3D11VideoDecoder** pppDecoder = &ppDecoder)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, VideoDecoderDesc*, VideoDecoderConfig*, ID3D11VideoDecoder**, HResult>)(LpVtbl[3]))(ptr, (VideoDecoderDesc*)ppVideoDesc, (VideoDecoderConfig*)ppConfig, (ID3D11VideoDecoder**)pppDecoder);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoDecoder(ref VideoDecoderDesc pVideoDesc, ref VideoDecoderConfig pConfig, out ComPtr<ID3D11VideoDecoder> ppDecoder) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecoderDesc* ppVideoDesc = &pVideoDesc)
			{
				fixed (VideoDecoderConfig* ppConfig = &pConfig)
				{
					ppDecoder = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, VideoDecoderDesc*, VideoDecoderConfig*, ID3D11VideoDecoder**, HResult>)(LpVtbl[3]))(ptr, (VideoDecoderDesc*)ppVideoDesc, (VideoDecoderConfig*)ppConfig, (ID3D11VideoDecoder**)ppDecoder.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessor(ID3D11VideoProcessorEnumerator* pEnum, uint rateConversionIndex, ID3D11VideoProcessor** ppVideoProcessor) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11VideoProcessorEnumerator*, uint, ID3D11VideoProcessor**, HResult>)(LpVtbl[4]))(ptr, pEnum, rateConversionIndex, ppVideoProcessor);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessor(ref ID3D11VideoProcessorEnumerator pEnum, uint rateConversionIndex, ID3D11VideoProcessor** ppVideoProcessor) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11VideoProcessorEnumerator*, uint, ID3D11VideoProcessor**, HResult>)(LpVtbl[4]))(ptr, (ID3D11VideoProcessorEnumerator*)ppEnum, rateConversionIndex, ppVideoProcessor);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessor(ComPtr<ID3D11VideoProcessorEnumerator> pEnum, uint rateConversionIndex, ID3D11VideoProcessor** ppVideoProcessor) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11VideoProcessorEnumerator*, uint, ID3D11VideoProcessor**, HResult>)(LpVtbl[4]))(ptr, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, rateConversionIndex, ppVideoProcessor);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessor(ID3D11VideoProcessorEnumerator* pEnum, uint rateConversionIndex, ref ID3D11VideoProcessor* ppVideoProcessor) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor** pppVideoProcessor = &ppVideoProcessor)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11VideoProcessorEnumerator*, uint, ID3D11VideoProcessor**, HResult>)(LpVtbl[4]))(ptr, pEnum, rateConversionIndex, (ID3D11VideoProcessor**)pppVideoProcessor);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessor(ID3D11VideoProcessorEnumerator* pEnum, uint rateConversionIndex, out ComPtr<ID3D11VideoProcessor> ppVideoProcessor) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppVideoProcessor = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11VideoProcessorEnumerator*, uint, ID3D11VideoProcessor**, HResult>)(LpVtbl[4]))(ptr, pEnum, rateConversionIndex, (ID3D11VideoProcessor**)ppVideoProcessor.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessor(ref ID3D11VideoProcessorEnumerator pEnum, uint rateConversionIndex, ref ID3D11VideoProcessor* ppVideoProcessor) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
			{
				fixed (ID3D11VideoProcessor** pppVideoProcessor = &ppVideoProcessor)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11VideoProcessorEnumerator*, uint, ID3D11VideoProcessor**, HResult>)(LpVtbl[4]))(ptr, (ID3D11VideoProcessorEnumerator*)ppEnum, rateConversionIndex, (ID3D11VideoProcessor**)pppVideoProcessor);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessor(ComPtr<ID3D11VideoProcessorEnumerator> pEnum, uint rateConversionIndex, out ComPtr<ID3D11VideoProcessor> ppVideoProcessor) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppVideoProcessor = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11VideoProcessorEnumerator*, uint, ID3D11VideoProcessor**, HResult>)(LpVtbl[4]))(ptr, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, rateConversionIndex, (ID3D11VideoProcessor**)ppVideoProcessor.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateAuthenticatedChannel(AuthenticatedChannelType channelType, ID3D11AuthenticatedChannel** ppAuthenticatedChannel) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, AuthenticatedChannelType, ID3D11AuthenticatedChannel**, HResult>)(LpVtbl[5]))(ptr, channelType, ppAuthenticatedChannel);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateAuthenticatedChannel(AuthenticatedChannelType channelType, ref ID3D11AuthenticatedChannel* ppAuthenticatedChannel) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11AuthenticatedChannel** pppAuthenticatedChannel = &ppAuthenticatedChannel)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, AuthenticatedChannelType, ID3D11AuthenticatedChannel**, HResult>)(LpVtbl[5]))(ptr, channelType, (ID3D11AuthenticatedChannel**)pppAuthenticatedChannel);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateAuthenticatedChannel(AuthenticatedChannelType channelType, out ComPtr<ID3D11AuthenticatedChannel> ppAuthenticatedChannel) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppAuthenticatedChannel = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, AuthenticatedChannelType, ID3D11AuthenticatedChannel**, HResult>)(LpVtbl[5]))(ptr, channelType, (ID3D11AuthenticatedChannel**)ppAuthenticatedChannel.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCryptoSession(Guid* pCryptoType, Guid* pDecoderProfile, Guid* pKeyExchangeType, ID3D11CryptoSession** ppCryptoSession) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, HResult>)(LpVtbl[6]))(ptr, pCryptoType, pDecoderProfile, pKeyExchangeType, ppCryptoSession);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCryptoSession(ref Guid pCryptoType, Guid* pDecoderProfile, Guid* pKeyExchangeType, ID3D11CryptoSession** ppCryptoSession) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, HResult>)(LpVtbl[6]))(ptr, (Guid*)ppCryptoType, pDecoderProfile, pKeyExchangeType, ppCryptoSession);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCryptoSession(Guid* pCryptoType, ref Guid pDecoderProfile, Guid* pKeyExchangeType, ID3D11CryptoSession** ppCryptoSession) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, HResult>)(LpVtbl[6]))(ptr, pCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, ppCryptoSession);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCryptoSession(ref Guid pCryptoType, ref Guid pDecoderProfile, Guid* pKeyExchangeType, ID3D11CryptoSession** ppCryptoSession) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, HResult>)(LpVtbl[6]))(ptr, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, ppCryptoSession);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCryptoSession(Guid* pCryptoType, Guid* pDecoderProfile, ref Guid pKeyExchangeType, ID3D11CryptoSession** ppCryptoSession) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, HResult>)(LpVtbl[6]))(ptr, pCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, ppCryptoSession);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCryptoSession(ref Guid pCryptoType, Guid* pDecoderProfile, ref Guid pKeyExchangeType, ID3D11CryptoSession** ppCryptoSession) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, HResult>)(LpVtbl[6]))(ptr, (Guid*)ppCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, ppCryptoSession);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCryptoSession(Guid* pCryptoType, ref Guid pDecoderProfile, ref Guid pKeyExchangeType, ID3D11CryptoSession** ppCryptoSession) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, HResult>)(LpVtbl[6]))(ptr, pCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, ppCryptoSession);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCryptoSession(ref Guid pCryptoType, ref Guid pDecoderProfile, ref Guid pKeyExchangeType, ID3D11CryptoSession** ppCryptoSession) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, HResult>)(LpVtbl[6]))(ptr, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, ppCryptoSession);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCryptoSession(Guid* pCryptoType, Guid* pDecoderProfile, Guid* pKeyExchangeType, ref ID3D11CryptoSession* ppCryptoSession) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11CryptoSession** pppCryptoSession = &ppCryptoSession)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, HResult>)(LpVtbl[6]))(ptr, pCryptoType, pDecoderProfile, pKeyExchangeType, (ID3D11CryptoSession**)pppCryptoSession);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCryptoSession(Guid* pCryptoType, Guid* pDecoderProfile, Guid* pKeyExchangeType, out ComPtr<ID3D11CryptoSession> ppCryptoSession) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppCryptoSession = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, HResult>)(LpVtbl[6]))(ptr, pCryptoType, pDecoderProfile, pKeyExchangeType, (ID3D11CryptoSession**)ppCryptoSession.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCryptoSession(ref Guid pCryptoType, Guid* pDecoderProfile, Guid* pKeyExchangeType, ref ID3D11CryptoSession* ppCryptoSession) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (ID3D11CryptoSession** pppCryptoSession = &ppCryptoSession)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, HResult>)(LpVtbl[6]))(ptr, (Guid*)ppCryptoType, pDecoderProfile, pKeyExchangeType, (ID3D11CryptoSession**)pppCryptoSession);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCryptoSession(ref Guid pCryptoType, Guid* pDecoderProfile, Guid* pKeyExchangeType, out ComPtr<ID3D11CryptoSession> ppCryptoSession) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				ppCryptoSession = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, HResult>)(LpVtbl[6]))(ptr, (Guid*)ppCryptoType, pDecoderProfile, pKeyExchangeType, (ID3D11CryptoSession**)ppCryptoSession.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCryptoSession(Guid* pCryptoType, ref Guid pDecoderProfile, Guid* pKeyExchangeType, ref ID3D11CryptoSession* ppCryptoSession) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (ID3D11CryptoSession** pppCryptoSession = &ppCryptoSession)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, HResult>)(LpVtbl[6]))(ptr, pCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, (ID3D11CryptoSession**)pppCryptoSession);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCryptoSession(Guid* pCryptoType, ref Guid pDecoderProfile, Guid* pKeyExchangeType, out ComPtr<ID3D11CryptoSession> ppCryptoSession) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				ppCryptoSession = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, HResult>)(LpVtbl[6]))(ptr, pCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, (ID3D11CryptoSession**)ppCryptoSession.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCryptoSession(ref Guid pCryptoType, ref Guid pDecoderProfile, Guid* pKeyExchangeType, ref ID3D11CryptoSession* ppCryptoSession) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (ID3D11CryptoSession** pppCryptoSession = &ppCryptoSession)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, HResult>)(LpVtbl[6]))(ptr, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, (ID3D11CryptoSession**)pppCryptoSession);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCryptoSession(ref Guid pCryptoType, ref Guid pDecoderProfile, Guid* pKeyExchangeType, out ComPtr<ID3D11CryptoSession> ppCryptoSession) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					ppCryptoSession = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, HResult>)(LpVtbl[6]))(ptr, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, pKeyExchangeType, (ID3D11CryptoSession**)ppCryptoSession.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCryptoSession(Guid* pCryptoType, Guid* pDecoderProfile, ref Guid pKeyExchangeType, ref ID3D11CryptoSession* ppCryptoSession) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
			{
				fixed (ID3D11CryptoSession** pppCryptoSession = &ppCryptoSession)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, HResult>)(LpVtbl[6]))(ptr, pCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, (ID3D11CryptoSession**)pppCryptoSession);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCryptoSession(Guid* pCryptoType, Guid* pDecoderProfile, ref Guid pKeyExchangeType, out ComPtr<ID3D11CryptoSession> ppCryptoSession) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
			{
				ppCryptoSession = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, HResult>)(LpVtbl[6]))(ptr, pCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, (ID3D11CryptoSession**)ppCryptoSession.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCryptoSession(ref Guid pCryptoType, Guid* pDecoderProfile, ref Guid pKeyExchangeType, ref ID3D11CryptoSession* ppCryptoSession) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					fixed (ID3D11CryptoSession** pppCryptoSession = &ppCryptoSession)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, HResult>)(LpVtbl[6]))(ptr, (Guid*)ppCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, (ID3D11CryptoSession**)pppCryptoSession);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCryptoSession(ref Guid pCryptoType, Guid* pDecoderProfile, ref Guid pKeyExchangeType, out ComPtr<ID3D11CryptoSession> ppCryptoSession) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					ppCryptoSession = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, HResult>)(LpVtbl[6]))(ptr, (Guid*)ppCryptoType, pDecoderProfile, (Guid*)ppKeyExchangeType, (ID3D11CryptoSession**)ppCryptoSession.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCryptoSession(Guid* pCryptoType, ref Guid pDecoderProfile, ref Guid pKeyExchangeType, ref ID3D11CryptoSession* ppCryptoSession) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					fixed (ID3D11CryptoSession** pppCryptoSession = &ppCryptoSession)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, HResult>)(LpVtbl[6]))(ptr, pCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, (ID3D11CryptoSession**)pppCryptoSession);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCryptoSession(Guid* pCryptoType, ref Guid pDecoderProfile, ref Guid pKeyExchangeType, out ComPtr<ID3D11CryptoSession> ppCryptoSession) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					ppCryptoSession = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, HResult>)(LpVtbl[6]))(ptr, pCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, (ID3D11CryptoSession**)ppCryptoSession.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCryptoSession(ref Guid pCryptoType, ref Guid pDecoderProfile, ref Guid pKeyExchangeType, ref ID3D11CryptoSession* ppCryptoSession) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
					{
						fixed (ID3D11CryptoSession** pppCryptoSession = &ppCryptoSession)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, HResult>)(LpVtbl[6]))(ptr, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, (ID3D11CryptoSession**)pppCryptoSession);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateCryptoSession(ref Guid pCryptoType, ref Guid pDecoderProfile, ref Guid pKeyExchangeType, out ComPtr<ID3D11CryptoSession> ppCryptoSession) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
					{
						ppCryptoSession = default;
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, Guid*, ID3D11CryptoSession**, HResult>)(LpVtbl[6]))(ptr, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, (Guid*)ppKeyExchangeType, (ID3D11CryptoSession**)ppCryptoSession.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoDecoderOutputView(ID3D11Resource* pResource, VideoDecoderOutputViewDesc* pDesc, ID3D11VideoDecoderOutputView** ppVDOVView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, HResult>)(LpVtbl[7]))(ptr, pResource, pDesc, ppVDOVView);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoDecoderOutputView(ref ID3D11Resource pResource, VideoDecoderOutputViewDesc* pDesc, ID3D11VideoDecoderOutputView** ppVDOVView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, HResult>)(LpVtbl[7]))(ptr, (ID3D11Resource*)ppResource, pDesc, ppVDOVView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoDecoderOutputView(ComPtr<ID3D11Resource> pResource, VideoDecoderOutputViewDesc* pDesc, ID3D11VideoDecoderOutputView** ppVDOVView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, HResult>)(LpVtbl[7]))(ptr, (ID3D11Resource*)pResource.Handle, pDesc, ppVDOVView);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoDecoderOutputView(ID3D11Resource* pResource, ref VideoDecoderOutputViewDesc pDesc, ID3D11VideoDecoderOutputView** ppVDOVView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecoderOutputViewDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, HResult>)(LpVtbl[7]))(ptr, pResource, (VideoDecoderOutputViewDesc*)ppDesc, ppVDOVView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoDecoderOutputView(ref ID3D11Resource pResource, ref VideoDecoderOutputViewDesc pDesc, ID3D11VideoDecoderOutputView** ppVDOVView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (VideoDecoderOutputViewDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, HResult>)(LpVtbl[7]))(ptr, (ID3D11Resource*)ppResource, (VideoDecoderOutputViewDesc*)ppDesc, ppVDOVView);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoDecoderOutputView(ComPtr<ID3D11Resource> pResource, ref VideoDecoderOutputViewDesc pDesc, ID3D11VideoDecoderOutputView** ppVDOVView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecoderOutputViewDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, HResult>)(LpVtbl[7]))(ptr, (ID3D11Resource*)pResource.Handle, (VideoDecoderOutputViewDesc*)ppDesc, ppVDOVView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoDecoderOutputView(ID3D11Resource* pResource, VideoDecoderOutputViewDesc* pDesc, ref ID3D11VideoDecoderOutputView* ppVDOVView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoDecoderOutputView** pppVDOVView = &ppVDOVView)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, HResult>)(LpVtbl[7]))(ptr, pResource, pDesc, (ID3D11VideoDecoderOutputView**)pppVDOVView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoDecoderOutputView(ID3D11Resource* pResource, VideoDecoderOutputViewDesc* pDesc, out ComPtr<ID3D11VideoDecoderOutputView> ppVDOVView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppVDOVView = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, HResult>)(LpVtbl[7]))(ptr, pResource, pDesc, (ID3D11VideoDecoderOutputView**)ppVDOVView.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoDecoderOutputView(ref ID3D11Resource pResource, VideoDecoderOutputViewDesc* pDesc, ref ID3D11VideoDecoderOutputView* ppVDOVView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoDecoderOutputView** pppVDOVView = &ppVDOVView)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, HResult>)(LpVtbl[7]))(ptr, (ID3D11Resource*)ppResource, pDesc, (ID3D11VideoDecoderOutputView**)pppVDOVView);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoDecoderOutputView(ComPtr<ID3D11Resource> pResource, VideoDecoderOutputViewDesc* pDesc, out ComPtr<ID3D11VideoDecoderOutputView> ppVDOVView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppVDOVView = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, HResult>)(LpVtbl[7]))(ptr, (ID3D11Resource*)pResource.Handle, pDesc, (ID3D11VideoDecoderOutputView**)ppVDOVView.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoDecoderOutputView(ID3D11Resource* pResource, ref VideoDecoderOutputViewDesc pDesc, ref ID3D11VideoDecoderOutputView* ppVDOVView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecoderOutputViewDesc* ppDesc = &pDesc)
			{
				fixed (ID3D11VideoDecoderOutputView** pppVDOVView = &ppVDOVView)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, HResult>)(LpVtbl[7]))(ptr, pResource, (VideoDecoderOutputViewDesc*)ppDesc, (ID3D11VideoDecoderOutputView**)pppVDOVView);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoDecoderOutputView(ID3D11Resource* pResource, ref VideoDecoderOutputViewDesc pDesc, out ComPtr<ID3D11VideoDecoderOutputView> ppVDOVView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecoderOutputViewDesc* ppDesc = &pDesc)
			{
				ppVDOVView = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, HResult>)(LpVtbl[7]))(ptr, pResource, (VideoDecoderOutputViewDesc*)ppDesc, (ID3D11VideoDecoderOutputView**)ppVDOVView.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoDecoderOutputView(ref ID3D11Resource pResource, ref VideoDecoderOutputViewDesc pDesc, ref ID3D11VideoDecoderOutputView* ppVDOVView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (VideoDecoderOutputViewDesc* ppDesc = &pDesc)
				{
					fixed (ID3D11VideoDecoderOutputView** pppVDOVView = &ppVDOVView)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, HResult>)(LpVtbl[7]))(ptr, (ID3D11Resource*)ppResource, (VideoDecoderOutputViewDesc*)ppDesc, (ID3D11VideoDecoderOutputView**)pppVDOVView);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoDecoderOutputView(ComPtr<ID3D11Resource> pResource, ref VideoDecoderOutputViewDesc pDesc, out ComPtr<ID3D11VideoDecoderOutputView> ppVDOVView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecoderOutputViewDesc* ppDesc = &pDesc)
			{
				ppVDOVView = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, VideoDecoderOutputViewDesc*, ID3D11VideoDecoderOutputView**, HResult>)(LpVtbl[7]))(ptr, (ID3D11Resource*)pResource.Handle, (VideoDecoderOutputViewDesc*)ppDesc, (ID3D11VideoDecoderOutputView**)ppVDOVView.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorInputView(ID3D11Resource* pResource, ID3D11VideoProcessorEnumerator* pEnum, VideoProcessorInputViewDesc* pDesc, ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, HResult>)(LpVtbl[8]))(ptr, pResource, pEnum, pDesc, ppVPIView);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorInputView(ref ID3D11Resource pResource, ID3D11VideoProcessorEnumerator* pEnum, VideoProcessorInputViewDesc* pDesc, ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, HResult>)(LpVtbl[8]))(ptr, (ID3D11Resource*)ppResource, pEnum, pDesc, ppVPIView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorInputView(ComPtr<ID3D11Resource> pResource, ID3D11VideoProcessorEnumerator* pEnum, VideoProcessorInputViewDesc* pDesc, ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, HResult>)(LpVtbl[8]))(ptr, (ID3D11Resource*)pResource.Handle, pEnum, pDesc, ppVPIView);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorInputView(ID3D11Resource* pResource, ref ID3D11VideoProcessorEnumerator pEnum, VideoProcessorInputViewDesc* pDesc, ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, HResult>)(LpVtbl[8]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)ppEnum, pDesc, ppVPIView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorInputView(ID3D11Resource* pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, VideoProcessorInputViewDesc* pDesc, ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, HResult>)(LpVtbl[8]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, pDesc, ppVPIView);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorInputView(ref ID3D11Resource pResource, ref ID3D11VideoProcessorEnumerator pEnum, VideoProcessorInputViewDesc* pDesc, ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, HResult>)(LpVtbl[8]))(ptr, (ID3D11Resource*)ppResource, (ID3D11VideoProcessorEnumerator*)ppEnum, pDesc, ppVPIView);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorInputView(ComPtr<ID3D11Resource> pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, VideoProcessorInputViewDesc* pDesc, ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, HResult>)(LpVtbl[8]))(ptr, (ID3D11Resource*)pResource.Handle, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, pDesc, ppVPIView);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorInputView(ID3D11Resource* pResource, ID3D11VideoProcessorEnumerator* pEnum, ref VideoProcessorInputViewDesc pDesc, ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, HResult>)(LpVtbl[8]))(ptr, pResource, pEnum, (VideoProcessorInputViewDesc*)ppDesc, ppVPIView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorInputView(ref ID3D11Resource pResource, ID3D11VideoProcessorEnumerator* pEnum, ref VideoProcessorInputViewDesc pDesc, ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, HResult>)(LpVtbl[8]))(ptr, (ID3D11Resource*)ppResource, pEnum, (VideoProcessorInputViewDesc*)ppDesc, ppVPIView);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorInputView(ComPtr<ID3D11Resource> pResource, ID3D11VideoProcessorEnumerator* pEnum, ref VideoProcessorInputViewDesc pDesc, ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, HResult>)(LpVtbl[8]))(ptr, (ID3D11Resource*)pResource.Handle, pEnum, (VideoProcessorInputViewDesc*)ppDesc, ppVPIView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorInputView(ID3D11Resource* pResource, ref ID3D11VideoProcessorEnumerator pEnum, ref VideoProcessorInputViewDesc pDesc, ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
			{
				fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, HResult>)(LpVtbl[8]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)ppEnum, (VideoProcessorInputViewDesc*)ppDesc, ppVPIView);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorInputView(ID3D11Resource* pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, ref VideoProcessorInputViewDesc pDesc, ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, HResult>)(LpVtbl[8]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, (VideoProcessorInputViewDesc*)ppDesc, ppVPIView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorInputView(ref ID3D11Resource pResource, ref ID3D11VideoProcessorEnumerator pEnum, ref VideoProcessorInputViewDesc pDesc, ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
				{
					fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, HResult>)(LpVtbl[8]))(ptr, (ID3D11Resource*)ppResource, (ID3D11VideoProcessorEnumerator*)ppEnum, (VideoProcessorInputViewDesc*)ppDesc, ppVPIView);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorInputView(ComPtr<ID3D11Resource> pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, ref VideoProcessorInputViewDesc pDesc, ID3D11VideoProcessorInputView** ppVPIView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, HResult>)(LpVtbl[8]))(ptr, (ID3D11Resource*)pResource.Handle, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, (VideoProcessorInputViewDesc*)ppDesc, ppVPIView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorInputView(ID3D11Resource* pResource, ID3D11VideoProcessorEnumerator* pEnum, VideoProcessorInputViewDesc* pDesc, ref ID3D11VideoProcessorInputView* ppVPIView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessorInputView** pppVPIView = &ppVPIView)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, HResult>)(LpVtbl[8]))(ptr, pResource, pEnum, pDesc, (ID3D11VideoProcessorInputView**)pppVPIView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorInputView(ID3D11Resource* pResource, ID3D11VideoProcessorEnumerator* pEnum, VideoProcessorInputViewDesc* pDesc, out ComPtr<ID3D11VideoProcessorInputView> ppVPIView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppVPIView = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, HResult>)(LpVtbl[8]))(ptr, pResource, pEnum, pDesc, (ID3D11VideoProcessorInputView**)ppVPIView.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorInputView(ref ID3D11Resource pResource, ID3D11VideoProcessorEnumerator* pEnum, VideoProcessorInputViewDesc* pDesc, ref ID3D11VideoProcessorInputView* ppVPIView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoProcessorInputView** pppVPIView = &ppVPIView)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, HResult>)(LpVtbl[8]))(ptr, (ID3D11Resource*)ppResource, pEnum, pDesc, (ID3D11VideoProcessorInputView**)pppVPIView);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorInputView(ComPtr<ID3D11Resource> pResource, ID3D11VideoProcessorEnumerator* pEnum, VideoProcessorInputViewDesc* pDesc, out ComPtr<ID3D11VideoProcessorInputView> ppVPIView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppVPIView = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, HResult>)(LpVtbl[8]))(ptr, (ID3D11Resource*)pResource.Handle, pEnum, pDesc, (ID3D11VideoProcessorInputView**)ppVPIView.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorInputView(ID3D11Resource* pResource, ref ID3D11VideoProcessorEnumerator pEnum, VideoProcessorInputViewDesc* pDesc, ref ID3D11VideoProcessorInputView* ppVPIView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
			{
				fixed (ID3D11VideoProcessorInputView** pppVPIView = &ppVPIView)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, HResult>)(LpVtbl[8]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)ppEnum, pDesc, (ID3D11VideoProcessorInputView**)pppVPIView);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorInputView(ID3D11Resource* pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, VideoProcessorInputViewDesc* pDesc, out ComPtr<ID3D11VideoProcessorInputView> ppVPIView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppVPIView = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, HResult>)(LpVtbl[8]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, pDesc, (ID3D11VideoProcessorInputView**)ppVPIView.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorInputView(ref ID3D11Resource pResource, ref ID3D11VideoProcessorEnumerator pEnum, VideoProcessorInputViewDesc* pDesc, ref ID3D11VideoProcessorInputView* ppVPIView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
				{
					fixed (ID3D11VideoProcessorInputView** pppVPIView = &ppVPIView)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, HResult>)(LpVtbl[8]))(ptr, (ID3D11Resource*)ppResource, (ID3D11VideoProcessorEnumerator*)ppEnum, pDesc, (ID3D11VideoProcessorInputView**)pppVPIView);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorInputView(ComPtr<ID3D11Resource> pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, VideoProcessorInputViewDesc* pDesc, out ComPtr<ID3D11VideoProcessorInputView> ppVPIView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppVPIView = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, HResult>)(LpVtbl[8]))(ptr, (ID3D11Resource*)pResource.Handle, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, pDesc, (ID3D11VideoProcessorInputView**)ppVPIView.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorInputView(ID3D11Resource* pResource, ID3D11VideoProcessorEnumerator* pEnum, ref VideoProcessorInputViewDesc pDesc, ref ID3D11VideoProcessorInputView* ppVPIView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
			{
				fixed (ID3D11VideoProcessorInputView** pppVPIView = &ppVPIView)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, HResult>)(LpVtbl[8]))(ptr, pResource, pEnum, (VideoProcessorInputViewDesc*)ppDesc, (ID3D11VideoProcessorInputView**)pppVPIView);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorInputView(ID3D11Resource* pResource, ID3D11VideoProcessorEnumerator* pEnum, ref VideoProcessorInputViewDesc pDesc, out ComPtr<ID3D11VideoProcessorInputView> ppVPIView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
			{
				ppVPIView = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, HResult>)(LpVtbl[8]))(ptr, pResource, pEnum, (VideoProcessorInputViewDesc*)ppDesc, (ID3D11VideoProcessorInputView**)ppVPIView.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorInputView(ref ID3D11Resource pResource, ID3D11VideoProcessorEnumerator* pEnum, ref VideoProcessorInputViewDesc pDesc, ref ID3D11VideoProcessorInputView* ppVPIView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
				{
					fixed (ID3D11VideoProcessorInputView** pppVPIView = &ppVPIView)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, HResult>)(LpVtbl[8]))(ptr, (ID3D11Resource*)ppResource, pEnum, (VideoProcessorInputViewDesc*)ppDesc, (ID3D11VideoProcessorInputView**)pppVPIView);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorInputView(ComPtr<ID3D11Resource> pResource, ID3D11VideoProcessorEnumerator* pEnum, ref VideoProcessorInputViewDesc pDesc, out ComPtr<ID3D11VideoProcessorInputView> ppVPIView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
			{
				ppVPIView = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, HResult>)(LpVtbl[8]))(ptr, (ID3D11Resource*)pResource.Handle, pEnum, (VideoProcessorInputViewDesc*)ppDesc, (ID3D11VideoProcessorInputView**)ppVPIView.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorInputView(ID3D11Resource* pResource, ref ID3D11VideoProcessorEnumerator pEnum, ref VideoProcessorInputViewDesc pDesc, ref ID3D11VideoProcessorInputView* ppVPIView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
			{
				fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
				{
					fixed (ID3D11VideoProcessorInputView** pppVPIView = &ppVPIView)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, HResult>)(LpVtbl[8]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)ppEnum, (VideoProcessorInputViewDesc*)ppDesc, (ID3D11VideoProcessorInputView**)pppVPIView);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorInputView(ID3D11Resource* pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, ref VideoProcessorInputViewDesc pDesc, out ComPtr<ID3D11VideoProcessorInputView> ppVPIView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
			{
				ppVPIView = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, HResult>)(LpVtbl[8]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, (VideoProcessorInputViewDesc*)ppDesc, (ID3D11VideoProcessorInputView**)ppVPIView.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorInputView(ref ID3D11Resource pResource, ref ID3D11VideoProcessorEnumerator pEnum, ref VideoProcessorInputViewDesc pDesc, ref ID3D11VideoProcessorInputView* ppVPIView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
				{
					fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
					{
						fixed (ID3D11VideoProcessorInputView** pppVPIView = &ppVPIView)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, HResult>)(LpVtbl[8]))(ptr, (ID3D11Resource*)ppResource, (ID3D11VideoProcessorEnumerator*)ppEnum, (VideoProcessorInputViewDesc*)ppDesc, (ID3D11VideoProcessorInputView**)pppVPIView);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorInputView(ComPtr<ID3D11Resource> pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, ref VideoProcessorInputViewDesc pDesc, out ComPtr<ID3D11VideoProcessorInputView> ppVPIView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorInputViewDesc* ppDesc = &pDesc)
			{
				ppVPIView = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorInputViewDesc*, ID3D11VideoProcessorInputView**, HResult>)(LpVtbl[8]))(ptr, (ID3D11Resource*)pResource.Handle, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, (VideoProcessorInputViewDesc*)ppDesc, (ID3D11VideoProcessorInputView**)ppVPIView.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorOutputView(ID3D11Resource* pResource, ID3D11VideoProcessorEnumerator* pEnum, VideoProcessorOutputViewDesc* pDesc, ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, HResult>)(LpVtbl[9]))(ptr, pResource, pEnum, pDesc, ppVPOView);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorOutputView(ref ID3D11Resource pResource, ID3D11VideoProcessorEnumerator* pEnum, VideoProcessorOutputViewDesc* pDesc, ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, HResult>)(LpVtbl[9]))(ptr, (ID3D11Resource*)ppResource, pEnum, pDesc, ppVPOView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorOutputView(ComPtr<ID3D11Resource> pResource, ID3D11VideoProcessorEnumerator* pEnum, VideoProcessorOutputViewDesc* pDesc, ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, HResult>)(LpVtbl[9]))(ptr, (ID3D11Resource*)pResource.Handle, pEnum, pDesc, ppVPOView);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorOutputView(ID3D11Resource* pResource, ref ID3D11VideoProcessorEnumerator pEnum, VideoProcessorOutputViewDesc* pDesc, ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, HResult>)(LpVtbl[9]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)ppEnum, pDesc, ppVPOView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorOutputView(ID3D11Resource* pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, VideoProcessorOutputViewDesc* pDesc, ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, HResult>)(LpVtbl[9]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, pDesc, ppVPOView);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorOutputView(ref ID3D11Resource pResource, ref ID3D11VideoProcessorEnumerator pEnum, VideoProcessorOutputViewDesc* pDesc, ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, HResult>)(LpVtbl[9]))(ptr, (ID3D11Resource*)ppResource, (ID3D11VideoProcessorEnumerator*)ppEnum, pDesc, ppVPOView);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorOutputView(ComPtr<ID3D11Resource> pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, VideoProcessorOutputViewDesc* pDesc, ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, HResult>)(LpVtbl[9]))(ptr, (ID3D11Resource*)pResource.Handle, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, pDesc, ppVPOView);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorOutputView(ID3D11Resource* pResource, ID3D11VideoProcessorEnumerator* pEnum, ref VideoProcessorOutputViewDesc pDesc, ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, HResult>)(LpVtbl[9]))(ptr, pResource, pEnum, (VideoProcessorOutputViewDesc*)ppDesc, ppVPOView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorOutputView(ref ID3D11Resource pResource, ID3D11VideoProcessorEnumerator* pEnum, ref VideoProcessorOutputViewDesc pDesc, ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, HResult>)(LpVtbl[9]))(ptr, (ID3D11Resource*)ppResource, pEnum, (VideoProcessorOutputViewDesc*)ppDesc, ppVPOView);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorOutputView(ComPtr<ID3D11Resource> pResource, ID3D11VideoProcessorEnumerator* pEnum, ref VideoProcessorOutputViewDesc pDesc, ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, HResult>)(LpVtbl[9]))(ptr, (ID3D11Resource*)pResource.Handle, pEnum, (VideoProcessorOutputViewDesc*)ppDesc, ppVPOView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorOutputView(ID3D11Resource* pResource, ref ID3D11VideoProcessorEnumerator pEnum, ref VideoProcessorOutputViewDesc pDesc, ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
			{
				fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, HResult>)(LpVtbl[9]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)ppEnum, (VideoProcessorOutputViewDesc*)ppDesc, ppVPOView);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorOutputView(ID3D11Resource* pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, ref VideoProcessorOutputViewDesc pDesc, ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, HResult>)(LpVtbl[9]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, (VideoProcessorOutputViewDesc*)ppDesc, ppVPOView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorOutputView(ref ID3D11Resource pResource, ref ID3D11VideoProcessorEnumerator pEnum, ref VideoProcessorOutputViewDesc pDesc, ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
				{
					fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, HResult>)(LpVtbl[9]))(ptr, (ID3D11Resource*)ppResource, (ID3D11VideoProcessorEnumerator*)ppEnum, (VideoProcessorOutputViewDesc*)ppDesc, ppVPOView);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorOutputView(ComPtr<ID3D11Resource> pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, ref VideoProcessorOutputViewDesc pDesc, ID3D11VideoProcessorOutputView** ppVPOView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, HResult>)(LpVtbl[9]))(ptr, (ID3D11Resource*)pResource.Handle, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, (VideoProcessorOutputViewDesc*)ppDesc, ppVPOView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorOutputView(ID3D11Resource* pResource, ID3D11VideoProcessorEnumerator* pEnum, VideoProcessorOutputViewDesc* pDesc, ref ID3D11VideoProcessorOutputView* ppVPOView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessorOutputView** pppVPOView = &ppVPOView)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, HResult>)(LpVtbl[9]))(ptr, pResource, pEnum, pDesc, (ID3D11VideoProcessorOutputView**)pppVPOView);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorOutputView(ID3D11Resource* pResource, ID3D11VideoProcessorEnumerator* pEnum, VideoProcessorOutputViewDesc* pDesc, out ComPtr<ID3D11VideoProcessorOutputView> ppVPOView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppVPOView = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, HResult>)(LpVtbl[9]))(ptr, pResource, pEnum, pDesc, (ID3D11VideoProcessorOutputView**)ppVPOView.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorOutputView(ref ID3D11Resource pResource, ID3D11VideoProcessorEnumerator* pEnum, VideoProcessorOutputViewDesc* pDesc, ref ID3D11VideoProcessorOutputView* ppVPOView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoProcessorOutputView** pppVPOView = &ppVPOView)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, HResult>)(LpVtbl[9]))(ptr, (ID3D11Resource*)ppResource, pEnum, pDesc, (ID3D11VideoProcessorOutputView**)pppVPOView);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorOutputView(ComPtr<ID3D11Resource> pResource, ID3D11VideoProcessorEnumerator* pEnum, VideoProcessorOutputViewDesc* pDesc, out ComPtr<ID3D11VideoProcessorOutputView> ppVPOView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppVPOView = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, HResult>)(LpVtbl[9]))(ptr, (ID3D11Resource*)pResource.Handle, pEnum, pDesc, (ID3D11VideoProcessorOutputView**)ppVPOView.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorOutputView(ID3D11Resource* pResource, ref ID3D11VideoProcessorEnumerator pEnum, VideoProcessorOutputViewDesc* pDesc, ref ID3D11VideoProcessorOutputView* ppVPOView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
			{
				fixed (ID3D11VideoProcessorOutputView** pppVPOView = &ppVPOView)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, HResult>)(LpVtbl[9]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)ppEnum, pDesc, (ID3D11VideoProcessorOutputView**)pppVPOView);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorOutputView(ID3D11Resource* pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, VideoProcessorOutputViewDesc* pDesc, out ComPtr<ID3D11VideoProcessorOutputView> ppVPOView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppVPOView = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, HResult>)(LpVtbl[9]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, pDesc, (ID3D11VideoProcessorOutputView**)ppVPOView.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorOutputView(ref ID3D11Resource pResource, ref ID3D11VideoProcessorEnumerator pEnum, VideoProcessorOutputViewDesc* pDesc, ref ID3D11VideoProcessorOutputView* ppVPOView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
				{
					fixed (ID3D11VideoProcessorOutputView** pppVPOView = &ppVPOView)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, HResult>)(LpVtbl[9]))(ptr, (ID3D11Resource*)ppResource, (ID3D11VideoProcessorEnumerator*)ppEnum, pDesc, (ID3D11VideoProcessorOutputView**)pppVPOView);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorOutputView(ComPtr<ID3D11Resource> pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, VideoProcessorOutputViewDesc* pDesc, out ComPtr<ID3D11VideoProcessorOutputView> ppVPOView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppVPOView = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, HResult>)(LpVtbl[9]))(ptr, (ID3D11Resource*)pResource.Handle, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, pDesc, (ID3D11VideoProcessorOutputView**)ppVPOView.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorOutputView(ID3D11Resource* pResource, ID3D11VideoProcessorEnumerator* pEnum, ref VideoProcessorOutputViewDesc pDesc, ref ID3D11VideoProcessorOutputView* ppVPOView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
			{
				fixed (ID3D11VideoProcessorOutputView** pppVPOView = &ppVPOView)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, HResult>)(LpVtbl[9]))(ptr, pResource, pEnum, (VideoProcessorOutputViewDesc*)ppDesc, (ID3D11VideoProcessorOutputView**)pppVPOView);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorOutputView(ID3D11Resource* pResource, ID3D11VideoProcessorEnumerator* pEnum, ref VideoProcessorOutputViewDesc pDesc, out ComPtr<ID3D11VideoProcessorOutputView> ppVPOView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
			{
				ppVPOView = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, HResult>)(LpVtbl[9]))(ptr, pResource, pEnum, (VideoProcessorOutputViewDesc*)ppDesc, (ID3D11VideoProcessorOutputView**)ppVPOView.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorOutputView(ref ID3D11Resource pResource, ID3D11VideoProcessorEnumerator* pEnum, ref VideoProcessorOutputViewDesc pDesc, ref ID3D11VideoProcessorOutputView* ppVPOView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
				{
					fixed (ID3D11VideoProcessorOutputView** pppVPOView = &ppVPOView)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, HResult>)(LpVtbl[9]))(ptr, (ID3D11Resource*)ppResource, pEnum, (VideoProcessorOutputViewDesc*)ppDesc, (ID3D11VideoProcessorOutputView**)pppVPOView);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorOutputView(ComPtr<ID3D11Resource> pResource, ID3D11VideoProcessorEnumerator* pEnum, ref VideoProcessorOutputViewDesc pDesc, out ComPtr<ID3D11VideoProcessorOutputView> ppVPOView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
			{
				ppVPOView = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, HResult>)(LpVtbl[9]))(ptr, (ID3D11Resource*)pResource.Handle, pEnum, (VideoProcessorOutputViewDesc*)ppDesc, (ID3D11VideoProcessorOutputView**)ppVPOView.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorOutputView(ID3D11Resource* pResource, ref ID3D11VideoProcessorEnumerator pEnum, ref VideoProcessorOutputViewDesc pDesc, ref ID3D11VideoProcessorOutputView* ppVPOView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
			{
				fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
				{
					fixed (ID3D11VideoProcessorOutputView** pppVPOView = &ppVPOView)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, HResult>)(LpVtbl[9]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)ppEnum, (VideoProcessorOutputViewDesc*)ppDesc, (ID3D11VideoProcessorOutputView**)pppVPOView);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorOutputView(ID3D11Resource* pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, ref VideoProcessorOutputViewDesc pDesc, out ComPtr<ID3D11VideoProcessorOutputView> ppVPOView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
			{
				ppVPOView = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, HResult>)(LpVtbl[9]))(ptr, pResource, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, (VideoProcessorOutputViewDesc*)ppDesc, (ID3D11VideoProcessorOutputView**)ppVPOView.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorOutputView(ref ID3D11Resource pResource, ref ID3D11VideoProcessorEnumerator pEnum, ref VideoProcessorOutputViewDesc pDesc, ref ID3D11VideoProcessorOutputView* ppVPOView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (ID3D11VideoProcessorEnumerator* ppEnum = &pEnum)
				{
					fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
					{
						fixed (ID3D11VideoProcessorOutputView** pppVPOView = &ppVPOView)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, HResult>)(LpVtbl[9]))(ptr, (ID3D11Resource*)ppResource, (ID3D11VideoProcessorEnumerator*)ppEnum, (VideoProcessorOutputViewDesc*)ppDesc, (ID3D11VideoProcessorOutputView**)pppVPOView);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorOutputView(ComPtr<ID3D11Resource> pResource, ComPtr<ID3D11VideoProcessorEnumerator> pEnum, ref VideoProcessorOutputViewDesc pDesc, out ComPtr<ID3D11VideoProcessorOutputView> ppVPOView) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorOutputViewDesc* ppDesc = &pDesc)
			{
				ppVPOView = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, ID3D11Resource*, ID3D11VideoProcessorEnumerator*, VideoProcessorOutputViewDesc*, ID3D11VideoProcessorOutputView**, HResult>)(LpVtbl[9]))(ptr, (ID3D11Resource*)pResource.Handle, (ID3D11VideoProcessorEnumerator*)pEnum.Handle, (VideoProcessorOutputViewDesc*)ppDesc, (ID3D11VideoProcessorOutputView**)ppVPOView.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorEnumerator(VideoProcessorContentDesc* pDesc, ID3D11VideoProcessorEnumerator** ppEnum) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, VideoProcessorContentDesc*, ID3D11VideoProcessorEnumerator**, HResult>)(LpVtbl[10]))(ptr, pDesc, ppEnum);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorEnumerator(ref VideoProcessorContentDesc pDesc, ID3D11VideoProcessorEnumerator** ppEnum) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorContentDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, VideoProcessorContentDesc*, ID3D11VideoProcessorEnumerator**, HResult>)(LpVtbl[10]))(ptr, (VideoProcessorContentDesc*)ppDesc, ppEnum);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorEnumerator(VideoProcessorContentDesc* pDesc, ref ID3D11VideoProcessorEnumerator* ppEnum) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessorEnumerator** pppEnum = &ppEnum)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, VideoProcessorContentDesc*, ID3D11VideoProcessorEnumerator**, HResult>)(LpVtbl[10]))(ptr, pDesc, (ID3D11VideoProcessorEnumerator**)pppEnum);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorEnumerator(VideoProcessorContentDesc* pDesc, out ComPtr<ID3D11VideoProcessorEnumerator> ppEnum) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppEnum = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, VideoProcessorContentDesc*, ID3D11VideoProcessorEnumerator**, HResult>)(LpVtbl[10]))(ptr, pDesc, (ID3D11VideoProcessorEnumerator**)ppEnum.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorEnumerator(ref VideoProcessorContentDesc pDesc, ref ID3D11VideoProcessorEnumerator* ppEnum) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorContentDesc* ppDesc = &pDesc)
			{
				fixed (ID3D11VideoProcessorEnumerator** pppEnum = &ppEnum)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, VideoProcessorContentDesc*, ID3D11VideoProcessorEnumerator**, HResult>)(LpVtbl[10]))(ptr, (VideoProcessorContentDesc*)ppDesc, (ID3D11VideoProcessorEnumerator**)pppEnum);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CreateVideoProcessorEnumerator(ref VideoProcessorContentDesc pDesc, out ComPtr<ID3D11VideoProcessorEnumerator> ppEnum) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorContentDesc* ppDesc = &pDesc)
			{
				ppEnum = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, VideoProcessorContentDesc*, ID3D11VideoProcessorEnumerator**, HResult>)(LpVtbl[10]))(ptr, (VideoProcessorContentDesc*)ppDesc, (ID3D11VideoProcessorEnumerator**)ppEnum.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint GetVideoDecoderProfileCount() 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, uint>)(LpVtbl[11]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetVideoDecoderProfile(uint index, Guid* pDecoderProfile) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, uint, Guid*, HResult>)(LpVtbl[12]))(ptr, index, pDecoderProfile);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetVideoDecoderProfile(uint index, ref Guid pDecoderProfile) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, uint, Guid*, HResult>)(LpVtbl[12]))(ptr, index, (Guid*)ppDecoderProfile);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckVideoDecoderFormat(Guid* pDecoderProfile, Format format, Bool32* pSupported) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Format, Bool32*, HResult>)(LpVtbl[13]))(ptr, pDecoderProfile, format, pSupported);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckVideoDecoderFormat(ref Guid pDecoderProfile, Format format, Bool32* pSupported) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Format, Bool32*, HResult>)(LpVtbl[13]))(ptr, (Guid*)ppDecoderProfile, format, pSupported);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckVideoDecoderFormat(Guid* pDecoderProfile, Format format, ref Bool32 pSupported) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppSupported = &pSupported)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Format, Bool32*, HResult>)(LpVtbl[13]))(ptr, pDecoderProfile, format, (Bool32*)ppSupported);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckVideoDecoderFormat(ref Guid pDecoderProfile, Format format, ref Bool32 pSupported) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (Bool32* ppSupported = &pSupported)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Format, Bool32*, HResult>)(LpVtbl[13]))(ptr, (Guid*)ppDecoderProfile, format, (Bool32*)ppSupported);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetVideoDecoderConfigCount(VideoDecoderDesc* pDesc, uint* pCount) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, VideoDecoderDesc*, uint*, HResult>)(LpVtbl[14]))(ptr, pDesc, pCount);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetVideoDecoderConfigCount(ref VideoDecoderDesc pDesc, uint* pCount) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecoderDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, VideoDecoderDesc*, uint*, HResult>)(LpVtbl[14]))(ptr, (VideoDecoderDesc*)ppDesc, pCount);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetVideoDecoderConfigCount(VideoDecoderDesc* pDesc, ref uint pCount) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppCount = &pCount)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, VideoDecoderDesc*, uint*, HResult>)(LpVtbl[14]))(ptr, pDesc, (uint*)ppCount);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetVideoDecoderConfigCount(ref VideoDecoderDesc pDesc, ref uint pCount) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecoderDesc* ppDesc = &pDesc)
			{
				fixed (uint* ppCount = &pCount)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, VideoDecoderDesc*, uint*, HResult>)(LpVtbl[14]))(ptr, (VideoDecoderDesc*)ppDesc, (uint*)ppCount);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetVideoDecoderConfig(VideoDecoderDesc* pDesc, uint index, VideoDecoderConfig* pConfig) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, VideoDecoderDesc*, uint, VideoDecoderConfig*, HResult>)(LpVtbl[15]))(ptr, pDesc, index, pConfig);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetVideoDecoderConfig(ref VideoDecoderDesc pDesc, uint index, VideoDecoderConfig* pConfig) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecoderDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, VideoDecoderDesc*, uint, VideoDecoderConfig*, HResult>)(LpVtbl[15]))(ptr, (VideoDecoderDesc*)ppDesc, index, pConfig);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetVideoDecoderConfig(VideoDecoderDesc* pDesc, uint index, ref VideoDecoderConfig pConfig) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecoderConfig* ppConfig = &pConfig)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, VideoDecoderDesc*, uint, VideoDecoderConfig*, HResult>)(LpVtbl[15]))(ptr, pDesc, index, (VideoDecoderConfig*)ppConfig);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetVideoDecoderConfig(ref VideoDecoderDesc pDesc, uint index, ref VideoDecoderConfig pConfig) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecoderDesc* ppDesc = &pDesc)
			{
				fixed (VideoDecoderConfig* ppConfig = &pConfig)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, VideoDecoderDesc*, uint, VideoDecoderConfig*, HResult>)(LpVtbl[15]))(ptr, (VideoDecoderDesc*)ppDesc, index, (VideoDecoderConfig*)ppConfig);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetContentProtectionCaps(Guid* pCryptoType, Guid* pDecoderProfile, VideoContentProtectionCaps* pCaps) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, VideoContentProtectionCaps*, HResult>)(LpVtbl[16]))(ptr, pCryptoType, pDecoderProfile, pCaps);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetContentProtectionCaps(ref Guid pCryptoType, Guid* pDecoderProfile, VideoContentProtectionCaps* pCaps) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, VideoContentProtectionCaps*, HResult>)(LpVtbl[16]))(ptr, (Guid*)ppCryptoType, pDecoderProfile, pCaps);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetContentProtectionCaps(Guid* pCryptoType, ref Guid pDecoderProfile, VideoContentProtectionCaps* pCaps) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, VideoContentProtectionCaps*, HResult>)(LpVtbl[16]))(ptr, pCryptoType, (Guid*)ppDecoderProfile, pCaps);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetContentProtectionCaps(ref Guid pCryptoType, ref Guid pDecoderProfile, VideoContentProtectionCaps* pCaps) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, VideoContentProtectionCaps*, HResult>)(LpVtbl[16]))(ptr, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, pCaps);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetContentProtectionCaps(Guid* pCryptoType, Guid* pDecoderProfile, ref VideoContentProtectionCaps pCaps) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoContentProtectionCaps* ppCaps = &pCaps)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, VideoContentProtectionCaps*, HResult>)(LpVtbl[16]))(ptr, pCryptoType, pDecoderProfile, (VideoContentProtectionCaps*)ppCaps);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetContentProtectionCaps(ref Guid pCryptoType, Guid* pDecoderProfile, ref VideoContentProtectionCaps pCaps) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (VideoContentProtectionCaps* ppCaps = &pCaps)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, VideoContentProtectionCaps*, HResult>)(LpVtbl[16]))(ptr, (Guid*)ppCryptoType, pDecoderProfile, (VideoContentProtectionCaps*)ppCaps);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetContentProtectionCaps(Guid* pCryptoType, ref Guid pDecoderProfile, ref VideoContentProtectionCaps pCaps) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (VideoContentProtectionCaps* ppCaps = &pCaps)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, VideoContentProtectionCaps*, HResult>)(LpVtbl[16]))(ptr, pCryptoType, (Guid*)ppDecoderProfile, (VideoContentProtectionCaps*)ppCaps);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetContentProtectionCaps(ref Guid pCryptoType, ref Guid pDecoderProfile, ref VideoContentProtectionCaps pCaps) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (VideoContentProtectionCaps* ppCaps = &pCaps)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, VideoContentProtectionCaps*, HResult>)(LpVtbl[16]))(ptr, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, (VideoContentProtectionCaps*)ppCaps);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckCryptoKeyExchange(Guid* pCryptoType, Guid* pDecoderProfile, uint index, Guid* pKeyExchangeType) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, uint, Guid*, HResult>)(LpVtbl[17]))(ptr, pCryptoType, pDecoderProfile, index, pKeyExchangeType);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckCryptoKeyExchange(ref Guid pCryptoType, Guid* pDecoderProfile, uint index, Guid* pKeyExchangeType) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, uint, Guid*, HResult>)(LpVtbl[17]))(ptr, (Guid*)ppCryptoType, pDecoderProfile, index, pKeyExchangeType);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckCryptoKeyExchange(Guid* pCryptoType, ref Guid pDecoderProfile, uint index, Guid* pKeyExchangeType) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, uint, Guid*, HResult>)(LpVtbl[17]))(ptr, pCryptoType, (Guid*)ppDecoderProfile, index, pKeyExchangeType);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckCryptoKeyExchange(ref Guid pCryptoType, ref Guid pDecoderProfile, uint index, Guid* pKeyExchangeType) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, uint, Guid*, HResult>)(LpVtbl[17]))(ptr, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, index, pKeyExchangeType);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckCryptoKeyExchange(Guid* pCryptoType, Guid* pDecoderProfile, uint index, ref Guid pKeyExchangeType) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, uint, Guid*, HResult>)(LpVtbl[17]))(ptr, pCryptoType, pDecoderProfile, index, (Guid*)ppKeyExchangeType);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckCryptoKeyExchange(ref Guid pCryptoType, Guid* pDecoderProfile, uint index, ref Guid pKeyExchangeType) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, uint, Guid*, HResult>)(LpVtbl[17]))(ptr, (Guid*)ppCryptoType, pDecoderProfile, index, (Guid*)ppKeyExchangeType);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckCryptoKeyExchange(Guid* pCryptoType, ref Guid pDecoderProfile, uint index, ref Guid pKeyExchangeType) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppDecoderProfile = &pDecoderProfile)
			{
				fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, uint, Guid*, HResult>)(LpVtbl[17]))(ptr, pCryptoType, (Guid*)ppDecoderProfile, index, (Guid*)ppKeyExchangeType);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckCryptoKeyExchange(ref Guid pCryptoType, ref Guid pDecoderProfile, uint index, ref Guid pKeyExchangeType) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppCryptoType = &pCryptoType)
			{
				fixed (Guid* ppDecoderProfile = &pDecoderProfile)
				{
					fixed (Guid* ppKeyExchangeType = &pKeyExchangeType)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, Guid*, uint, Guid*, HResult>)(LpVtbl[17]))(ptr, (Guid*)ppCryptoType, (Guid*)ppDecoderProfile, index, (Guid*)ppKeyExchangeType);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateData(Guid* guid, uint dataSize, void* pData) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, uint, void*, HResult>)(LpVtbl[18]))(ptr, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateData(ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, uint, void*, HResult>)(LpVtbl[18]))(ptr, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(Guid* guid, IUnknown* pData) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, IUnknown*, HResult>)(LpVtbl[19]))(ptr, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(ref Guid guid, IUnknown* pData) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, IUnknown*, HResult>)(LpVtbl[19]))(ptr, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(Guid* guid, ref IUnknown pData) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, IUnknown*, HResult>)(LpVtbl[19]))(ptr, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, IUnknown*, HResult>)(LpVtbl[19]))(ptr, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(ref Guid guid, ref IUnknown pData) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, IUnknown*, HResult>)(LpVtbl[19]))(ptr, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D11VideoDevice* ptr = (ID3D11VideoDevice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoDevice*, Guid*, IUnknown*, HResult>)(LpVtbl[19]))(ptr, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IUnknown (ID3D11VideoDevice value)
		{
			return Unsafe.As<ID3D11VideoDevice, IUnknown>(ref value);
		}

	}

}
