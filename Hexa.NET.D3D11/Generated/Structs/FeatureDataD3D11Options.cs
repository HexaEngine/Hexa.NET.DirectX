// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D11
{
	/// <summary>
	/// =============================================================================<br/>
	/// In the D3D11_FEATURE_DATA_D3D11_OPTIONS struct below, <br/>
	/// the following groupings of capabilities will always be set identically. <br/>
	/// That is, all the BOOLs in a grouping will be TRUE or FALSE together. <br/>
	/// Group: DiscardAPIsSeenByDriver, FlagsForUpdateAndCopySeenByDriver <br/>
	/// Group: ClearView, CopyWithOverlap, ConstantBufferPartialUpdate <br/>
	/// ConstantBufferOffsetting, MapNoOverwriteOnDynamicConstantBuffer <br/>
	/// Group: MapNoOverwriteOnDynamicBufferSRV, <br/>
	/// MultisampleRTVWithForcedSampleCountOne <br/>
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct FeatureDataD3D11Options
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		public Bool32 OutputMergerLogicOp;

		/// <summary>
		/// To be documented.
		/// </summary>
		public Bool32 UAVOnlyRenderingForcedSampleCount;

		/// <summary>
		/// To be documented.
		/// </summary>
		public Bool32 DiscardAPIsSeenByDriver;

		/// <summary>
		/// To be documented.
		/// </summary>
		public Bool32 FlagsForUpdateAndCopySeenByDriver;

		/// <summary>
		/// To be documented.
		/// </summary>
		public Bool32 ClearView;

		/// <summary>
		/// To be documented.
		/// </summary>
		public Bool32 CopyWithOverlap;

		/// <summary>
		/// To be documented.
		/// </summary>
		public Bool32 ConstantBufferPartialUpdate;

		/// <summary>
		/// To be documented.
		/// </summary>
		public Bool32 ConstantBufferOffsetting;

		/// <summary>
		/// To be documented.
		/// </summary>
		public Bool32 MapNoOverwriteOnDynamicConstantBuffer;

		/// <summary>
		/// To be documented.
		/// </summary>
		public Bool32 MapNoOverwriteOnDynamicBufferSRV;

		/// <summary>
		/// To be documented.
		/// </summary>
		public Bool32 MultisampleRTVWithForcedSampleCountOne;

		/// <summary>
		/// To be documented.
		/// </summary>
		public Bool32 SAD4ShaderInstructions;

		/// <summary>
		/// To be documented.
		/// </summary>
		public Bool32 ExtendedDoublesShaderInstructions;

		/// <summary>
		/// To be documented.
		/// </summary>
		public Bool32 ExtendedResourceSharing;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe FeatureDataD3D11Options(Bool32 outputMergerLogicOp = default, Bool32 uavOnlyRenderingForcedSampleCount = default, Bool32 discardApIsSeenByDriver = default, Bool32 flagsForUpdateAndCopySeenByDriver = default, Bool32 clearView = default, Bool32 copyWithOverlap = default, Bool32 constantBufferPartialUpdate = default, Bool32 constantBufferOffsetting = default, Bool32 mapNoOverwriteOnDynamicConstantBuffer = default, Bool32 mapNoOverwriteOnDynamicBufferSrv = default, Bool32 multisampleRtvWithForcedSampleCountOne = default, Bool32 sad4ShaderInstructions = default, Bool32 extendedDoublesShaderInstructions = default, Bool32 extendedResourceSharing = default)
		{
			OutputMergerLogicOp = outputMergerLogicOp;
			UAVOnlyRenderingForcedSampleCount = uavOnlyRenderingForcedSampleCount;
			DiscardAPIsSeenByDriver = discardApIsSeenByDriver;
			FlagsForUpdateAndCopySeenByDriver = flagsForUpdateAndCopySeenByDriver;
			ClearView = clearView;
			CopyWithOverlap = copyWithOverlap;
			ConstantBufferPartialUpdate = constantBufferPartialUpdate;
			ConstantBufferOffsetting = constantBufferOffsetting;
			MapNoOverwriteOnDynamicConstantBuffer = mapNoOverwriteOnDynamicConstantBuffer;
			MapNoOverwriteOnDynamicBufferSRV = mapNoOverwriteOnDynamicBufferSrv;
			MultisampleRTVWithForcedSampleCountOne = multisampleRtvWithForcedSampleCountOne;
			SAD4ShaderInstructions = sad4ShaderInstructions;
			ExtendedDoublesShaderInstructions = extendedDoublesShaderInstructions;
			ExtendedResourceSharing = extendedResourceSharing;
		}


	}

}
