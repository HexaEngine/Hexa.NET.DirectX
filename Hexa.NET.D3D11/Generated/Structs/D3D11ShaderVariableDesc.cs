// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D11
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "_D3D11_SHADER_VARIABLE_DESC")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct D3D11ShaderVariableDesc
	{
		/// <summary>
		/// Name of the variable<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "Name")]
		[NativeName(NativeNameType.Type, "LPCSTR")]
		public unsafe byte* Name;

		/// <summary>
		/// Offset in constant buffer's backing store<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "StartOffset")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint StartOffset;

		/// <summary>
		/// Size of variable (in bytes)<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "Size")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Size;

		/// <summary>
		/// Variable flags<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "uFlags")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint UFlags;

		/// <summary>
		/// Raw pointer to default value<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "DefaultValue")]
		[NativeName(NativeNameType.Type, "LPVOID")]
		public unsafe void* DefaultValue;

		/// <summary>
		/// First texture index (or -1 if no textures used)<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "StartTexture")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint StartTexture;

		/// <summary>
		/// Number of texture slots possibly used.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "TextureSize")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint TextureSize;

		/// <summary>
		/// First sampler index (or -1 if no textures used)<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "StartSampler")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint StartSampler;

		/// <summary>
		/// Number of sampler slots possibly used.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "SamplerSize")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint SamplerSize;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe D3D11ShaderVariableDesc(byte* name = default, uint startOffset = default, uint size = default, uint uFlags = default, void* defaultValue = default, uint startTexture = default, uint textureSize = default, uint startSampler = default, uint samplerSize = default)
		{
			Name = name;
			StartOffset = startOffset;
			Size = size;
			UFlags = uFlags;
			DefaultValue = defaultValue;
			StartTexture = startTexture;
			TextureSize = textureSize;
			StartSampler = startSampler;
			SamplerSize = samplerSize;
		}


	}

}
