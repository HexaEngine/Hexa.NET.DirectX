// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D11
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct KeyExchangeHwProtectionInputData
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		public uint PrivateDataSize;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint HWProtectionDataSize;

		/// <summary>
		/// To be documented.
		/// </summary>
		public byte PbInput_0;
		public byte PbInput_1;
		public byte PbInput_2;
		public byte PbInput_3;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe KeyExchangeHwProtectionInputData(uint privateDataSize = default, uint hwProtectionDataSize = default, byte* pbInput = default)
		{
			PrivateDataSize = privateDataSize;
			HWProtectionDataSize = hwProtectionDataSize;
			if (pbInput != default(byte*))
			{
				PbInput_0 = pbInput[0];
				PbInput_1 = pbInput[1];
				PbInput_2 = pbInput[2];
				PbInput_3 = pbInput[3];
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe KeyExchangeHwProtectionInputData(uint privateDataSize = default, uint hwProtectionDataSize = default, Span<byte> pbInput = default)
		{
			PrivateDataSize = privateDataSize;
			HWProtectionDataSize = hwProtectionDataSize;
			if (pbInput != default(Span<byte>))
			{
				PbInput_0 = pbInput[0];
				PbInput_1 = pbInput[1];
				PbInput_2 = pbInput[2];
				PbInput_3 = pbInput[3];
			}
		}


	}

}
