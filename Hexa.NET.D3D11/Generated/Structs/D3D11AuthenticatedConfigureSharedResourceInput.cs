// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D11
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE_INPUT")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct D3D11AuthenticatedConfigureSharedResourceInput
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Parameters")]
		[NativeName(NativeNameType.Type, "D3D11_AUTHENTICATED_CONFIGURE_INPUT")]
		public D3D11AuthenticatedConfigureInput Parameters;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ProcessType")]
		[NativeName(NativeNameType.Type, "D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE")]
		public D3D11AuthenticatedProcessIdentifierType ProcessType;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ProcessHandle")]
		[NativeName(NativeNameType.Type, "HANDLE")]
		public nint ProcessHandle;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "AllowAccess")]
		[NativeName(NativeNameType.Type, "BOOL")]
		public int AllowAccess;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe D3D11AuthenticatedConfigureSharedResourceInput(D3D11AuthenticatedConfigureInput parameters = default, D3D11AuthenticatedProcessIdentifierType processType = default, nint processHandle = default, int allowAccess = default)
		{
			Parameters = parameters;
			ProcessType = processType;
			ProcessHandle = processHandle;
			AllowAccess = allowAccess;
		}


	}

}
