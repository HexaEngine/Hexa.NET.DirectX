// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D11
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("c4e7374c-6243-4d1b-ae87-52b4f740e261")]
	public partial struct ID3D11VideoContext2 : IComObject, IComObject<ID3D11VideoContext2>, IComObject<ID3D11VideoContext1>, IComObject<ID3D11VideoContext>, IComObject<ID3D11DeviceChild>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("c4e7374c-6243-4d1b-ae87-52b4f740e261");

		public unsafe ID3D11VideoContext2 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface(Guid* riid, void** ppvObject) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface(ref Guid riid, void** ppvObject) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface<T>(out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface<T>(ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint AddRef() 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint Release() 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetDevice(ID3D11Device** ppDevice) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11Device**, void>)(LpVtbl[3]))(ptr, ppDevice);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetDevice(ref ID3D11Device* ppDevice) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Device** pppDevice = &ppDevice)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11Device**, void>)(LpVtbl[3]))(ptr, (ID3D11Device**)pppDevice);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetDevice(out ComPtr<ID3D11Device> ppDevice) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppDevice = default;
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11Device**, void>)(LpVtbl[3]))(ptr, (ID3D11Device**)ppDevice.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData(Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, uint*, void*, HResult>)(LpVtbl[4]))(ptr, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData(ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, uint*, void*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData(Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, uint*, void*, HResult>)(LpVtbl[4]))(ptr, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData(ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, uint*, void*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData<T>(Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, uint*, void*, HResult>)(LpVtbl[4]))(ptr, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData<T>(ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, uint*, void*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData<T>(Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, uint*, void*, HResult>)(LpVtbl[4]))(ptr, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData<T>(ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, uint*, void*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateData(Guid* guid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, uint, void*, HResult>)(LpVtbl[5]))(ptr, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateData(ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, uint, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(Guid* guid, IUnknown* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, IUnknown*, HResult>)(LpVtbl[6]))(ptr, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(ref Guid guid, IUnknown* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, IUnknown*, HResult>)(LpVtbl[6]))(ptr, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(Guid* guid, ref IUnknown pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, IUnknown*, HResult>)(LpVtbl[6]))(ptr, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, IUnknown*, HResult>)(LpVtbl[6]))(ptr, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(ref Guid guid, ref IUnknown pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, IUnknown*, HResult>)(LpVtbl[6]))(ptr, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, Guid*, IUnknown*, HResult>)(LpVtbl[6]))(ptr, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDecoderBuffer(ID3D11VideoDecoder* pDecoder, VideoDecoderBufferType type, uint* pBufferSize, void** ppBuffer) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderBufferType, uint*, void**, HResult>)(LpVtbl[7]))(ptr, pDecoder, type, pBufferSize, ppBuffer);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDecoderBuffer(ref ID3D11VideoDecoder pDecoder, VideoDecoderBufferType type, uint* pBufferSize, void** ppBuffer) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderBufferType, uint*, void**, HResult>)(LpVtbl[7]))(ptr, (ID3D11VideoDecoder*)ppDecoder, type, pBufferSize, ppBuffer);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDecoderBuffer(ComPtr<ID3D11VideoDecoder> pDecoder, VideoDecoderBufferType type, uint* pBufferSize, void** ppBuffer) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderBufferType, uint*, void**, HResult>)(LpVtbl[7]))(ptr, (ID3D11VideoDecoder*)pDecoder.Handle, type, pBufferSize, ppBuffer);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDecoderBuffer(ID3D11VideoDecoder* pDecoder, VideoDecoderBufferType type, ref uint pBufferSize, void** ppBuffer) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppBufferSize = &pBufferSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderBufferType, uint*, void**, HResult>)(LpVtbl[7]))(ptr, pDecoder, type, (uint*)ppBufferSize, ppBuffer);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDecoderBuffer(ref ID3D11VideoDecoder pDecoder, VideoDecoderBufferType type, ref uint pBufferSize, void** ppBuffer) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (uint* ppBufferSize = &pBufferSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderBufferType, uint*, void**, HResult>)(LpVtbl[7]))(ptr, (ID3D11VideoDecoder*)ppDecoder, type, (uint*)ppBufferSize, ppBuffer);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDecoderBuffer(ComPtr<ID3D11VideoDecoder> pDecoder, VideoDecoderBufferType type, ref uint pBufferSize, void** ppBuffer) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppBufferSize = &pBufferSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderBufferType, uint*, void**, HResult>)(LpVtbl[7]))(ptr, (ID3D11VideoDecoder*)pDecoder.Handle, type, (uint*)ppBufferSize, ppBuffer);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDecoderBuffer<T>(ID3D11VideoDecoder* pDecoder, VideoDecoderBufferType type, uint* pBufferSize, out ComPtr<T> ppBuffer) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppBuffer = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderBufferType, uint*, void**, HResult>)(LpVtbl[7]))(ptr, pDecoder, type, pBufferSize, (void**)ppBuffer.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDecoderBuffer<T>(ComPtr<ID3D11VideoDecoder> pDecoder, VideoDecoderBufferType type, uint* pBufferSize, out ComPtr<T> ppBuffer) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppBuffer = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderBufferType, uint*, void**, HResult>)(LpVtbl[7]))(ptr, (ID3D11VideoDecoder*)pDecoder.Handle, type, pBufferSize, (void**)ppBuffer.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDecoderBuffer<T>(ID3D11VideoDecoder* pDecoder, VideoDecoderBufferType type, ref uint pBufferSize, out ComPtr<T> ppBuffer) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppBufferSize = &pBufferSize)
			{
				ppBuffer = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderBufferType, uint*, void**, HResult>)(LpVtbl[7]))(ptr, pDecoder, type, (uint*)ppBufferSize, (void**)ppBuffer.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDecoderBuffer<T>(ComPtr<ID3D11VideoDecoder> pDecoder, VideoDecoderBufferType type, ref uint pBufferSize, out ComPtr<T> ppBuffer) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppBufferSize = &pBufferSize)
			{
				ppBuffer = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderBufferType, uint*, void**, HResult>)(LpVtbl[7]))(ptr, (ID3D11VideoDecoder*)pDecoder.Handle, type, (uint*)ppBufferSize, (void**)ppBuffer.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult ReleaseDecoderBuffer(ID3D11VideoDecoder* pDecoder, VideoDecoderBufferType type) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderBufferType, HResult>)(LpVtbl[8]))(ptr, pDecoder, type);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult ReleaseDecoderBuffer(ref ID3D11VideoDecoder pDecoder, VideoDecoderBufferType type) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderBufferType, HResult>)(LpVtbl[8]))(ptr, (ID3D11VideoDecoder*)ppDecoder, type);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult ReleaseDecoderBuffer(ComPtr<ID3D11VideoDecoder> pDecoder, VideoDecoderBufferType type) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderBufferType, HResult>)(LpVtbl[8]))(ptr, (ID3D11VideoDecoder*)pDecoder.Handle, type);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DecoderBeginFrame(ID3D11VideoDecoder* pDecoder, ID3D11VideoDecoderOutputView* pView, uint contentKeySize, void* pContentKey) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, HResult>)(LpVtbl[9]))(ptr, pDecoder, pView, contentKeySize, pContentKey);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DecoderBeginFrame(ref ID3D11VideoDecoder pDecoder, ID3D11VideoDecoderOutputView* pView, uint contentKeySize, void* pContentKey) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, HResult>)(LpVtbl[9]))(ptr, (ID3D11VideoDecoder*)ppDecoder, pView, contentKeySize, pContentKey);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DecoderBeginFrame(ComPtr<ID3D11VideoDecoder> pDecoder, ID3D11VideoDecoderOutputView* pView, uint contentKeySize, void* pContentKey) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, HResult>)(LpVtbl[9]))(ptr, (ID3D11VideoDecoder*)pDecoder.Handle, pView, contentKeySize, pContentKey);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DecoderBeginFrame(ID3D11VideoDecoder* pDecoder, ref ID3D11VideoDecoderOutputView pView, uint contentKeySize, void* pContentKey) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoDecoderOutputView* ppView = &pView)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, HResult>)(LpVtbl[9]))(ptr, pDecoder, (ID3D11VideoDecoderOutputView*)ppView, contentKeySize, pContentKey);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DecoderBeginFrame(ID3D11VideoDecoder* pDecoder, ComPtr<ID3D11VideoDecoderOutputView> pView, uint contentKeySize, void* pContentKey) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, HResult>)(LpVtbl[9]))(ptr, pDecoder, (ID3D11VideoDecoderOutputView*)pView.Handle, contentKeySize, pContentKey);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DecoderBeginFrame(ref ID3D11VideoDecoder pDecoder, ref ID3D11VideoDecoderOutputView pView, uint contentKeySize, void* pContentKey) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (ID3D11VideoDecoderOutputView* ppView = &pView)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, HResult>)(LpVtbl[9]))(ptr, (ID3D11VideoDecoder*)ppDecoder, (ID3D11VideoDecoderOutputView*)ppView, contentKeySize, pContentKey);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DecoderBeginFrame(ComPtr<ID3D11VideoDecoder> pDecoder, ComPtr<ID3D11VideoDecoderOutputView> pView, uint contentKeySize, void* pContentKey) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, ID3D11VideoDecoderOutputView*, uint, void*, HResult>)(LpVtbl[9]))(ptr, (ID3D11VideoDecoder*)pDecoder.Handle, (ID3D11VideoDecoderOutputView*)pView.Handle, contentKeySize, pContentKey);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DecoderEndFrame(ID3D11VideoDecoder* pDecoder) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, HResult>)(LpVtbl[10]))(ptr, pDecoder);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DecoderEndFrame(ref ID3D11VideoDecoder pDecoder) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, HResult>)(LpVtbl[10]))(ptr, (ID3D11VideoDecoder*)ppDecoder);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DecoderEndFrame(ComPtr<ID3D11VideoDecoder> pDecoder) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, HResult>)(LpVtbl[10]))(ptr, (ID3D11VideoDecoder*)pDecoder.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SubmitDecoderBuffers(ID3D11VideoDecoder* pDecoder, uint numBuffers, VideoDecoderBufferDesc* pBufferDesc) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, uint, VideoDecoderBufferDesc*, HResult>)(LpVtbl[11]))(ptr, pDecoder, numBuffers, pBufferDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SubmitDecoderBuffers(ref ID3D11VideoDecoder pDecoder, uint numBuffers, VideoDecoderBufferDesc* pBufferDesc) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, uint, VideoDecoderBufferDesc*, HResult>)(LpVtbl[11]))(ptr, (ID3D11VideoDecoder*)ppDecoder, numBuffers, pBufferDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SubmitDecoderBuffers(ComPtr<ID3D11VideoDecoder> pDecoder, uint numBuffers, VideoDecoderBufferDesc* pBufferDesc) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, uint, VideoDecoderBufferDesc*, HResult>)(LpVtbl[11]))(ptr, (ID3D11VideoDecoder*)pDecoder.Handle, numBuffers, pBufferDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SubmitDecoderBuffers(ID3D11VideoDecoder* pDecoder, uint numBuffers, ref VideoDecoderBufferDesc pBufferDesc) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecoderBufferDesc* ppBufferDesc = &pBufferDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, uint, VideoDecoderBufferDesc*, HResult>)(LpVtbl[11]))(ptr, pDecoder, numBuffers, (VideoDecoderBufferDesc*)ppBufferDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SubmitDecoderBuffers(ref ID3D11VideoDecoder pDecoder, uint numBuffers, ref VideoDecoderBufferDesc pBufferDesc) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (VideoDecoderBufferDesc* ppBufferDesc = &pBufferDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, uint, VideoDecoderBufferDesc*, HResult>)(LpVtbl[11]))(ptr, (ID3D11VideoDecoder*)ppDecoder, numBuffers, (VideoDecoderBufferDesc*)ppBufferDesc);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SubmitDecoderBuffers(ComPtr<ID3D11VideoDecoder> pDecoder, uint numBuffers, ref VideoDecoderBufferDesc pBufferDesc) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecoderBufferDesc* ppBufferDesc = &pBufferDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, uint, VideoDecoderBufferDesc*, HResult>)(LpVtbl[11]))(ptr, (ID3D11VideoDecoder*)pDecoder.Handle, numBuffers, (VideoDecoderBufferDesc*)ppBufferDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DecoderExtension(ID3D11VideoDecoder* pDecoder, VideoDecoderExtension* pExtensionData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderExtension*, HResult>)(LpVtbl[12]))(ptr, pDecoder, pExtensionData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DecoderExtension(ref ID3D11VideoDecoder pDecoder, VideoDecoderExtension* pExtensionData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderExtension*, HResult>)(LpVtbl[12]))(ptr, (ID3D11VideoDecoder*)ppDecoder, pExtensionData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DecoderExtension(ComPtr<ID3D11VideoDecoder> pDecoder, VideoDecoderExtension* pExtensionData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderExtension*, HResult>)(LpVtbl[12]))(ptr, (ID3D11VideoDecoder*)pDecoder.Handle, pExtensionData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DecoderExtension(ID3D11VideoDecoder* pDecoder, ref VideoDecoderExtension pExtensionData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecoderExtension* ppExtensionData = &pExtensionData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderExtension*, HResult>)(LpVtbl[12]))(ptr, pDecoder, (VideoDecoderExtension*)ppExtensionData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DecoderExtension(ref ID3D11VideoDecoder pDecoder, ref VideoDecoderExtension pExtensionData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (VideoDecoderExtension* ppExtensionData = &pExtensionData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderExtension*, HResult>)(LpVtbl[12]))(ptr, (ID3D11VideoDecoder*)ppDecoder, (VideoDecoderExtension*)ppExtensionData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DecoderExtension(ComPtr<ID3D11VideoDecoder> pDecoder, ref VideoDecoderExtension pExtensionData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecoderExtension* ppExtensionData = &pExtensionData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoDecoderExtension*, HResult>)(LpVtbl[12]))(ptr, (ID3D11VideoDecoder*)pDecoder.Handle, (VideoDecoderExtension*)ppExtensionData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputTargetRect(ID3D11VideoProcessor* pVideoProcessor, Bool32 enable, Rect32* pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, Rect32*, void>)(LpVtbl[13]))(ptr, pVideoProcessor, enable, pRect);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputTargetRect(ref ID3D11VideoProcessor pVideoProcessor, Bool32 enable, Rect32* pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, Rect32*, void>)(LpVtbl[13]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, enable, pRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputTargetRect(ComPtr<ID3D11VideoProcessor> pVideoProcessor, Bool32 enable, Rect32* pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, Rect32*, void>)(LpVtbl[13]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, enable, pRect);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputTargetRect(ID3D11VideoProcessor* pVideoProcessor, Bool32 enable, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppRect = &pRect)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, Rect32*, void>)(LpVtbl[13]))(ptr, pVideoProcessor, enable, (Rect32*)ppRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputTargetRect(ref ID3D11VideoProcessor pVideoProcessor, Bool32 enable, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Rect32* ppRect = &pRect)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, Rect32*, void>)(LpVtbl[13]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, enable, (Rect32*)ppRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputTargetRect(ComPtr<ID3D11VideoProcessor> pVideoProcessor, Bool32 enable, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppRect = &pRect)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, Rect32*, void>)(LpVtbl[13]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, enable, (Rect32*)ppRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputBackgroundColor(ID3D11VideoProcessor* pVideoProcessor, Bool32 yCbCr, VideoColor* pColor) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, VideoColor*, void>)(LpVtbl[14]))(ptr, pVideoProcessor, yCbCr, pColor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputBackgroundColor(ref ID3D11VideoProcessor pVideoProcessor, Bool32 yCbCr, VideoColor* pColor) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, VideoColor*, void>)(LpVtbl[14]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, yCbCr, pColor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputBackgroundColor(ComPtr<ID3D11VideoProcessor> pVideoProcessor, Bool32 yCbCr, VideoColor* pColor) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, VideoColor*, void>)(LpVtbl[14]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, yCbCr, pColor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputBackgroundColor(ID3D11VideoProcessor* pVideoProcessor, Bool32 yCbCr, ref VideoColor pColor) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoColor* ppColor = &pColor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, VideoColor*, void>)(LpVtbl[14]))(ptr, pVideoProcessor, yCbCr, (VideoColor*)ppColor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputBackgroundColor(ref ID3D11VideoProcessor pVideoProcessor, Bool32 yCbCr, ref VideoColor pColor) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoColor* ppColor = &pColor)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, VideoColor*, void>)(LpVtbl[14]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, yCbCr, (VideoColor*)ppColor);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputBackgroundColor(ComPtr<ID3D11VideoProcessor> pVideoProcessor, Bool32 yCbCr, ref VideoColor pColor) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoColor* ppColor = &pColor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, VideoColor*, void>)(LpVtbl[14]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, yCbCr, (VideoColor*)ppColor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputColorSpace(ID3D11VideoProcessor* pVideoProcessor, VideoProcessorColorSpace* pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorColorSpace*, void>)(LpVtbl[15]))(ptr, pVideoProcessor, pColorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputColorSpace(ref ID3D11VideoProcessor pVideoProcessor, VideoProcessorColorSpace* pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorColorSpace*, void>)(LpVtbl[15]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, pColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputColorSpace(ComPtr<ID3D11VideoProcessor> pVideoProcessor, VideoProcessorColorSpace* pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorColorSpace*, void>)(LpVtbl[15]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pColorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputColorSpace(ID3D11VideoProcessor* pVideoProcessor, ref VideoProcessorColorSpace pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorColorSpace* ppColorSpace = &pColorSpace)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorColorSpace*, void>)(LpVtbl[15]))(ptr, pVideoProcessor, (VideoProcessorColorSpace*)ppColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputColorSpace(ref ID3D11VideoProcessor pVideoProcessor, ref VideoProcessorColorSpace pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorColorSpace* ppColorSpace = &pColorSpace)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorColorSpace*, void>)(LpVtbl[15]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, (VideoProcessorColorSpace*)ppColorSpace);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputColorSpace(ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref VideoProcessorColorSpace pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorColorSpace* ppColorSpace = &pColorSpace)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorColorSpace*, void>)(LpVtbl[15]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (VideoProcessorColorSpace*)ppColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputAlphaFillMode(ID3D11VideoProcessor* pVideoProcessor, VideoProcessorAlphaFillMode alphaFillMode, uint streamIndex) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorAlphaFillMode, uint, void>)(LpVtbl[16]))(ptr, pVideoProcessor, alphaFillMode, streamIndex);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputAlphaFillMode(ref ID3D11VideoProcessor pVideoProcessor, VideoProcessorAlphaFillMode alphaFillMode, uint streamIndex) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorAlphaFillMode, uint, void>)(LpVtbl[16]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, alphaFillMode, streamIndex);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputAlphaFillMode(ComPtr<ID3D11VideoProcessor> pVideoProcessor, VideoProcessorAlphaFillMode alphaFillMode, uint streamIndex) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorAlphaFillMode, uint, void>)(LpVtbl[16]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, alphaFillMode, streamIndex);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputConstriction(ID3D11VideoProcessor* pVideoProcessor, Bool32 enable, nint size) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, nint, void>)(LpVtbl[17]))(ptr, pVideoProcessor, enable, size);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputConstriction(ref ID3D11VideoProcessor pVideoProcessor, Bool32 enable, nint size) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, nint, void>)(LpVtbl[17]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, enable, size);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputConstriction(ComPtr<ID3D11VideoProcessor> pVideoProcessor, Bool32 enable, nint size) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, nint, void>)(LpVtbl[17]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, enable, size);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputStereoMode(ID3D11VideoProcessor* pVideoProcessor, Bool32 enable) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, void>)(LpVtbl[18]))(ptr, pVideoProcessor, enable);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputStereoMode(ref ID3D11VideoProcessor pVideoProcessor, Bool32 enable) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, void>)(LpVtbl[18]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, enable);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputStereoMode(ComPtr<ID3D11VideoProcessor> pVideoProcessor, Bool32 enable) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, void>)(LpVtbl[18]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, enable);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorSetOutputExtension(ID3D11VideoProcessor* pVideoProcessor, Guid* pExtensionGuid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(LpVtbl[19]))(ptr, pVideoProcessor, pExtensionGuid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorSetOutputExtension(ref ID3D11VideoProcessor pVideoProcessor, Guid* pExtensionGuid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(LpVtbl[19]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, pExtensionGuid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorSetOutputExtension(ComPtr<ID3D11VideoProcessor> pVideoProcessor, Guid* pExtensionGuid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(LpVtbl[19]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pExtensionGuid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorSetOutputExtension(ID3D11VideoProcessor* pVideoProcessor, ref Guid pExtensionGuid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppExtensionGuid = &pExtensionGuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(LpVtbl[19]))(ptr, pVideoProcessor, (Guid*)ppExtensionGuid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorSetOutputExtension(ref ID3D11VideoProcessor pVideoProcessor, ref Guid pExtensionGuid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Guid* ppExtensionGuid = &pExtensionGuid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(LpVtbl[19]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, (Guid*)ppExtensionGuid, dataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorSetOutputExtension(ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref Guid pExtensionGuid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppExtensionGuid = &pExtensionGuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(LpVtbl[19]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (Guid*)ppExtensionGuid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorSetOutputExtension<T>(ID3D11VideoProcessor* pVideoProcessor, Guid* pExtensionGuid, uint dataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(LpVtbl[19]))(ptr, pVideoProcessor, pExtensionGuid, dataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorSetOutputExtension<T>(ComPtr<ID3D11VideoProcessor> pVideoProcessor, Guid* pExtensionGuid, uint dataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(LpVtbl[19]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pExtensionGuid, dataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorSetOutputExtension<T>(ID3D11VideoProcessor* pVideoProcessor, ref Guid pExtensionGuid, uint dataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppExtensionGuid = &pExtensionGuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(LpVtbl[19]))(ptr, pVideoProcessor, (Guid*)ppExtensionGuid, dataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorSetOutputExtension<T>(ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref Guid pExtensionGuid, uint dataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppExtensionGuid = &pExtensionGuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(LpVtbl[19]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (Guid*)ppExtensionGuid, dataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputTargetRect(ID3D11VideoProcessor* pVideoProcessor, Bool32* enabled, Rect32* pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, Rect32*, void>)(LpVtbl[20]))(ptr, pVideoProcessor, enabled, pRect);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputTargetRect(ref ID3D11VideoProcessor pVideoProcessor, Bool32* enabled, Rect32* pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, Rect32*, void>)(LpVtbl[20]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, enabled, pRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputTargetRect(ComPtr<ID3D11VideoProcessor> pVideoProcessor, Bool32* enabled, Rect32* pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, Rect32*, void>)(LpVtbl[20]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, enabled, pRect);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputTargetRect(ID3D11VideoProcessor* pVideoProcessor, ref Bool32 enabled, Rect32* pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* penabled = &enabled)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, Rect32*, void>)(LpVtbl[20]))(ptr, pVideoProcessor, (Bool32*)penabled, pRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputTargetRect(ref ID3D11VideoProcessor pVideoProcessor, ref Bool32 enabled, Rect32* pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* penabled = &enabled)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, Rect32*, void>)(LpVtbl[20]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, (Bool32*)penabled, pRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputTargetRect(ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref Bool32 enabled, Rect32* pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* penabled = &enabled)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, Rect32*, void>)(LpVtbl[20]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (Bool32*)penabled, pRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputTargetRect(ID3D11VideoProcessor* pVideoProcessor, Bool32* enabled, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppRect = &pRect)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, Rect32*, void>)(LpVtbl[20]))(ptr, pVideoProcessor, enabled, (Rect32*)ppRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputTargetRect(ref ID3D11VideoProcessor pVideoProcessor, Bool32* enabled, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Rect32* ppRect = &pRect)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, Rect32*, void>)(LpVtbl[20]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, enabled, (Rect32*)ppRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputTargetRect(ComPtr<ID3D11VideoProcessor> pVideoProcessor, Bool32* enabled, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppRect = &pRect)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, Rect32*, void>)(LpVtbl[20]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, enabled, (Rect32*)ppRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputTargetRect(ID3D11VideoProcessor* pVideoProcessor, ref Bool32 enabled, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* penabled = &enabled)
			{
				fixed (Rect32* ppRect = &pRect)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, Rect32*, void>)(LpVtbl[20]))(ptr, pVideoProcessor, (Bool32*)penabled, (Rect32*)ppRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputTargetRect(ref ID3D11VideoProcessor pVideoProcessor, ref Bool32 enabled, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* penabled = &enabled)
				{
					fixed (Rect32* ppRect = &pRect)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, Rect32*, void>)(LpVtbl[20]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, (Bool32*)penabled, (Rect32*)ppRect);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputTargetRect(ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref Bool32 enabled, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* penabled = &enabled)
			{
				fixed (Rect32* ppRect = &pRect)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, Rect32*, void>)(LpVtbl[20]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (Bool32*)penabled, (Rect32*)ppRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputBackgroundColor(ID3D11VideoProcessor* pVideoProcessor, Bool32* pYCbCr, VideoColor* pColor) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, VideoColor*, void>)(LpVtbl[21]))(ptr, pVideoProcessor, pYCbCr, pColor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputBackgroundColor(ref ID3D11VideoProcessor pVideoProcessor, Bool32* pYCbCr, VideoColor* pColor) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, VideoColor*, void>)(LpVtbl[21]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, pYCbCr, pColor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputBackgroundColor(ComPtr<ID3D11VideoProcessor> pVideoProcessor, Bool32* pYCbCr, VideoColor* pColor) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, VideoColor*, void>)(LpVtbl[21]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pYCbCr, pColor);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputBackgroundColor(ID3D11VideoProcessor* pVideoProcessor, ref Bool32 pYCbCr, VideoColor* pColor) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppYCbCr = &pYCbCr)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, VideoColor*, void>)(LpVtbl[21]))(ptr, pVideoProcessor, (Bool32*)ppYCbCr, pColor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputBackgroundColor(ref ID3D11VideoProcessor pVideoProcessor, ref Bool32 pYCbCr, VideoColor* pColor) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppYCbCr = &pYCbCr)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, VideoColor*, void>)(LpVtbl[21]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, (Bool32*)ppYCbCr, pColor);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputBackgroundColor(ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref Bool32 pYCbCr, VideoColor* pColor) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppYCbCr = &pYCbCr)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, VideoColor*, void>)(LpVtbl[21]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (Bool32*)ppYCbCr, pColor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputBackgroundColor(ID3D11VideoProcessor* pVideoProcessor, Bool32* pYCbCr, ref VideoColor pColor) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoColor* ppColor = &pColor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, VideoColor*, void>)(LpVtbl[21]))(ptr, pVideoProcessor, pYCbCr, (VideoColor*)ppColor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputBackgroundColor(ref ID3D11VideoProcessor pVideoProcessor, Bool32* pYCbCr, ref VideoColor pColor) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoColor* ppColor = &pColor)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, VideoColor*, void>)(LpVtbl[21]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, pYCbCr, (VideoColor*)ppColor);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputBackgroundColor(ComPtr<ID3D11VideoProcessor> pVideoProcessor, Bool32* pYCbCr, ref VideoColor pColor) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoColor* ppColor = &pColor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, VideoColor*, void>)(LpVtbl[21]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pYCbCr, (VideoColor*)ppColor);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputBackgroundColor(ID3D11VideoProcessor* pVideoProcessor, ref Bool32 pYCbCr, ref VideoColor pColor) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppYCbCr = &pYCbCr)
			{
				fixed (VideoColor* ppColor = &pColor)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, VideoColor*, void>)(LpVtbl[21]))(ptr, pVideoProcessor, (Bool32*)ppYCbCr, (VideoColor*)ppColor);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputBackgroundColor(ref ID3D11VideoProcessor pVideoProcessor, ref Bool32 pYCbCr, ref VideoColor pColor) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppYCbCr = &pYCbCr)
				{
					fixed (VideoColor* ppColor = &pColor)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, VideoColor*, void>)(LpVtbl[21]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, (Bool32*)ppYCbCr, (VideoColor*)ppColor);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputBackgroundColor(ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref Bool32 pYCbCr, ref VideoColor pColor) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppYCbCr = &pYCbCr)
			{
				fixed (VideoColor* ppColor = &pColor)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, VideoColor*, void>)(LpVtbl[21]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (Bool32*)ppYCbCr, (VideoColor*)ppColor);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputColorSpace(ID3D11VideoProcessor* pVideoProcessor, VideoProcessorColorSpace* pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorColorSpace*, void>)(LpVtbl[22]))(ptr, pVideoProcessor, pColorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputColorSpace(ref ID3D11VideoProcessor pVideoProcessor, VideoProcessorColorSpace* pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorColorSpace*, void>)(LpVtbl[22]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, pColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputColorSpace(ComPtr<ID3D11VideoProcessor> pVideoProcessor, VideoProcessorColorSpace* pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorColorSpace*, void>)(LpVtbl[22]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pColorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputColorSpace(ID3D11VideoProcessor* pVideoProcessor, ref VideoProcessorColorSpace pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorColorSpace* ppColorSpace = &pColorSpace)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorColorSpace*, void>)(LpVtbl[22]))(ptr, pVideoProcessor, (VideoProcessorColorSpace*)ppColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputColorSpace(ref ID3D11VideoProcessor pVideoProcessor, ref VideoProcessorColorSpace pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorColorSpace* ppColorSpace = &pColorSpace)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorColorSpace*, void>)(LpVtbl[22]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, (VideoProcessorColorSpace*)ppColorSpace);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputColorSpace(ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref VideoProcessorColorSpace pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorColorSpace* ppColorSpace = &pColorSpace)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorColorSpace*, void>)(LpVtbl[22]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (VideoProcessorColorSpace*)ppColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputAlphaFillMode(ID3D11VideoProcessor* pVideoProcessor, VideoProcessorAlphaFillMode* pAlphaFillMode, uint* pStreamIndex) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorAlphaFillMode*, uint*, void>)(LpVtbl[23]))(ptr, pVideoProcessor, pAlphaFillMode, pStreamIndex);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputAlphaFillMode(ref ID3D11VideoProcessor pVideoProcessor, VideoProcessorAlphaFillMode* pAlphaFillMode, uint* pStreamIndex) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorAlphaFillMode*, uint*, void>)(LpVtbl[23]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, pAlphaFillMode, pStreamIndex);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputAlphaFillMode(ComPtr<ID3D11VideoProcessor> pVideoProcessor, VideoProcessorAlphaFillMode* pAlphaFillMode, uint* pStreamIndex) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorAlphaFillMode*, uint*, void>)(LpVtbl[23]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pAlphaFillMode, pStreamIndex);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputAlphaFillMode(ID3D11VideoProcessor* pVideoProcessor, ref VideoProcessorAlphaFillMode pAlphaFillMode, uint* pStreamIndex) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorAlphaFillMode* ppAlphaFillMode = &pAlphaFillMode)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorAlphaFillMode*, uint*, void>)(LpVtbl[23]))(ptr, pVideoProcessor, (VideoProcessorAlphaFillMode*)ppAlphaFillMode, pStreamIndex);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputAlphaFillMode(ref ID3D11VideoProcessor pVideoProcessor, ref VideoProcessorAlphaFillMode pAlphaFillMode, uint* pStreamIndex) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorAlphaFillMode* ppAlphaFillMode = &pAlphaFillMode)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorAlphaFillMode*, uint*, void>)(LpVtbl[23]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, (VideoProcessorAlphaFillMode*)ppAlphaFillMode, pStreamIndex);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputAlphaFillMode(ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref VideoProcessorAlphaFillMode pAlphaFillMode, uint* pStreamIndex) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorAlphaFillMode* ppAlphaFillMode = &pAlphaFillMode)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorAlphaFillMode*, uint*, void>)(LpVtbl[23]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (VideoProcessorAlphaFillMode*)ppAlphaFillMode, pStreamIndex);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputAlphaFillMode(ID3D11VideoProcessor* pVideoProcessor, VideoProcessorAlphaFillMode* pAlphaFillMode, ref uint pStreamIndex) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppStreamIndex = &pStreamIndex)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorAlphaFillMode*, uint*, void>)(LpVtbl[23]))(ptr, pVideoProcessor, pAlphaFillMode, (uint*)ppStreamIndex);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputAlphaFillMode(ref ID3D11VideoProcessor pVideoProcessor, VideoProcessorAlphaFillMode* pAlphaFillMode, ref uint pStreamIndex) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (uint* ppStreamIndex = &pStreamIndex)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorAlphaFillMode*, uint*, void>)(LpVtbl[23]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, pAlphaFillMode, (uint*)ppStreamIndex);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputAlphaFillMode(ComPtr<ID3D11VideoProcessor> pVideoProcessor, VideoProcessorAlphaFillMode* pAlphaFillMode, ref uint pStreamIndex) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppStreamIndex = &pStreamIndex)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorAlphaFillMode*, uint*, void>)(LpVtbl[23]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pAlphaFillMode, (uint*)ppStreamIndex);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputAlphaFillMode(ID3D11VideoProcessor* pVideoProcessor, ref VideoProcessorAlphaFillMode pAlphaFillMode, ref uint pStreamIndex) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorAlphaFillMode* ppAlphaFillMode = &pAlphaFillMode)
			{
				fixed (uint* ppStreamIndex = &pStreamIndex)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorAlphaFillMode*, uint*, void>)(LpVtbl[23]))(ptr, pVideoProcessor, (VideoProcessorAlphaFillMode*)ppAlphaFillMode, (uint*)ppStreamIndex);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputAlphaFillMode(ref ID3D11VideoProcessor pVideoProcessor, ref VideoProcessorAlphaFillMode pAlphaFillMode, ref uint pStreamIndex) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorAlphaFillMode* ppAlphaFillMode = &pAlphaFillMode)
				{
					fixed (uint* ppStreamIndex = &pStreamIndex)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorAlphaFillMode*, uint*, void>)(LpVtbl[23]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, (VideoProcessorAlphaFillMode*)ppAlphaFillMode, (uint*)ppStreamIndex);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputAlphaFillMode(ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref VideoProcessorAlphaFillMode pAlphaFillMode, ref uint pStreamIndex) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorAlphaFillMode* ppAlphaFillMode = &pAlphaFillMode)
			{
				fixed (uint* ppStreamIndex = &pStreamIndex)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, VideoProcessorAlphaFillMode*, uint*, void>)(LpVtbl[23]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (VideoProcessorAlphaFillMode*)ppAlphaFillMode, (uint*)ppStreamIndex);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputConstriction(ID3D11VideoProcessor* pVideoProcessor, Bool32* pEnabled, nint* pSize) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, nint*, void>)(LpVtbl[24]))(ptr, pVideoProcessor, pEnabled, pSize);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputConstriction(ref ID3D11VideoProcessor pVideoProcessor, Bool32* pEnabled, nint* pSize) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, nint*, void>)(LpVtbl[24]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, pEnabled, pSize);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputConstriction(ComPtr<ID3D11VideoProcessor> pVideoProcessor, Bool32* pEnabled, nint* pSize) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, nint*, void>)(LpVtbl[24]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pEnabled, pSize);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputConstriction(ID3D11VideoProcessor* pVideoProcessor, ref Bool32 pEnabled, nint* pSize) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, nint*, void>)(LpVtbl[24]))(ptr, pVideoProcessor, (Bool32*)ppEnabled, pSize);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputConstriction(ref ID3D11VideoProcessor pVideoProcessor, ref Bool32 pEnabled, nint* pSize) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnabled = &pEnabled)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, nint*, void>)(LpVtbl[24]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, (Bool32*)ppEnabled, pSize);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputConstriction(ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref Bool32 pEnabled, nint* pSize) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, nint*, void>)(LpVtbl[24]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (Bool32*)ppEnabled, pSize);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputConstriction(ID3D11VideoProcessor* pVideoProcessor, Bool32* pEnabled, ref nint pSize) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nint* ppSize = &pSize)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, nint*, void>)(LpVtbl[24]))(ptr, pVideoProcessor, pEnabled, (nint*)ppSize);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputConstriction(ref ID3D11VideoProcessor pVideoProcessor, Bool32* pEnabled, ref nint pSize) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (nint* ppSize = &pSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, nint*, void>)(LpVtbl[24]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, pEnabled, (nint*)ppSize);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputConstriction(ComPtr<ID3D11VideoProcessor> pVideoProcessor, Bool32* pEnabled, ref nint pSize) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (nint* ppSize = &pSize)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, nint*, void>)(LpVtbl[24]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pEnabled, (nint*)ppSize);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputConstriction(ID3D11VideoProcessor* pVideoProcessor, ref Bool32 pEnabled, ref nint pSize) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				fixed (nint* ppSize = &pSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, nint*, void>)(LpVtbl[24]))(ptr, pVideoProcessor, (Bool32*)ppEnabled, (nint*)ppSize);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputConstriction(ref ID3D11VideoProcessor pVideoProcessor, ref Bool32 pEnabled, ref nint pSize) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnabled = &pEnabled)
				{
					fixed (nint* ppSize = &pSize)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, nint*, void>)(LpVtbl[24]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, (Bool32*)ppEnabled, (nint*)ppSize);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputConstriction(ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref Bool32 pEnabled, ref nint pSize) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				fixed (nint* ppSize = &pSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, nint*, void>)(LpVtbl[24]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (Bool32*)ppEnabled, (nint*)ppSize);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputStereoMode(ID3D11VideoProcessor* pVideoProcessor, Bool32* pEnabled) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, void>)(LpVtbl[25]))(ptr, pVideoProcessor, pEnabled);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputStereoMode(ref ID3D11VideoProcessor pVideoProcessor, Bool32* pEnabled) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, void>)(LpVtbl[25]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, pEnabled);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputStereoMode(ComPtr<ID3D11VideoProcessor> pVideoProcessor, Bool32* pEnabled) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, void>)(LpVtbl[25]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pEnabled);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputStereoMode(ID3D11VideoProcessor* pVideoProcessor, ref Bool32 pEnabled) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, void>)(LpVtbl[25]))(ptr, pVideoProcessor, (Bool32*)ppEnabled);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputStereoMode(ref ID3D11VideoProcessor pVideoProcessor, ref Bool32 pEnabled) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnabled = &pEnabled)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, void>)(LpVtbl[25]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, (Bool32*)ppEnabled);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputStereoMode(ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref Bool32 pEnabled) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, void>)(LpVtbl[25]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (Bool32*)ppEnabled);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetOutputExtension(ID3D11VideoProcessor* pVideoProcessor, Guid* pExtensionGuid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(LpVtbl[26]))(ptr, pVideoProcessor, pExtensionGuid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetOutputExtension(ref ID3D11VideoProcessor pVideoProcessor, Guid* pExtensionGuid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(LpVtbl[26]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, pExtensionGuid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetOutputExtension(ComPtr<ID3D11VideoProcessor> pVideoProcessor, Guid* pExtensionGuid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(LpVtbl[26]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pExtensionGuid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetOutputExtension(ID3D11VideoProcessor* pVideoProcessor, ref Guid pExtensionGuid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppExtensionGuid = &pExtensionGuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(LpVtbl[26]))(ptr, pVideoProcessor, (Guid*)ppExtensionGuid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetOutputExtension(ref ID3D11VideoProcessor pVideoProcessor, ref Guid pExtensionGuid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Guid* ppExtensionGuid = &pExtensionGuid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(LpVtbl[26]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, (Guid*)ppExtensionGuid, dataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetOutputExtension(ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref Guid pExtensionGuid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppExtensionGuid = &pExtensionGuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(LpVtbl[26]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (Guid*)ppExtensionGuid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetOutputExtension<T>(ID3D11VideoProcessor* pVideoProcessor, Guid* pExtensionGuid, uint dataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(LpVtbl[26]))(ptr, pVideoProcessor, pExtensionGuid, dataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetOutputExtension<T>(ComPtr<ID3D11VideoProcessor> pVideoProcessor, Guid* pExtensionGuid, uint dataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(LpVtbl[26]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pExtensionGuid, dataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetOutputExtension<T>(ID3D11VideoProcessor* pVideoProcessor, ref Guid pExtensionGuid, uint dataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppExtensionGuid = &pExtensionGuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(LpVtbl[26]))(ptr, pVideoProcessor, (Guid*)ppExtensionGuid, dataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetOutputExtension<T>(ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref Guid pExtensionGuid, uint dataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppExtensionGuid = &pExtensionGuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Guid*, uint, void*, HResult>)(LpVtbl[26]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (Guid*)ppExtensionGuid, dataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamFrameFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, VideoFrameFormat frameFormat) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoFrameFormat, void>)(LpVtbl[27]))(ptr, pVideoProcessor, streamIndex, frameFormat);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamFrameFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, VideoFrameFormat frameFormat) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoFrameFormat, void>)(LpVtbl[27]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, frameFormat);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamFrameFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, VideoFrameFormat frameFormat) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoFrameFormat, void>)(LpVtbl[27]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, frameFormat);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamColorSpace(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, VideoProcessorColorSpace* pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorColorSpace*, void>)(LpVtbl[28]))(ptr, pVideoProcessor, streamIndex, pColorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamColorSpace(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, VideoProcessorColorSpace* pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorColorSpace*, void>)(LpVtbl[28]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamColorSpace(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, VideoProcessorColorSpace* pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorColorSpace*, void>)(LpVtbl[28]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pColorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamColorSpace(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref VideoProcessorColorSpace pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorColorSpace* ppColorSpace = &pColorSpace)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorColorSpace*, void>)(LpVtbl[28]))(ptr, pVideoProcessor, streamIndex, (VideoProcessorColorSpace*)ppColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamColorSpace(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref VideoProcessorColorSpace pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorColorSpace* ppColorSpace = &pColorSpace)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorColorSpace*, void>)(LpVtbl[28]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (VideoProcessorColorSpace*)ppColorSpace);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamColorSpace(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref VideoProcessorColorSpace pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorColorSpace* ppColorSpace = &pColorSpace)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorColorSpace*, void>)(LpVtbl[28]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (VideoProcessorColorSpace*)ppColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamOutputRate(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, VideoProcessorOutputRate outputRate, Bool32 repeatFrame, Rational* pCustomRate) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorOutputRate, Bool32, Rational*, void>)(LpVtbl[29]))(ptr, pVideoProcessor, streamIndex, outputRate, repeatFrame, pCustomRate);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamOutputRate(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, VideoProcessorOutputRate outputRate, Bool32 repeatFrame, Rational* pCustomRate) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorOutputRate, Bool32, Rational*, void>)(LpVtbl[29]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, outputRate, repeatFrame, pCustomRate);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamOutputRate(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, VideoProcessorOutputRate outputRate, Bool32 repeatFrame, Rational* pCustomRate) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorOutputRate, Bool32, Rational*, void>)(LpVtbl[29]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, outputRate, repeatFrame, pCustomRate);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamOutputRate(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, VideoProcessorOutputRate outputRate, Bool32 repeatFrame, ref Rational pCustomRate) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rational* ppCustomRate = &pCustomRate)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorOutputRate, Bool32, Rational*, void>)(LpVtbl[29]))(ptr, pVideoProcessor, streamIndex, outputRate, repeatFrame, (Rational*)ppCustomRate);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamOutputRate(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, VideoProcessorOutputRate outputRate, Bool32 repeatFrame, ref Rational pCustomRate) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Rational* ppCustomRate = &pCustomRate)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorOutputRate, Bool32, Rational*, void>)(LpVtbl[29]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, outputRate, repeatFrame, (Rational*)ppCustomRate);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamOutputRate(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, VideoProcessorOutputRate outputRate, Bool32 repeatFrame, ref Rational pCustomRate) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rational* ppCustomRate = &pCustomRate)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorOutputRate, Bool32, Rational*, void>)(LpVtbl[29]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, outputRate, repeatFrame, (Rational*)ppCustomRate);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamSourceRect(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32 enable, Rect32* pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, Rect32*, void>)(LpVtbl[30]))(ptr, pVideoProcessor, streamIndex, enable, pRect);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamSourceRect(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32 enable, Rect32* pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, Rect32*, void>)(LpVtbl[30]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, enable, pRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamSourceRect(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32 enable, Rect32* pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, Rect32*, void>)(LpVtbl[30]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, enable, pRect);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamSourceRect(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32 enable, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppRect = &pRect)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, Rect32*, void>)(LpVtbl[30]))(ptr, pVideoProcessor, streamIndex, enable, (Rect32*)ppRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamSourceRect(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32 enable, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Rect32* ppRect = &pRect)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, Rect32*, void>)(LpVtbl[30]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, enable, (Rect32*)ppRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamSourceRect(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32 enable, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppRect = &pRect)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, Rect32*, void>)(LpVtbl[30]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, enable, (Rect32*)ppRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamDestRect(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32 enable, Rect32* pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, Rect32*, void>)(LpVtbl[31]))(ptr, pVideoProcessor, streamIndex, enable, pRect);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamDestRect(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32 enable, Rect32* pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, Rect32*, void>)(LpVtbl[31]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, enable, pRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamDestRect(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32 enable, Rect32* pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, Rect32*, void>)(LpVtbl[31]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, enable, pRect);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamDestRect(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32 enable, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppRect = &pRect)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, Rect32*, void>)(LpVtbl[31]))(ptr, pVideoProcessor, streamIndex, enable, (Rect32*)ppRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamDestRect(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32 enable, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Rect32* ppRect = &pRect)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, Rect32*, void>)(LpVtbl[31]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, enable, (Rect32*)ppRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamDestRect(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32 enable, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppRect = &pRect)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, Rect32*, void>)(LpVtbl[31]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, enable, (Rect32*)ppRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamAlpha(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32 enable, float alpha) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, float, void>)(LpVtbl[32]))(ptr, pVideoProcessor, streamIndex, enable, alpha);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamAlpha(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32 enable, float alpha) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, float, void>)(LpVtbl[32]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, enable, alpha);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamAlpha(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32 enable, float alpha) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, float, void>)(LpVtbl[32]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, enable, alpha);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamPalette(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, uint count, uint* pEntries) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, uint, uint*, void>)(LpVtbl[33]))(ptr, pVideoProcessor, streamIndex, count, pEntries);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamPalette(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, uint count, uint* pEntries) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, uint, uint*, void>)(LpVtbl[33]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, count, pEntries);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamPalette(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, uint count, uint* pEntries) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, uint, uint*, void>)(LpVtbl[33]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, count, pEntries);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamPalette(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, uint count, ref uint pEntries) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppEntries = &pEntries)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, uint, uint*, void>)(LpVtbl[33]))(ptr, pVideoProcessor, streamIndex, count, (uint*)ppEntries);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamPalette(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, uint count, ref uint pEntries) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (uint* ppEntries = &pEntries)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, uint, uint*, void>)(LpVtbl[33]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, count, (uint*)ppEntries);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamPalette(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, uint count, ref uint pEntries) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppEntries = &pEntries)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, uint, uint*, void>)(LpVtbl[33]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, count, (uint*)ppEntries);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamPixelAspectRatio(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32 enable, Rational* pSourceAspectRatio, Rational* pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, Rational*, Rational*, void>)(LpVtbl[34]))(ptr, pVideoProcessor, streamIndex, enable, pSourceAspectRatio, pDestinationAspectRatio);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamPixelAspectRatio(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32 enable, Rational* pSourceAspectRatio, Rational* pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, Rational*, Rational*, void>)(LpVtbl[34]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, enable, pSourceAspectRatio, pDestinationAspectRatio);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamPixelAspectRatio(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32 enable, Rational* pSourceAspectRatio, Rational* pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, Rational*, Rational*, void>)(LpVtbl[34]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, enable, pSourceAspectRatio, pDestinationAspectRatio);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamPixelAspectRatio(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32 enable, ref Rational pSourceAspectRatio, Rational* pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rational* ppSourceAspectRatio = &pSourceAspectRatio)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, Rational*, Rational*, void>)(LpVtbl[34]))(ptr, pVideoProcessor, streamIndex, enable, (Rational*)ppSourceAspectRatio, pDestinationAspectRatio);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamPixelAspectRatio(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32 enable, ref Rational pSourceAspectRatio, Rational* pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Rational* ppSourceAspectRatio = &pSourceAspectRatio)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, Rational*, Rational*, void>)(LpVtbl[34]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, enable, (Rational*)ppSourceAspectRatio, pDestinationAspectRatio);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamPixelAspectRatio(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32 enable, ref Rational pSourceAspectRatio, Rational* pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rational* ppSourceAspectRatio = &pSourceAspectRatio)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, Rational*, Rational*, void>)(LpVtbl[34]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, enable, (Rational*)ppSourceAspectRatio, pDestinationAspectRatio);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamPixelAspectRatio(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32 enable, Rational* pSourceAspectRatio, ref Rational pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rational* ppDestinationAspectRatio = &pDestinationAspectRatio)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, Rational*, Rational*, void>)(LpVtbl[34]))(ptr, pVideoProcessor, streamIndex, enable, pSourceAspectRatio, (Rational*)ppDestinationAspectRatio);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamPixelAspectRatio(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32 enable, Rational* pSourceAspectRatio, ref Rational pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Rational* ppDestinationAspectRatio = &pDestinationAspectRatio)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, Rational*, Rational*, void>)(LpVtbl[34]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, enable, pSourceAspectRatio, (Rational*)ppDestinationAspectRatio);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamPixelAspectRatio(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32 enable, Rational* pSourceAspectRatio, ref Rational pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rational* ppDestinationAspectRatio = &pDestinationAspectRatio)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, Rational*, Rational*, void>)(LpVtbl[34]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, enable, pSourceAspectRatio, (Rational*)ppDestinationAspectRatio);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamPixelAspectRatio(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32 enable, ref Rational pSourceAspectRatio, ref Rational pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rational* ppSourceAspectRatio = &pSourceAspectRatio)
			{
				fixed (Rational* ppDestinationAspectRatio = &pDestinationAspectRatio)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, Rational*, Rational*, void>)(LpVtbl[34]))(ptr, pVideoProcessor, streamIndex, enable, (Rational*)ppSourceAspectRatio, (Rational*)ppDestinationAspectRatio);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamPixelAspectRatio(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32 enable, ref Rational pSourceAspectRatio, ref Rational pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Rational* ppSourceAspectRatio = &pSourceAspectRatio)
				{
					fixed (Rational* ppDestinationAspectRatio = &pDestinationAspectRatio)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, Rational*, Rational*, void>)(LpVtbl[34]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, enable, (Rational*)ppSourceAspectRatio, (Rational*)ppDestinationAspectRatio);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamPixelAspectRatio(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32 enable, ref Rational pSourceAspectRatio, ref Rational pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rational* ppSourceAspectRatio = &pSourceAspectRatio)
			{
				fixed (Rational* ppDestinationAspectRatio = &pDestinationAspectRatio)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, Rational*, Rational*, void>)(LpVtbl[34]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, enable, (Rational*)ppSourceAspectRatio, (Rational*)ppDestinationAspectRatio);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamLumaKey(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32 enable, float lower, float upper) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, float, float, void>)(LpVtbl[35]))(ptr, pVideoProcessor, streamIndex, enable, lower, upper);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamLumaKey(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32 enable, float lower, float upper) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, float, float, void>)(LpVtbl[35]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, enable, lower, upper);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamLumaKey(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32 enable, float lower, float upper) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, float, float, void>)(LpVtbl[35]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, enable, lower, upper);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32 enable, VideoProcessorStereoFormat format, Bool32 leftViewFrame0, Bool32 baseViewFrame0, VideoProcessorStereoFlipMode flipMode, int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, VideoProcessorStereoFormat, Bool32, Bool32, VideoProcessorStereoFlipMode, int, void>)(LpVtbl[36]))(ptr, pVideoProcessor, streamIndex, enable, format, leftViewFrame0, baseViewFrame0, flipMode, monoOffset);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32 enable, VideoProcessorStereoFormat format, Bool32 leftViewFrame0, Bool32 baseViewFrame0, VideoProcessorStereoFlipMode flipMode, int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, VideoProcessorStereoFormat, Bool32, Bool32, VideoProcessorStereoFlipMode, int, void>)(LpVtbl[36]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, enable, format, leftViewFrame0, baseViewFrame0, flipMode, monoOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32 enable, VideoProcessorStereoFormat format, Bool32 leftViewFrame0, Bool32 baseViewFrame0, VideoProcessorStereoFlipMode flipMode, int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, VideoProcessorStereoFormat, Bool32, Bool32, VideoProcessorStereoFlipMode, int, void>)(LpVtbl[36]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, enable, format, leftViewFrame0, baseViewFrame0, flipMode, monoOffset);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamAutoProcessingMode(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32 enable) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, void>)(LpVtbl[37]))(ptr, pVideoProcessor, streamIndex, enable);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamAutoProcessingMode(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32 enable) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, void>)(LpVtbl[37]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, enable);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamAutoProcessingMode(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32 enable) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, void>)(LpVtbl[37]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, enable);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamFilter(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, VideoProcessorFilter filter, Bool32 enable, int level) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorFilter, Bool32, int, void>)(LpVtbl[38]))(ptr, pVideoProcessor, streamIndex, filter, enable, level);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamFilter(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, VideoProcessorFilter filter, Bool32 enable, int level) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorFilter, Bool32, int, void>)(LpVtbl[38]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, filter, enable, level);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamFilter(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, VideoProcessorFilter filter, Bool32 enable, int level) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorFilter, Bool32, int, void>)(LpVtbl[38]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, filter, enable, level);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorSetStreamExtension(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Guid* pExtensionGuid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Guid*, uint, void*, HResult>)(LpVtbl[39]))(ptr, pVideoProcessor, streamIndex, pExtensionGuid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorSetStreamExtension(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Guid* pExtensionGuid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Guid*, uint, void*, HResult>)(LpVtbl[39]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pExtensionGuid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorSetStreamExtension(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Guid* pExtensionGuid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Guid*, uint, void*, HResult>)(LpVtbl[39]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pExtensionGuid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorSetStreamExtension(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Guid pExtensionGuid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppExtensionGuid = &pExtensionGuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Guid*, uint, void*, HResult>)(LpVtbl[39]))(ptr, pVideoProcessor, streamIndex, (Guid*)ppExtensionGuid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorSetStreamExtension(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Guid pExtensionGuid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Guid* ppExtensionGuid = &pExtensionGuid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Guid*, uint, void*, HResult>)(LpVtbl[39]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Guid*)ppExtensionGuid, dataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorSetStreamExtension(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Guid pExtensionGuid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppExtensionGuid = &pExtensionGuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Guid*, uint, void*, HResult>)(LpVtbl[39]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Guid*)ppExtensionGuid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorSetStreamExtension<T>(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Guid* pExtensionGuid, uint dataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Guid*, uint, void*, HResult>)(LpVtbl[39]))(ptr, pVideoProcessor, streamIndex, pExtensionGuid, dataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorSetStreamExtension<T>(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Guid* pExtensionGuid, uint dataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Guid*, uint, void*, HResult>)(LpVtbl[39]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pExtensionGuid, dataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorSetStreamExtension<T>(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Guid pExtensionGuid, uint dataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppExtensionGuid = &pExtensionGuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Guid*, uint, void*, HResult>)(LpVtbl[39]))(ptr, pVideoProcessor, streamIndex, (Guid*)ppExtensionGuid, dataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorSetStreamExtension<T>(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Guid pExtensionGuid, uint dataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppExtensionGuid = &pExtensionGuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Guid*, uint, void*, HResult>)(LpVtbl[39]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Guid*)ppExtensionGuid, dataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamFrameFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, VideoFrameFormat* pFrameFormat) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoFrameFormat*, void>)(LpVtbl[40]))(ptr, pVideoProcessor, streamIndex, pFrameFormat);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamFrameFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, VideoFrameFormat* pFrameFormat) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoFrameFormat*, void>)(LpVtbl[40]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pFrameFormat);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamFrameFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, VideoFrameFormat* pFrameFormat) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoFrameFormat*, void>)(LpVtbl[40]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pFrameFormat);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamFrameFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref VideoFrameFormat pFrameFormat) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoFrameFormat* ppFrameFormat = &pFrameFormat)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoFrameFormat*, void>)(LpVtbl[40]))(ptr, pVideoProcessor, streamIndex, (VideoFrameFormat*)ppFrameFormat);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamFrameFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref VideoFrameFormat pFrameFormat) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoFrameFormat* ppFrameFormat = &pFrameFormat)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoFrameFormat*, void>)(LpVtbl[40]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (VideoFrameFormat*)ppFrameFormat);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamFrameFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref VideoFrameFormat pFrameFormat) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoFrameFormat* ppFrameFormat = &pFrameFormat)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoFrameFormat*, void>)(LpVtbl[40]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (VideoFrameFormat*)ppFrameFormat);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamColorSpace(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, VideoProcessorColorSpace* pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorColorSpace*, void>)(LpVtbl[41]))(ptr, pVideoProcessor, streamIndex, pColorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamColorSpace(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, VideoProcessorColorSpace* pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorColorSpace*, void>)(LpVtbl[41]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamColorSpace(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, VideoProcessorColorSpace* pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorColorSpace*, void>)(LpVtbl[41]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pColorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamColorSpace(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref VideoProcessorColorSpace pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorColorSpace* ppColorSpace = &pColorSpace)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorColorSpace*, void>)(LpVtbl[41]))(ptr, pVideoProcessor, streamIndex, (VideoProcessorColorSpace*)ppColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamColorSpace(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref VideoProcessorColorSpace pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorColorSpace* ppColorSpace = &pColorSpace)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorColorSpace*, void>)(LpVtbl[41]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (VideoProcessorColorSpace*)ppColorSpace);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamColorSpace(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref VideoProcessorColorSpace pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorColorSpace* ppColorSpace = &pColorSpace)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorColorSpace*, void>)(LpVtbl[41]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (VideoProcessorColorSpace*)ppColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamOutputRate(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, VideoProcessorOutputRate* pOutputRate, Bool32* pRepeatFrame, Rational* pCustomRate) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorOutputRate*, Bool32*, Rational*, void>)(LpVtbl[42]))(ptr, pVideoProcessor, streamIndex, pOutputRate, pRepeatFrame, pCustomRate);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamOutputRate(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, VideoProcessorOutputRate* pOutputRate, Bool32* pRepeatFrame, Rational* pCustomRate) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorOutputRate*, Bool32*, Rational*, void>)(LpVtbl[42]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pOutputRate, pRepeatFrame, pCustomRate);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamOutputRate(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, VideoProcessorOutputRate* pOutputRate, Bool32* pRepeatFrame, Rational* pCustomRate) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorOutputRate*, Bool32*, Rational*, void>)(LpVtbl[42]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pOutputRate, pRepeatFrame, pCustomRate);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamOutputRate(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref VideoProcessorOutputRate pOutputRate, Bool32* pRepeatFrame, Rational* pCustomRate) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorOutputRate* ppOutputRate = &pOutputRate)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorOutputRate*, Bool32*, Rational*, void>)(LpVtbl[42]))(ptr, pVideoProcessor, streamIndex, (VideoProcessorOutputRate*)ppOutputRate, pRepeatFrame, pCustomRate);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamOutputRate(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref VideoProcessorOutputRate pOutputRate, Bool32* pRepeatFrame, Rational* pCustomRate) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorOutputRate* ppOutputRate = &pOutputRate)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorOutputRate*, Bool32*, Rational*, void>)(LpVtbl[42]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (VideoProcessorOutputRate*)ppOutputRate, pRepeatFrame, pCustomRate);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamOutputRate(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref VideoProcessorOutputRate pOutputRate, Bool32* pRepeatFrame, Rational* pCustomRate) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorOutputRate* ppOutputRate = &pOutputRate)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorOutputRate*, Bool32*, Rational*, void>)(LpVtbl[42]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (VideoProcessorOutputRate*)ppOutputRate, pRepeatFrame, pCustomRate);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamOutputRate(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, VideoProcessorOutputRate* pOutputRate, ref Bool32 pRepeatFrame, Rational* pCustomRate) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppRepeatFrame = &pRepeatFrame)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorOutputRate*, Bool32*, Rational*, void>)(LpVtbl[42]))(ptr, pVideoProcessor, streamIndex, pOutputRate, (Bool32*)ppRepeatFrame, pCustomRate);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamOutputRate(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, VideoProcessorOutputRate* pOutputRate, ref Bool32 pRepeatFrame, Rational* pCustomRate) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppRepeatFrame = &pRepeatFrame)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorOutputRate*, Bool32*, Rational*, void>)(LpVtbl[42]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pOutputRate, (Bool32*)ppRepeatFrame, pCustomRate);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamOutputRate(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, VideoProcessorOutputRate* pOutputRate, ref Bool32 pRepeatFrame, Rational* pCustomRate) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppRepeatFrame = &pRepeatFrame)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorOutputRate*, Bool32*, Rational*, void>)(LpVtbl[42]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pOutputRate, (Bool32*)ppRepeatFrame, pCustomRate);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamOutputRate(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref VideoProcessorOutputRate pOutputRate, ref Bool32 pRepeatFrame, Rational* pCustomRate) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorOutputRate* ppOutputRate = &pOutputRate)
			{
				fixed (Bool32* ppRepeatFrame = &pRepeatFrame)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorOutputRate*, Bool32*, Rational*, void>)(LpVtbl[42]))(ptr, pVideoProcessor, streamIndex, (VideoProcessorOutputRate*)ppOutputRate, (Bool32*)ppRepeatFrame, pCustomRate);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamOutputRate(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref VideoProcessorOutputRate pOutputRate, ref Bool32 pRepeatFrame, Rational* pCustomRate) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorOutputRate* ppOutputRate = &pOutputRate)
				{
					fixed (Bool32* ppRepeatFrame = &pRepeatFrame)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorOutputRate*, Bool32*, Rational*, void>)(LpVtbl[42]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (VideoProcessorOutputRate*)ppOutputRate, (Bool32*)ppRepeatFrame, pCustomRate);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamOutputRate(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref VideoProcessorOutputRate pOutputRate, ref Bool32 pRepeatFrame, Rational* pCustomRate) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorOutputRate* ppOutputRate = &pOutputRate)
			{
				fixed (Bool32* ppRepeatFrame = &pRepeatFrame)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorOutputRate*, Bool32*, Rational*, void>)(LpVtbl[42]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (VideoProcessorOutputRate*)ppOutputRate, (Bool32*)ppRepeatFrame, pCustomRate);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamOutputRate(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, VideoProcessorOutputRate* pOutputRate, Bool32* pRepeatFrame, ref Rational pCustomRate) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rational* ppCustomRate = &pCustomRate)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorOutputRate*, Bool32*, Rational*, void>)(LpVtbl[42]))(ptr, pVideoProcessor, streamIndex, pOutputRate, pRepeatFrame, (Rational*)ppCustomRate);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamOutputRate(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, VideoProcessorOutputRate* pOutputRate, Bool32* pRepeatFrame, ref Rational pCustomRate) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Rational* ppCustomRate = &pCustomRate)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorOutputRate*, Bool32*, Rational*, void>)(LpVtbl[42]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pOutputRate, pRepeatFrame, (Rational*)ppCustomRate);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamOutputRate(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, VideoProcessorOutputRate* pOutputRate, Bool32* pRepeatFrame, ref Rational pCustomRate) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rational* ppCustomRate = &pCustomRate)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorOutputRate*, Bool32*, Rational*, void>)(LpVtbl[42]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pOutputRate, pRepeatFrame, (Rational*)ppCustomRate);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamOutputRate(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref VideoProcessorOutputRate pOutputRate, Bool32* pRepeatFrame, ref Rational pCustomRate) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorOutputRate* ppOutputRate = &pOutputRate)
			{
				fixed (Rational* ppCustomRate = &pCustomRate)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorOutputRate*, Bool32*, Rational*, void>)(LpVtbl[42]))(ptr, pVideoProcessor, streamIndex, (VideoProcessorOutputRate*)ppOutputRate, pRepeatFrame, (Rational*)ppCustomRate);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamOutputRate(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref VideoProcessorOutputRate pOutputRate, Bool32* pRepeatFrame, ref Rational pCustomRate) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorOutputRate* ppOutputRate = &pOutputRate)
				{
					fixed (Rational* ppCustomRate = &pCustomRate)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorOutputRate*, Bool32*, Rational*, void>)(LpVtbl[42]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (VideoProcessorOutputRate*)ppOutputRate, pRepeatFrame, (Rational*)ppCustomRate);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamOutputRate(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref VideoProcessorOutputRate pOutputRate, Bool32* pRepeatFrame, ref Rational pCustomRate) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorOutputRate* ppOutputRate = &pOutputRate)
			{
				fixed (Rational* ppCustomRate = &pCustomRate)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorOutputRate*, Bool32*, Rational*, void>)(LpVtbl[42]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (VideoProcessorOutputRate*)ppOutputRate, pRepeatFrame, (Rational*)ppCustomRate);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamOutputRate(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, VideoProcessorOutputRate* pOutputRate, ref Bool32 pRepeatFrame, ref Rational pCustomRate) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppRepeatFrame = &pRepeatFrame)
			{
				fixed (Rational* ppCustomRate = &pCustomRate)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorOutputRate*, Bool32*, Rational*, void>)(LpVtbl[42]))(ptr, pVideoProcessor, streamIndex, pOutputRate, (Bool32*)ppRepeatFrame, (Rational*)ppCustomRate);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamOutputRate(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, VideoProcessorOutputRate* pOutputRate, ref Bool32 pRepeatFrame, ref Rational pCustomRate) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppRepeatFrame = &pRepeatFrame)
				{
					fixed (Rational* ppCustomRate = &pCustomRate)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorOutputRate*, Bool32*, Rational*, void>)(LpVtbl[42]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pOutputRate, (Bool32*)ppRepeatFrame, (Rational*)ppCustomRate);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamOutputRate(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, VideoProcessorOutputRate* pOutputRate, ref Bool32 pRepeatFrame, ref Rational pCustomRate) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppRepeatFrame = &pRepeatFrame)
			{
				fixed (Rational* ppCustomRate = &pCustomRate)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorOutputRate*, Bool32*, Rational*, void>)(LpVtbl[42]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pOutputRate, (Bool32*)ppRepeatFrame, (Rational*)ppCustomRate);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamOutputRate(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref VideoProcessorOutputRate pOutputRate, ref Bool32 pRepeatFrame, ref Rational pCustomRate) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorOutputRate* ppOutputRate = &pOutputRate)
			{
				fixed (Bool32* ppRepeatFrame = &pRepeatFrame)
				{
					fixed (Rational* ppCustomRate = &pCustomRate)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorOutputRate*, Bool32*, Rational*, void>)(LpVtbl[42]))(ptr, pVideoProcessor, streamIndex, (VideoProcessorOutputRate*)ppOutputRate, (Bool32*)ppRepeatFrame, (Rational*)ppCustomRate);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamOutputRate(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref VideoProcessorOutputRate pOutputRate, ref Bool32 pRepeatFrame, ref Rational pCustomRate) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorOutputRate* ppOutputRate = &pOutputRate)
				{
					fixed (Bool32* ppRepeatFrame = &pRepeatFrame)
					{
						fixed (Rational* ppCustomRate = &pCustomRate)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorOutputRate*, Bool32*, Rational*, void>)(LpVtbl[42]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (VideoProcessorOutputRate*)ppOutputRate, (Bool32*)ppRepeatFrame, (Rational*)ppCustomRate);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamOutputRate(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref VideoProcessorOutputRate pOutputRate, ref Bool32 pRepeatFrame, ref Rational pCustomRate) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorOutputRate* ppOutputRate = &pOutputRate)
			{
				fixed (Bool32* ppRepeatFrame = &pRepeatFrame)
				{
					fixed (Rational* ppCustomRate = &pCustomRate)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorOutputRate*, Bool32*, Rational*, void>)(LpVtbl[42]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (VideoProcessorOutputRate*)ppOutputRate, (Bool32*)ppRepeatFrame, (Rational*)ppCustomRate);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamSourceRect(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnabled, Rect32* pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rect32*, void>)(LpVtbl[43]))(ptr, pVideoProcessor, streamIndex, pEnabled, pRect);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamSourceRect(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnabled, Rect32* pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rect32*, void>)(LpVtbl[43]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnabled, pRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamSourceRect(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnabled, Rect32* pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rect32*, void>)(LpVtbl[43]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnabled, pRect);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamSourceRect(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, Rect32* pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rect32*, void>)(LpVtbl[43]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnabled, pRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamSourceRect(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, Rect32* pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnabled = &pEnabled)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rect32*, void>)(LpVtbl[43]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnabled, pRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamSourceRect(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, Rect32* pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rect32*, void>)(LpVtbl[43]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnabled, pRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamSourceRect(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnabled, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppRect = &pRect)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rect32*, void>)(LpVtbl[43]))(ptr, pVideoProcessor, streamIndex, pEnabled, (Rect32*)ppRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamSourceRect(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnabled, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Rect32* ppRect = &pRect)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rect32*, void>)(LpVtbl[43]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnabled, (Rect32*)ppRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamSourceRect(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnabled, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppRect = &pRect)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rect32*, void>)(LpVtbl[43]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnabled, (Rect32*)ppRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamSourceRect(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				fixed (Rect32* ppRect = &pRect)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rect32*, void>)(LpVtbl[43]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnabled, (Rect32*)ppRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamSourceRect(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnabled = &pEnabled)
				{
					fixed (Rect32* ppRect = &pRect)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rect32*, void>)(LpVtbl[43]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnabled, (Rect32*)ppRect);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamSourceRect(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				fixed (Rect32* ppRect = &pRect)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rect32*, void>)(LpVtbl[43]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnabled, (Rect32*)ppRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamDestRect(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnabled, Rect32* pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rect32*, void>)(LpVtbl[44]))(ptr, pVideoProcessor, streamIndex, pEnabled, pRect);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamDestRect(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnabled, Rect32* pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rect32*, void>)(LpVtbl[44]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnabled, pRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamDestRect(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnabled, Rect32* pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rect32*, void>)(LpVtbl[44]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnabled, pRect);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamDestRect(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, Rect32* pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rect32*, void>)(LpVtbl[44]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnabled, pRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamDestRect(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, Rect32* pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnabled = &pEnabled)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rect32*, void>)(LpVtbl[44]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnabled, pRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamDestRect(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, Rect32* pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rect32*, void>)(LpVtbl[44]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnabled, pRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamDestRect(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnabled, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppRect = &pRect)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rect32*, void>)(LpVtbl[44]))(ptr, pVideoProcessor, streamIndex, pEnabled, (Rect32*)ppRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamDestRect(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnabled, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Rect32* ppRect = &pRect)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rect32*, void>)(LpVtbl[44]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnabled, (Rect32*)ppRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamDestRect(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnabled, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppRect = &pRect)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rect32*, void>)(LpVtbl[44]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnabled, (Rect32*)ppRect);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamDestRect(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				fixed (Rect32* ppRect = &pRect)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rect32*, void>)(LpVtbl[44]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnabled, (Rect32*)ppRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamDestRect(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnabled = &pEnabled)
				{
					fixed (Rect32* ppRect = &pRect)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rect32*, void>)(LpVtbl[44]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnabled, (Rect32*)ppRect);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamDestRect(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, ref Rect32 pRect) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				fixed (Rect32* ppRect = &pRect)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rect32*, void>)(LpVtbl[44]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnabled, (Rect32*)ppRect);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamAlpha(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnabled, float* pAlpha) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, void>)(LpVtbl[45]))(ptr, pVideoProcessor, streamIndex, pEnabled, pAlpha);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamAlpha(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnabled, float* pAlpha) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, void>)(LpVtbl[45]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnabled, pAlpha);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamAlpha(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnabled, float* pAlpha) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, void>)(LpVtbl[45]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnabled, pAlpha);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamAlpha(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, float* pAlpha) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, void>)(LpVtbl[45]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnabled, pAlpha);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamAlpha(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, float* pAlpha) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnabled = &pEnabled)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, void>)(LpVtbl[45]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnabled, pAlpha);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamAlpha(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, float* pAlpha) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, void>)(LpVtbl[45]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnabled, pAlpha);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamAlpha(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnabled, ref float pAlpha) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* ppAlpha = &pAlpha)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, void>)(LpVtbl[45]))(ptr, pVideoProcessor, streamIndex, pEnabled, (float*)ppAlpha);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamAlpha(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnabled, ref float pAlpha) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (float* ppAlpha = &pAlpha)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, void>)(LpVtbl[45]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnabled, (float*)ppAlpha);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamAlpha(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnabled, ref float pAlpha) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* ppAlpha = &pAlpha)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, void>)(LpVtbl[45]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnabled, (float*)ppAlpha);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamAlpha(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, ref float pAlpha) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				fixed (float* ppAlpha = &pAlpha)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, void>)(LpVtbl[45]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnabled, (float*)ppAlpha);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamAlpha(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, ref float pAlpha) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnabled = &pEnabled)
				{
					fixed (float* ppAlpha = &pAlpha)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, void>)(LpVtbl[45]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnabled, (float*)ppAlpha);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamAlpha(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, ref float pAlpha) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				fixed (float* ppAlpha = &pAlpha)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, void>)(LpVtbl[45]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnabled, (float*)ppAlpha);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamPalette(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, uint count, uint* pEntries) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, uint, uint*, void>)(LpVtbl[46]))(ptr, pVideoProcessor, streamIndex, count, pEntries);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamPalette(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, uint count, uint* pEntries) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, uint, uint*, void>)(LpVtbl[46]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, count, pEntries);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamPalette(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, uint count, uint* pEntries) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, uint, uint*, void>)(LpVtbl[46]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, count, pEntries);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamPalette(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, uint count, ref uint pEntries) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppEntries = &pEntries)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, uint, uint*, void>)(LpVtbl[46]))(ptr, pVideoProcessor, streamIndex, count, (uint*)ppEntries);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamPalette(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, uint count, ref uint pEntries) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (uint* ppEntries = &pEntries)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, uint, uint*, void>)(LpVtbl[46]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, count, (uint*)ppEntries);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamPalette(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, uint count, ref uint pEntries) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppEntries = &pEntries)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, uint, uint*, void>)(LpVtbl[46]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, count, (uint*)ppEntries);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamPixelAspectRatio(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnabled, Rational* pSourceAspectRatio, Rational* pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rational*, Rational*, void>)(LpVtbl[47]))(ptr, pVideoProcessor, streamIndex, pEnabled, pSourceAspectRatio, pDestinationAspectRatio);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamPixelAspectRatio(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnabled, Rational* pSourceAspectRatio, Rational* pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rational*, Rational*, void>)(LpVtbl[47]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnabled, pSourceAspectRatio, pDestinationAspectRatio);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamPixelAspectRatio(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnabled, Rational* pSourceAspectRatio, Rational* pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rational*, Rational*, void>)(LpVtbl[47]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnabled, pSourceAspectRatio, pDestinationAspectRatio);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamPixelAspectRatio(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, Rational* pSourceAspectRatio, Rational* pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rational*, Rational*, void>)(LpVtbl[47]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnabled, pSourceAspectRatio, pDestinationAspectRatio);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamPixelAspectRatio(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, Rational* pSourceAspectRatio, Rational* pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnabled = &pEnabled)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rational*, Rational*, void>)(LpVtbl[47]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnabled, pSourceAspectRatio, pDestinationAspectRatio);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamPixelAspectRatio(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, Rational* pSourceAspectRatio, Rational* pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rational*, Rational*, void>)(LpVtbl[47]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnabled, pSourceAspectRatio, pDestinationAspectRatio);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamPixelAspectRatio(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnabled, ref Rational pSourceAspectRatio, Rational* pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rational* ppSourceAspectRatio = &pSourceAspectRatio)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rational*, Rational*, void>)(LpVtbl[47]))(ptr, pVideoProcessor, streamIndex, pEnabled, (Rational*)ppSourceAspectRatio, pDestinationAspectRatio);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamPixelAspectRatio(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnabled, ref Rational pSourceAspectRatio, Rational* pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Rational* ppSourceAspectRatio = &pSourceAspectRatio)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rational*, Rational*, void>)(LpVtbl[47]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnabled, (Rational*)ppSourceAspectRatio, pDestinationAspectRatio);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamPixelAspectRatio(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnabled, ref Rational pSourceAspectRatio, Rational* pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rational* ppSourceAspectRatio = &pSourceAspectRatio)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rational*, Rational*, void>)(LpVtbl[47]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnabled, (Rational*)ppSourceAspectRatio, pDestinationAspectRatio);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamPixelAspectRatio(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, ref Rational pSourceAspectRatio, Rational* pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				fixed (Rational* ppSourceAspectRatio = &pSourceAspectRatio)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rational*, Rational*, void>)(LpVtbl[47]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnabled, (Rational*)ppSourceAspectRatio, pDestinationAspectRatio);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamPixelAspectRatio(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, ref Rational pSourceAspectRatio, Rational* pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnabled = &pEnabled)
				{
					fixed (Rational* ppSourceAspectRatio = &pSourceAspectRatio)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rational*, Rational*, void>)(LpVtbl[47]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnabled, (Rational*)ppSourceAspectRatio, pDestinationAspectRatio);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamPixelAspectRatio(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, ref Rational pSourceAspectRatio, Rational* pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				fixed (Rational* ppSourceAspectRatio = &pSourceAspectRatio)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rational*, Rational*, void>)(LpVtbl[47]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnabled, (Rational*)ppSourceAspectRatio, pDestinationAspectRatio);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamPixelAspectRatio(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnabled, Rational* pSourceAspectRatio, ref Rational pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rational* ppDestinationAspectRatio = &pDestinationAspectRatio)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rational*, Rational*, void>)(LpVtbl[47]))(ptr, pVideoProcessor, streamIndex, pEnabled, pSourceAspectRatio, (Rational*)ppDestinationAspectRatio);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamPixelAspectRatio(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnabled, Rational* pSourceAspectRatio, ref Rational pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Rational* ppDestinationAspectRatio = &pDestinationAspectRatio)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rational*, Rational*, void>)(LpVtbl[47]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnabled, pSourceAspectRatio, (Rational*)ppDestinationAspectRatio);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamPixelAspectRatio(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnabled, Rational* pSourceAspectRatio, ref Rational pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rational* ppDestinationAspectRatio = &pDestinationAspectRatio)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rational*, Rational*, void>)(LpVtbl[47]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnabled, pSourceAspectRatio, (Rational*)ppDestinationAspectRatio);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamPixelAspectRatio(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, Rational* pSourceAspectRatio, ref Rational pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				fixed (Rational* ppDestinationAspectRatio = &pDestinationAspectRatio)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rational*, Rational*, void>)(LpVtbl[47]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnabled, pSourceAspectRatio, (Rational*)ppDestinationAspectRatio);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamPixelAspectRatio(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, Rational* pSourceAspectRatio, ref Rational pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnabled = &pEnabled)
				{
					fixed (Rational* ppDestinationAspectRatio = &pDestinationAspectRatio)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rational*, Rational*, void>)(LpVtbl[47]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnabled, pSourceAspectRatio, (Rational*)ppDestinationAspectRatio);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamPixelAspectRatio(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, Rational* pSourceAspectRatio, ref Rational pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				fixed (Rational* ppDestinationAspectRatio = &pDestinationAspectRatio)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rational*, Rational*, void>)(LpVtbl[47]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnabled, pSourceAspectRatio, (Rational*)ppDestinationAspectRatio);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamPixelAspectRatio(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnabled, ref Rational pSourceAspectRatio, ref Rational pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rational* ppSourceAspectRatio = &pSourceAspectRatio)
			{
				fixed (Rational* ppDestinationAspectRatio = &pDestinationAspectRatio)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rational*, Rational*, void>)(LpVtbl[47]))(ptr, pVideoProcessor, streamIndex, pEnabled, (Rational*)ppSourceAspectRatio, (Rational*)ppDestinationAspectRatio);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamPixelAspectRatio(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnabled, ref Rational pSourceAspectRatio, ref Rational pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Rational* ppSourceAspectRatio = &pSourceAspectRatio)
				{
					fixed (Rational* ppDestinationAspectRatio = &pDestinationAspectRatio)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rational*, Rational*, void>)(LpVtbl[47]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnabled, (Rational*)ppSourceAspectRatio, (Rational*)ppDestinationAspectRatio);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamPixelAspectRatio(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnabled, ref Rational pSourceAspectRatio, ref Rational pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rational* ppSourceAspectRatio = &pSourceAspectRatio)
			{
				fixed (Rational* ppDestinationAspectRatio = &pDestinationAspectRatio)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rational*, Rational*, void>)(LpVtbl[47]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnabled, (Rational*)ppSourceAspectRatio, (Rational*)ppDestinationAspectRatio);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamPixelAspectRatio(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, ref Rational pSourceAspectRatio, ref Rational pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				fixed (Rational* ppSourceAspectRatio = &pSourceAspectRatio)
				{
					fixed (Rational* ppDestinationAspectRatio = &pDestinationAspectRatio)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rational*, Rational*, void>)(LpVtbl[47]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnabled, (Rational*)ppSourceAspectRatio, (Rational*)ppDestinationAspectRatio);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamPixelAspectRatio(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, ref Rational pSourceAspectRatio, ref Rational pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnabled = &pEnabled)
				{
					fixed (Rational* ppSourceAspectRatio = &pSourceAspectRatio)
					{
						fixed (Rational* ppDestinationAspectRatio = &pDestinationAspectRatio)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rational*, Rational*, void>)(LpVtbl[47]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnabled, (Rational*)ppSourceAspectRatio, (Rational*)ppDestinationAspectRatio);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamPixelAspectRatio(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, ref Rational pSourceAspectRatio, ref Rational pDestinationAspectRatio) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				fixed (Rational* ppSourceAspectRatio = &pSourceAspectRatio)
				{
					fixed (Rational* ppDestinationAspectRatio = &pDestinationAspectRatio)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Rational*, Rational*, void>)(LpVtbl[47]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnabled, (Rational*)ppSourceAspectRatio, (Rational*)ppDestinationAspectRatio);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamLumaKey(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnabled, float* pLower, float* pUpper) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, float*, void>)(LpVtbl[48]))(ptr, pVideoProcessor, streamIndex, pEnabled, pLower, pUpper);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamLumaKey(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnabled, float* pLower, float* pUpper) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, float*, void>)(LpVtbl[48]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnabled, pLower, pUpper);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamLumaKey(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnabled, float* pLower, float* pUpper) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, float*, void>)(LpVtbl[48]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnabled, pLower, pUpper);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamLumaKey(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, float* pLower, float* pUpper) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, float*, void>)(LpVtbl[48]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnabled, pLower, pUpper);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamLumaKey(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, float* pLower, float* pUpper) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnabled = &pEnabled)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, float*, void>)(LpVtbl[48]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnabled, pLower, pUpper);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamLumaKey(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, float* pLower, float* pUpper) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, float*, void>)(LpVtbl[48]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnabled, pLower, pUpper);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamLumaKey(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnabled, ref float pLower, float* pUpper) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* ppLower = &pLower)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, float*, void>)(LpVtbl[48]))(ptr, pVideoProcessor, streamIndex, pEnabled, (float*)ppLower, pUpper);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamLumaKey(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnabled, ref float pLower, float* pUpper) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (float* ppLower = &pLower)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, float*, void>)(LpVtbl[48]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnabled, (float*)ppLower, pUpper);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamLumaKey(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnabled, ref float pLower, float* pUpper) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* ppLower = &pLower)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, float*, void>)(LpVtbl[48]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnabled, (float*)ppLower, pUpper);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamLumaKey(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, ref float pLower, float* pUpper) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				fixed (float* ppLower = &pLower)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, float*, void>)(LpVtbl[48]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnabled, (float*)ppLower, pUpper);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamLumaKey(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, ref float pLower, float* pUpper) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnabled = &pEnabled)
				{
					fixed (float* ppLower = &pLower)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, float*, void>)(LpVtbl[48]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnabled, (float*)ppLower, pUpper);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamLumaKey(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, ref float pLower, float* pUpper) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				fixed (float* ppLower = &pLower)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, float*, void>)(LpVtbl[48]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnabled, (float*)ppLower, pUpper);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamLumaKey(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnabled, float* pLower, ref float pUpper) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* ppUpper = &pUpper)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, float*, void>)(LpVtbl[48]))(ptr, pVideoProcessor, streamIndex, pEnabled, pLower, (float*)ppUpper);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamLumaKey(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnabled, float* pLower, ref float pUpper) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (float* ppUpper = &pUpper)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, float*, void>)(LpVtbl[48]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnabled, pLower, (float*)ppUpper);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamLumaKey(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnabled, float* pLower, ref float pUpper) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* ppUpper = &pUpper)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, float*, void>)(LpVtbl[48]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnabled, pLower, (float*)ppUpper);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamLumaKey(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, float* pLower, ref float pUpper) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				fixed (float* ppUpper = &pUpper)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, float*, void>)(LpVtbl[48]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnabled, pLower, (float*)ppUpper);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamLumaKey(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, float* pLower, ref float pUpper) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnabled = &pEnabled)
				{
					fixed (float* ppUpper = &pUpper)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, float*, void>)(LpVtbl[48]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnabled, pLower, (float*)ppUpper);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamLumaKey(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, float* pLower, ref float pUpper) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				fixed (float* ppUpper = &pUpper)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, float*, void>)(LpVtbl[48]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnabled, pLower, (float*)ppUpper);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamLumaKey(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnabled, ref float pLower, ref float pUpper) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* ppLower = &pLower)
			{
				fixed (float* ppUpper = &pUpper)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, float*, void>)(LpVtbl[48]))(ptr, pVideoProcessor, streamIndex, pEnabled, (float*)ppLower, (float*)ppUpper);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamLumaKey(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnabled, ref float pLower, ref float pUpper) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (float* ppLower = &pLower)
				{
					fixed (float* ppUpper = &pUpper)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, float*, void>)(LpVtbl[48]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnabled, (float*)ppLower, (float*)ppUpper);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamLumaKey(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnabled, ref float pLower, ref float pUpper) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* ppLower = &pLower)
			{
				fixed (float* ppUpper = &pUpper)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, float*, void>)(LpVtbl[48]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnabled, (float*)ppLower, (float*)ppUpper);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamLumaKey(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, ref float pLower, ref float pUpper) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				fixed (float* ppLower = &pLower)
				{
					fixed (float* ppUpper = &pUpper)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, float*, void>)(LpVtbl[48]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnabled, (float*)ppLower, (float*)ppUpper);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamLumaKey(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, ref float pLower, ref float pUpper) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnabled = &pEnabled)
				{
					fixed (float* ppLower = &pLower)
					{
						fixed (float* ppUpper = &pUpper)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, float*, void>)(LpVtbl[48]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnabled, (float*)ppLower, (float*)ppUpper);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamLumaKey(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnabled, ref float pLower, ref float pUpper) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				fixed (float* ppLower = &pLower)
				{
					fixed (float* ppUpper = &pUpper)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, float*, float*, void>)(LpVtbl[48]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnabled, (float*)ppLower, (float*)ppUpper);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, pFormat, pLeftViewFrame0, pBaseViewFrame0, pFlipMode, monoOffset);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, pFormat, pLeftViewFrame0, pBaseViewFrame0, pFlipMode, monoOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, pFormat, pLeftViewFrame0, pBaseViewFrame0, pFlipMode, monoOffset);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, pLeftViewFrame0, pBaseViewFrame0, pFlipMode, monoOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, pLeftViewFrame0, pBaseViewFrame0, pFlipMode, monoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, pFormat, pLeftViewFrame0, pBaseViewFrame0, pFlipMode, monoOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, pBaseViewFrame0, pFlipMode, monoOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, pBaseViewFrame0, pFlipMode, monoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, pBaseViewFrame0, pFlipMode, monoOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, pBaseViewFrame0, pFlipMode, monoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, pBaseViewFrame0, pFlipMode, monoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, pBaseViewFrame0, pFlipMode, monoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, pFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, pFlipMode, monoOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, pFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, pFlipMode, monoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, pFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, pFlipMode, monoOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, pFlipMode, monoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, pFlipMode, monoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, pFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, pFlipMode, monoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, pFlipMode, monoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, pFlipMode, monoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, pFlipMode, monoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, pFlipMode, monoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
					{
						fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, pFlipMode, monoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, pFlipMode, monoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, pFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, monoOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, pFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, monoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, pFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, monoOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, monoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, monoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, pFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, monoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, monoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, monoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, monoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, monoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
					{
						fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, monoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, monoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
			{
				fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, pFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, monoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, pFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, monoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
			{
				fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, pFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, monoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, monoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, monoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, pFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, monoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, monoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, monoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, monoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, monoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
					{
						fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
						{
							fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
							{
								((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, monoOffset);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, monoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, pFormat, pLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, pFormat, pLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, pFormat, pLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, pLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, pLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, pFormat, pLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
					{
						fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
			{
				fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, pFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, pFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
			{
				fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, pFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, pFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
					{
						fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
						{
							fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
							{
								((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
			{
				fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, pFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, pFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
			{
				fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, pFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, pFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
					{
						fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
						{
							fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
							{
								((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
			{
				fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, pFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, pFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
			{
				fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, pFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
						{
							fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
							{
								((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, pFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
						{
							fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
							{
								((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
						{
							fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
							{
								((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
					{
						fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
						{
							fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
							{
								fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
								{
									((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
								}
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, int* monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
						{
							fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
							{
								((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, monoOffset);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (int* pmonoOffset = &monoOffset)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, pFormat, pLeftViewFrame0, pBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (int* pmonoOffset = &monoOffset)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, pFormat, pLeftViewFrame0, pBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (int* pmonoOffset = &monoOffset)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, pFormat, pLeftViewFrame0, pBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (int* pmonoOffset = &monoOffset)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, pLeftViewFrame0, pBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (int* pmonoOffset = &monoOffset)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, pLeftViewFrame0, pBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (int* pmonoOffset = &monoOffset)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, pFormat, pLeftViewFrame0, pBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				fixed (int* pmonoOffset = &monoOffset)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, pBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (int* pmonoOffset = &monoOffset)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, pBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				fixed (int* pmonoOffset = &monoOffset)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, pBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (int* pmonoOffset = &monoOffset)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, pBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
					{
						fixed (int* pmonoOffset = &monoOffset)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, pBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (int* pmonoOffset = &monoOffset)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, pBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
			{
				fixed (int* pmonoOffset = &monoOffset)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, pFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (int* pmonoOffset = &monoOffset)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, pFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
			{
				fixed (int* pmonoOffset = &monoOffset)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, pFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (int* pmonoOffset = &monoOffset)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						fixed (int* pmonoOffset = &monoOffset)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (int* pmonoOffset = &monoOffset)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, pFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (int* pmonoOffset = &monoOffset)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						fixed (int* pmonoOffset = &monoOffset)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (int* pmonoOffset = &monoOffset)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						fixed (int* pmonoOffset = &monoOffset)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
					{
						fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
						{
							fixed (int* pmonoOffset = &monoOffset)
							{
								((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						fixed (int* pmonoOffset = &monoOffset)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
			{
				fixed (int* pmonoOffset = &monoOffset)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, pFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
				{
					fixed (int* pmonoOffset = &monoOffset)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, pFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
			{
				fixed (int* pmonoOffset = &monoOffset)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, pFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
				{
					fixed (int* pmonoOffset = &monoOffset)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						fixed (int* pmonoOffset = &monoOffset)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
				{
					fixed (int* pmonoOffset = &monoOffset)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, pFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
				{
					fixed (int* pmonoOffset = &monoOffset)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						fixed (int* pmonoOffset = &monoOffset)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
				{
					fixed (int* pmonoOffset = &monoOffset)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						fixed (int* pmonoOffset = &monoOffset)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
					{
						fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
						{
							fixed (int* pmonoOffset = &monoOffset)
							{
								((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						fixed (int* pmonoOffset = &monoOffset)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
			{
				fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
				{
					fixed (int* pmonoOffset = &monoOffset)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, pFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						fixed (int* pmonoOffset = &monoOffset)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, pFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
			{
				fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
				{
					fixed (int* pmonoOffset = &monoOffset)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, pFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						fixed (int* pmonoOffset = &monoOffset)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
						{
							fixed (int* pmonoOffset = &monoOffset)
							{
								((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						fixed (int* pmonoOffset = &monoOffset)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, pFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						fixed (int* pmonoOffset = &monoOffset)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
						{
							fixed (int* pmonoOffset = &monoOffset)
							{
								((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						fixed (int* pmonoOffset = &monoOffset)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
						{
							fixed (int* pmonoOffset = &monoOffset)
							{
								((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
					{
						fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
						{
							fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
							{
								fixed (int* pmonoOffset = &monoOffset)
								{
									((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
								}
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, VideoProcessorStereoFlipMode* pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
						{
							fixed (int* pmonoOffset = &monoOffset)
							{
								((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, pFlipMode, (int*)pmonoOffset);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
			{
				fixed (int* pmonoOffset = &monoOffset)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, pFormat, pLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
				{
					fixed (int* pmonoOffset = &monoOffset)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, pFormat, pLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
			{
				fixed (int* pmonoOffset = &monoOffset)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, pFormat, pLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
				{
					fixed (int* pmonoOffset = &monoOffset)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, pLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						fixed (int* pmonoOffset = &monoOffset)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, pLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
				{
					fixed (int* pmonoOffset = &monoOffset)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, pFormat, pLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
				{
					fixed (int* pmonoOffset = &monoOffset)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						fixed (int* pmonoOffset = &monoOffset)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
				{
					fixed (int* pmonoOffset = &monoOffset)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						fixed (int* pmonoOffset = &monoOffset)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
					{
						fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
						{
							fixed (int* pmonoOffset = &monoOffset)
							{
								((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						fixed (int* pmonoOffset = &monoOffset)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
			{
				fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
				{
					fixed (int* pmonoOffset = &monoOffset)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, pFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						fixed (int* pmonoOffset = &monoOffset)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, pFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
			{
				fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
				{
					fixed (int* pmonoOffset = &monoOffset)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, pFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						fixed (int* pmonoOffset = &monoOffset)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
						{
							fixed (int* pmonoOffset = &monoOffset)
							{
								((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						fixed (int* pmonoOffset = &monoOffset)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, pFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						fixed (int* pmonoOffset = &monoOffset)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
						{
							fixed (int* pmonoOffset = &monoOffset)
							{
								((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						fixed (int* pmonoOffset = &monoOffset)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
						{
							fixed (int* pmonoOffset = &monoOffset)
							{
								((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
					{
						fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
						{
							fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
							{
								fixed (int* pmonoOffset = &monoOffset)
								{
									((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
								}
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, Bool32* pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
						{
							fixed (int* pmonoOffset = &monoOffset)
							{
								((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, pBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
			{
				fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
				{
					fixed (int* pmonoOffset = &monoOffset)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, pFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						fixed (int* pmonoOffset = &monoOffset)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, pFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
			{
				fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
				{
					fixed (int* pmonoOffset = &monoOffset)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, pFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						fixed (int* pmonoOffset = &monoOffset)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
						{
							fixed (int* pmonoOffset = &monoOffset)
							{
								((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						fixed (int* pmonoOffset = &monoOffset)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, pFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						fixed (int* pmonoOffset = &monoOffset)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
						{
							fixed (int* pmonoOffset = &monoOffset)
							{
								((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						fixed (int* pmonoOffset = &monoOffset)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
						{
							fixed (int* pmonoOffset = &monoOffset)
							{
								((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
					{
						fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
						{
							fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
							{
								fixed (int* pmonoOffset = &monoOffset)
								{
									((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
								}
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, Bool32* pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
						{
							fixed (int* pmonoOffset = &monoOffset)
							{
								((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, pLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
			{
				fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						fixed (int* pmonoOffset = &monoOffset)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, pFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
						{
							fixed (int* pmonoOffset = &monoOffset)
							{
								((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, pFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
			{
				fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
				{
					fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
					{
						fixed (int* pmonoOffset = &monoOffset)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, pFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
						{
							fixed (int* pmonoOffset = &monoOffset)
							{
								((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
						{
							fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
							{
								fixed (int* pmonoOffset = &monoOffset)
								{
									((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, pFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
								}
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorStereoFormat* pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
						{
							fixed (int* pmonoOffset = &monoOffset)
							{
								((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, pFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
						{
							fixed (int* pmonoOffset = &monoOffset)
							{
								((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
						{
							fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
							{
								fixed (int* pmonoOffset = &monoOffset)
								{
									((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
								}
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
			{
				fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
				{
					fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
					{
						fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
						{
							fixed (int* pmonoOffset = &monoOffset)
							{
								((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
						{
							fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
							{
								fixed (int* pmonoOffset = &monoOffset)
								{
									((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
								}
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
					{
						fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
						{
							fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
							{
								fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
								{
									fixed (int* pmonoOffset = &monoOffset)
									{
										((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
									}
								}
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamStereoFormat(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorStereoFormat pFormat, ref Bool32 pLeftViewFrame0, ref Bool32 pBaseViewFrame0, ref VideoProcessorStereoFlipMode pFlipMode, ref int monoOffset) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorStereoFormat* ppFormat = &pFormat)
				{
					fixed (Bool32* ppLeftViewFrame0 = &pLeftViewFrame0)
					{
						fixed (Bool32* ppBaseViewFrame0 = &pBaseViewFrame0)
						{
							fixed (VideoProcessorStereoFlipMode* ppFlipMode = &pFlipMode)
							{
								fixed (int* pmonoOffset = &monoOffset)
								{
									((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorStereoFormat*, Bool32*, Bool32*, VideoProcessorStereoFlipMode*, int*, void>)(LpVtbl[49]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, (VideoProcessorStereoFormat*)ppFormat, (Bool32*)ppLeftViewFrame0, (Bool32*)ppBaseViewFrame0, (VideoProcessorStereoFlipMode*)ppFlipMode, (int*)pmonoOffset);
								}
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamAutoProcessingMode(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnabled) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, void>)(LpVtbl[50]))(ptr, pVideoProcessor, streamIndex, pEnabled);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamAutoProcessingMode(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnabled) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, void>)(LpVtbl[50]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnabled);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamAutoProcessingMode(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnabled) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, void>)(LpVtbl[50]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnabled);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamAutoProcessingMode(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnabled) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, void>)(LpVtbl[50]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnabled);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamAutoProcessingMode(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnabled) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnabled = &pEnabled)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, void>)(LpVtbl[50]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnabled);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamAutoProcessingMode(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnabled) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, void>)(LpVtbl[50]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnabled);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamFilter(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, VideoProcessorFilter filter, Bool32* pEnabled, int* pLevel) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorFilter, Bool32*, int*, void>)(LpVtbl[51]))(ptr, pVideoProcessor, streamIndex, filter, pEnabled, pLevel);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamFilter(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, VideoProcessorFilter filter, Bool32* pEnabled, int* pLevel) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorFilter, Bool32*, int*, void>)(LpVtbl[51]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, filter, pEnabled, pLevel);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamFilter(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, VideoProcessorFilter filter, Bool32* pEnabled, int* pLevel) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorFilter, Bool32*, int*, void>)(LpVtbl[51]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, filter, pEnabled, pLevel);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamFilter(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, VideoProcessorFilter filter, ref Bool32 pEnabled, int* pLevel) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorFilter, Bool32*, int*, void>)(LpVtbl[51]))(ptr, pVideoProcessor, streamIndex, filter, (Bool32*)ppEnabled, pLevel);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamFilter(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, VideoProcessorFilter filter, ref Bool32 pEnabled, int* pLevel) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnabled = &pEnabled)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorFilter, Bool32*, int*, void>)(LpVtbl[51]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, filter, (Bool32*)ppEnabled, pLevel);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamFilter(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, VideoProcessorFilter filter, ref Bool32 pEnabled, int* pLevel) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorFilter, Bool32*, int*, void>)(LpVtbl[51]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, filter, (Bool32*)ppEnabled, pLevel);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamFilter(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, VideoProcessorFilter filter, Bool32* pEnabled, ref int pLevel) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (int* ppLevel = &pLevel)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorFilter, Bool32*, int*, void>)(LpVtbl[51]))(ptr, pVideoProcessor, streamIndex, filter, pEnabled, (int*)ppLevel);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamFilter(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, VideoProcessorFilter filter, Bool32* pEnabled, ref int pLevel) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (int* ppLevel = &pLevel)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorFilter, Bool32*, int*, void>)(LpVtbl[51]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, filter, pEnabled, (int*)ppLevel);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamFilter(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, VideoProcessorFilter filter, Bool32* pEnabled, ref int pLevel) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (int* ppLevel = &pLevel)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorFilter, Bool32*, int*, void>)(LpVtbl[51]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, filter, pEnabled, (int*)ppLevel);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamFilter(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, VideoProcessorFilter filter, ref Bool32 pEnabled, ref int pLevel) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				fixed (int* ppLevel = &pLevel)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorFilter, Bool32*, int*, void>)(LpVtbl[51]))(ptr, pVideoProcessor, streamIndex, filter, (Bool32*)ppEnabled, (int*)ppLevel);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamFilter(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, VideoProcessorFilter filter, ref Bool32 pEnabled, ref int pLevel) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnabled = &pEnabled)
				{
					fixed (int* ppLevel = &pLevel)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorFilter, Bool32*, int*, void>)(LpVtbl[51]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, filter, (Bool32*)ppEnabled, (int*)ppLevel);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamFilter(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, VideoProcessorFilter filter, ref Bool32 pEnabled, ref int pLevel) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnabled = &pEnabled)
			{
				fixed (int* ppLevel = &pLevel)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, VideoProcessorFilter, Bool32*, int*, void>)(LpVtbl[51]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, filter, (Bool32*)ppEnabled, (int*)ppLevel);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetStreamExtension(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Guid* pExtensionGuid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Guid*, uint, void*, HResult>)(LpVtbl[52]))(ptr, pVideoProcessor, streamIndex, pExtensionGuid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetStreamExtension(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Guid* pExtensionGuid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Guid*, uint, void*, HResult>)(LpVtbl[52]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pExtensionGuid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetStreamExtension(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Guid* pExtensionGuid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Guid*, uint, void*, HResult>)(LpVtbl[52]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pExtensionGuid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetStreamExtension(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Guid pExtensionGuid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppExtensionGuid = &pExtensionGuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Guid*, uint, void*, HResult>)(LpVtbl[52]))(ptr, pVideoProcessor, streamIndex, (Guid*)ppExtensionGuid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetStreamExtension(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Guid pExtensionGuid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Guid* ppExtensionGuid = &pExtensionGuid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Guid*, uint, void*, HResult>)(LpVtbl[52]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Guid*)ppExtensionGuid, dataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetStreamExtension(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Guid pExtensionGuid, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppExtensionGuid = &pExtensionGuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Guid*, uint, void*, HResult>)(LpVtbl[52]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Guid*)ppExtensionGuid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetStreamExtension<T>(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Guid* pExtensionGuid, uint dataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Guid*, uint, void*, HResult>)(LpVtbl[52]))(ptr, pVideoProcessor, streamIndex, pExtensionGuid, dataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetStreamExtension<T>(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Guid* pExtensionGuid, uint dataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Guid*, uint, void*, HResult>)(LpVtbl[52]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pExtensionGuid, dataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetStreamExtension<T>(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Guid pExtensionGuid, uint dataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppExtensionGuid = &pExtensionGuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Guid*, uint, void*, HResult>)(LpVtbl[52]))(ptr, pVideoProcessor, streamIndex, (Guid*)ppExtensionGuid, dataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetStreamExtension<T>(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Guid pExtensionGuid, uint dataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* ppExtensionGuid = &pExtensionGuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Guid*, uint, void*, HResult>)(LpVtbl[52]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Guid*)ppExtensionGuid, dataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorBlt(ID3D11VideoProcessor* pVideoProcessor, ID3D11VideoProcessorOutputView* pView, uint outputFrame, uint streamCount, VideoProcessorStream* pStreams) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, ID3D11VideoProcessorOutputView*, uint, uint, VideoProcessorStream*, HResult>)(LpVtbl[53]))(ptr, pVideoProcessor, pView, outputFrame, streamCount, pStreams);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorBlt(ref ID3D11VideoProcessor pVideoProcessor, ID3D11VideoProcessorOutputView* pView, uint outputFrame, uint streamCount, VideoProcessorStream* pStreams) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, ID3D11VideoProcessorOutputView*, uint, uint, VideoProcessorStream*, HResult>)(LpVtbl[53]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, pView, outputFrame, streamCount, pStreams);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorBlt(ComPtr<ID3D11VideoProcessor> pVideoProcessor, ID3D11VideoProcessorOutputView* pView, uint outputFrame, uint streamCount, VideoProcessorStream* pStreams) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, ID3D11VideoProcessorOutputView*, uint, uint, VideoProcessorStream*, HResult>)(LpVtbl[53]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pView, outputFrame, streamCount, pStreams);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorBlt(ID3D11VideoProcessor* pVideoProcessor, ref ID3D11VideoProcessorOutputView pView, uint outputFrame, uint streamCount, VideoProcessorStream* pStreams) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessorOutputView* ppView = &pView)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, ID3D11VideoProcessorOutputView*, uint, uint, VideoProcessorStream*, HResult>)(LpVtbl[53]))(ptr, pVideoProcessor, (ID3D11VideoProcessorOutputView*)ppView, outputFrame, streamCount, pStreams);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorBlt(ID3D11VideoProcessor* pVideoProcessor, ComPtr<ID3D11VideoProcessorOutputView> pView, uint outputFrame, uint streamCount, VideoProcessorStream* pStreams) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, ID3D11VideoProcessorOutputView*, uint, uint, VideoProcessorStream*, HResult>)(LpVtbl[53]))(ptr, pVideoProcessor, (ID3D11VideoProcessorOutputView*)pView.Handle, outputFrame, streamCount, pStreams);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorBlt(ref ID3D11VideoProcessor pVideoProcessor, ref ID3D11VideoProcessorOutputView pView, uint outputFrame, uint streamCount, VideoProcessorStream* pStreams) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (ID3D11VideoProcessorOutputView* ppView = &pView)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, ID3D11VideoProcessorOutputView*, uint, uint, VideoProcessorStream*, HResult>)(LpVtbl[53]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, (ID3D11VideoProcessorOutputView*)ppView, outputFrame, streamCount, pStreams);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorBlt(ComPtr<ID3D11VideoProcessor> pVideoProcessor, ComPtr<ID3D11VideoProcessorOutputView> pView, uint outputFrame, uint streamCount, VideoProcessorStream* pStreams) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, ID3D11VideoProcessorOutputView*, uint, uint, VideoProcessorStream*, HResult>)(LpVtbl[53]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (ID3D11VideoProcessorOutputView*)pView.Handle, outputFrame, streamCount, pStreams);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorBlt(ID3D11VideoProcessor* pVideoProcessor, ID3D11VideoProcessorOutputView* pView, uint outputFrame, uint streamCount, ref VideoProcessorStream pStreams) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStream* ppStreams = &pStreams)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, ID3D11VideoProcessorOutputView*, uint, uint, VideoProcessorStream*, HResult>)(LpVtbl[53]))(ptr, pVideoProcessor, pView, outputFrame, streamCount, (VideoProcessorStream*)ppStreams);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorBlt(ref ID3D11VideoProcessor pVideoProcessor, ID3D11VideoProcessorOutputView* pView, uint outputFrame, uint streamCount, ref VideoProcessorStream pStreams) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorStream* ppStreams = &pStreams)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, ID3D11VideoProcessorOutputView*, uint, uint, VideoProcessorStream*, HResult>)(LpVtbl[53]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, pView, outputFrame, streamCount, (VideoProcessorStream*)ppStreams);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorBlt(ComPtr<ID3D11VideoProcessor> pVideoProcessor, ID3D11VideoProcessorOutputView* pView, uint outputFrame, uint streamCount, ref VideoProcessorStream pStreams) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStream* ppStreams = &pStreams)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, ID3D11VideoProcessorOutputView*, uint, uint, VideoProcessorStream*, HResult>)(LpVtbl[53]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pView, outputFrame, streamCount, (VideoProcessorStream*)ppStreams);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorBlt(ID3D11VideoProcessor* pVideoProcessor, ref ID3D11VideoProcessorOutputView pView, uint outputFrame, uint streamCount, ref VideoProcessorStream pStreams) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessorOutputView* ppView = &pView)
			{
				fixed (VideoProcessorStream* ppStreams = &pStreams)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, ID3D11VideoProcessorOutputView*, uint, uint, VideoProcessorStream*, HResult>)(LpVtbl[53]))(ptr, pVideoProcessor, (ID3D11VideoProcessorOutputView*)ppView, outputFrame, streamCount, (VideoProcessorStream*)ppStreams);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorBlt(ID3D11VideoProcessor* pVideoProcessor, ComPtr<ID3D11VideoProcessorOutputView> pView, uint outputFrame, uint streamCount, ref VideoProcessorStream pStreams) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStream* ppStreams = &pStreams)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, ID3D11VideoProcessorOutputView*, uint, uint, VideoProcessorStream*, HResult>)(LpVtbl[53]))(ptr, pVideoProcessor, (ID3D11VideoProcessorOutputView*)pView.Handle, outputFrame, streamCount, (VideoProcessorStream*)ppStreams);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorBlt(ref ID3D11VideoProcessor pVideoProcessor, ref ID3D11VideoProcessorOutputView pView, uint outputFrame, uint streamCount, ref VideoProcessorStream pStreams) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (ID3D11VideoProcessorOutputView* ppView = &pView)
				{
					fixed (VideoProcessorStream* ppStreams = &pStreams)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, ID3D11VideoProcessorOutputView*, uint, uint, VideoProcessorStream*, HResult>)(LpVtbl[53]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, (ID3D11VideoProcessorOutputView*)ppView, outputFrame, streamCount, (VideoProcessorStream*)ppStreams);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorBlt(ComPtr<ID3D11VideoProcessor> pVideoProcessor, ComPtr<ID3D11VideoProcessorOutputView> pView, uint outputFrame, uint streamCount, ref VideoProcessorStream pStreams) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStream* ppStreams = &pStreams)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, ID3D11VideoProcessorOutputView*, uint, uint, VideoProcessorStream*, HResult>)(LpVtbl[53]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (ID3D11VideoProcessorOutputView*)pView.Handle, outputFrame, streamCount, (VideoProcessorStream*)ppStreams);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult NegotiateCryptoSessionKeyExchange(ID3D11CryptoSession* pCryptoSession, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, uint, void*, HResult>)(LpVtbl[54]))(ptr, pCryptoSession, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult NegotiateCryptoSessionKeyExchange(ref ID3D11CryptoSession pCryptoSession, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11CryptoSession* ppCryptoSession = &pCryptoSession)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, uint, void*, HResult>)(LpVtbl[54]))(ptr, (ID3D11CryptoSession*)ppCryptoSession, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult NegotiateCryptoSessionKeyExchange(ComPtr<ID3D11CryptoSession> pCryptoSession, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, uint, void*, HResult>)(LpVtbl[54]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult NegotiateCryptoSessionKeyExchange<T>(ID3D11CryptoSession* pCryptoSession, uint dataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, uint, void*, HResult>)(LpVtbl[54]))(ptr, pCryptoSession, dataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult NegotiateCryptoSessionKeyExchange<T>(ComPtr<ID3D11CryptoSession> pCryptoSession, uint dataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, uint, void*, HResult>)(LpVtbl[54]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, dataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void EncryptionBlt(ID3D11CryptoSession* pCryptoSession, ID3D11Texture2D* pSrcSurface, ID3D11Texture2D* pDstSurface, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, uint, void*, void>)(LpVtbl[55]))(ptr, pCryptoSession, pSrcSurface, pDstSurface, ivSize, piV);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void EncryptionBlt(ref ID3D11CryptoSession pCryptoSession, ID3D11Texture2D* pSrcSurface, ID3D11Texture2D* pDstSurface, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11CryptoSession* ppCryptoSession = &pCryptoSession)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, uint, void*, void>)(LpVtbl[55]))(ptr, (ID3D11CryptoSession*)ppCryptoSession, pSrcSurface, pDstSurface, ivSize, piV);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void EncryptionBlt(ComPtr<ID3D11CryptoSession> pCryptoSession, ID3D11Texture2D* pSrcSurface, ID3D11Texture2D* pDstSurface, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, uint, void*, void>)(LpVtbl[55]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, pSrcSurface, pDstSurface, ivSize, piV);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void EncryptionBlt(ID3D11CryptoSession* pCryptoSession, ref ID3D11Texture2D pSrcSurface, ID3D11Texture2D* pDstSurface, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Texture2D* ppSrcSurface = &pSrcSurface)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, uint, void*, void>)(LpVtbl[55]))(ptr, pCryptoSession, (ID3D11Texture2D*)ppSrcSurface, pDstSurface, ivSize, piV);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void EncryptionBlt(ID3D11CryptoSession* pCryptoSession, ComPtr<ID3D11Texture2D> pSrcSurface, ID3D11Texture2D* pDstSurface, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, uint, void*, void>)(LpVtbl[55]))(ptr, pCryptoSession, (ID3D11Texture2D*)pSrcSurface.Handle, pDstSurface, ivSize, piV);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void EncryptionBlt(ref ID3D11CryptoSession pCryptoSession, ref ID3D11Texture2D pSrcSurface, ID3D11Texture2D* pDstSurface, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11CryptoSession* ppCryptoSession = &pCryptoSession)
			{
				fixed (ID3D11Texture2D* ppSrcSurface = &pSrcSurface)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, uint, void*, void>)(LpVtbl[55]))(ptr, (ID3D11CryptoSession*)ppCryptoSession, (ID3D11Texture2D*)ppSrcSurface, pDstSurface, ivSize, piV);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void EncryptionBlt(ComPtr<ID3D11CryptoSession> pCryptoSession, ComPtr<ID3D11Texture2D> pSrcSurface, ID3D11Texture2D* pDstSurface, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, uint, void*, void>)(LpVtbl[55]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, (ID3D11Texture2D*)pSrcSurface.Handle, pDstSurface, ivSize, piV);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void EncryptionBlt(ID3D11CryptoSession* pCryptoSession, ID3D11Texture2D* pSrcSurface, ref ID3D11Texture2D pDstSurface, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Texture2D* ppDstSurface = &pDstSurface)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, uint, void*, void>)(LpVtbl[55]))(ptr, pCryptoSession, pSrcSurface, (ID3D11Texture2D*)ppDstSurface, ivSize, piV);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void EncryptionBlt(ID3D11CryptoSession* pCryptoSession, ID3D11Texture2D* pSrcSurface, ComPtr<ID3D11Texture2D> pDstSurface, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, uint, void*, void>)(LpVtbl[55]))(ptr, pCryptoSession, pSrcSurface, (ID3D11Texture2D*)pDstSurface.Handle, ivSize, piV);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void EncryptionBlt(ref ID3D11CryptoSession pCryptoSession, ID3D11Texture2D* pSrcSurface, ref ID3D11Texture2D pDstSurface, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11CryptoSession* ppCryptoSession = &pCryptoSession)
			{
				fixed (ID3D11Texture2D* ppDstSurface = &pDstSurface)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, uint, void*, void>)(LpVtbl[55]))(ptr, (ID3D11CryptoSession*)ppCryptoSession, pSrcSurface, (ID3D11Texture2D*)ppDstSurface, ivSize, piV);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void EncryptionBlt(ComPtr<ID3D11CryptoSession> pCryptoSession, ID3D11Texture2D* pSrcSurface, ComPtr<ID3D11Texture2D> pDstSurface, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, uint, void*, void>)(LpVtbl[55]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, pSrcSurface, (ID3D11Texture2D*)pDstSurface.Handle, ivSize, piV);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void EncryptionBlt(ID3D11CryptoSession* pCryptoSession, ref ID3D11Texture2D pSrcSurface, ref ID3D11Texture2D pDstSurface, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Texture2D* ppSrcSurface = &pSrcSurface)
			{
				fixed (ID3D11Texture2D* ppDstSurface = &pDstSurface)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, uint, void*, void>)(LpVtbl[55]))(ptr, pCryptoSession, (ID3D11Texture2D*)ppSrcSurface, (ID3D11Texture2D*)ppDstSurface, ivSize, piV);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void EncryptionBlt(ID3D11CryptoSession* pCryptoSession, ComPtr<ID3D11Texture2D> pSrcSurface, ComPtr<ID3D11Texture2D> pDstSurface, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, uint, void*, void>)(LpVtbl[55]))(ptr, pCryptoSession, (ID3D11Texture2D*)pSrcSurface.Handle, (ID3D11Texture2D*)pDstSurface.Handle, ivSize, piV);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void EncryptionBlt(ref ID3D11CryptoSession pCryptoSession, ref ID3D11Texture2D pSrcSurface, ref ID3D11Texture2D pDstSurface, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11CryptoSession* ppCryptoSession = &pCryptoSession)
			{
				fixed (ID3D11Texture2D* ppSrcSurface = &pSrcSurface)
				{
					fixed (ID3D11Texture2D* ppDstSurface = &pDstSurface)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, uint, void*, void>)(LpVtbl[55]))(ptr, (ID3D11CryptoSession*)ppCryptoSession, (ID3D11Texture2D*)ppSrcSurface, (ID3D11Texture2D*)ppDstSurface, ivSize, piV);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void EncryptionBlt(ComPtr<ID3D11CryptoSession> pCryptoSession, ComPtr<ID3D11Texture2D> pSrcSurface, ComPtr<ID3D11Texture2D> pDstSurface, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, uint, void*, void>)(LpVtbl[55]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, (ID3D11Texture2D*)pSrcSurface.Handle, (ID3D11Texture2D*)pDstSurface.Handle, ivSize, piV);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void EncryptionBlt<T>(ID3D11CryptoSession* pCryptoSession, ID3D11Texture2D* pSrcSurface, ID3D11Texture2D* pDstSurface, uint ivSize, ComPtr<T> piV) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, uint, void*, void>)(LpVtbl[55]))(ptr, pCryptoSession, pSrcSurface, pDstSurface, ivSize, (void*)piV.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void EncryptionBlt<T>(ComPtr<ID3D11CryptoSession> pCryptoSession, ID3D11Texture2D* pSrcSurface, ID3D11Texture2D* pDstSurface, uint ivSize, ComPtr<T> piV) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, uint, void*, void>)(LpVtbl[55]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, pSrcSurface, pDstSurface, ivSize, (void*)piV.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void EncryptionBlt<T>(ID3D11CryptoSession* pCryptoSession, ComPtr<ID3D11Texture2D> pSrcSurface, ID3D11Texture2D* pDstSurface, uint ivSize, ComPtr<T> piV) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, uint, void*, void>)(LpVtbl[55]))(ptr, pCryptoSession, (ID3D11Texture2D*)pSrcSurface.Handle, pDstSurface, ivSize, (void*)piV.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void EncryptionBlt<T>(ComPtr<ID3D11CryptoSession> pCryptoSession, ComPtr<ID3D11Texture2D> pSrcSurface, ID3D11Texture2D* pDstSurface, uint ivSize, ComPtr<T> piV) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, uint, void*, void>)(LpVtbl[55]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, (ID3D11Texture2D*)pSrcSurface.Handle, pDstSurface, ivSize, (void*)piV.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void EncryptionBlt<T>(ID3D11CryptoSession* pCryptoSession, ID3D11Texture2D* pSrcSurface, ComPtr<ID3D11Texture2D> pDstSurface, uint ivSize, ComPtr<T> piV) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, uint, void*, void>)(LpVtbl[55]))(ptr, pCryptoSession, pSrcSurface, (ID3D11Texture2D*)pDstSurface.Handle, ivSize, (void*)piV.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void EncryptionBlt<T>(ComPtr<ID3D11CryptoSession> pCryptoSession, ID3D11Texture2D* pSrcSurface, ComPtr<ID3D11Texture2D> pDstSurface, uint ivSize, ComPtr<T> piV) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, uint, void*, void>)(LpVtbl[55]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, pSrcSurface, (ID3D11Texture2D*)pDstSurface.Handle, ivSize, (void*)piV.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void EncryptionBlt<T>(ID3D11CryptoSession* pCryptoSession, ComPtr<ID3D11Texture2D> pSrcSurface, ComPtr<ID3D11Texture2D> pDstSurface, uint ivSize, ComPtr<T> piV) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, uint, void*, void>)(LpVtbl[55]))(ptr, pCryptoSession, (ID3D11Texture2D*)pSrcSurface.Handle, (ID3D11Texture2D*)pDstSurface.Handle, ivSize, (void*)piV.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void EncryptionBlt<T>(ComPtr<ID3D11CryptoSession> pCryptoSession, ComPtr<ID3D11Texture2D> pSrcSurface, ComPtr<ID3D11Texture2D> pDstSurface, uint ivSize, ComPtr<T> piV) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, uint, void*, void>)(LpVtbl[55]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, (ID3D11Texture2D*)pSrcSurface.Handle, (ID3D11Texture2D*)pDstSurface.Handle, ivSize, (void*)piV.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt(ID3D11CryptoSession* pCryptoSession, ID3D11Texture2D* pSrcSurface, ID3D11Texture2D* pDstSurface, EncryptedBlockInfo* pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, pCryptoSession, pSrcSurface, pDstSurface, pEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, piV);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt(ref ID3D11CryptoSession pCryptoSession, ID3D11Texture2D* pSrcSurface, ID3D11Texture2D* pDstSurface, EncryptedBlockInfo* pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11CryptoSession* ppCryptoSession = &pCryptoSession)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, (ID3D11CryptoSession*)ppCryptoSession, pSrcSurface, pDstSurface, pEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, piV);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt(ComPtr<ID3D11CryptoSession> pCryptoSession, ID3D11Texture2D* pSrcSurface, ID3D11Texture2D* pDstSurface, EncryptedBlockInfo* pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, pSrcSurface, pDstSurface, pEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, piV);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt(ID3D11CryptoSession* pCryptoSession, ref ID3D11Texture2D pSrcSurface, ID3D11Texture2D* pDstSurface, EncryptedBlockInfo* pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Texture2D* ppSrcSurface = &pSrcSurface)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, pCryptoSession, (ID3D11Texture2D*)ppSrcSurface, pDstSurface, pEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, piV);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt(ID3D11CryptoSession* pCryptoSession, ComPtr<ID3D11Texture2D> pSrcSurface, ID3D11Texture2D* pDstSurface, EncryptedBlockInfo* pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, pCryptoSession, (ID3D11Texture2D*)pSrcSurface.Handle, pDstSurface, pEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, piV);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt(ref ID3D11CryptoSession pCryptoSession, ref ID3D11Texture2D pSrcSurface, ID3D11Texture2D* pDstSurface, EncryptedBlockInfo* pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11CryptoSession* ppCryptoSession = &pCryptoSession)
			{
				fixed (ID3D11Texture2D* ppSrcSurface = &pSrcSurface)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, (ID3D11CryptoSession*)ppCryptoSession, (ID3D11Texture2D*)ppSrcSurface, pDstSurface, pEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, piV);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt(ComPtr<ID3D11CryptoSession> pCryptoSession, ComPtr<ID3D11Texture2D> pSrcSurface, ID3D11Texture2D* pDstSurface, EncryptedBlockInfo* pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, (ID3D11Texture2D*)pSrcSurface.Handle, pDstSurface, pEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, piV);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt(ID3D11CryptoSession* pCryptoSession, ID3D11Texture2D* pSrcSurface, ref ID3D11Texture2D pDstSurface, EncryptedBlockInfo* pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Texture2D* ppDstSurface = &pDstSurface)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, pCryptoSession, pSrcSurface, (ID3D11Texture2D*)ppDstSurface, pEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, piV);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt(ID3D11CryptoSession* pCryptoSession, ID3D11Texture2D* pSrcSurface, ComPtr<ID3D11Texture2D> pDstSurface, EncryptedBlockInfo* pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, pCryptoSession, pSrcSurface, (ID3D11Texture2D*)pDstSurface.Handle, pEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, piV);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt(ref ID3D11CryptoSession pCryptoSession, ID3D11Texture2D* pSrcSurface, ref ID3D11Texture2D pDstSurface, EncryptedBlockInfo* pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11CryptoSession* ppCryptoSession = &pCryptoSession)
			{
				fixed (ID3D11Texture2D* ppDstSurface = &pDstSurface)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, (ID3D11CryptoSession*)ppCryptoSession, pSrcSurface, (ID3D11Texture2D*)ppDstSurface, pEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, piV);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt(ComPtr<ID3D11CryptoSession> pCryptoSession, ID3D11Texture2D* pSrcSurface, ComPtr<ID3D11Texture2D> pDstSurface, EncryptedBlockInfo* pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, pSrcSurface, (ID3D11Texture2D*)pDstSurface.Handle, pEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, piV);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt(ID3D11CryptoSession* pCryptoSession, ref ID3D11Texture2D pSrcSurface, ref ID3D11Texture2D pDstSurface, EncryptedBlockInfo* pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Texture2D* ppSrcSurface = &pSrcSurface)
			{
				fixed (ID3D11Texture2D* ppDstSurface = &pDstSurface)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, pCryptoSession, (ID3D11Texture2D*)ppSrcSurface, (ID3D11Texture2D*)ppDstSurface, pEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, piV);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt(ID3D11CryptoSession* pCryptoSession, ComPtr<ID3D11Texture2D> pSrcSurface, ComPtr<ID3D11Texture2D> pDstSurface, EncryptedBlockInfo* pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, pCryptoSession, (ID3D11Texture2D*)pSrcSurface.Handle, (ID3D11Texture2D*)pDstSurface.Handle, pEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, piV);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt(ref ID3D11CryptoSession pCryptoSession, ref ID3D11Texture2D pSrcSurface, ref ID3D11Texture2D pDstSurface, EncryptedBlockInfo* pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11CryptoSession* ppCryptoSession = &pCryptoSession)
			{
				fixed (ID3D11Texture2D* ppSrcSurface = &pSrcSurface)
				{
					fixed (ID3D11Texture2D* ppDstSurface = &pDstSurface)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, (ID3D11CryptoSession*)ppCryptoSession, (ID3D11Texture2D*)ppSrcSurface, (ID3D11Texture2D*)ppDstSurface, pEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, piV);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt(ComPtr<ID3D11CryptoSession> pCryptoSession, ComPtr<ID3D11Texture2D> pSrcSurface, ComPtr<ID3D11Texture2D> pDstSurface, EncryptedBlockInfo* pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, (ID3D11Texture2D*)pSrcSurface.Handle, (ID3D11Texture2D*)pDstSurface.Handle, pEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, piV);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt(ID3D11CryptoSession* pCryptoSession, ID3D11Texture2D* pSrcSurface, ID3D11Texture2D* pDstSurface, ref EncryptedBlockInfo pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (EncryptedBlockInfo* ppEncryptedBlockInfo = &pEncryptedBlockInfo)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, pCryptoSession, pSrcSurface, pDstSurface, (EncryptedBlockInfo*)ppEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, piV);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt(ref ID3D11CryptoSession pCryptoSession, ID3D11Texture2D* pSrcSurface, ID3D11Texture2D* pDstSurface, ref EncryptedBlockInfo pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11CryptoSession* ppCryptoSession = &pCryptoSession)
			{
				fixed (EncryptedBlockInfo* ppEncryptedBlockInfo = &pEncryptedBlockInfo)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, (ID3D11CryptoSession*)ppCryptoSession, pSrcSurface, pDstSurface, (EncryptedBlockInfo*)ppEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, piV);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt(ComPtr<ID3D11CryptoSession> pCryptoSession, ID3D11Texture2D* pSrcSurface, ID3D11Texture2D* pDstSurface, ref EncryptedBlockInfo pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (EncryptedBlockInfo* ppEncryptedBlockInfo = &pEncryptedBlockInfo)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, pSrcSurface, pDstSurface, (EncryptedBlockInfo*)ppEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, piV);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt(ID3D11CryptoSession* pCryptoSession, ref ID3D11Texture2D pSrcSurface, ID3D11Texture2D* pDstSurface, ref EncryptedBlockInfo pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Texture2D* ppSrcSurface = &pSrcSurface)
			{
				fixed (EncryptedBlockInfo* ppEncryptedBlockInfo = &pEncryptedBlockInfo)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, pCryptoSession, (ID3D11Texture2D*)ppSrcSurface, pDstSurface, (EncryptedBlockInfo*)ppEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, piV);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt(ID3D11CryptoSession* pCryptoSession, ComPtr<ID3D11Texture2D> pSrcSurface, ID3D11Texture2D* pDstSurface, ref EncryptedBlockInfo pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (EncryptedBlockInfo* ppEncryptedBlockInfo = &pEncryptedBlockInfo)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, pCryptoSession, (ID3D11Texture2D*)pSrcSurface.Handle, pDstSurface, (EncryptedBlockInfo*)ppEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, piV);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt(ref ID3D11CryptoSession pCryptoSession, ref ID3D11Texture2D pSrcSurface, ID3D11Texture2D* pDstSurface, ref EncryptedBlockInfo pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11CryptoSession* ppCryptoSession = &pCryptoSession)
			{
				fixed (ID3D11Texture2D* ppSrcSurface = &pSrcSurface)
				{
					fixed (EncryptedBlockInfo* ppEncryptedBlockInfo = &pEncryptedBlockInfo)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, (ID3D11CryptoSession*)ppCryptoSession, (ID3D11Texture2D*)ppSrcSurface, pDstSurface, (EncryptedBlockInfo*)ppEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, piV);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt(ComPtr<ID3D11CryptoSession> pCryptoSession, ComPtr<ID3D11Texture2D> pSrcSurface, ID3D11Texture2D* pDstSurface, ref EncryptedBlockInfo pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (EncryptedBlockInfo* ppEncryptedBlockInfo = &pEncryptedBlockInfo)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, (ID3D11Texture2D*)pSrcSurface.Handle, pDstSurface, (EncryptedBlockInfo*)ppEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, piV);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt(ID3D11CryptoSession* pCryptoSession, ID3D11Texture2D* pSrcSurface, ref ID3D11Texture2D pDstSurface, ref EncryptedBlockInfo pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Texture2D* ppDstSurface = &pDstSurface)
			{
				fixed (EncryptedBlockInfo* ppEncryptedBlockInfo = &pEncryptedBlockInfo)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, pCryptoSession, pSrcSurface, (ID3D11Texture2D*)ppDstSurface, (EncryptedBlockInfo*)ppEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, piV);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt(ID3D11CryptoSession* pCryptoSession, ID3D11Texture2D* pSrcSurface, ComPtr<ID3D11Texture2D> pDstSurface, ref EncryptedBlockInfo pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (EncryptedBlockInfo* ppEncryptedBlockInfo = &pEncryptedBlockInfo)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, pCryptoSession, pSrcSurface, (ID3D11Texture2D*)pDstSurface.Handle, (EncryptedBlockInfo*)ppEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, piV);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt(ref ID3D11CryptoSession pCryptoSession, ID3D11Texture2D* pSrcSurface, ref ID3D11Texture2D pDstSurface, ref EncryptedBlockInfo pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11CryptoSession* ppCryptoSession = &pCryptoSession)
			{
				fixed (ID3D11Texture2D* ppDstSurface = &pDstSurface)
				{
					fixed (EncryptedBlockInfo* ppEncryptedBlockInfo = &pEncryptedBlockInfo)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, (ID3D11CryptoSession*)ppCryptoSession, pSrcSurface, (ID3D11Texture2D*)ppDstSurface, (EncryptedBlockInfo*)ppEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, piV);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt(ComPtr<ID3D11CryptoSession> pCryptoSession, ID3D11Texture2D* pSrcSurface, ComPtr<ID3D11Texture2D> pDstSurface, ref EncryptedBlockInfo pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (EncryptedBlockInfo* ppEncryptedBlockInfo = &pEncryptedBlockInfo)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, pSrcSurface, (ID3D11Texture2D*)pDstSurface.Handle, (EncryptedBlockInfo*)ppEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, piV);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt(ID3D11CryptoSession* pCryptoSession, ref ID3D11Texture2D pSrcSurface, ref ID3D11Texture2D pDstSurface, ref EncryptedBlockInfo pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Texture2D* ppSrcSurface = &pSrcSurface)
			{
				fixed (ID3D11Texture2D* ppDstSurface = &pDstSurface)
				{
					fixed (EncryptedBlockInfo* ppEncryptedBlockInfo = &pEncryptedBlockInfo)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, pCryptoSession, (ID3D11Texture2D*)ppSrcSurface, (ID3D11Texture2D*)ppDstSurface, (EncryptedBlockInfo*)ppEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, piV);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt(ID3D11CryptoSession* pCryptoSession, ComPtr<ID3D11Texture2D> pSrcSurface, ComPtr<ID3D11Texture2D> pDstSurface, ref EncryptedBlockInfo pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (EncryptedBlockInfo* ppEncryptedBlockInfo = &pEncryptedBlockInfo)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, pCryptoSession, (ID3D11Texture2D*)pSrcSurface.Handle, (ID3D11Texture2D*)pDstSurface.Handle, (EncryptedBlockInfo*)ppEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, piV);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt(ref ID3D11CryptoSession pCryptoSession, ref ID3D11Texture2D pSrcSurface, ref ID3D11Texture2D pDstSurface, ref EncryptedBlockInfo pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11CryptoSession* ppCryptoSession = &pCryptoSession)
			{
				fixed (ID3D11Texture2D* ppSrcSurface = &pSrcSurface)
				{
					fixed (ID3D11Texture2D* ppDstSurface = &pDstSurface)
					{
						fixed (EncryptedBlockInfo* ppEncryptedBlockInfo = &pEncryptedBlockInfo)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, (ID3D11CryptoSession*)ppCryptoSession, (ID3D11Texture2D*)ppSrcSurface, (ID3D11Texture2D*)ppDstSurface, (EncryptedBlockInfo*)ppEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, piV);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt(ComPtr<ID3D11CryptoSession> pCryptoSession, ComPtr<ID3D11Texture2D> pSrcSurface, ComPtr<ID3D11Texture2D> pDstSurface, ref EncryptedBlockInfo pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, void* piV) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (EncryptedBlockInfo* ppEncryptedBlockInfo = &pEncryptedBlockInfo)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, (ID3D11Texture2D*)pSrcSurface.Handle, (ID3D11Texture2D*)pDstSurface.Handle, (EncryptedBlockInfo*)ppEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, piV);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt<T>(ID3D11CryptoSession* pCryptoSession, ID3D11Texture2D* pSrcSurface, ID3D11Texture2D* pDstSurface, EncryptedBlockInfo* pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, ComPtr<T> piV) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, pCryptoSession, pSrcSurface, pDstSurface, pEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, (void*)piV.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt<T>(ComPtr<ID3D11CryptoSession> pCryptoSession, ID3D11Texture2D* pSrcSurface, ID3D11Texture2D* pDstSurface, EncryptedBlockInfo* pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, ComPtr<T> piV) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, pSrcSurface, pDstSurface, pEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, (void*)piV.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt<T>(ID3D11CryptoSession* pCryptoSession, ComPtr<ID3D11Texture2D> pSrcSurface, ID3D11Texture2D* pDstSurface, EncryptedBlockInfo* pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, ComPtr<T> piV) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, pCryptoSession, (ID3D11Texture2D*)pSrcSurface.Handle, pDstSurface, pEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, (void*)piV.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt<T>(ComPtr<ID3D11CryptoSession> pCryptoSession, ComPtr<ID3D11Texture2D> pSrcSurface, ID3D11Texture2D* pDstSurface, EncryptedBlockInfo* pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, ComPtr<T> piV) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, (ID3D11Texture2D*)pSrcSurface.Handle, pDstSurface, pEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, (void*)piV.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt<T>(ID3D11CryptoSession* pCryptoSession, ID3D11Texture2D* pSrcSurface, ComPtr<ID3D11Texture2D> pDstSurface, EncryptedBlockInfo* pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, ComPtr<T> piV) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, pCryptoSession, pSrcSurface, (ID3D11Texture2D*)pDstSurface.Handle, pEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, (void*)piV.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt<T>(ComPtr<ID3D11CryptoSession> pCryptoSession, ID3D11Texture2D* pSrcSurface, ComPtr<ID3D11Texture2D> pDstSurface, EncryptedBlockInfo* pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, ComPtr<T> piV) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, pSrcSurface, (ID3D11Texture2D*)pDstSurface.Handle, pEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, (void*)piV.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt<T>(ID3D11CryptoSession* pCryptoSession, ComPtr<ID3D11Texture2D> pSrcSurface, ComPtr<ID3D11Texture2D> pDstSurface, EncryptedBlockInfo* pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, ComPtr<T> piV) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, pCryptoSession, (ID3D11Texture2D*)pSrcSurface.Handle, (ID3D11Texture2D*)pDstSurface.Handle, pEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, (void*)piV.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt<T>(ComPtr<ID3D11CryptoSession> pCryptoSession, ComPtr<ID3D11Texture2D> pSrcSurface, ComPtr<ID3D11Texture2D> pDstSurface, EncryptedBlockInfo* pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, ComPtr<T> piV) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, (ID3D11Texture2D*)pSrcSurface.Handle, (ID3D11Texture2D*)pDstSurface.Handle, pEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, (void*)piV.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt<T>(ID3D11CryptoSession* pCryptoSession, ID3D11Texture2D* pSrcSurface, ID3D11Texture2D* pDstSurface, ref EncryptedBlockInfo pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, ComPtr<T> piV) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (EncryptedBlockInfo* ppEncryptedBlockInfo = &pEncryptedBlockInfo)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, pCryptoSession, pSrcSurface, pDstSurface, (EncryptedBlockInfo*)ppEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, (void*)piV.Handle);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt<T>(ComPtr<ID3D11CryptoSession> pCryptoSession, ID3D11Texture2D* pSrcSurface, ID3D11Texture2D* pDstSurface, ref EncryptedBlockInfo pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, ComPtr<T> piV) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (EncryptedBlockInfo* ppEncryptedBlockInfo = &pEncryptedBlockInfo)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, pSrcSurface, pDstSurface, (EncryptedBlockInfo*)ppEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, (void*)piV.Handle);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt<T>(ID3D11CryptoSession* pCryptoSession, ComPtr<ID3D11Texture2D> pSrcSurface, ID3D11Texture2D* pDstSurface, ref EncryptedBlockInfo pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, ComPtr<T> piV) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (EncryptedBlockInfo* ppEncryptedBlockInfo = &pEncryptedBlockInfo)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, pCryptoSession, (ID3D11Texture2D*)pSrcSurface.Handle, pDstSurface, (EncryptedBlockInfo*)ppEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, (void*)piV.Handle);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt<T>(ComPtr<ID3D11CryptoSession> pCryptoSession, ComPtr<ID3D11Texture2D> pSrcSurface, ID3D11Texture2D* pDstSurface, ref EncryptedBlockInfo pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, ComPtr<T> piV) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (EncryptedBlockInfo* ppEncryptedBlockInfo = &pEncryptedBlockInfo)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, (ID3D11Texture2D*)pSrcSurface.Handle, pDstSurface, (EncryptedBlockInfo*)ppEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, (void*)piV.Handle);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt<T>(ID3D11CryptoSession* pCryptoSession, ID3D11Texture2D* pSrcSurface, ComPtr<ID3D11Texture2D> pDstSurface, ref EncryptedBlockInfo pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, ComPtr<T> piV) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (EncryptedBlockInfo* ppEncryptedBlockInfo = &pEncryptedBlockInfo)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, pCryptoSession, pSrcSurface, (ID3D11Texture2D*)pDstSurface.Handle, (EncryptedBlockInfo*)ppEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, (void*)piV.Handle);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt<T>(ComPtr<ID3D11CryptoSession> pCryptoSession, ID3D11Texture2D* pSrcSurface, ComPtr<ID3D11Texture2D> pDstSurface, ref EncryptedBlockInfo pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, ComPtr<T> piV) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (EncryptedBlockInfo* ppEncryptedBlockInfo = &pEncryptedBlockInfo)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, pSrcSurface, (ID3D11Texture2D*)pDstSurface.Handle, (EncryptedBlockInfo*)ppEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, (void*)piV.Handle);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt<T>(ID3D11CryptoSession* pCryptoSession, ComPtr<ID3D11Texture2D> pSrcSurface, ComPtr<ID3D11Texture2D> pDstSurface, ref EncryptedBlockInfo pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, ComPtr<T> piV) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (EncryptedBlockInfo* ppEncryptedBlockInfo = &pEncryptedBlockInfo)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, pCryptoSession, (ID3D11Texture2D*)pSrcSurface.Handle, (ID3D11Texture2D*)pDstSurface.Handle, (EncryptedBlockInfo*)ppEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, (void*)piV.Handle);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DecryptionBlt<T>(ComPtr<ID3D11CryptoSession> pCryptoSession, ComPtr<ID3D11Texture2D> pSrcSurface, ComPtr<ID3D11Texture2D> pDstSurface, ref EncryptedBlockInfo pEncryptedBlockInfo, uint contentKeySize, void* pContentKey, uint ivSize, ComPtr<T> piV) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (EncryptedBlockInfo* ppEncryptedBlockInfo = &pEncryptedBlockInfo)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, ID3D11Texture2D*, ID3D11Texture2D*, EncryptedBlockInfo*, uint, void*, uint, void*, void>)(LpVtbl[56]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, (ID3D11Texture2D*)pSrcSurface.Handle, (ID3D11Texture2D*)pDstSurface.Handle, (EncryptedBlockInfo*)ppEncryptedBlockInfo, contentKeySize, pContentKey, ivSize, (void*)piV.Handle);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void StartSessionKeyRefresh(ID3D11CryptoSession* pCryptoSession, uint randomNumberSize, void* pRandomNumber) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, uint, void*, void>)(LpVtbl[57]))(ptr, pCryptoSession, randomNumberSize, pRandomNumber);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void StartSessionKeyRefresh(ref ID3D11CryptoSession pCryptoSession, uint randomNumberSize, void* pRandomNumber) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11CryptoSession* ppCryptoSession = &pCryptoSession)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, uint, void*, void>)(LpVtbl[57]))(ptr, (ID3D11CryptoSession*)ppCryptoSession, randomNumberSize, pRandomNumber);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void StartSessionKeyRefresh(ComPtr<ID3D11CryptoSession> pCryptoSession, uint randomNumberSize, void* pRandomNumber) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, uint, void*, void>)(LpVtbl[57]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, randomNumberSize, pRandomNumber);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void StartSessionKeyRefresh<T>(ID3D11CryptoSession* pCryptoSession, uint randomNumberSize, ComPtr<T> pRandomNumber) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, uint, void*, void>)(LpVtbl[57]))(ptr, pCryptoSession, randomNumberSize, (void*)pRandomNumber.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void StartSessionKeyRefresh<T>(ComPtr<ID3D11CryptoSession> pCryptoSession, uint randomNumberSize, ComPtr<T> pRandomNumber) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, uint, void*, void>)(LpVtbl[57]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, randomNumberSize, (void*)pRandomNumber.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void FinishSessionKeyRefresh(ID3D11CryptoSession* pCryptoSession) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, void>)(LpVtbl[58]))(ptr, pCryptoSession);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void FinishSessionKeyRefresh(ref ID3D11CryptoSession pCryptoSession) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11CryptoSession* ppCryptoSession = &pCryptoSession)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, void>)(LpVtbl[58]))(ptr, (ID3D11CryptoSession*)ppCryptoSession);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void FinishSessionKeyRefresh(ComPtr<ID3D11CryptoSession> pCryptoSession) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, void>)(LpVtbl[58]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetEncryptionBltKey(ID3D11CryptoSession* pCryptoSession, uint keySize, void* pReadbackKey) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, uint, void*, HResult>)(LpVtbl[59]))(ptr, pCryptoSession, keySize, pReadbackKey);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetEncryptionBltKey(ref ID3D11CryptoSession pCryptoSession, uint keySize, void* pReadbackKey) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11CryptoSession* ppCryptoSession = &pCryptoSession)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, uint, void*, HResult>)(LpVtbl[59]))(ptr, (ID3D11CryptoSession*)ppCryptoSession, keySize, pReadbackKey);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetEncryptionBltKey(ComPtr<ID3D11CryptoSession> pCryptoSession, uint keySize, void* pReadbackKey) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, uint, void*, HResult>)(LpVtbl[59]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, keySize, pReadbackKey);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetEncryptionBltKey<T>(ID3D11CryptoSession* pCryptoSession, uint keySize, ComPtr<T> pReadbackKey) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, uint, void*, HResult>)(LpVtbl[59]))(ptr, pCryptoSession, keySize, (void*)pReadbackKey.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetEncryptionBltKey<T>(ComPtr<ID3D11CryptoSession> pCryptoSession, uint keySize, ComPtr<T> pReadbackKey) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, uint, void*, HResult>)(LpVtbl[59]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, keySize, (void*)pReadbackKey.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult NegotiateAuthenticatedChannelKeyExchange(ID3D11AuthenticatedChannel* pChannel, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11AuthenticatedChannel*, uint, void*, HResult>)(LpVtbl[60]))(ptr, pChannel, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult NegotiateAuthenticatedChannelKeyExchange(ref ID3D11AuthenticatedChannel pChannel, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11AuthenticatedChannel* ppChannel = &pChannel)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11AuthenticatedChannel*, uint, void*, HResult>)(LpVtbl[60]))(ptr, (ID3D11AuthenticatedChannel*)ppChannel, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult NegotiateAuthenticatedChannelKeyExchange(ComPtr<ID3D11AuthenticatedChannel> pChannel, uint dataSize, void* pData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11AuthenticatedChannel*, uint, void*, HResult>)(LpVtbl[60]))(ptr, (ID3D11AuthenticatedChannel*)pChannel.Handle, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult NegotiateAuthenticatedChannelKeyExchange<T>(ID3D11AuthenticatedChannel* pChannel, uint dataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11AuthenticatedChannel*, uint, void*, HResult>)(LpVtbl[60]))(ptr, pChannel, dataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult NegotiateAuthenticatedChannelKeyExchange<T>(ComPtr<ID3D11AuthenticatedChannel> pChannel, uint dataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11AuthenticatedChannel*, uint, void*, HResult>)(LpVtbl[60]))(ptr, (ID3D11AuthenticatedChannel*)pChannel.Handle, dataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryAuthenticatedChannel(ID3D11AuthenticatedChannel* pChannel, uint inputSize, void* pInput, uint outputSize, void* pOutput) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11AuthenticatedChannel*, uint, void*, uint, void*, HResult>)(LpVtbl[61]))(ptr, pChannel, inputSize, pInput, outputSize, pOutput);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryAuthenticatedChannel(ref ID3D11AuthenticatedChannel pChannel, uint inputSize, void* pInput, uint outputSize, void* pOutput) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11AuthenticatedChannel* ppChannel = &pChannel)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11AuthenticatedChannel*, uint, void*, uint, void*, HResult>)(LpVtbl[61]))(ptr, (ID3D11AuthenticatedChannel*)ppChannel, inputSize, pInput, outputSize, pOutput);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryAuthenticatedChannel(ComPtr<ID3D11AuthenticatedChannel> pChannel, uint inputSize, void* pInput, uint outputSize, void* pOutput) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11AuthenticatedChannel*, uint, void*, uint, void*, HResult>)(LpVtbl[61]))(ptr, (ID3D11AuthenticatedChannel*)pChannel.Handle, inputSize, pInput, outputSize, pOutput);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryAuthenticatedChannel<T>(ID3D11AuthenticatedChannel* pChannel, uint inputSize, void* pInput, uint outputSize, ComPtr<T> pOutput) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11AuthenticatedChannel*, uint, void*, uint, void*, HResult>)(LpVtbl[61]))(ptr, pChannel, inputSize, pInput, outputSize, (void*)pOutput.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryAuthenticatedChannel<T>(ComPtr<ID3D11AuthenticatedChannel> pChannel, uint inputSize, void* pInput, uint outputSize, ComPtr<T> pOutput) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11AuthenticatedChannel*, uint, void*, uint, void*, HResult>)(LpVtbl[61]))(ptr, (ID3D11AuthenticatedChannel*)pChannel.Handle, inputSize, pInput, outputSize, (void*)pOutput.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult ConfigureAuthenticatedChannel(ID3D11AuthenticatedChannel* pChannel, uint inputSize, void* pInput, AuthenticatedConfigureOutput* pOutput) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11AuthenticatedChannel*, uint, void*, AuthenticatedConfigureOutput*, HResult>)(LpVtbl[62]))(ptr, pChannel, inputSize, pInput, pOutput);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult ConfigureAuthenticatedChannel(ref ID3D11AuthenticatedChannel pChannel, uint inputSize, void* pInput, AuthenticatedConfigureOutput* pOutput) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11AuthenticatedChannel* ppChannel = &pChannel)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11AuthenticatedChannel*, uint, void*, AuthenticatedConfigureOutput*, HResult>)(LpVtbl[62]))(ptr, (ID3D11AuthenticatedChannel*)ppChannel, inputSize, pInput, pOutput);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult ConfigureAuthenticatedChannel(ComPtr<ID3D11AuthenticatedChannel> pChannel, uint inputSize, void* pInput, AuthenticatedConfigureOutput* pOutput) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11AuthenticatedChannel*, uint, void*, AuthenticatedConfigureOutput*, HResult>)(LpVtbl[62]))(ptr, (ID3D11AuthenticatedChannel*)pChannel.Handle, inputSize, pInput, pOutput);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult ConfigureAuthenticatedChannel(ID3D11AuthenticatedChannel* pChannel, uint inputSize, void* pInput, ref AuthenticatedConfigureOutput pOutput) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (AuthenticatedConfigureOutput* ppOutput = &pOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11AuthenticatedChannel*, uint, void*, AuthenticatedConfigureOutput*, HResult>)(LpVtbl[62]))(ptr, pChannel, inputSize, pInput, (AuthenticatedConfigureOutput*)ppOutput);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult ConfigureAuthenticatedChannel(ref ID3D11AuthenticatedChannel pChannel, uint inputSize, void* pInput, ref AuthenticatedConfigureOutput pOutput) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11AuthenticatedChannel* ppChannel = &pChannel)
			{
				fixed (AuthenticatedConfigureOutput* ppOutput = &pOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11AuthenticatedChannel*, uint, void*, AuthenticatedConfigureOutput*, HResult>)(LpVtbl[62]))(ptr, (ID3D11AuthenticatedChannel*)ppChannel, inputSize, pInput, (AuthenticatedConfigureOutput*)ppOutput);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult ConfigureAuthenticatedChannel(ComPtr<ID3D11AuthenticatedChannel> pChannel, uint inputSize, void* pInput, ref AuthenticatedConfigureOutput pOutput) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (AuthenticatedConfigureOutput* ppOutput = &pOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11AuthenticatedChannel*, uint, void*, AuthenticatedConfigureOutput*, HResult>)(LpVtbl[62]))(ptr, (ID3D11AuthenticatedChannel*)pChannel.Handle, inputSize, pInput, (AuthenticatedConfigureOutput*)ppOutput);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamRotation(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32 enable, VideoProcessorRotation rotation) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, VideoProcessorRotation, void>)(LpVtbl[63]))(ptr, pVideoProcessor, streamIndex, enable, rotation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamRotation(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32 enable, VideoProcessorRotation rotation) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, VideoProcessorRotation, void>)(LpVtbl[63]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, enable, rotation);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamRotation(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32 enable, VideoProcessorRotation rotation) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, VideoProcessorRotation, void>)(LpVtbl[63]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, enable, rotation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamRotation(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorRotation* pRotation) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorRotation*, void>)(LpVtbl[64]))(ptr, pVideoProcessor, streamIndex, pEnable, pRotation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamRotation(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorRotation* pRotation) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorRotation*, void>)(LpVtbl[64]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, pRotation);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamRotation(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, VideoProcessorRotation* pRotation) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorRotation*, void>)(LpVtbl[64]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, pRotation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamRotation(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorRotation* pRotation) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorRotation*, void>)(LpVtbl[64]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, pRotation);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamRotation(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorRotation* pRotation) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorRotation*, void>)(LpVtbl[64]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, pRotation);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamRotation(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, VideoProcessorRotation* pRotation) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorRotation*, void>)(LpVtbl[64]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, pRotation);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamRotation(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorRotation pRotation) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorRotation* ppRotation = &pRotation)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorRotation*, void>)(LpVtbl[64]))(ptr, pVideoProcessor, streamIndex, pEnable, (VideoProcessorRotation*)ppRotation);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamRotation(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorRotation pRotation) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorRotation* ppRotation = &pRotation)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorRotation*, void>)(LpVtbl[64]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, (VideoProcessorRotation*)ppRotation);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamRotation(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, ref VideoProcessorRotation pRotation) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorRotation* ppRotation = &pRotation)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorRotation*, void>)(LpVtbl[64]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, (VideoProcessorRotation*)ppRotation);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamRotation(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorRotation pRotation) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorRotation* ppRotation = &pRotation)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorRotation*, void>)(LpVtbl[64]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorRotation*)ppRotation);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamRotation(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorRotation pRotation) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (VideoProcessorRotation* ppRotation = &pRotation)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorRotation*, void>)(LpVtbl[64]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, (VideoProcessorRotation*)ppRotation);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamRotation(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref VideoProcessorRotation pRotation) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (VideoProcessorRotation* ppRotation = &pRotation)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, VideoProcessorRotation*, void>)(LpVtbl[64]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, (VideoProcessorRotation*)ppRotation);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SubmitDecoderBuffers1(ID3D11VideoDecoder* pDecoder, uint numBuffers, VideoDecoderBufferDesc1* pBufferDesc) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, uint, VideoDecoderBufferDesc1*, HResult>)(LpVtbl[65]))(ptr, pDecoder, numBuffers, pBufferDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SubmitDecoderBuffers1(ref ID3D11VideoDecoder pDecoder, uint numBuffers, VideoDecoderBufferDesc1* pBufferDesc) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, uint, VideoDecoderBufferDesc1*, HResult>)(LpVtbl[65]))(ptr, (ID3D11VideoDecoder*)ppDecoder, numBuffers, pBufferDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SubmitDecoderBuffers1(ComPtr<ID3D11VideoDecoder> pDecoder, uint numBuffers, VideoDecoderBufferDesc1* pBufferDesc) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, uint, VideoDecoderBufferDesc1*, HResult>)(LpVtbl[65]))(ptr, (ID3D11VideoDecoder*)pDecoder.Handle, numBuffers, pBufferDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SubmitDecoderBuffers1(ID3D11VideoDecoder* pDecoder, uint numBuffers, ref VideoDecoderBufferDesc1 pBufferDesc) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecoderBufferDesc1* ppBufferDesc = &pBufferDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, uint, VideoDecoderBufferDesc1*, HResult>)(LpVtbl[65]))(ptr, pDecoder, numBuffers, (VideoDecoderBufferDesc1*)ppBufferDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SubmitDecoderBuffers1(ref ID3D11VideoDecoder pDecoder, uint numBuffers, ref VideoDecoderBufferDesc1 pBufferDesc) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (VideoDecoderBufferDesc1* ppBufferDesc = &pBufferDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, uint, VideoDecoderBufferDesc1*, HResult>)(LpVtbl[65]))(ptr, (ID3D11VideoDecoder*)ppDecoder, numBuffers, (VideoDecoderBufferDesc1*)ppBufferDesc);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SubmitDecoderBuffers1(ComPtr<ID3D11VideoDecoder> pDecoder, uint numBuffers, ref VideoDecoderBufferDesc1 pBufferDesc) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoDecoderBufferDesc1* ppBufferDesc = &pBufferDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, uint, VideoDecoderBufferDesc1*, HResult>)(LpVtbl[65]))(ptr, (ID3D11VideoDecoder*)pDecoder.Handle, numBuffers, (VideoDecoderBufferDesc1*)ppBufferDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDataForNewHardwareKey(ID3D11CryptoSession* pCryptoSession, uint privateInputSize, void* pPrivatInputData, ulong* pPrivateOutputData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, uint, void*, ulong*, HResult>)(LpVtbl[66]))(ptr, pCryptoSession, privateInputSize, pPrivatInputData, pPrivateOutputData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDataForNewHardwareKey(ref ID3D11CryptoSession pCryptoSession, uint privateInputSize, void* pPrivatInputData, ulong* pPrivateOutputData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11CryptoSession* ppCryptoSession = &pCryptoSession)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, uint, void*, ulong*, HResult>)(LpVtbl[66]))(ptr, (ID3D11CryptoSession*)ppCryptoSession, privateInputSize, pPrivatInputData, pPrivateOutputData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDataForNewHardwareKey(ComPtr<ID3D11CryptoSession> pCryptoSession, uint privateInputSize, void* pPrivatInputData, ulong* pPrivateOutputData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, uint, void*, ulong*, HResult>)(LpVtbl[66]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, privateInputSize, pPrivatInputData, pPrivateOutputData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDataForNewHardwareKey(ID3D11CryptoSession* pCryptoSession, uint privateInputSize, void* pPrivatInputData, ref ulong pPrivateOutputData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ulong* ppPrivateOutputData = &pPrivateOutputData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, uint, void*, ulong*, HResult>)(LpVtbl[66]))(ptr, pCryptoSession, privateInputSize, pPrivatInputData, (ulong*)ppPrivateOutputData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDataForNewHardwareKey(ref ID3D11CryptoSession pCryptoSession, uint privateInputSize, void* pPrivatInputData, ref ulong pPrivateOutputData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11CryptoSession* ppCryptoSession = &pCryptoSession)
			{
				fixed (ulong* ppPrivateOutputData = &pPrivateOutputData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, uint, void*, ulong*, HResult>)(LpVtbl[66]))(ptr, (ID3D11CryptoSession*)ppCryptoSession, privateInputSize, pPrivatInputData, (ulong*)ppPrivateOutputData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDataForNewHardwareKey(ComPtr<ID3D11CryptoSession> pCryptoSession, uint privateInputSize, void* pPrivatInputData, ref ulong pPrivateOutputData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ulong* ppPrivateOutputData = &pPrivateOutputData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, uint, void*, ulong*, HResult>)(LpVtbl[66]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, privateInputSize, pPrivatInputData, (ulong*)ppPrivateOutputData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckCryptoSessionStatus(ID3D11CryptoSession* pCryptoSession, CryptoSessionStatus* pStatus) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, CryptoSessionStatus*, HResult>)(LpVtbl[67]))(ptr, pCryptoSession, pStatus);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckCryptoSessionStatus(ref ID3D11CryptoSession pCryptoSession, CryptoSessionStatus* pStatus) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11CryptoSession* ppCryptoSession = &pCryptoSession)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, CryptoSessionStatus*, HResult>)(LpVtbl[67]))(ptr, (ID3D11CryptoSession*)ppCryptoSession, pStatus);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckCryptoSessionStatus(ComPtr<ID3D11CryptoSession> pCryptoSession, CryptoSessionStatus* pStatus) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, CryptoSessionStatus*, HResult>)(LpVtbl[67]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, pStatus);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckCryptoSessionStatus(ID3D11CryptoSession* pCryptoSession, ref CryptoSessionStatus pStatus) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CryptoSessionStatus* ppStatus = &pStatus)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, CryptoSessionStatus*, HResult>)(LpVtbl[67]))(ptr, pCryptoSession, (CryptoSessionStatus*)ppStatus);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckCryptoSessionStatus(ref ID3D11CryptoSession pCryptoSession, ref CryptoSessionStatus pStatus) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11CryptoSession* ppCryptoSession = &pCryptoSession)
			{
				fixed (CryptoSessionStatus* ppStatus = &pStatus)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, CryptoSessionStatus*, HResult>)(LpVtbl[67]))(ptr, (ID3D11CryptoSession*)ppCryptoSession, (CryptoSessionStatus*)ppStatus);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckCryptoSessionStatus(ComPtr<ID3D11CryptoSession> pCryptoSession, ref CryptoSessionStatus pStatus) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (CryptoSessionStatus* ppStatus = &pStatus)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11CryptoSession*, CryptoSessionStatus*, HResult>)(LpVtbl[67]))(ptr, (ID3D11CryptoSession*)pCryptoSession.Handle, (CryptoSessionStatus*)ppStatus);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DecoderEnableDownsampling(ID3D11VideoDecoder* pDecoder, ColorSpaceType inputColorSpace, VideoSampleDesc* pOutputDesc, uint referenceFrameCount) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, ColorSpaceType, VideoSampleDesc*, uint, HResult>)(LpVtbl[68]))(ptr, pDecoder, inputColorSpace, pOutputDesc, referenceFrameCount);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DecoderEnableDownsampling(ref ID3D11VideoDecoder pDecoder, ColorSpaceType inputColorSpace, VideoSampleDesc* pOutputDesc, uint referenceFrameCount) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, ColorSpaceType, VideoSampleDesc*, uint, HResult>)(LpVtbl[68]))(ptr, (ID3D11VideoDecoder*)ppDecoder, inputColorSpace, pOutputDesc, referenceFrameCount);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DecoderEnableDownsampling(ComPtr<ID3D11VideoDecoder> pDecoder, ColorSpaceType inputColorSpace, VideoSampleDesc* pOutputDesc, uint referenceFrameCount) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, ColorSpaceType, VideoSampleDesc*, uint, HResult>)(LpVtbl[68]))(ptr, (ID3D11VideoDecoder*)pDecoder.Handle, inputColorSpace, pOutputDesc, referenceFrameCount);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DecoderEnableDownsampling(ID3D11VideoDecoder* pDecoder, ColorSpaceType inputColorSpace, ref VideoSampleDesc pOutputDesc, uint referenceFrameCount) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, ColorSpaceType, VideoSampleDesc*, uint, HResult>)(LpVtbl[68]))(ptr, pDecoder, inputColorSpace, (VideoSampleDesc*)ppOutputDesc, referenceFrameCount);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DecoderEnableDownsampling(ref ID3D11VideoDecoder pDecoder, ColorSpaceType inputColorSpace, ref VideoSampleDesc pOutputDesc, uint referenceFrameCount) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, ColorSpaceType, VideoSampleDesc*, uint, HResult>)(LpVtbl[68]))(ptr, (ID3D11VideoDecoder*)ppDecoder, inputColorSpace, (VideoSampleDesc*)ppOutputDesc, referenceFrameCount);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DecoderEnableDownsampling(ComPtr<ID3D11VideoDecoder> pDecoder, ColorSpaceType inputColorSpace, ref VideoSampleDesc pOutputDesc, uint referenceFrameCount) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, ColorSpaceType, VideoSampleDesc*, uint, HResult>)(LpVtbl[68]))(ptr, (ID3D11VideoDecoder*)pDecoder.Handle, inputColorSpace, (VideoSampleDesc*)ppOutputDesc, referenceFrameCount);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DecoderUpdateDownsampling(ID3D11VideoDecoder* pDecoder, VideoSampleDesc* pOutputDesc) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoSampleDesc*, HResult>)(LpVtbl[69]))(ptr, pDecoder, pOutputDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DecoderUpdateDownsampling(ref ID3D11VideoDecoder pDecoder, VideoSampleDesc* pOutputDesc) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoSampleDesc*, HResult>)(LpVtbl[69]))(ptr, (ID3D11VideoDecoder*)ppDecoder, pOutputDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DecoderUpdateDownsampling(ComPtr<ID3D11VideoDecoder> pDecoder, VideoSampleDesc* pOutputDesc) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoSampleDesc*, HResult>)(LpVtbl[69]))(ptr, (ID3D11VideoDecoder*)pDecoder.Handle, pOutputDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DecoderUpdateDownsampling(ID3D11VideoDecoder* pDecoder, ref VideoSampleDesc pOutputDesc) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoSampleDesc*, HResult>)(LpVtbl[69]))(ptr, pDecoder, (VideoSampleDesc*)ppOutputDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DecoderUpdateDownsampling(ref ID3D11VideoDecoder pDecoder, ref VideoSampleDesc pOutputDesc) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoDecoder* ppDecoder = &pDecoder)
			{
				fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoSampleDesc*, HResult>)(LpVtbl[69]))(ptr, (ID3D11VideoDecoder*)ppDecoder, (VideoSampleDesc*)ppOutputDesc);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DecoderUpdateDownsampling(ComPtr<ID3D11VideoDecoder> pDecoder, ref VideoSampleDesc pOutputDesc) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoSampleDesc* ppOutputDesc = &pOutputDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoDecoder*, VideoSampleDesc*, HResult>)(LpVtbl[69]))(ptr, (ID3D11VideoDecoder*)pDecoder.Handle, (VideoSampleDesc*)ppOutputDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputColorSpace1(ID3D11VideoProcessor* pVideoProcessor, ColorSpaceType colorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, ColorSpaceType, void>)(LpVtbl[70]))(ptr, pVideoProcessor, colorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputColorSpace1(ref ID3D11VideoProcessor pVideoProcessor, ColorSpaceType colorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, ColorSpaceType, void>)(LpVtbl[70]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, colorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputColorSpace1(ComPtr<ID3D11VideoProcessor> pVideoProcessor, ColorSpaceType colorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, ColorSpaceType, void>)(LpVtbl[70]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, colorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputShaderUsage(ID3D11VideoProcessor* pVideoProcessor, Bool32 shaderUsage) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, void>)(LpVtbl[71]))(ptr, pVideoProcessor, shaderUsage);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputShaderUsage(ref ID3D11VideoProcessor pVideoProcessor, Bool32 shaderUsage) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, void>)(LpVtbl[71]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, shaderUsage);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputShaderUsage(ComPtr<ID3D11VideoProcessor> pVideoProcessor, Bool32 shaderUsage) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32, void>)(LpVtbl[71]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, shaderUsage);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputColorSpace1(ID3D11VideoProcessor* pVideoProcessor, ColorSpaceType* pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, ColorSpaceType*, void>)(LpVtbl[72]))(ptr, pVideoProcessor, pColorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputColorSpace1(ref ID3D11VideoProcessor pVideoProcessor, ColorSpaceType* pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, ColorSpaceType*, void>)(LpVtbl[72]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, pColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputColorSpace1(ComPtr<ID3D11VideoProcessor> pVideoProcessor, ColorSpaceType* pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, ColorSpaceType*, void>)(LpVtbl[72]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pColorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputColorSpace1(ID3D11VideoProcessor* pVideoProcessor, ref ColorSpaceType pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ColorSpaceType* ppColorSpace = &pColorSpace)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, ColorSpaceType*, void>)(LpVtbl[72]))(ptr, pVideoProcessor, (ColorSpaceType*)ppColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputColorSpace1(ref ID3D11VideoProcessor pVideoProcessor, ref ColorSpaceType pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (ColorSpaceType* ppColorSpace = &pColorSpace)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, ColorSpaceType*, void>)(LpVtbl[72]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, (ColorSpaceType*)ppColorSpace);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputColorSpace1(ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref ColorSpaceType pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ColorSpaceType* ppColorSpace = &pColorSpace)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, ColorSpaceType*, void>)(LpVtbl[72]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (ColorSpaceType*)ppColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputShaderUsage(ID3D11VideoProcessor* pVideoProcessor, Bool32* pShaderUsage) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, void>)(LpVtbl[73]))(ptr, pVideoProcessor, pShaderUsage);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputShaderUsage(ref ID3D11VideoProcessor pVideoProcessor, Bool32* pShaderUsage) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, void>)(LpVtbl[73]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, pShaderUsage);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputShaderUsage(ComPtr<ID3D11VideoProcessor> pVideoProcessor, Bool32* pShaderUsage) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, void>)(LpVtbl[73]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pShaderUsage);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputShaderUsage(ID3D11VideoProcessor* pVideoProcessor, ref Bool32 pShaderUsage) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppShaderUsage = &pShaderUsage)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, void>)(LpVtbl[73]))(ptr, pVideoProcessor, (Bool32*)ppShaderUsage);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputShaderUsage(ref ID3D11VideoProcessor pVideoProcessor, ref Bool32 pShaderUsage) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppShaderUsage = &pShaderUsage)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, void>)(LpVtbl[73]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, (Bool32*)ppShaderUsage);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputShaderUsage(ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref Bool32 pShaderUsage) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppShaderUsage = &pShaderUsage)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, Bool32*, void>)(LpVtbl[73]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (Bool32*)ppShaderUsage);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamColorSpace1(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ColorSpaceType colorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, ColorSpaceType, void>)(LpVtbl[74]))(ptr, pVideoProcessor, streamIndex, colorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamColorSpace1(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ColorSpaceType colorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, ColorSpaceType, void>)(LpVtbl[74]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, colorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamColorSpace1(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ColorSpaceType colorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, ColorSpaceType, void>)(LpVtbl[74]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, colorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamMirror(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32 enable, Bool32 flipHorizontal, Bool32 flipVertical) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, Bool32, Bool32, void>)(LpVtbl[75]))(ptr, pVideoProcessor, streamIndex, enable, flipHorizontal, flipVertical);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamMirror(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32 enable, Bool32 flipHorizontal, Bool32 flipVertical) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, Bool32, Bool32, void>)(LpVtbl[75]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, enable, flipHorizontal, flipVertical);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamMirror(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32 enable, Bool32 flipHorizontal, Bool32 flipVertical) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32, Bool32, Bool32, void>)(LpVtbl[75]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, enable, flipHorizontal, flipVertical);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamColorSpace1(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ColorSpaceType* pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, ColorSpaceType*, void>)(LpVtbl[76]))(ptr, pVideoProcessor, streamIndex, pColorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamColorSpace1(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ColorSpaceType* pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, ColorSpaceType*, void>)(LpVtbl[76]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamColorSpace1(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ColorSpaceType* pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, ColorSpaceType*, void>)(LpVtbl[76]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pColorSpace);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamColorSpace1(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref ColorSpaceType pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ColorSpaceType* ppColorSpace = &pColorSpace)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, ColorSpaceType*, void>)(LpVtbl[76]))(ptr, pVideoProcessor, streamIndex, (ColorSpaceType*)ppColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamColorSpace1(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref ColorSpaceType pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (ColorSpaceType* ppColorSpace = &pColorSpace)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, ColorSpaceType*, void>)(LpVtbl[76]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (ColorSpaceType*)ppColorSpace);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamColorSpace1(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref ColorSpaceType pColorSpace) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ColorSpaceType* ppColorSpace = &pColorSpace)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, ColorSpaceType*, void>)(LpVtbl[76]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (ColorSpaceType*)ppColorSpace);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamMirror(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, Bool32* pFlipHorizontal, Bool32* pFlipVertical) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(LpVtbl[77]))(ptr, pVideoProcessor, streamIndex, pEnable, pFlipHorizontal, pFlipVertical);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamMirror(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, Bool32* pFlipHorizontal, Bool32* pFlipVertical) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(LpVtbl[77]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, pFlipHorizontal, pFlipVertical);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamMirror(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, Bool32* pFlipHorizontal, Bool32* pFlipVertical) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(LpVtbl[77]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, pFlipHorizontal, pFlipVertical);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamMirror(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, Bool32* pFlipHorizontal, Bool32* pFlipVertical) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(LpVtbl[77]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, pFlipHorizontal, pFlipVertical);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamMirror(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, Bool32* pFlipHorizontal, Bool32* pFlipVertical) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(LpVtbl[77]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, pFlipHorizontal, pFlipVertical);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamMirror(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, Bool32* pFlipHorizontal, Bool32* pFlipVertical) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(LpVtbl[77]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, pFlipHorizontal, pFlipVertical);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamMirror(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, ref Bool32 pFlipHorizontal, Bool32* pFlipVertical) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppFlipHorizontal = &pFlipHorizontal)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(LpVtbl[77]))(ptr, pVideoProcessor, streamIndex, pEnable, (Bool32*)ppFlipHorizontal, pFlipVertical);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamMirror(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, ref Bool32 pFlipHorizontal, Bool32* pFlipVertical) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppFlipHorizontal = &pFlipHorizontal)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(LpVtbl[77]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, (Bool32*)ppFlipHorizontal, pFlipVertical);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamMirror(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, ref Bool32 pFlipHorizontal, Bool32* pFlipVertical) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppFlipHorizontal = &pFlipHorizontal)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(LpVtbl[77]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, (Bool32*)ppFlipHorizontal, pFlipVertical);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamMirror(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref Bool32 pFlipHorizontal, Bool32* pFlipVertical) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppFlipHorizontal = &pFlipHorizontal)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(LpVtbl[77]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, (Bool32*)ppFlipHorizontal, pFlipVertical);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamMirror(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref Bool32 pFlipHorizontal, Bool32* pFlipVertical) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (Bool32* ppFlipHorizontal = &pFlipHorizontal)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(LpVtbl[77]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, (Bool32*)ppFlipHorizontal, pFlipVertical);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamMirror(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref Bool32 pFlipHorizontal, Bool32* pFlipVertical) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppFlipHorizontal = &pFlipHorizontal)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(LpVtbl[77]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, (Bool32*)ppFlipHorizontal, pFlipVertical);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamMirror(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, Bool32* pFlipHorizontal, ref Bool32 pFlipVertical) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppFlipVertical = &pFlipVertical)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(LpVtbl[77]))(ptr, pVideoProcessor, streamIndex, pEnable, pFlipHorizontal, (Bool32*)ppFlipVertical);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamMirror(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, Bool32* pFlipHorizontal, ref Bool32 pFlipVertical) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppFlipVertical = &pFlipVertical)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(LpVtbl[77]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, pFlipHorizontal, (Bool32*)ppFlipVertical);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamMirror(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, Bool32* pFlipHorizontal, ref Bool32 pFlipVertical) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppFlipVertical = &pFlipVertical)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(LpVtbl[77]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, pFlipHorizontal, (Bool32*)ppFlipVertical);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamMirror(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, Bool32* pFlipHorizontal, ref Bool32 pFlipVertical) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppFlipVertical = &pFlipVertical)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(LpVtbl[77]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, pFlipHorizontal, (Bool32*)ppFlipVertical);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamMirror(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, Bool32* pFlipHorizontal, ref Bool32 pFlipVertical) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (Bool32* ppFlipVertical = &pFlipVertical)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(LpVtbl[77]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, pFlipHorizontal, (Bool32*)ppFlipVertical);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamMirror(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, Bool32* pFlipHorizontal, ref Bool32 pFlipVertical) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppFlipVertical = &pFlipVertical)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(LpVtbl[77]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, pFlipHorizontal, (Bool32*)ppFlipVertical);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamMirror(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, Bool32* pEnable, ref Bool32 pFlipHorizontal, ref Bool32 pFlipVertical) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppFlipHorizontal = &pFlipHorizontal)
			{
				fixed (Bool32* ppFlipVertical = &pFlipVertical)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(LpVtbl[77]))(ptr, pVideoProcessor, streamIndex, pEnable, (Bool32*)ppFlipHorizontal, (Bool32*)ppFlipVertical);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamMirror(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, Bool32* pEnable, ref Bool32 pFlipHorizontal, ref Bool32 pFlipVertical) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppFlipHorizontal = &pFlipHorizontal)
				{
					fixed (Bool32* ppFlipVertical = &pFlipVertical)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(LpVtbl[77]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pEnable, (Bool32*)ppFlipHorizontal, (Bool32*)ppFlipVertical);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamMirror(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, Bool32* pEnable, ref Bool32 pFlipHorizontal, ref Bool32 pFlipVertical) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppFlipHorizontal = &pFlipHorizontal)
			{
				fixed (Bool32* ppFlipVertical = &pFlipVertical)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(LpVtbl[77]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pEnable, (Bool32*)ppFlipHorizontal, (Bool32*)ppFlipVertical);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamMirror(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref Bool32 pFlipHorizontal, ref Bool32 pFlipVertical) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppFlipHorizontal = &pFlipHorizontal)
				{
					fixed (Bool32* ppFlipVertical = &pFlipVertical)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(LpVtbl[77]))(ptr, pVideoProcessor, streamIndex, (Bool32*)ppEnable, (Bool32*)ppFlipHorizontal, (Bool32*)ppFlipVertical);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamMirror(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref Bool32 pFlipHorizontal, ref Bool32 pFlipVertical) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (Bool32* ppEnable = &pEnable)
				{
					fixed (Bool32* ppFlipHorizontal = &pFlipHorizontal)
					{
						fixed (Bool32* ppFlipVertical = &pFlipVertical)
						{
							((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(LpVtbl[77]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (Bool32*)ppEnable, (Bool32*)ppFlipHorizontal, (Bool32*)ppFlipVertical);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamMirror(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref Bool32 pEnable, ref Bool32 pFlipHorizontal, ref Bool32 pFlipVertical) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppEnable = &pEnable)
			{
				fixed (Bool32* ppFlipHorizontal = &pFlipHorizontal)
				{
					fixed (Bool32* ppFlipVertical = &pFlipVertical)
					{
						((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, Bool32*, Bool32*, Bool32*, void>)(LpVtbl[77]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (Bool32*)ppEnable, (Bool32*)ppFlipHorizontal, (Bool32*)ppFlipVertical);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetBehaviorHints(ID3D11VideoProcessor* pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, VideoProcessorStreamBehaviorHint* pStreams, uint* pBehaviorHints) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, HResult>)(LpVtbl[78]))(ptr, pVideoProcessor, outputWidth, outputHeight, outputFormat, streamCount, pStreams, pBehaviorHints);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetBehaviorHints(ref ID3D11VideoProcessor pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, VideoProcessorStreamBehaviorHint* pStreams, uint* pBehaviorHints) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, HResult>)(LpVtbl[78]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, outputWidth, outputHeight, outputFormat, streamCount, pStreams, pBehaviorHints);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetBehaviorHints(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, VideoProcessorStreamBehaviorHint* pStreams, uint* pBehaviorHints) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, HResult>)(LpVtbl[78]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, outputWidth, outputHeight, outputFormat, streamCount, pStreams, pBehaviorHints);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetBehaviorHints(ID3D11VideoProcessor* pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, ref VideoProcessorStreamBehaviorHint pStreams, uint* pBehaviorHints) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStreamBehaviorHint* ppStreams = &pStreams)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, HResult>)(LpVtbl[78]))(ptr, pVideoProcessor, outputWidth, outputHeight, outputFormat, streamCount, (VideoProcessorStreamBehaviorHint*)ppStreams, pBehaviorHints);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetBehaviorHints(ref ID3D11VideoProcessor pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, ref VideoProcessorStreamBehaviorHint pStreams, uint* pBehaviorHints) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorStreamBehaviorHint* ppStreams = &pStreams)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, HResult>)(LpVtbl[78]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, outputWidth, outputHeight, outputFormat, streamCount, (VideoProcessorStreamBehaviorHint*)ppStreams, pBehaviorHints);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetBehaviorHints(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, ref VideoProcessorStreamBehaviorHint pStreams, uint* pBehaviorHints) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStreamBehaviorHint* ppStreams = &pStreams)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, HResult>)(LpVtbl[78]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, outputWidth, outputHeight, outputFormat, streamCount, (VideoProcessorStreamBehaviorHint*)ppStreams, pBehaviorHints);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetBehaviorHints(ID3D11VideoProcessor* pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, VideoProcessorStreamBehaviorHint* pStreams, ref uint pBehaviorHints) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppBehaviorHints = &pBehaviorHints)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, HResult>)(LpVtbl[78]))(ptr, pVideoProcessor, outputWidth, outputHeight, outputFormat, streamCount, pStreams, (uint*)ppBehaviorHints);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetBehaviorHints(ref ID3D11VideoProcessor pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, VideoProcessorStreamBehaviorHint* pStreams, ref uint pBehaviorHints) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (uint* ppBehaviorHints = &pBehaviorHints)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, HResult>)(LpVtbl[78]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, outputWidth, outputHeight, outputFormat, streamCount, pStreams, (uint*)ppBehaviorHints);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetBehaviorHints(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, VideoProcessorStreamBehaviorHint* pStreams, ref uint pBehaviorHints) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppBehaviorHints = &pBehaviorHints)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, HResult>)(LpVtbl[78]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, outputWidth, outputHeight, outputFormat, streamCount, pStreams, (uint*)ppBehaviorHints);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetBehaviorHints(ID3D11VideoProcessor* pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, ref VideoProcessorStreamBehaviorHint pStreams, ref uint pBehaviorHints) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStreamBehaviorHint* ppStreams = &pStreams)
			{
				fixed (uint* ppBehaviorHints = &pBehaviorHints)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, HResult>)(LpVtbl[78]))(ptr, pVideoProcessor, outputWidth, outputHeight, outputFormat, streamCount, (VideoProcessorStreamBehaviorHint*)ppStreams, (uint*)ppBehaviorHints);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetBehaviorHints(ref ID3D11VideoProcessor pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, ref VideoProcessorStreamBehaviorHint pStreams, ref uint pBehaviorHints) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (VideoProcessorStreamBehaviorHint* ppStreams = &pStreams)
				{
					fixed (uint* ppBehaviorHints = &pBehaviorHints)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, HResult>)(LpVtbl[78]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, outputWidth, outputHeight, outputFormat, streamCount, (VideoProcessorStreamBehaviorHint*)ppStreams, (uint*)ppBehaviorHints);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult VideoProcessorGetBehaviorHints(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint outputWidth, uint outputHeight, Format outputFormat, uint streamCount, ref VideoProcessorStreamBehaviorHint pStreams, ref uint pBehaviorHints) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (VideoProcessorStreamBehaviorHint* ppStreams = &pStreams)
			{
				fixed (uint* ppBehaviorHints = &pBehaviorHints)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, uint, Format, uint, VideoProcessorStreamBehaviorHint*, uint*, HResult>)(LpVtbl[78]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, outputWidth, outputHeight, outputFormat, streamCount, (VideoProcessorStreamBehaviorHint*)ppStreams, (uint*)ppBehaviorHints);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputHDRMetaData(ID3D11VideoProcessor* pVideoProcessor, HdrMetadataType type, uint size, void* pHDRMetaData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, HdrMetadataType, uint, void*, void>)(LpVtbl[79]))(ptr, pVideoProcessor, type, size, pHDRMetaData);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputHDRMetaData(ref ID3D11VideoProcessor pVideoProcessor, HdrMetadataType type, uint size, void* pHDRMetaData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, HdrMetadataType, uint, void*, void>)(LpVtbl[79]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, type, size, pHDRMetaData);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetOutputHDRMetaData(ComPtr<ID3D11VideoProcessor> pVideoProcessor, HdrMetadataType type, uint size, void* pHDRMetaData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, HdrMetadataType, uint, void*, void>)(LpVtbl[79]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, type, size, pHDRMetaData);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputHDRMetaData(ID3D11VideoProcessor* pVideoProcessor, HdrMetadataType* pType, uint size, void* pMetaData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, HdrMetadataType*, uint, void*, void>)(LpVtbl[80]))(ptr, pVideoProcessor, pType, size, pMetaData);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputHDRMetaData(ref ID3D11VideoProcessor pVideoProcessor, HdrMetadataType* pType, uint size, void* pMetaData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, HdrMetadataType*, uint, void*, void>)(LpVtbl[80]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, pType, size, pMetaData);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputHDRMetaData(ComPtr<ID3D11VideoProcessor> pVideoProcessor, HdrMetadataType* pType, uint size, void* pMetaData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, HdrMetadataType*, uint, void*, void>)(LpVtbl[80]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pType, size, pMetaData);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputHDRMetaData(ID3D11VideoProcessor* pVideoProcessor, ref HdrMetadataType pType, uint size, void* pMetaData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HdrMetadataType* ppType = &pType)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, HdrMetadataType*, uint, void*, void>)(LpVtbl[80]))(ptr, pVideoProcessor, (HdrMetadataType*)ppType, size, pMetaData);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputHDRMetaData(ref ID3D11VideoProcessor pVideoProcessor, ref HdrMetadataType pType, uint size, void* pMetaData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (HdrMetadataType* ppType = &pType)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, HdrMetadataType*, uint, void*, void>)(LpVtbl[80]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, (HdrMetadataType*)ppType, size, pMetaData);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputHDRMetaData(ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref HdrMetadataType pType, uint size, void* pMetaData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HdrMetadataType* ppType = &pType)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, HdrMetadataType*, uint, void*, void>)(LpVtbl[80]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (HdrMetadataType*)ppType, size, pMetaData);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputHDRMetaData<T>(ID3D11VideoProcessor* pVideoProcessor, HdrMetadataType* pType, uint size, ComPtr<T> pMetaData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, HdrMetadataType*, uint, void*, void>)(LpVtbl[80]))(ptr, pVideoProcessor, pType, size, (void*)pMetaData.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputHDRMetaData<T>(ComPtr<ID3D11VideoProcessor> pVideoProcessor, HdrMetadataType* pType, uint size, ComPtr<T> pMetaData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, HdrMetadataType*, uint, void*, void>)(LpVtbl[80]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, pType, size, (void*)pMetaData.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputHDRMetaData<T>(ID3D11VideoProcessor* pVideoProcessor, ref HdrMetadataType pType, uint size, ComPtr<T> pMetaData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HdrMetadataType* ppType = &pType)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, HdrMetadataType*, uint, void*, void>)(LpVtbl[80]))(ptr, pVideoProcessor, (HdrMetadataType*)ppType, size, (void*)pMetaData.Handle);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetOutputHDRMetaData<T>(ComPtr<ID3D11VideoProcessor> pVideoProcessor, ref HdrMetadataType pType, uint size, ComPtr<T> pMetaData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HdrMetadataType* ppType = &pType)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, HdrMetadataType*, uint, void*, void>)(LpVtbl[80]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, (HdrMetadataType*)ppType, size, (void*)pMetaData.Handle);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamHDRMetaData(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, HdrMetadataType type, uint size, void* pHDRMetaData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, HdrMetadataType, uint, void*, void>)(LpVtbl[81]))(ptr, pVideoProcessor, streamIndex, type, size, pHDRMetaData);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamHDRMetaData(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, HdrMetadataType type, uint size, void* pHDRMetaData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, HdrMetadataType, uint, void*, void>)(LpVtbl[81]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, type, size, pHDRMetaData);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorSetStreamHDRMetaData(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, HdrMetadataType type, uint size, void* pHDRMetaData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, HdrMetadataType, uint, void*, void>)(LpVtbl[81]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, type, size, pHDRMetaData);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamHDRMetaData(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, HdrMetadataType* pType, uint size, void* pMetaData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, HdrMetadataType*, uint, void*, void>)(LpVtbl[82]))(ptr, pVideoProcessor, streamIndex, pType, size, pMetaData);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamHDRMetaData(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, HdrMetadataType* pType, uint size, void* pMetaData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, HdrMetadataType*, uint, void*, void>)(LpVtbl[82]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, pType, size, pMetaData);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamHDRMetaData(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, HdrMetadataType* pType, uint size, void* pMetaData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, HdrMetadataType*, uint, void*, void>)(LpVtbl[82]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pType, size, pMetaData);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamHDRMetaData(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref HdrMetadataType pType, uint size, void* pMetaData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HdrMetadataType* ppType = &pType)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, HdrMetadataType*, uint, void*, void>)(LpVtbl[82]))(ptr, pVideoProcessor, streamIndex, (HdrMetadataType*)ppType, size, pMetaData);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamHDRMetaData(ref ID3D11VideoProcessor pVideoProcessor, uint streamIndex, ref HdrMetadataType pType, uint size, void* pMetaData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VideoProcessor* ppVideoProcessor = &pVideoProcessor)
			{
				fixed (HdrMetadataType* ppType = &pType)
				{
					((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, HdrMetadataType*, uint, void*, void>)(LpVtbl[82]))(ptr, (ID3D11VideoProcessor*)ppVideoProcessor, streamIndex, (HdrMetadataType*)ppType, size, pMetaData);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamHDRMetaData(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref HdrMetadataType pType, uint size, void* pMetaData) 
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HdrMetadataType* ppType = &pType)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, HdrMetadataType*, uint, void*, void>)(LpVtbl[82]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (HdrMetadataType*)ppType, size, pMetaData);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamHDRMetaData<T>(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, HdrMetadataType* pType, uint size, ComPtr<T> pMetaData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, HdrMetadataType*, uint, void*, void>)(LpVtbl[82]))(ptr, pVideoProcessor, streamIndex, pType, size, (void*)pMetaData.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamHDRMetaData<T>(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, HdrMetadataType* pType, uint size, ComPtr<T> pMetaData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, HdrMetadataType*, uint, void*, void>)(LpVtbl[82]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, pType, size, (void*)pMetaData.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamHDRMetaData<T>(ID3D11VideoProcessor* pVideoProcessor, uint streamIndex, ref HdrMetadataType pType, uint size, ComPtr<T> pMetaData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HdrMetadataType* ppType = &pType)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, HdrMetadataType*, uint, void*, void>)(LpVtbl[82]))(ptr, pVideoProcessor, streamIndex, (HdrMetadataType*)ppType, size, (void*)pMetaData.Handle);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VideoProcessorGetStreamHDRMetaData<T>(ComPtr<ID3D11VideoProcessor> pVideoProcessor, uint streamIndex, ref HdrMetadataType pType, uint size, ComPtr<T> pMetaData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11VideoContext2* ptr = (ID3D11VideoContext2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HdrMetadataType* ppType = &pType)
			{
				((delegate* unmanaged[Stdcall]<ID3D11VideoContext2*, ID3D11VideoProcessor*, uint, HdrMetadataType*, uint, void*, void>)(LpVtbl[82]))(ptr, (ID3D11VideoProcessor*)pVideoProcessor.Handle, streamIndex, (HdrMetadataType*)ppType, size, (void*)pMetaData.Handle);
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator ID3D11VideoContext1 (ID3D11VideoContext2 value)
		{
			return Unsafe.As<ID3D11VideoContext2, ID3D11VideoContext1>(ref value);
		}

		public unsafe static implicit operator ID3D11VideoContext (ID3D11VideoContext2 value)
		{
			return Unsafe.As<ID3D11VideoContext2, ID3D11VideoContext>(ref value);
		}

		public unsafe static implicit operator ID3D11DeviceChild (ID3D11VideoContext2 value)
		{
			return Unsafe.As<ID3D11VideoContext2, ID3D11DeviceChild>(ref value);
		}

		public unsafe static implicit operator IUnknown (ID3D11VideoContext2 value)
		{
			return Unsafe.As<ID3D11VideoContext2, IUnknown>(ref value);
		}

	}

}
