// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D11
{
	/// <summary>
	/// {6E6FFA6A-9BAE-4613-A51E-91652D508C21}<br/>
	/// </summary>
	[Guid("6e6ffa6a-9bae-4613-a51e-91652d508c21")]
	[NativeName(NativeNameType.StructOrClass, "ID3D11ShaderReflectionType")]
	public partial struct ID3D11ShaderReflectionType : IComObject, IComObject<ID3D11ShaderReflectionType>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("6e6ffa6a-9bae-4613-a51e-91652d508c21");

		public unsafe ID3D11ShaderReflectionType (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D11_SHADER_TYPE_DESC*")] D3D11ShaderTypeDesc* pDesc) 
		{
			ID3D11ShaderReflectionType* ptr = (ID3D11ShaderReflectionType*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderReflectionType*, D3D11ShaderTypeDesc*, int>)(*LpVtbl))(ptr, pDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDesc")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int GetDesc([NativeName(NativeNameType.Param, "pDesc")] [NativeName(NativeNameType.Type, "D3D11_SHADER_TYPE_DESC*")] ref D3D11ShaderTypeDesc pDesc) 
		{
			ID3D11ShaderReflectionType* ptr = (ID3D11ShaderReflectionType*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (D3D11ShaderTypeDesc* ppDesc = &pDesc)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderReflectionType*, D3D11ShaderTypeDesc*, int>)(*LpVtbl))(ptr, (D3D11ShaderTypeDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetMemberTypeByIndex")]
		[return: NativeName(NativeNameType.Type, "ID3D11ShaderReflectionType*")]
		public readonly unsafe ID3D11ShaderReflectionType* GetMemberTypeByIndex([NativeName(NativeNameType.Param, "Index")] [NativeName(NativeNameType.Type, "UINT")] uint index) 
		{
			ID3D11ShaderReflectionType* ptr = (ID3D11ShaderReflectionType*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ID3D11ShaderReflectionType* ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderReflectionType*, uint, ID3D11ShaderReflectionType*>)(LpVtbl[1]))(ptr, index);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetMemberTypeByName")]
		[return: NativeName(NativeNameType.Type, "ID3D11ShaderReflectionType*")]
		public readonly unsafe ID3D11ShaderReflectionType* GetMemberTypeByName([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] byte* name) 
		{
			ID3D11ShaderReflectionType* ptr = (ID3D11ShaderReflectionType*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ID3D11ShaderReflectionType* ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderReflectionType*, byte*, ID3D11ShaderReflectionType*>)(LpVtbl[2]))(ptr, name);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetMemberTypeByName")]
		[return: NativeName(NativeNameType.Type, "ID3D11ShaderReflectionType*")]
		public readonly unsafe ID3D11ShaderReflectionType* GetMemberTypeByName([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] ReadOnlySpan<byte> name) 
		{
			ID3D11ShaderReflectionType* ptr = (ID3D11ShaderReflectionType*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (byte* pname = name)
			{
				ID3D11ShaderReflectionType* ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderReflectionType*, byte*, ID3D11ShaderReflectionType*>)(LpVtbl[2]))(ptr, (byte*)pname);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetMemberTypeByName")]
		[return: NativeName(NativeNameType.Type, "ID3D11ShaderReflectionType*")]
		public readonly unsafe ID3D11ShaderReflectionType* GetMemberTypeByName([NativeName(NativeNameType.Param, "Name")] [NativeName(NativeNameType.Type, "LPCSTR")] string name) 
		{
			ID3D11ShaderReflectionType* ptr = (ID3D11ShaderReflectionType*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			ID3D11ShaderReflectionType* ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderReflectionType*, byte*, ID3D11ShaderReflectionType*>)(LpVtbl[2]))(ptr, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetMemberTypeName")]
		[return: NativeName(NativeNameType.Type, "LPCSTR")]
		public readonly unsafe byte* GetMemberTypeName([NativeName(NativeNameType.Param, "Index")] [NativeName(NativeNameType.Type, "UINT")] uint index) 
		{
			ID3D11ShaderReflectionType* ptr = (ID3D11ShaderReflectionType*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			byte* ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderReflectionType*, uint, byte*>)(LpVtbl[3]))(ptr, index);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetMemberTypeName")]
		[return: NativeName(NativeNameType.Type, "LPCSTR")]
		public readonly unsafe string GetMemberTypeNameS([NativeName(NativeNameType.Param, "Index")] [NativeName(NativeNameType.Type, "UINT")] uint index) 
		{
			ID3D11ShaderReflectionType* ptr = (ID3D11ShaderReflectionType*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			string ret = Utils.DecodeStringUTF8(((delegate* unmanaged[Stdcall]<ID3D11ShaderReflectionType*, uint, byte*>)(LpVtbl[3]))(ptr, index));
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "IsEqual")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int IsEqual([NativeName(NativeNameType.Param, "pType")] [NativeName(NativeNameType.Type, "ID3D11ShaderReflectionType*")] ID3D11ShaderReflectionType* pType) 
		{
			ID3D11ShaderReflectionType* ptr = (ID3D11ShaderReflectionType*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderReflectionType*, ID3D11ShaderReflectionType*, int>)(LpVtbl[4]))(ptr, pType);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "IsEqual")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int IsEqual([NativeName(NativeNameType.Param, "pType")] [NativeName(NativeNameType.Type, "ID3D11ShaderReflectionType*")] ref ID3D11ShaderReflectionType pType) 
		{
			ID3D11ShaderReflectionType* ptr = (ID3D11ShaderReflectionType*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ShaderReflectionType* ppType = &pType)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderReflectionType*, ID3D11ShaderReflectionType*, int>)(LpVtbl[4]))(ptr, (ID3D11ShaderReflectionType*)ppType);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "IsEqual")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int IsEqual([NativeName(NativeNameType.Param, "pType")] [NativeName(NativeNameType.Type, "ID3D11ShaderReflectionType*")] ComPtr<ID3D11ShaderReflectionType> pType) 
		{
			ID3D11ShaderReflectionType* ptr = (ID3D11ShaderReflectionType*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderReflectionType*, ID3D11ShaderReflectionType*, int>)(LpVtbl[4]))(ptr, (ID3D11ShaderReflectionType*)pType.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetSubType")]
		[return: NativeName(NativeNameType.Type, "ID3D11ShaderReflectionType*")]
		public readonly unsafe ID3D11ShaderReflectionType* GetSubType() 
		{
			ID3D11ShaderReflectionType* ptr = (ID3D11ShaderReflectionType*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ID3D11ShaderReflectionType* ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderReflectionType*, ID3D11ShaderReflectionType*>)(LpVtbl[5]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetBaseClass")]
		[return: NativeName(NativeNameType.Type, "ID3D11ShaderReflectionType*")]
		public readonly unsafe ID3D11ShaderReflectionType* GetBaseClass() 
		{
			ID3D11ShaderReflectionType* ptr = (ID3D11ShaderReflectionType*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ID3D11ShaderReflectionType* ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderReflectionType*, ID3D11ShaderReflectionType*>)(LpVtbl[6]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetNumInterfaces")]
		[return: NativeName(NativeNameType.Type, "UINT")]
		public readonly unsafe uint GetNumInterfaces() 
		{
			ID3D11ShaderReflectionType* ptr = (ID3D11ShaderReflectionType*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderReflectionType*, uint>)(LpVtbl[7]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetInterfaceByIndex")]
		[return: NativeName(NativeNameType.Type, "ID3D11ShaderReflectionType*")]
		public readonly unsafe ID3D11ShaderReflectionType* GetInterfaceByIndex([NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT")] uint uIndex) 
		{
			ID3D11ShaderReflectionType* ptr = (ID3D11ShaderReflectionType*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ID3D11ShaderReflectionType* ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderReflectionType*, uint, ID3D11ShaderReflectionType*>)(LpVtbl[8]))(ptr, uIndex);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "IsOfType")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int IsOfType([NativeName(NativeNameType.Param, "pType")] [NativeName(NativeNameType.Type, "ID3D11ShaderReflectionType*")] ID3D11ShaderReflectionType* pType) 
		{
			ID3D11ShaderReflectionType* ptr = (ID3D11ShaderReflectionType*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderReflectionType*, ID3D11ShaderReflectionType*, int>)(LpVtbl[9]))(ptr, pType);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "IsOfType")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int IsOfType([NativeName(NativeNameType.Param, "pType")] [NativeName(NativeNameType.Type, "ID3D11ShaderReflectionType*")] ref ID3D11ShaderReflectionType pType) 
		{
			ID3D11ShaderReflectionType* ptr = (ID3D11ShaderReflectionType*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ShaderReflectionType* ppType = &pType)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderReflectionType*, ID3D11ShaderReflectionType*, int>)(LpVtbl[9]))(ptr, (ID3D11ShaderReflectionType*)ppType);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "IsOfType")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int IsOfType([NativeName(NativeNameType.Param, "pType")] [NativeName(NativeNameType.Type, "ID3D11ShaderReflectionType*")] ComPtr<ID3D11ShaderReflectionType> pType) 
		{
			ID3D11ShaderReflectionType* ptr = (ID3D11ShaderReflectionType*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderReflectionType*, ID3D11ShaderReflectionType*, int>)(LpVtbl[9]))(ptr, (ID3D11ShaderReflectionType*)pType.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImplementsInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int ImplementsInterface([NativeName(NativeNameType.Param, "pBase")] [NativeName(NativeNameType.Type, "ID3D11ShaderReflectionType*")] ID3D11ShaderReflectionType* pBase) 
		{
			ID3D11ShaderReflectionType* ptr = (ID3D11ShaderReflectionType*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderReflectionType*, ID3D11ShaderReflectionType*, int>)(LpVtbl[10]))(ptr, pBase);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImplementsInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int ImplementsInterface([NativeName(NativeNameType.Param, "pBase")] [NativeName(NativeNameType.Type, "ID3D11ShaderReflectionType*")] ref ID3D11ShaderReflectionType pBase) 
		{
			ID3D11ShaderReflectionType* ptr = (ID3D11ShaderReflectionType*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ShaderReflectionType* ppBase = &pBase)
			{
				int ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderReflectionType*, ID3D11ShaderReflectionType*, int>)(LpVtbl[10]))(ptr, (ID3D11ShaderReflectionType*)ppBase);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "ImplementsInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe int ImplementsInterface([NativeName(NativeNameType.Param, "pBase")] [NativeName(NativeNameType.Type, "ID3D11ShaderReflectionType*")] ComPtr<ID3D11ShaderReflectionType> pBase) 
		{
			ID3D11ShaderReflectionType* ptr = (ID3D11ShaderReflectionType*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			int ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderReflectionType*, ID3D11ShaderReflectionType*, int>)(LpVtbl[10]))(ptr, (ID3D11ShaderReflectionType*)pBase.Handle);
			return ret;
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

	}

}
