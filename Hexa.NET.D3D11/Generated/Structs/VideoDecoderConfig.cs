// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D11
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VideoDecoderConfig
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		public Guid GuidConfigBitstreamEncryption;

		/// <summary>
		/// To be documented.
		/// </summary>
		public Guid GuidConfigMBcontrolEncryption;

		/// <summary>
		/// To be documented.
		/// </summary>
		public Guid GuidConfigResidDiffEncryption;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint ConfigBitstreamRaw;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint ConfigMBcontrolRasterOrder;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint ConfigResidDiffHost;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint ConfigSpatialResid8;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint ConfigResid8Subtraction;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint ConfigSpatialHost8or9Clipping;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint ConfigSpatialResidInterleaved;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint ConfigIntraResidUnsigned;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint ConfigResidDiffAccelerator;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint ConfigHostInverseScan;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint ConfigSpecificIDCT;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint Config4GroupedCoefs;

		/// <summary>
		/// To be documented.
		/// </summary>
		public ushort ConfigMinRenderTargetBuffCount;

		/// <summary>
		/// To be documented.
		/// </summary>
		public ushort ConfigDecoderSpecific;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe VideoDecoderConfig(Guid guidConfigBitstreamEncryption = default, Guid guidConfigMBcontrolEncryption = default, Guid guidConfigResidDiffEncryption = default, uint configBitstreamRaw = default, uint configMBcontrolRasterOrder = default, uint configResidDiffHost = default, uint configSpatialResid8 = default, uint configResid8Subtraction = default, uint configSpatialHost8Or9Clipping = default, uint configSpatialResidInterleaved = default, uint configIntraResidUnsigned = default, uint configResidDiffAccelerator = default, uint configHostInverseScan = default, uint configSpecificIdct = default, uint config4GroupedCoefs = default, ushort configMinRenderTargetBuffCount = default, ushort configDecoderSpecific = default)
		{
			GuidConfigBitstreamEncryption = guidConfigBitstreamEncryption;
			GuidConfigMBcontrolEncryption = guidConfigMBcontrolEncryption;
			GuidConfigResidDiffEncryption = guidConfigResidDiffEncryption;
			ConfigBitstreamRaw = configBitstreamRaw;
			ConfigMBcontrolRasterOrder = configMBcontrolRasterOrder;
			ConfigResidDiffHost = configResidDiffHost;
			ConfigSpatialResid8 = configSpatialResid8;
			ConfigResid8Subtraction = configResid8Subtraction;
			ConfigSpatialHost8or9Clipping = configSpatialHost8Or9Clipping;
			ConfigSpatialResidInterleaved = configSpatialResidInterleaved;
			ConfigIntraResidUnsigned = configIntraResidUnsigned;
			ConfigResidDiffAccelerator = configResidDiffAccelerator;
			ConfigHostInverseScan = configHostInverseScan;
			ConfigSpecificIDCT = configSpecificIdct;
			Config4GroupedCoefs = config4GroupedCoefs;
			ConfigMinRenderTargetBuffCount = configMinRenderTargetBuffCount;
			ConfigDecoderSpecific = configDecoderSpecific;
		}


	}

}
