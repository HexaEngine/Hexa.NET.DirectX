// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D11
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "D3D11_VIDEO_PROCESSOR_STREAM")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct D3D11VideoProcessorStream
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Enable")]
		[NativeName(NativeNameType.Type, "BOOL")]
		public int Enable;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "OutputIndex")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint OutputIndex;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "InputFrameOrField")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint InputFrameOrField;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "PastFrames")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint PastFrames;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "FutureFrames")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint FutureFrames;

		/// <summary>
		/// [annotation] <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "ppPastSurfaces")]
		[NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")]
		public unsafe ID3D11VideoProcessorInputView** PpPastSurfaces;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "pInputSurface")]
		[NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView*")]
		public unsafe ID3D11VideoProcessorInputView* PInputSurface;

		/// <summary>
		/// [annotation] <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "ppFutureSurfaces")]
		[NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")]
		public unsafe ID3D11VideoProcessorInputView** PpFutureSurfaces;

		/// <summary>
		/// [annotation] <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "ppPastSurfacesRight")]
		[NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")]
		public unsafe ID3D11VideoProcessorInputView** PpPastSurfacesRight;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "pInputSurfaceRight")]
		[NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView*")]
		public unsafe ID3D11VideoProcessorInputView* PInputSurfaceRight;

		/// <summary>
		/// [annotation] <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "ppFutureSurfacesRight")]
		[NativeName(NativeNameType.Type, "ID3D11VideoProcessorInputView**")]
		public unsafe ID3D11VideoProcessorInputView** PpFutureSurfacesRight;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe D3D11VideoProcessorStream(int enable = default, uint outputIndex = default, uint inputFrameOrField = default, uint pastFrames = default, uint futureFrames = default, ID3D11VideoProcessorInputView** ppPastSurfaces = default, ID3D11VideoProcessorInputView* pInputSurface = default, ID3D11VideoProcessorInputView** ppFutureSurfaces = default, ID3D11VideoProcessorInputView** ppPastSurfacesRight = default, ID3D11VideoProcessorInputView* pInputSurfaceRight = default, ID3D11VideoProcessorInputView** ppFutureSurfacesRight = default)
		{
			Enable = enable;
			OutputIndex = outputIndex;
			InputFrameOrField = inputFrameOrField;
			PastFrames = pastFrames;
			FutureFrames = futureFrames;
			PpPastSurfaces = ppPastSurfaces;
			PInputSurface = pInputSurface;
			PpFutureSurfaces = ppFutureSurfaces;
			PpPastSurfacesRight = ppPastSurfacesRight;
			PInputSurfaceRight = pInputSurfaceRight;
			PpFutureSurfacesRight = ppFutureSurfacesRight;
		}


	}

}
