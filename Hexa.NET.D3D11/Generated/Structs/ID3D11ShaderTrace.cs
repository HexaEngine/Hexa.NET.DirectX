// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D11
{
	/// <summary>
	/// To be documented.
	/// </summary>
	public partial struct ID3D11ShaderTrace : IComObject, IComObject<ID3D11ShaderTrace>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public unsafe ID3D11ShaderTrace (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface(Guid* riid, void** ppvObject) 
		{
			ID3D11ShaderTrace* ptr = (ID3D11ShaderTrace*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderTrace*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface(ref Guid riid, void** ppvObject) 
		{
			ID3D11ShaderTrace* ptr = (ID3D11ShaderTrace*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderTrace*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface<T>(out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11ShaderTrace* ptr = (ID3D11ShaderTrace*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderTrace*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface<T>(ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11ShaderTrace* ptr = (ID3D11ShaderTrace*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderTrace*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint AddRef() 
		{
			ID3D11ShaderTrace* ptr = (ID3D11ShaderTrace*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderTrace*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint Release() 
		{
			ID3D11ShaderTrace* ptr = (ID3D11ShaderTrace*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderTrace*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult TraceReady(ulong* pTestCount) 
		{
			ID3D11ShaderTrace* ptr = (ID3D11ShaderTrace*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderTrace*, ulong*, HResult>)(LpVtbl[3]))(ptr, pTestCount);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult TraceReady(ref ulong pTestCount) 
		{
			ID3D11ShaderTrace* ptr = (ID3D11ShaderTrace*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ulong* ppTestCount = &pTestCount)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderTrace*, ulong*, HResult>)(LpVtbl[3]))(ptr, (ulong*)ppTestCount);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResetTrace() 
		{
			ID3D11ShaderTrace* ptr = (ID3D11ShaderTrace*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11ShaderTrace*, void>)(LpVtbl[4]))(ptr);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetTraceStats(TraceStats* pTraceStats) 
		{
			ID3D11ShaderTrace* ptr = (ID3D11ShaderTrace*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderTrace*, TraceStats*, HResult>)(LpVtbl[5]))(ptr, pTraceStats);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetTraceStats(ref TraceStats pTraceStats) 
		{
			ID3D11ShaderTrace* ptr = (ID3D11ShaderTrace*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TraceStats* ppTraceStats = &pTraceStats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderTrace*, TraceStats*, HResult>)(LpVtbl[5]))(ptr, (TraceStats*)ppTraceStats);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult PSSelectStamp(uint stampIndex) 
		{
			ID3D11ShaderTrace* ptr = (ID3D11ShaderTrace*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderTrace*, uint, HResult>)(LpVtbl[6]))(ptr, stampIndex);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetInitialRegisterContents(TraceRegister* pRegister, TraceValue* pValue) 
		{
			ID3D11ShaderTrace* ptr = (ID3D11ShaderTrace*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderTrace*, TraceRegister*, TraceValue*, HResult>)(LpVtbl[7]))(ptr, pRegister, pValue);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetInitialRegisterContents(ref TraceRegister pRegister, TraceValue* pValue) 
		{
			ID3D11ShaderTrace* ptr = (ID3D11ShaderTrace*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TraceRegister* ppRegister = &pRegister)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderTrace*, TraceRegister*, TraceValue*, HResult>)(LpVtbl[7]))(ptr, (TraceRegister*)ppRegister, pValue);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetInitialRegisterContents(TraceRegister* pRegister, ref TraceValue pValue) 
		{
			ID3D11ShaderTrace* ptr = (ID3D11ShaderTrace*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TraceValue* ppValue = &pValue)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderTrace*, TraceRegister*, TraceValue*, HResult>)(LpVtbl[7]))(ptr, pRegister, (TraceValue*)ppValue);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetInitialRegisterContents(ref TraceRegister pRegister, ref TraceValue pValue) 
		{
			ID3D11ShaderTrace* ptr = (ID3D11ShaderTrace*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TraceRegister* ppRegister = &pRegister)
			{
				fixed (TraceValue* ppValue = &pValue)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderTrace*, TraceRegister*, TraceValue*, HResult>)(LpVtbl[7]))(ptr, (TraceRegister*)ppRegister, (TraceValue*)ppValue);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetStep(uint stepIndex, TraceStep* pTraceStep) 
		{
			ID3D11ShaderTrace* ptr = (ID3D11ShaderTrace*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderTrace*, uint, TraceStep*, HResult>)(LpVtbl[8]))(ptr, stepIndex, pTraceStep);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetStep(uint stepIndex, ref TraceStep pTraceStep) 
		{
			ID3D11ShaderTrace* ptr = (ID3D11ShaderTrace*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TraceStep* ppTraceStep = &pTraceStep)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderTrace*, uint, TraceStep*, HResult>)(LpVtbl[8]))(ptr, stepIndex, (TraceStep*)ppTraceStep);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetWrittenRegister(uint stepIndex, uint writtenRegisterIndex, TraceRegister* pRegister, TraceValue* pValue) 
		{
			ID3D11ShaderTrace* ptr = (ID3D11ShaderTrace*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderTrace*, uint, uint, TraceRegister*, TraceValue*, HResult>)(LpVtbl[9]))(ptr, stepIndex, writtenRegisterIndex, pRegister, pValue);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetWrittenRegister(uint stepIndex, uint writtenRegisterIndex, ref TraceRegister pRegister, TraceValue* pValue) 
		{
			ID3D11ShaderTrace* ptr = (ID3D11ShaderTrace*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TraceRegister* ppRegister = &pRegister)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderTrace*, uint, uint, TraceRegister*, TraceValue*, HResult>)(LpVtbl[9]))(ptr, stepIndex, writtenRegisterIndex, (TraceRegister*)ppRegister, pValue);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetWrittenRegister(uint stepIndex, uint writtenRegisterIndex, TraceRegister* pRegister, ref TraceValue pValue) 
		{
			ID3D11ShaderTrace* ptr = (ID3D11ShaderTrace*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TraceValue* ppValue = &pValue)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderTrace*, uint, uint, TraceRegister*, TraceValue*, HResult>)(LpVtbl[9]))(ptr, stepIndex, writtenRegisterIndex, pRegister, (TraceValue*)ppValue);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetWrittenRegister(uint stepIndex, uint writtenRegisterIndex, ref TraceRegister pRegister, ref TraceValue pValue) 
		{
			ID3D11ShaderTrace* ptr = (ID3D11ShaderTrace*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TraceRegister* ppRegister = &pRegister)
			{
				fixed (TraceValue* ppValue = &pValue)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderTrace*, uint, uint, TraceRegister*, TraceValue*, HResult>)(LpVtbl[9]))(ptr, stepIndex, writtenRegisterIndex, (TraceRegister*)ppRegister, (TraceValue*)ppValue);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetReadRegister(uint stepIndex, uint readRegisterIndex, TraceRegister* pRegister, TraceValue* pValue) 
		{
			ID3D11ShaderTrace* ptr = (ID3D11ShaderTrace*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderTrace*, uint, uint, TraceRegister*, TraceValue*, HResult>)(LpVtbl[10]))(ptr, stepIndex, readRegisterIndex, pRegister, pValue);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetReadRegister(uint stepIndex, uint readRegisterIndex, ref TraceRegister pRegister, TraceValue* pValue) 
		{
			ID3D11ShaderTrace* ptr = (ID3D11ShaderTrace*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TraceRegister* ppRegister = &pRegister)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderTrace*, uint, uint, TraceRegister*, TraceValue*, HResult>)(LpVtbl[10]))(ptr, stepIndex, readRegisterIndex, (TraceRegister*)ppRegister, pValue);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetReadRegister(uint stepIndex, uint readRegisterIndex, TraceRegister* pRegister, ref TraceValue pValue) 
		{
			ID3D11ShaderTrace* ptr = (ID3D11ShaderTrace*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TraceValue* ppValue = &pValue)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderTrace*, uint, uint, TraceRegister*, TraceValue*, HResult>)(LpVtbl[10]))(ptr, stepIndex, readRegisterIndex, pRegister, (TraceValue*)ppValue);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetReadRegister(uint stepIndex, uint readRegisterIndex, ref TraceRegister pRegister, ref TraceValue pValue) 
		{
			ID3D11ShaderTrace* ptr = (ID3D11ShaderTrace*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TraceRegister* ppRegister = &pRegister)
			{
				fixed (TraceValue* ppValue = &pValue)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderTrace*, uint, uint, TraceRegister*, TraceValue*, HResult>)(LpVtbl[10]))(ptr, stepIndex, readRegisterIndex, (TraceRegister*)ppRegister, (TraceValue*)ppValue);
					return ret;
				}
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IUnknown (ID3D11ShaderTrace value)
		{
			return Unsafe.As<ID3D11ShaderTrace, IUnknown>(ref value);
		}

	}

}
