// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D11
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "D3D11_FEATURE_DATA_VIDEO_DECODER_HISTOGRAM")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct D3D11FeatureDataVideoDecoderHistogram
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "DecoderDesc")]
		[NativeName(NativeNameType.Type, "D3D11_VIDEO_DECODER_DESC")]
		public D3D11VideoDecoderDesc DecoderDesc;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Components")]
		[NativeName(NativeNameType.Type, "D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAGS")]
		public D3D11VideoDecoderHistogramComponentFlags Components;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "BinCount")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint BinCount;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "CounterBitDepth")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint CounterBitDepth;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe D3D11FeatureDataVideoDecoderHistogram(D3D11VideoDecoderDesc decoderDesc = default, D3D11VideoDecoderHistogramComponentFlags components = default, uint binCount = default, uint counterBitDepth = default)
		{
			DecoderDesc = decoderDesc;
			Components = components;
			BinCount = binCount;
			CounterBitDepth = counterBitDepth;
		}


	}

}
