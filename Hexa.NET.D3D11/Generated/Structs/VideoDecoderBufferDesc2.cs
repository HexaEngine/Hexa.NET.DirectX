// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D11
{
	/// <summary>
	/// interface __MIDL_itf_d3d11_4_0000_0005 <br/>
	/// [local] <br/>
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct VideoDecoderBufferDesc2
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		public VideoDecoderBufferType BufferType;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint DataOffset;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint DataSize;

		/// <summary>
		/// [annotation] <br/>
		/// </summary>
		public unsafe void* PIV;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint IVSize;

		/// <summary>
		/// [annotation] <br/>
		/// </summary>
		public unsafe VideoDecoderSubSampleMappingBlock* PSubSampleMappingBlock;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint SubSampleMappingCount;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint CBlocksStripeEncrypted;

		/// <summary>
		/// To be documented.
		/// </summary>
		public uint CBlocksStripeClear;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe VideoDecoderBufferDesc2(VideoDecoderBufferType bufferType = default, uint dataOffset = default, uint dataSize = default, void* piV = default, uint ivSize = default, VideoDecoderSubSampleMappingBlock* pSubSampleMappingBlock = default, uint subSampleMappingCount = default, uint cBlocksStripeEncrypted = default, uint cBlocksStripeClear = default)
		{
			BufferType = bufferType;
			DataOffset = dataOffset;
			DataSize = dataSize;
			PIV = piV;
			IVSize = ivSize;
			PSubSampleMappingBlock = pSubSampleMappingBlock;
			SubSampleMappingCount = subSampleMappingCount;
			CBlocksStripeEncrypted = cBlocksStripeEncrypted;
			CBlocksStripeClear = cBlocksStripeClear;
		}


	}

}
