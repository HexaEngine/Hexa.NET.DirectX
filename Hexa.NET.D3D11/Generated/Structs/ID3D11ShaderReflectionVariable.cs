// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D11
{
	/// <summary>
	/// {51F23923-F3E5-4BD1-91CB-606177D8DB4C}<br/>
	/// </summary>
	[Guid("51f23923-f3e5-4bd1-91cb-606177d8db4c")]
	public partial struct ID3D11ShaderReflectionVariable : IComObject, IComObject<ID3D11ShaderReflectionVariable>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("51f23923-f3e5-4bd1-91cb-606177d8db4c");

		public unsafe ID3D11ShaderReflectionVariable (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDesc(ShaderVariableDesc* pDesc) 
		{
			ID3D11ShaderReflectionVariable* ptr = (ID3D11ShaderReflectionVariable*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderReflectionVariable*, ShaderVariableDesc*, HResult>)(*LpVtbl))(ptr, pDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDesc(ref ShaderVariableDesc pDesc) 
		{
			ID3D11ShaderReflectionVariable* ptr = (ID3D11ShaderReflectionVariable*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ShaderVariableDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderReflectionVariable*, ShaderVariableDesc*, HResult>)(*LpVtbl))(ptr, (ShaderVariableDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe ID3D11ShaderReflectionType* GetType() 
		{
			ID3D11ShaderReflectionVariable* ptr = (ID3D11ShaderReflectionVariable*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ID3D11ShaderReflectionType* ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderReflectionVariable*, ID3D11ShaderReflectionType*>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe ID3D11ShaderReflectionConstantBuffer* GetBuffer() 
		{
			ID3D11ShaderReflectionVariable* ptr = (ID3D11ShaderReflectionVariable*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ID3D11ShaderReflectionConstantBuffer* ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderReflectionVariable*, ID3D11ShaderReflectionConstantBuffer*>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint GetInterfaceSlot(uint uArrayIndex) 
		{
			ID3D11ShaderReflectionVariable* ptr = (ID3D11ShaderReflectionVariable*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11ShaderReflectionVariable*, uint, uint>)(LpVtbl[3]))(ptr, uArrayIndex);
			return ret;
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

	}

}
