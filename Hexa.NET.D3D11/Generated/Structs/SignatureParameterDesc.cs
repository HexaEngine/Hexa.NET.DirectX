// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D11
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct SignatureParameterDesc
	{
		/// <summary>
		/// Name of the semantic<br/>
		/// </summary>
		public unsafe byte* SemanticName;

		/// <summary>
		/// Index of the semantic<br/>
		/// </summary>
		public uint SemanticIndex;

		/// <summary>
		/// Number of member variables<br/>
		/// </summary>
		public uint Register;

		/// <summary>
		/// A predefined system value, or D3D_NAME_UNDEFINED if not applicable<br/>
		/// </summary>
		public Name SystemValueType;

		/// <summary>
		/// Scalar type (e.g. uint, float, etc.)<br/>
		/// </summary>
		public RegisterComponentType ComponentType;

		/// <summary>
		/// Mask to indicate which components of the register<br/>
		/// </summary>
		public byte Mask;

		/// <summary>
		/// Mask to indicate whether a given component is<br/>
		/// </summary>
		public byte ReadWriteMask;

		/// <summary>
		/// Stream index<br/>
		/// </summary>
		public uint Stream;

		/// <summary>
		/// Minimum desired interpolation precision<br/>
		/// </summary>
		public MinPrecision MinPrecision;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe SignatureParameterDesc(byte* semanticName = default, uint semanticIndex = default, uint register = default, Name systemValueType = default, RegisterComponentType componentType = default, byte mask = default, byte readWriteMask = default, uint stream = default, MinPrecision minPrecision = default)
		{
			SemanticName = semanticName;
			SemanticIndex = semanticIndex;
			Register = register;
			SystemValueType = systemValueType;
			ComponentType = componentType;
			Mask = mask;
			ReadWriteMask = readWriteMask;
			Stream = stream;
			MinPrecision = minPrecision;
		}


	}

}
