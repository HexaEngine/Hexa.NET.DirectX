// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.DXGI;
using Hexa.NET.D3DCommon;
using HexaGen.Runtime.COM;

namespace Hexa.NET.D3D11
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("917600da-f58c-4c33-98d8-3e15b390fa24")]
	public partial struct ID3D11DeviceContext4 : IComObject, IComObject<ID3D11DeviceContext4>, IComObject<ID3D11DeviceContext3>, IComObject<ID3D11DeviceContext2>, IComObject<ID3D11DeviceContext1>, IComObject<ID3D11DeviceContext>, IComObject<ID3D11DeviceChild>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("917600da-f58c-4c33-98d8-3e15b390fa24");

		public unsafe ID3D11DeviceContext4 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface(Guid* riid, void** ppvObject) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface(ref Guid riid, void** ppvObject) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface<T>(out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface<T>(ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint AddRef() 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint Release() 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetDevice(ID3D11Device** ppDevice) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Device**, void>)(LpVtbl[3]))(ptr, ppDevice);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetDevice(ref ID3D11Device* ppDevice) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Device** pppDevice = &ppDevice)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Device**, void>)(LpVtbl[3]))(ptr, (ID3D11Device**)pppDevice);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetDevice(out ComPtr<ID3D11Device> ppDevice) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppDevice = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Device**, void>)(LpVtbl[3]))(ptr, (ID3D11Device**)ppDevice.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData(Guid* guid, uint* pDataSize, void* pData) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, Guid*, uint*, void*, HResult>)(LpVtbl[4]))(ptr, guid, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData(ref Guid guid, uint* pDataSize, void* pData) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, Guid*, uint*, void*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pguid, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData(Guid* guid, ref uint pDataSize, void* pData) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, Guid*, uint*, void*, HResult>)(LpVtbl[4]))(ptr, guid, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData(ref Guid guid, ref uint pDataSize, void* pData) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, Guid*, uint*, void*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pguid, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData<T>(Guid* guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, Guid*, uint*, void*, HResult>)(LpVtbl[4]))(ptr, guid, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData<T>(ref Guid guid, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, Guid*, uint*, void*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pguid, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData<T>(Guid* guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, Guid*, uint*, void*, HResult>)(LpVtbl[4]))(ptr, guid, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData<T>(ref Guid guid, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, Guid*, uint*, void*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pguid, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateData(Guid* guid, uint dataSize, void* pData) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, Guid*, uint, void*, HResult>)(LpVtbl[5]))(ptr, guid, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateData(ref Guid guid, uint dataSize, void* pData) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, Guid*, uint, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pguid, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(Guid* guid, IUnknown* pData) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, Guid*, IUnknown*, HResult>)(LpVtbl[6]))(ptr, guid, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(ref Guid guid, IUnknown* pData) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, Guid*, IUnknown*, HResult>)(LpVtbl[6]))(ptr, (Guid*)pguid, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(Guid* guid, ref IUnknown pData) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppData = &pData)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, Guid*, IUnknown*, HResult>)(LpVtbl[6]))(ptr, guid, (IUnknown*)ppData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(Guid* guid, ComPtr<IUnknown> pData) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, Guid*, IUnknown*, HResult>)(LpVtbl[6]))(ptr, guid, (IUnknown*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(ref Guid guid, ref IUnknown pData) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				fixed (IUnknown* ppData = &pData)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, Guid*, IUnknown*, HResult>)(LpVtbl[6]))(ptr, (Guid*)pguid, (IUnknown*)ppData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(ref Guid guid, ComPtr<IUnknown> pData) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pguid = &guid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, Guid*, IUnknown*, HResult>)(LpVtbl[6]))(ptr, (Guid*)pguid, (IUnknown*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSSetConstantBuffers(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[7]))(ptr, startSlot, numBuffers, ppConstantBuffers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSSetConstantBuffers(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[7]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSSetConstantBuffers(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[7]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSSetShaderResources(uint startSlot, uint numViews, ID3D11ShaderResourceView** ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[8]))(ptr, startSlot, numViews, ppShaderResourceViews);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSSetShaderResources(uint startSlot, uint numViews, ref ID3D11ShaderResourceView* ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ShaderResourceView** pppShaderResourceViews = &ppShaderResourceViews)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[8]))(ptr, startSlot, numViews, (ID3D11ShaderResourceView**)pppShaderResourceViews);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSSetShaderResources(uint startSlot, uint numViews, ComPtr<ID3D11ShaderResourceView> ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[8]))(ptr, startSlot, numViews, (ID3D11ShaderResourceView**)ppShaderResourceViews.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSSetShader(ID3D11PixelShader* pPixelShader, ID3D11ClassInstance** ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11PixelShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[9]))(ptr, pPixelShader, ppClassInstances, numClassInstances);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSSetShader(ref ID3D11PixelShader pPixelShader, ID3D11ClassInstance** ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11PixelShader* ppPixelShader = &pPixelShader)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11PixelShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[9]))(ptr, (ID3D11PixelShader*)ppPixelShader, ppClassInstances, numClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSSetShader(ID3D11PixelShader* pPixelShader, ref ID3D11ClassInstance* ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11PixelShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[9]))(ptr, pPixelShader, (ID3D11ClassInstance**)pppClassInstances, numClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSSetShader(ID3D11PixelShader* pPixelShader, ComPtr<ID3D11ClassInstance> ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11PixelShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[9]))(ptr, pPixelShader, (ID3D11ClassInstance**)ppClassInstances.Handle, numClassInstances);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSSetShader(ref ID3D11PixelShader pPixelShader, ref ID3D11ClassInstance* ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11PixelShader* ppPixelShader = &pPixelShader)
			{
				fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11PixelShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[9]))(ptr, (ID3D11PixelShader*)ppPixelShader, (ID3D11ClassInstance**)pppClassInstances, numClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSSetShader(ref ID3D11PixelShader pPixelShader, ComPtr<ID3D11ClassInstance> ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11PixelShader* ppPixelShader = &pPixelShader)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11PixelShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[9]))(ptr, (ID3D11PixelShader*)ppPixelShader, (ID3D11ClassInstance**)ppClassInstances.Handle, numClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSSetSamplers(uint startSlot, uint numSamplers, ID3D11SamplerState** ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[10]))(ptr, startSlot, numSamplers, ppSamplers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSSetSamplers(uint startSlot, uint numSamplers, ref ID3D11SamplerState* ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11SamplerState** pppSamplers = &ppSamplers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[10]))(ptr, startSlot, numSamplers, (ID3D11SamplerState**)pppSamplers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSSetSamplers(uint startSlot, uint numSamplers, ComPtr<ID3D11SamplerState> ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[10]))(ptr, startSlot, numSamplers, (ID3D11SamplerState**)ppSamplers.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSSetShader(ID3D11VertexShader* pVertexShader, ID3D11ClassInstance** ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11VertexShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[11]))(ptr, pVertexShader, ppClassInstances, numClassInstances);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSSetShader(ref ID3D11VertexShader pVertexShader, ID3D11ClassInstance** ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VertexShader* ppVertexShader = &pVertexShader)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11VertexShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[11]))(ptr, (ID3D11VertexShader*)ppVertexShader, ppClassInstances, numClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSSetShader(ID3D11VertexShader* pVertexShader, ref ID3D11ClassInstance* ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11VertexShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[11]))(ptr, pVertexShader, (ID3D11ClassInstance**)pppClassInstances, numClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSSetShader(ID3D11VertexShader* pVertexShader, ComPtr<ID3D11ClassInstance> ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11VertexShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[11]))(ptr, pVertexShader, (ID3D11ClassInstance**)ppClassInstances.Handle, numClassInstances);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSSetShader(ref ID3D11VertexShader pVertexShader, ref ID3D11ClassInstance* ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VertexShader* ppVertexShader = &pVertexShader)
			{
				fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11VertexShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[11]))(ptr, (ID3D11VertexShader*)ppVertexShader, (ID3D11ClassInstance**)pppClassInstances, numClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSSetShader(ref ID3D11VertexShader pVertexShader, ComPtr<ID3D11ClassInstance> ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VertexShader* ppVertexShader = &pVertexShader)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11VertexShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[11]))(ptr, (ID3D11VertexShader*)ppVertexShader, (ID3D11ClassInstance**)ppClassInstances.Handle, numClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DrawIndexed(uint indexCount, uint startIndexLocation, int baseVertexLocation) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, int, void>)(LpVtbl[12]))(ptr, indexCount, startIndexLocation, baseVertexLocation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void Draw(uint vertexCount, uint startVertexLocation) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, void>)(LpVtbl[13]))(ptr, vertexCount, startVertexLocation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult Map(ID3D11Resource* pResource, uint subresource, Map mapType, uint mapFlags, MappedSubresource* pMappedResource) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, Map, uint, MappedSubresource*, HResult>)(LpVtbl[14]))(ptr, pResource, subresource, mapType, mapFlags, pMappedResource);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult Map(ref ID3D11Resource pResource, uint subresource, Map mapType, uint mapFlags, MappedSubresource* pMappedResource) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, Map, uint, MappedSubresource*, HResult>)(LpVtbl[14]))(ptr, (ID3D11Resource*)ppResource, subresource, mapType, mapFlags, pMappedResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult Map(ComPtr<ID3D11Resource> pResource, uint subresource, Map mapType, uint mapFlags, MappedSubresource* pMappedResource) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, Map, uint, MappedSubresource*, HResult>)(LpVtbl[14]))(ptr, (ID3D11Resource*)pResource.Handle, subresource, mapType, mapFlags, pMappedResource);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult Map(ID3D11Resource* pResource, uint subresource, Map mapType, uint mapFlags, ref MappedSubresource pMappedResource) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (MappedSubresource* ppMappedResource = &pMappedResource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, Map, uint, MappedSubresource*, HResult>)(LpVtbl[14]))(ptr, pResource, subresource, mapType, mapFlags, (MappedSubresource*)ppMappedResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult Map(ref ID3D11Resource pResource, uint subresource, Map mapType, uint mapFlags, ref MappedSubresource pMappedResource) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				fixed (MappedSubresource* ppMappedResource = &pMappedResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, Map, uint, MappedSubresource*, HResult>)(LpVtbl[14]))(ptr, (ID3D11Resource*)ppResource, subresource, mapType, mapFlags, (MappedSubresource*)ppMappedResource);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult Map(ComPtr<ID3D11Resource> pResource, uint subresource, Map mapType, uint mapFlags, ref MappedSubresource pMappedResource) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (MappedSubresource* ppMappedResource = &pMappedResource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, Map, uint, MappedSubresource*, HResult>)(LpVtbl[14]))(ptr, (ID3D11Resource*)pResource.Handle, subresource, mapType, mapFlags, (MappedSubresource*)ppMappedResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void Unmap(ID3D11Resource* pResource, uint subresource) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, void>)(LpVtbl[15]))(ptr, pResource, subresource);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void Unmap(ref ID3D11Resource pResource, uint subresource) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, void>)(LpVtbl[15]))(ptr, (ID3D11Resource*)ppResource, subresource);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void Unmap(ComPtr<ID3D11Resource> pResource, uint subresource) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, void>)(LpVtbl[15]))(ptr, (ID3D11Resource*)pResource.Handle, subresource);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSSetConstantBuffers(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[16]))(ptr, startSlot, numBuffers, ppConstantBuffers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSSetConstantBuffers(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[16]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSSetConstantBuffers(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[16]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IASetInputLayout(ID3D11InputLayout* pInputLayout) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11InputLayout*, void>)(LpVtbl[17]))(ptr, pInputLayout);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IASetInputLayout(ref ID3D11InputLayout pInputLayout) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11InputLayout* ppInputLayout = &pInputLayout)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11InputLayout*, void>)(LpVtbl[17]))(ptr, (ID3D11InputLayout*)ppInputLayout);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IASetVertexBuffers(uint startSlot, uint numBuffers, ID3D11Buffer** ppVertexBuffers, uint* pStrides, uint* pOffsets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[18]))(ptr, startSlot, numBuffers, ppVertexBuffers, pStrides, pOffsets);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IASetVertexBuffers(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppVertexBuffers, uint* pStrides, uint* pOffsets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppVertexBuffers = &ppVertexBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[18]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppVertexBuffers, pStrides, pOffsets);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IASetVertexBuffers(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppVertexBuffers, uint* pStrides, uint* pOffsets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[18]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppVertexBuffers.Handle, pStrides, pOffsets);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IASetVertexBuffers(uint startSlot, uint numBuffers, ID3D11Buffer** ppVertexBuffers, ref uint pStrides, uint* pOffsets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppStrides = &pStrides)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[18]))(ptr, startSlot, numBuffers, ppVertexBuffers, (uint*)ppStrides, pOffsets);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IASetVertexBuffers(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppVertexBuffers, ref uint pStrides, uint* pOffsets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppVertexBuffers = &ppVertexBuffers)
			{
				fixed (uint* ppStrides = &pStrides)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[18]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppVertexBuffers, (uint*)ppStrides, pOffsets);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IASetVertexBuffers(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppVertexBuffers, ref uint pStrides, uint* pOffsets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppStrides = &pStrides)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[18]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppVertexBuffers.Handle, (uint*)ppStrides, pOffsets);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IASetVertexBuffers(uint startSlot, uint numBuffers, ID3D11Buffer** ppVertexBuffers, uint* pStrides, ref uint pOffsets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppOffsets = &pOffsets)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[18]))(ptr, startSlot, numBuffers, ppVertexBuffers, pStrides, (uint*)ppOffsets);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IASetVertexBuffers(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppVertexBuffers, uint* pStrides, ref uint pOffsets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppVertexBuffers = &ppVertexBuffers)
			{
				fixed (uint* ppOffsets = &pOffsets)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[18]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppVertexBuffers, pStrides, (uint*)ppOffsets);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IASetVertexBuffers(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppVertexBuffers, uint* pStrides, ref uint pOffsets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppOffsets = &pOffsets)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[18]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppVertexBuffers.Handle, pStrides, (uint*)ppOffsets);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IASetVertexBuffers(uint startSlot, uint numBuffers, ID3D11Buffer** ppVertexBuffers, ref uint pStrides, ref uint pOffsets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppStrides = &pStrides)
			{
				fixed (uint* ppOffsets = &pOffsets)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[18]))(ptr, startSlot, numBuffers, ppVertexBuffers, (uint*)ppStrides, (uint*)ppOffsets);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IASetVertexBuffers(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppVertexBuffers, ref uint pStrides, ref uint pOffsets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppVertexBuffers = &ppVertexBuffers)
			{
				fixed (uint* ppStrides = &pStrides)
				{
					fixed (uint* ppOffsets = &pOffsets)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[18]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppVertexBuffers, (uint*)ppStrides, (uint*)ppOffsets);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IASetVertexBuffers(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppVertexBuffers, ref uint pStrides, ref uint pOffsets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppStrides = &pStrides)
			{
				fixed (uint* ppOffsets = &pOffsets)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[18]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppVertexBuffers.Handle, (uint*)ppStrides, (uint*)ppOffsets);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IASetIndexBuffer(ID3D11Buffer* pIndexBuffer, Format format, uint offset) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer*, Format, uint, void>)(LpVtbl[19]))(ptr, pIndexBuffer, format, offset);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IASetIndexBuffer(ref ID3D11Buffer pIndexBuffer, Format format, uint offset) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer* ppIndexBuffer = &pIndexBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer*, Format, uint, void>)(LpVtbl[19]))(ptr, (ID3D11Buffer*)ppIndexBuffer, format, offset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IASetIndexBuffer(ComPtr<ID3D11Buffer> pIndexBuffer, Format format, uint offset) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer*, Format, uint, void>)(LpVtbl[19]))(ptr, (ID3D11Buffer*)pIndexBuffer.Handle, format, offset);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DrawIndexedInstanced(uint indexCountPerInstance, uint instanceCount, uint startIndexLocation, int baseVertexLocation, uint startInstanceLocation) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, uint, int, uint, void>)(LpVtbl[20]))(ptr, indexCountPerInstance, instanceCount, startIndexLocation, baseVertexLocation, startInstanceLocation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DrawInstanced(uint vertexCountPerInstance, uint instanceCount, uint startVertexLocation, uint startInstanceLocation) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, uint, uint, void>)(LpVtbl[21]))(ptr, vertexCountPerInstance, instanceCount, startVertexLocation, startInstanceLocation);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSSetConstantBuffers(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[22]))(ptr, startSlot, numBuffers, ppConstantBuffers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSSetConstantBuffers(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[22]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSSetConstantBuffers(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[22]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSSetShader(ID3D11GeometryShader* pShader, ID3D11ClassInstance** ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11GeometryShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[23]))(ptr, pShader, ppClassInstances, numClassInstances);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSSetShader(ref ID3D11GeometryShader pShader, ID3D11ClassInstance** ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11GeometryShader* ppShader = &pShader)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11GeometryShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[23]))(ptr, (ID3D11GeometryShader*)ppShader, ppClassInstances, numClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSSetShader(ID3D11GeometryShader* pShader, ref ID3D11ClassInstance* ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11GeometryShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[23]))(ptr, pShader, (ID3D11ClassInstance**)pppClassInstances, numClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSSetShader(ID3D11GeometryShader* pShader, ComPtr<ID3D11ClassInstance> ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11GeometryShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[23]))(ptr, pShader, (ID3D11ClassInstance**)ppClassInstances.Handle, numClassInstances);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSSetShader(ref ID3D11GeometryShader pShader, ref ID3D11ClassInstance* ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11GeometryShader* ppShader = &pShader)
			{
				fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11GeometryShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[23]))(ptr, (ID3D11GeometryShader*)ppShader, (ID3D11ClassInstance**)pppClassInstances, numClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSSetShader(ref ID3D11GeometryShader pShader, ComPtr<ID3D11ClassInstance> ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11GeometryShader* ppShader = &pShader)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11GeometryShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[23]))(ptr, (ID3D11GeometryShader*)ppShader, (ID3D11ClassInstance**)ppClassInstances.Handle, numClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IASetPrimitiveTopology(PrimitiveTopology topology) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, PrimitiveTopology, void>)(LpVtbl[24]))(ptr, topology);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSSetShaderResources(uint startSlot, uint numViews, ID3D11ShaderResourceView** ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[25]))(ptr, startSlot, numViews, ppShaderResourceViews);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSSetShaderResources(uint startSlot, uint numViews, ref ID3D11ShaderResourceView* ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ShaderResourceView** pppShaderResourceViews = &ppShaderResourceViews)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[25]))(ptr, startSlot, numViews, (ID3D11ShaderResourceView**)pppShaderResourceViews);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSSetShaderResources(uint startSlot, uint numViews, ComPtr<ID3D11ShaderResourceView> ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[25]))(ptr, startSlot, numViews, (ID3D11ShaderResourceView**)ppShaderResourceViews.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSSetSamplers(uint startSlot, uint numSamplers, ID3D11SamplerState** ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[26]))(ptr, startSlot, numSamplers, ppSamplers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSSetSamplers(uint startSlot, uint numSamplers, ref ID3D11SamplerState* ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11SamplerState** pppSamplers = &ppSamplers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[26]))(ptr, startSlot, numSamplers, (ID3D11SamplerState**)pppSamplers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSSetSamplers(uint startSlot, uint numSamplers, ComPtr<ID3D11SamplerState> ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[26]))(ptr, startSlot, numSamplers, (ID3D11SamplerState**)ppSamplers.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void Begin(ID3D11Asynchronous* pAsync) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Asynchronous*, void>)(LpVtbl[27]))(ptr, pAsync);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void Begin(ref ID3D11Asynchronous pAsync) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Asynchronous* ppAsync = &pAsync)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Asynchronous*, void>)(LpVtbl[27]))(ptr, (ID3D11Asynchronous*)ppAsync);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void Begin(ComPtr<ID3D11Asynchronous> pAsync) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Asynchronous*, void>)(LpVtbl[27]))(ptr, (ID3D11Asynchronous*)pAsync.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void End(ID3D11Asynchronous* pAsync) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Asynchronous*, void>)(LpVtbl[28]))(ptr, pAsync);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void End(ref ID3D11Asynchronous pAsync) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Asynchronous* ppAsync = &pAsync)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Asynchronous*, void>)(LpVtbl[28]))(ptr, (ID3D11Asynchronous*)ppAsync);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void End(ComPtr<ID3D11Asynchronous> pAsync) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Asynchronous*, void>)(LpVtbl[28]))(ptr, (ID3D11Asynchronous*)pAsync.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetData(ID3D11Asynchronous* pAsync, void* pData, uint dataSize, uint getDataFlags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Asynchronous*, void*, uint, uint, HResult>)(LpVtbl[29]))(ptr, pAsync, pData, dataSize, getDataFlags);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetData(ref ID3D11Asynchronous pAsync, void* pData, uint dataSize, uint getDataFlags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Asynchronous* ppAsync = &pAsync)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Asynchronous*, void*, uint, uint, HResult>)(LpVtbl[29]))(ptr, (ID3D11Asynchronous*)ppAsync, pData, dataSize, getDataFlags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetData(ComPtr<ID3D11Asynchronous> pAsync, void* pData, uint dataSize, uint getDataFlags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Asynchronous*, void*, uint, uint, HResult>)(LpVtbl[29]))(ptr, (ID3D11Asynchronous*)pAsync.Handle, pData, dataSize, getDataFlags);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetData<T>(ID3D11Asynchronous* pAsync, ComPtr<T> pData, uint dataSize, uint getDataFlags) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Asynchronous*, void*, uint, uint, HResult>)(LpVtbl[29]))(ptr, pAsync, (void*)pData.Handle, dataSize, getDataFlags);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetData<T>(ComPtr<ID3D11Asynchronous> pAsync, ComPtr<T> pData, uint dataSize, uint getDataFlags) where T : unmanaged, IComObject, IComObject<T>
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Asynchronous*, void*, uint, uint, HResult>)(LpVtbl[29]))(ptr, (ID3D11Asynchronous*)pAsync.Handle, (void*)pData.Handle, dataSize, getDataFlags);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetPredication(ID3D11Predicate* pPredicate, Bool32 predicateValue) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Predicate*, Bool32, void>)(LpVtbl[30]))(ptr, pPredicate, predicateValue);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetPredication(ref ID3D11Predicate pPredicate, Bool32 predicateValue) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Predicate* ppPredicate = &pPredicate)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Predicate*, Bool32, void>)(LpVtbl[30]))(ptr, (ID3D11Predicate*)ppPredicate, predicateValue);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSSetShaderResources(uint startSlot, uint numViews, ID3D11ShaderResourceView** ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[31]))(ptr, startSlot, numViews, ppShaderResourceViews);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSSetShaderResources(uint startSlot, uint numViews, ref ID3D11ShaderResourceView* ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ShaderResourceView** pppShaderResourceViews = &ppShaderResourceViews)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[31]))(ptr, startSlot, numViews, (ID3D11ShaderResourceView**)pppShaderResourceViews);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSSetShaderResources(uint startSlot, uint numViews, ComPtr<ID3D11ShaderResourceView> ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[31]))(ptr, startSlot, numViews, (ID3D11ShaderResourceView**)ppShaderResourceViews.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSSetSamplers(uint startSlot, uint numSamplers, ID3D11SamplerState** ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[32]))(ptr, startSlot, numSamplers, ppSamplers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSSetSamplers(uint startSlot, uint numSamplers, ref ID3D11SamplerState* ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11SamplerState** pppSamplers = &ppSamplers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[32]))(ptr, startSlot, numSamplers, (ID3D11SamplerState**)pppSamplers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSSetSamplers(uint startSlot, uint numSamplers, ComPtr<ID3D11SamplerState> ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[32]))(ptr, startSlot, numSamplers, (ID3D11SamplerState**)ppSamplers.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargets(uint numViews, ID3D11RenderTargetView** ppRenderTargetViews, ID3D11DepthStencilView* pDepthStencilView) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, void>)(LpVtbl[33]))(ptr, numViews, ppRenderTargetViews, pDepthStencilView);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargets(uint numViews, ref ID3D11RenderTargetView* ppRenderTargetViews, ID3D11DepthStencilView* pDepthStencilView) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11RenderTargetView** pppRenderTargetViews = &ppRenderTargetViews)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, void>)(LpVtbl[33]))(ptr, numViews, (ID3D11RenderTargetView**)pppRenderTargetViews, pDepthStencilView);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargets(uint numViews, ComPtr<ID3D11RenderTargetView> ppRenderTargetViews, ID3D11DepthStencilView* pDepthStencilView) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, void>)(LpVtbl[33]))(ptr, numViews, (ID3D11RenderTargetView**)ppRenderTargetViews.Handle, pDepthStencilView);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargets(uint numViews, ID3D11RenderTargetView** ppRenderTargetViews, ref ID3D11DepthStencilView pDepthStencilView) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11DepthStencilView* ppDepthStencilView = &pDepthStencilView)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, void>)(LpVtbl[33]))(ptr, numViews, ppRenderTargetViews, (ID3D11DepthStencilView*)ppDepthStencilView);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargets(uint numViews, ID3D11RenderTargetView** ppRenderTargetViews, ComPtr<ID3D11DepthStencilView> pDepthStencilView) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, void>)(LpVtbl[33]))(ptr, numViews, ppRenderTargetViews, (ID3D11DepthStencilView*)pDepthStencilView.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargets(uint numViews, ref ID3D11RenderTargetView* ppRenderTargetViews, ref ID3D11DepthStencilView pDepthStencilView) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11RenderTargetView** pppRenderTargetViews = &ppRenderTargetViews)
			{
				fixed (ID3D11DepthStencilView* ppDepthStencilView = &pDepthStencilView)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, void>)(LpVtbl[33]))(ptr, numViews, (ID3D11RenderTargetView**)pppRenderTargetViews, (ID3D11DepthStencilView*)ppDepthStencilView);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargets(uint numViews, ComPtr<ID3D11RenderTargetView> ppRenderTargetViews, ComPtr<ID3D11DepthStencilView> pDepthStencilView) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, void>)(LpVtbl[33]))(ptr, numViews, (ID3D11RenderTargetView**)ppRenderTargetViews.Handle, (ID3D11DepthStencilView*)pDepthStencilView.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ID3D11RenderTargetView** ppRenderTargetViews, ID3D11DepthStencilView* pDepthStencilView, uint uavStartSlot, uint numUaVs, ID3D11UnorderedAccessView** ppUnorderedAccessViews, uint* pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[34]))(ptr, numRtVs, ppRenderTargetViews, pDepthStencilView, uavStartSlot, numUaVs, ppUnorderedAccessViews, pUAVInitialCounts);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ref ID3D11RenderTargetView* ppRenderTargetViews, ID3D11DepthStencilView* pDepthStencilView, uint uavStartSlot, uint numUaVs, ID3D11UnorderedAccessView** ppUnorderedAccessViews, uint* pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11RenderTargetView** pppRenderTargetViews = &ppRenderTargetViews)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[34]))(ptr, numRtVs, (ID3D11RenderTargetView**)pppRenderTargetViews, pDepthStencilView, uavStartSlot, numUaVs, ppUnorderedAccessViews, pUAVInitialCounts);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ComPtr<ID3D11RenderTargetView> ppRenderTargetViews, ID3D11DepthStencilView* pDepthStencilView, uint uavStartSlot, uint numUaVs, ID3D11UnorderedAccessView** ppUnorderedAccessViews, uint* pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[34]))(ptr, numRtVs, (ID3D11RenderTargetView**)ppRenderTargetViews.Handle, pDepthStencilView, uavStartSlot, numUaVs, ppUnorderedAccessViews, pUAVInitialCounts);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ID3D11RenderTargetView** ppRenderTargetViews, ref ID3D11DepthStencilView pDepthStencilView, uint uavStartSlot, uint numUaVs, ID3D11UnorderedAccessView** ppUnorderedAccessViews, uint* pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11DepthStencilView* ppDepthStencilView = &pDepthStencilView)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[34]))(ptr, numRtVs, ppRenderTargetViews, (ID3D11DepthStencilView*)ppDepthStencilView, uavStartSlot, numUaVs, ppUnorderedAccessViews, pUAVInitialCounts);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ID3D11RenderTargetView** ppRenderTargetViews, ComPtr<ID3D11DepthStencilView> pDepthStencilView, uint uavStartSlot, uint numUaVs, ID3D11UnorderedAccessView** ppUnorderedAccessViews, uint* pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[34]))(ptr, numRtVs, ppRenderTargetViews, (ID3D11DepthStencilView*)pDepthStencilView.Handle, uavStartSlot, numUaVs, ppUnorderedAccessViews, pUAVInitialCounts);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ref ID3D11RenderTargetView* ppRenderTargetViews, ref ID3D11DepthStencilView pDepthStencilView, uint uavStartSlot, uint numUaVs, ID3D11UnorderedAccessView** ppUnorderedAccessViews, uint* pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11RenderTargetView** pppRenderTargetViews = &ppRenderTargetViews)
			{
				fixed (ID3D11DepthStencilView* ppDepthStencilView = &pDepthStencilView)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[34]))(ptr, numRtVs, (ID3D11RenderTargetView**)pppRenderTargetViews, (ID3D11DepthStencilView*)ppDepthStencilView, uavStartSlot, numUaVs, ppUnorderedAccessViews, pUAVInitialCounts);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ComPtr<ID3D11RenderTargetView> ppRenderTargetViews, ComPtr<ID3D11DepthStencilView> pDepthStencilView, uint uavStartSlot, uint numUaVs, ID3D11UnorderedAccessView** ppUnorderedAccessViews, uint* pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[34]))(ptr, numRtVs, (ID3D11RenderTargetView**)ppRenderTargetViews.Handle, (ID3D11DepthStencilView*)pDepthStencilView.Handle, uavStartSlot, numUaVs, ppUnorderedAccessViews, pUAVInitialCounts);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ID3D11RenderTargetView** ppRenderTargetViews, ID3D11DepthStencilView* pDepthStencilView, uint uavStartSlot, uint numUaVs, ref ID3D11UnorderedAccessView* ppUnorderedAccessViews, uint* pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11UnorderedAccessView** pppUnorderedAccessViews = &ppUnorderedAccessViews)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[34]))(ptr, numRtVs, ppRenderTargetViews, pDepthStencilView, uavStartSlot, numUaVs, (ID3D11UnorderedAccessView**)pppUnorderedAccessViews, pUAVInitialCounts);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ID3D11RenderTargetView** ppRenderTargetViews, ID3D11DepthStencilView* pDepthStencilView, uint uavStartSlot, uint numUaVs, ComPtr<ID3D11UnorderedAccessView> ppUnorderedAccessViews, uint* pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[34]))(ptr, numRtVs, ppRenderTargetViews, pDepthStencilView, uavStartSlot, numUaVs, (ID3D11UnorderedAccessView**)ppUnorderedAccessViews.Handle, pUAVInitialCounts);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ref ID3D11RenderTargetView* ppRenderTargetViews, ID3D11DepthStencilView* pDepthStencilView, uint uavStartSlot, uint numUaVs, ref ID3D11UnorderedAccessView* ppUnorderedAccessViews, uint* pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11RenderTargetView** pppRenderTargetViews = &ppRenderTargetViews)
			{
				fixed (ID3D11UnorderedAccessView** pppUnorderedAccessViews = &ppUnorderedAccessViews)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[34]))(ptr, numRtVs, (ID3D11RenderTargetView**)pppRenderTargetViews, pDepthStencilView, uavStartSlot, numUaVs, (ID3D11UnorderedAccessView**)pppUnorderedAccessViews, pUAVInitialCounts);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ComPtr<ID3D11RenderTargetView> ppRenderTargetViews, ID3D11DepthStencilView* pDepthStencilView, uint uavStartSlot, uint numUaVs, ComPtr<ID3D11UnorderedAccessView> ppUnorderedAccessViews, uint* pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[34]))(ptr, numRtVs, (ID3D11RenderTargetView**)ppRenderTargetViews.Handle, pDepthStencilView, uavStartSlot, numUaVs, (ID3D11UnorderedAccessView**)ppUnorderedAccessViews.Handle, pUAVInitialCounts);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ID3D11RenderTargetView** ppRenderTargetViews, ref ID3D11DepthStencilView pDepthStencilView, uint uavStartSlot, uint numUaVs, ref ID3D11UnorderedAccessView* ppUnorderedAccessViews, uint* pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11DepthStencilView* ppDepthStencilView = &pDepthStencilView)
			{
				fixed (ID3D11UnorderedAccessView** pppUnorderedAccessViews = &ppUnorderedAccessViews)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[34]))(ptr, numRtVs, ppRenderTargetViews, (ID3D11DepthStencilView*)ppDepthStencilView, uavStartSlot, numUaVs, (ID3D11UnorderedAccessView**)pppUnorderedAccessViews, pUAVInitialCounts);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ID3D11RenderTargetView** ppRenderTargetViews, ComPtr<ID3D11DepthStencilView> pDepthStencilView, uint uavStartSlot, uint numUaVs, ComPtr<ID3D11UnorderedAccessView> ppUnorderedAccessViews, uint* pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[34]))(ptr, numRtVs, ppRenderTargetViews, (ID3D11DepthStencilView*)pDepthStencilView.Handle, uavStartSlot, numUaVs, (ID3D11UnorderedAccessView**)ppUnorderedAccessViews.Handle, pUAVInitialCounts);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ref ID3D11RenderTargetView* ppRenderTargetViews, ref ID3D11DepthStencilView pDepthStencilView, uint uavStartSlot, uint numUaVs, ref ID3D11UnorderedAccessView* ppUnorderedAccessViews, uint* pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11RenderTargetView** pppRenderTargetViews = &ppRenderTargetViews)
			{
				fixed (ID3D11DepthStencilView* ppDepthStencilView = &pDepthStencilView)
				{
					fixed (ID3D11UnorderedAccessView** pppUnorderedAccessViews = &ppUnorderedAccessViews)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[34]))(ptr, numRtVs, (ID3D11RenderTargetView**)pppRenderTargetViews, (ID3D11DepthStencilView*)ppDepthStencilView, uavStartSlot, numUaVs, (ID3D11UnorderedAccessView**)pppUnorderedAccessViews, pUAVInitialCounts);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ComPtr<ID3D11RenderTargetView> ppRenderTargetViews, ComPtr<ID3D11DepthStencilView> pDepthStencilView, uint uavStartSlot, uint numUaVs, ComPtr<ID3D11UnorderedAccessView> ppUnorderedAccessViews, uint* pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[34]))(ptr, numRtVs, (ID3D11RenderTargetView**)ppRenderTargetViews.Handle, (ID3D11DepthStencilView*)pDepthStencilView.Handle, uavStartSlot, numUaVs, (ID3D11UnorderedAccessView**)ppUnorderedAccessViews.Handle, pUAVInitialCounts);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ID3D11RenderTargetView** ppRenderTargetViews, ID3D11DepthStencilView* pDepthStencilView, uint uavStartSlot, uint numUaVs, ID3D11UnorderedAccessView** ppUnorderedAccessViews, ref uint pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppUAVInitialCounts = &pUAVInitialCounts)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[34]))(ptr, numRtVs, ppRenderTargetViews, pDepthStencilView, uavStartSlot, numUaVs, ppUnorderedAccessViews, (uint*)ppUAVInitialCounts);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ref ID3D11RenderTargetView* ppRenderTargetViews, ID3D11DepthStencilView* pDepthStencilView, uint uavStartSlot, uint numUaVs, ID3D11UnorderedAccessView** ppUnorderedAccessViews, ref uint pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11RenderTargetView** pppRenderTargetViews = &ppRenderTargetViews)
			{
				fixed (uint* ppUAVInitialCounts = &pUAVInitialCounts)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[34]))(ptr, numRtVs, (ID3D11RenderTargetView**)pppRenderTargetViews, pDepthStencilView, uavStartSlot, numUaVs, ppUnorderedAccessViews, (uint*)ppUAVInitialCounts);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ComPtr<ID3D11RenderTargetView> ppRenderTargetViews, ID3D11DepthStencilView* pDepthStencilView, uint uavStartSlot, uint numUaVs, ID3D11UnorderedAccessView** ppUnorderedAccessViews, ref uint pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppUAVInitialCounts = &pUAVInitialCounts)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[34]))(ptr, numRtVs, (ID3D11RenderTargetView**)ppRenderTargetViews.Handle, pDepthStencilView, uavStartSlot, numUaVs, ppUnorderedAccessViews, (uint*)ppUAVInitialCounts);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ID3D11RenderTargetView** ppRenderTargetViews, ref ID3D11DepthStencilView pDepthStencilView, uint uavStartSlot, uint numUaVs, ID3D11UnorderedAccessView** ppUnorderedAccessViews, ref uint pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11DepthStencilView* ppDepthStencilView = &pDepthStencilView)
			{
				fixed (uint* ppUAVInitialCounts = &pUAVInitialCounts)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[34]))(ptr, numRtVs, ppRenderTargetViews, (ID3D11DepthStencilView*)ppDepthStencilView, uavStartSlot, numUaVs, ppUnorderedAccessViews, (uint*)ppUAVInitialCounts);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ID3D11RenderTargetView** ppRenderTargetViews, ComPtr<ID3D11DepthStencilView> pDepthStencilView, uint uavStartSlot, uint numUaVs, ID3D11UnorderedAccessView** ppUnorderedAccessViews, ref uint pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppUAVInitialCounts = &pUAVInitialCounts)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[34]))(ptr, numRtVs, ppRenderTargetViews, (ID3D11DepthStencilView*)pDepthStencilView.Handle, uavStartSlot, numUaVs, ppUnorderedAccessViews, (uint*)ppUAVInitialCounts);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ref ID3D11RenderTargetView* ppRenderTargetViews, ref ID3D11DepthStencilView pDepthStencilView, uint uavStartSlot, uint numUaVs, ID3D11UnorderedAccessView** ppUnorderedAccessViews, ref uint pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11RenderTargetView** pppRenderTargetViews = &ppRenderTargetViews)
			{
				fixed (ID3D11DepthStencilView* ppDepthStencilView = &pDepthStencilView)
				{
					fixed (uint* ppUAVInitialCounts = &pUAVInitialCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[34]))(ptr, numRtVs, (ID3D11RenderTargetView**)pppRenderTargetViews, (ID3D11DepthStencilView*)ppDepthStencilView, uavStartSlot, numUaVs, ppUnorderedAccessViews, (uint*)ppUAVInitialCounts);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ComPtr<ID3D11RenderTargetView> ppRenderTargetViews, ComPtr<ID3D11DepthStencilView> pDepthStencilView, uint uavStartSlot, uint numUaVs, ID3D11UnorderedAccessView** ppUnorderedAccessViews, ref uint pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppUAVInitialCounts = &pUAVInitialCounts)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[34]))(ptr, numRtVs, (ID3D11RenderTargetView**)ppRenderTargetViews.Handle, (ID3D11DepthStencilView*)pDepthStencilView.Handle, uavStartSlot, numUaVs, ppUnorderedAccessViews, (uint*)ppUAVInitialCounts);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ID3D11RenderTargetView** ppRenderTargetViews, ID3D11DepthStencilView* pDepthStencilView, uint uavStartSlot, uint numUaVs, ref ID3D11UnorderedAccessView* ppUnorderedAccessViews, ref uint pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11UnorderedAccessView** pppUnorderedAccessViews = &ppUnorderedAccessViews)
			{
				fixed (uint* ppUAVInitialCounts = &pUAVInitialCounts)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[34]))(ptr, numRtVs, ppRenderTargetViews, pDepthStencilView, uavStartSlot, numUaVs, (ID3D11UnorderedAccessView**)pppUnorderedAccessViews, (uint*)ppUAVInitialCounts);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ID3D11RenderTargetView** ppRenderTargetViews, ID3D11DepthStencilView* pDepthStencilView, uint uavStartSlot, uint numUaVs, ComPtr<ID3D11UnorderedAccessView> ppUnorderedAccessViews, ref uint pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppUAVInitialCounts = &pUAVInitialCounts)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[34]))(ptr, numRtVs, ppRenderTargetViews, pDepthStencilView, uavStartSlot, numUaVs, (ID3D11UnorderedAccessView**)ppUnorderedAccessViews.Handle, (uint*)ppUAVInitialCounts);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ref ID3D11RenderTargetView* ppRenderTargetViews, ID3D11DepthStencilView* pDepthStencilView, uint uavStartSlot, uint numUaVs, ref ID3D11UnorderedAccessView* ppUnorderedAccessViews, ref uint pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11RenderTargetView** pppRenderTargetViews = &ppRenderTargetViews)
			{
				fixed (ID3D11UnorderedAccessView** pppUnorderedAccessViews = &ppUnorderedAccessViews)
				{
					fixed (uint* ppUAVInitialCounts = &pUAVInitialCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[34]))(ptr, numRtVs, (ID3D11RenderTargetView**)pppRenderTargetViews, pDepthStencilView, uavStartSlot, numUaVs, (ID3D11UnorderedAccessView**)pppUnorderedAccessViews, (uint*)ppUAVInitialCounts);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ComPtr<ID3D11RenderTargetView> ppRenderTargetViews, ID3D11DepthStencilView* pDepthStencilView, uint uavStartSlot, uint numUaVs, ComPtr<ID3D11UnorderedAccessView> ppUnorderedAccessViews, ref uint pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppUAVInitialCounts = &pUAVInitialCounts)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[34]))(ptr, numRtVs, (ID3D11RenderTargetView**)ppRenderTargetViews.Handle, pDepthStencilView, uavStartSlot, numUaVs, (ID3D11UnorderedAccessView**)ppUnorderedAccessViews.Handle, (uint*)ppUAVInitialCounts);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ID3D11RenderTargetView** ppRenderTargetViews, ref ID3D11DepthStencilView pDepthStencilView, uint uavStartSlot, uint numUaVs, ref ID3D11UnorderedAccessView* ppUnorderedAccessViews, ref uint pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11DepthStencilView* ppDepthStencilView = &pDepthStencilView)
			{
				fixed (ID3D11UnorderedAccessView** pppUnorderedAccessViews = &ppUnorderedAccessViews)
				{
					fixed (uint* ppUAVInitialCounts = &pUAVInitialCounts)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[34]))(ptr, numRtVs, ppRenderTargetViews, (ID3D11DepthStencilView*)ppDepthStencilView, uavStartSlot, numUaVs, (ID3D11UnorderedAccessView**)pppUnorderedAccessViews, (uint*)ppUAVInitialCounts);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ID3D11RenderTargetView** ppRenderTargetViews, ComPtr<ID3D11DepthStencilView> pDepthStencilView, uint uavStartSlot, uint numUaVs, ComPtr<ID3D11UnorderedAccessView> ppUnorderedAccessViews, ref uint pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppUAVInitialCounts = &pUAVInitialCounts)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[34]))(ptr, numRtVs, ppRenderTargetViews, (ID3D11DepthStencilView*)pDepthStencilView.Handle, uavStartSlot, numUaVs, (ID3D11UnorderedAccessView**)ppUnorderedAccessViews.Handle, (uint*)ppUAVInitialCounts);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ref ID3D11RenderTargetView* ppRenderTargetViews, ref ID3D11DepthStencilView pDepthStencilView, uint uavStartSlot, uint numUaVs, ref ID3D11UnorderedAccessView* ppUnorderedAccessViews, ref uint pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11RenderTargetView** pppRenderTargetViews = &ppRenderTargetViews)
			{
				fixed (ID3D11DepthStencilView* ppDepthStencilView = &pDepthStencilView)
				{
					fixed (ID3D11UnorderedAccessView** pppUnorderedAccessViews = &ppUnorderedAccessViews)
					{
						fixed (uint* ppUAVInitialCounts = &pUAVInitialCounts)
						{
							((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[34]))(ptr, numRtVs, (ID3D11RenderTargetView**)pppRenderTargetViews, (ID3D11DepthStencilView*)ppDepthStencilView, uavStartSlot, numUaVs, (ID3D11UnorderedAccessView**)pppUnorderedAccessViews, (uint*)ppUAVInitialCounts);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ComPtr<ID3D11RenderTargetView> ppRenderTargetViews, ComPtr<ID3D11DepthStencilView> pDepthStencilView, uint uavStartSlot, uint numUaVs, ComPtr<ID3D11UnorderedAccessView> ppUnorderedAccessViews, ref uint pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppUAVInitialCounts = &pUAVInitialCounts)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[34]))(ptr, numRtVs, (ID3D11RenderTargetView**)ppRenderTargetViews.Handle, (ID3D11DepthStencilView*)pDepthStencilView.Handle, uavStartSlot, numUaVs, (ID3D11UnorderedAccessView**)ppUnorderedAccessViews.Handle, (uint*)ppUAVInitialCounts);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetBlendState(ID3D11BlendState* pBlendState, float* blendFactor, uint sampleMask) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11BlendState*, float*, uint, void>)(LpVtbl[35]))(ptr, pBlendState, blendFactor, sampleMask);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetBlendState(ref ID3D11BlendState pBlendState, float* blendFactor, uint sampleMask) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11BlendState* ppBlendState = &pBlendState)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11BlendState*, float*, uint, void>)(LpVtbl[35]))(ptr, (ID3D11BlendState*)ppBlendState, blendFactor, sampleMask);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetBlendState(ComPtr<ID3D11BlendState> pBlendState, float* blendFactor, uint sampleMask) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11BlendState*, float*, uint, void>)(LpVtbl[35]))(ptr, (ID3D11BlendState*)pBlendState.Handle, blendFactor, sampleMask);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetBlendState(ID3D11BlendState* pBlendState, ref float blendFactor, uint sampleMask) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pblendFactor = &blendFactor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11BlendState*, float*, uint, void>)(LpVtbl[35]))(ptr, pBlendState, (float*)pblendFactor, sampleMask);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetBlendState(ID3D11BlendState* pBlendState, ReadOnlySpan<float> blendFactor, uint sampleMask) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pblendFactor = blendFactor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11BlendState*, float*, uint, void>)(LpVtbl[35]))(ptr, pBlendState, (float*)pblendFactor, sampleMask);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetBlendState(ref ID3D11BlendState pBlendState, ref float blendFactor, uint sampleMask) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11BlendState* ppBlendState = &pBlendState)
			{
				fixed (float* pblendFactor = &blendFactor)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11BlendState*, float*, uint, void>)(LpVtbl[35]))(ptr, (ID3D11BlendState*)ppBlendState, (float*)pblendFactor, sampleMask);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetBlendState(ref ID3D11BlendState pBlendState, ReadOnlySpan<float> blendFactor, uint sampleMask) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11BlendState* ppBlendState = &pBlendState)
			{
				fixed (float* pblendFactor = blendFactor)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11BlendState*, float*, uint, void>)(LpVtbl[35]))(ptr, (ID3D11BlendState*)ppBlendState, (float*)pblendFactor, sampleMask);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetBlendState(ComPtr<ID3D11BlendState> pBlendState, ref float blendFactor, uint sampleMask) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pblendFactor = &blendFactor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11BlendState*, float*, uint, void>)(LpVtbl[35]))(ptr, (ID3D11BlendState*)pBlendState.Handle, (float*)pblendFactor, sampleMask);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetDepthStencilState(ID3D11DepthStencilState* pDepthStencilState, uint stencilRef) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DepthStencilState*, uint, void>)(LpVtbl[36]))(ptr, pDepthStencilState, stencilRef);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetDepthStencilState(ref ID3D11DepthStencilState pDepthStencilState, uint stencilRef) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11DepthStencilState* ppDepthStencilState = &pDepthStencilState)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DepthStencilState*, uint, void>)(LpVtbl[36]))(ptr, (ID3D11DepthStencilState*)ppDepthStencilState, stencilRef);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMSetDepthStencilState(ComPtr<ID3D11DepthStencilState> pDepthStencilState, uint stencilRef) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DepthStencilState*, uint, void>)(LpVtbl[36]))(ptr, (ID3D11DepthStencilState*)pDepthStencilState.Handle, stencilRef);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SOSetTargets(uint numBuffers, ID3D11Buffer** ppSOTargets, uint* pOffsets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11Buffer**, uint*, void>)(LpVtbl[37]))(ptr, numBuffers, ppSOTargets, pOffsets);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SOSetTargets(uint numBuffers, ref ID3D11Buffer* ppSOTargets, uint* pOffsets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppSOTargets = &ppSOTargets)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11Buffer**, uint*, void>)(LpVtbl[37]))(ptr, numBuffers, (ID3D11Buffer**)pppSOTargets, pOffsets);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SOSetTargets(uint numBuffers, ComPtr<ID3D11Buffer> ppSOTargets, uint* pOffsets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11Buffer**, uint*, void>)(LpVtbl[37]))(ptr, numBuffers, (ID3D11Buffer**)ppSOTargets.Handle, pOffsets);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SOSetTargets(uint numBuffers, ID3D11Buffer** ppSOTargets, ref uint pOffsets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppOffsets = &pOffsets)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11Buffer**, uint*, void>)(LpVtbl[37]))(ptr, numBuffers, ppSOTargets, (uint*)ppOffsets);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SOSetTargets(uint numBuffers, ref ID3D11Buffer* ppSOTargets, ref uint pOffsets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppSOTargets = &ppSOTargets)
			{
				fixed (uint* ppOffsets = &pOffsets)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11Buffer**, uint*, void>)(LpVtbl[37]))(ptr, numBuffers, (ID3D11Buffer**)pppSOTargets, (uint*)ppOffsets);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SOSetTargets(uint numBuffers, ComPtr<ID3D11Buffer> ppSOTargets, ref uint pOffsets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppOffsets = &pOffsets)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11Buffer**, uint*, void>)(LpVtbl[37]))(ptr, numBuffers, (ID3D11Buffer**)ppSOTargets.Handle, (uint*)ppOffsets);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DrawAuto() 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, void>)(LpVtbl[38]))(ptr);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DrawIndexedInstancedIndirect(ID3D11Buffer* pBufferForArgs, uint alignedByteOffsetForArgs) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer*, uint, void>)(LpVtbl[39]))(ptr, pBufferForArgs, alignedByteOffsetForArgs);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DrawIndexedInstancedIndirect(ref ID3D11Buffer pBufferForArgs, uint alignedByteOffsetForArgs) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer* ppBufferForArgs = &pBufferForArgs)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer*, uint, void>)(LpVtbl[39]))(ptr, (ID3D11Buffer*)ppBufferForArgs, alignedByteOffsetForArgs);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DrawIndexedInstancedIndirect(ComPtr<ID3D11Buffer> pBufferForArgs, uint alignedByteOffsetForArgs) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer*, uint, void>)(LpVtbl[39]))(ptr, (ID3D11Buffer*)pBufferForArgs.Handle, alignedByteOffsetForArgs);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DrawInstancedIndirect(ID3D11Buffer* pBufferForArgs, uint alignedByteOffsetForArgs) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer*, uint, void>)(LpVtbl[40]))(ptr, pBufferForArgs, alignedByteOffsetForArgs);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DrawInstancedIndirect(ref ID3D11Buffer pBufferForArgs, uint alignedByteOffsetForArgs) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer* ppBufferForArgs = &pBufferForArgs)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer*, uint, void>)(LpVtbl[40]))(ptr, (ID3D11Buffer*)ppBufferForArgs, alignedByteOffsetForArgs);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DrawInstancedIndirect(ComPtr<ID3D11Buffer> pBufferForArgs, uint alignedByteOffsetForArgs) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer*, uint, void>)(LpVtbl[40]))(ptr, (ID3D11Buffer*)pBufferForArgs.Handle, alignedByteOffsetForArgs);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void Dispatch(uint threadGroupCountX, uint threadGroupCountY, uint threadGroupCountZ) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, uint, void>)(LpVtbl[41]))(ptr, threadGroupCountX, threadGroupCountY, threadGroupCountZ);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DispatchIndirect(ID3D11Buffer* pBufferForArgs, uint alignedByteOffsetForArgs) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer*, uint, void>)(LpVtbl[42]))(ptr, pBufferForArgs, alignedByteOffsetForArgs);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DispatchIndirect(ref ID3D11Buffer pBufferForArgs, uint alignedByteOffsetForArgs) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer* ppBufferForArgs = &pBufferForArgs)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer*, uint, void>)(LpVtbl[42]))(ptr, (ID3D11Buffer*)ppBufferForArgs, alignedByteOffsetForArgs);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DispatchIndirect(ComPtr<ID3D11Buffer> pBufferForArgs, uint alignedByteOffsetForArgs) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer*, uint, void>)(LpVtbl[42]))(ptr, (ID3D11Buffer*)pBufferForArgs.Handle, alignedByteOffsetForArgs);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void RSSetState(ID3D11RasterizerState* pRasterizerState) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11RasterizerState*, void>)(LpVtbl[43]))(ptr, pRasterizerState);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void RSSetState(ref ID3D11RasterizerState pRasterizerState) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11RasterizerState* ppRasterizerState = &pRasterizerState)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11RasterizerState*, void>)(LpVtbl[43]))(ptr, (ID3D11RasterizerState*)ppRasterizerState);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void RSSetState(ComPtr<ID3D11RasterizerState> pRasterizerState) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11RasterizerState*, void>)(LpVtbl[43]))(ptr, (ID3D11RasterizerState*)pRasterizerState.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void RSSetViewports(uint numViewports, Viewport* pViewports) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, Viewport*, void>)(LpVtbl[44]))(ptr, numViewports, pViewports);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void RSSetViewports(uint numViewports, ref Viewport pViewports) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Viewport* ppViewports = &pViewports)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, Viewport*, void>)(LpVtbl[44]))(ptr, numViewports, (Viewport*)ppViewports);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void RSSetScissorRects(uint numRects, Rect32* pRects) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, Rect32*, void>)(LpVtbl[45]))(ptr, numRects, pRects);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void RSSetScissorRects(uint numRects, ref Rect32 pRects) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppRects = &pRects)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, Rect32*, void>)(LpVtbl[45]))(ptr, numRects, (Rect32*)ppRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopySubresourceRegion(ID3D11Resource* pDstResource, uint dstSubresource, uint dstX, uint dstY, uint dstZ, ID3D11Resource* pSrcResource, uint srcSubresource, Box* pSrcBox) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, uint, uint, uint, ID3D11Resource*, uint, Box*, void>)(LpVtbl[46]))(ptr, pDstResource, dstSubresource, dstX, dstY, dstZ, pSrcResource, srcSubresource, pSrcBox);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopySubresourceRegion(ref ID3D11Resource pDstResource, uint dstSubresource, uint dstX, uint dstY, uint dstZ, ID3D11Resource* pSrcResource, uint srcSubresource, Box* pSrcBox) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDstResource = &pDstResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, uint, uint, uint, ID3D11Resource*, uint, Box*, void>)(LpVtbl[46]))(ptr, (ID3D11Resource*)ppDstResource, dstSubresource, dstX, dstY, dstZ, pSrcResource, srcSubresource, pSrcBox);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopySubresourceRegion(ComPtr<ID3D11Resource> pDstResource, uint dstSubresource, uint dstX, uint dstY, uint dstZ, ID3D11Resource* pSrcResource, uint srcSubresource, Box* pSrcBox) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, uint, uint, uint, ID3D11Resource*, uint, Box*, void>)(LpVtbl[46]))(ptr, (ID3D11Resource*)pDstResource.Handle, dstSubresource, dstX, dstY, dstZ, pSrcResource, srcSubresource, pSrcBox);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopySubresourceRegion(ID3D11Resource* pDstResource, uint dstSubresource, uint dstX, uint dstY, uint dstZ, ref ID3D11Resource pSrcResource, uint srcSubresource, Box* pSrcBox) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppSrcResource = &pSrcResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, uint, uint, uint, ID3D11Resource*, uint, Box*, void>)(LpVtbl[46]))(ptr, pDstResource, dstSubresource, dstX, dstY, dstZ, (ID3D11Resource*)ppSrcResource, srcSubresource, pSrcBox);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopySubresourceRegion(ID3D11Resource* pDstResource, uint dstSubresource, uint dstX, uint dstY, uint dstZ, ComPtr<ID3D11Resource> pSrcResource, uint srcSubresource, Box* pSrcBox) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, uint, uint, uint, ID3D11Resource*, uint, Box*, void>)(LpVtbl[46]))(ptr, pDstResource, dstSubresource, dstX, dstY, dstZ, (ID3D11Resource*)pSrcResource.Handle, srcSubresource, pSrcBox);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopySubresourceRegion(ref ID3D11Resource pDstResource, uint dstSubresource, uint dstX, uint dstY, uint dstZ, ref ID3D11Resource pSrcResource, uint srcSubresource, Box* pSrcBox) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDstResource = &pDstResource)
			{
				fixed (ID3D11Resource* ppSrcResource = &pSrcResource)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, uint, uint, uint, ID3D11Resource*, uint, Box*, void>)(LpVtbl[46]))(ptr, (ID3D11Resource*)ppDstResource, dstSubresource, dstX, dstY, dstZ, (ID3D11Resource*)ppSrcResource, srcSubresource, pSrcBox);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopySubresourceRegion(ComPtr<ID3D11Resource> pDstResource, uint dstSubresource, uint dstX, uint dstY, uint dstZ, ComPtr<ID3D11Resource> pSrcResource, uint srcSubresource, Box* pSrcBox) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, uint, uint, uint, ID3D11Resource*, uint, Box*, void>)(LpVtbl[46]))(ptr, (ID3D11Resource*)pDstResource.Handle, dstSubresource, dstX, dstY, dstZ, (ID3D11Resource*)pSrcResource.Handle, srcSubresource, pSrcBox);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopySubresourceRegion(ID3D11Resource* pDstResource, uint dstSubresource, uint dstX, uint dstY, uint dstZ, ID3D11Resource* pSrcResource, uint srcSubresource, ref Box pSrcBox) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Box* ppSrcBox = &pSrcBox)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, uint, uint, uint, ID3D11Resource*, uint, Box*, void>)(LpVtbl[46]))(ptr, pDstResource, dstSubresource, dstX, dstY, dstZ, pSrcResource, srcSubresource, (Box*)ppSrcBox);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopySubresourceRegion(ref ID3D11Resource pDstResource, uint dstSubresource, uint dstX, uint dstY, uint dstZ, ID3D11Resource* pSrcResource, uint srcSubresource, ref Box pSrcBox) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDstResource = &pDstResource)
			{
				fixed (Box* ppSrcBox = &pSrcBox)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, uint, uint, uint, ID3D11Resource*, uint, Box*, void>)(LpVtbl[46]))(ptr, (ID3D11Resource*)ppDstResource, dstSubresource, dstX, dstY, dstZ, pSrcResource, srcSubresource, (Box*)ppSrcBox);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopySubresourceRegion(ComPtr<ID3D11Resource> pDstResource, uint dstSubresource, uint dstX, uint dstY, uint dstZ, ID3D11Resource* pSrcResource, uint srcSubresource, ref Box pSrcBox) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Box* ppSrcBox = &pSrcBox)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, uint, uint, uint, ID3D11Resource*, uint, Box*, void>)(LpVtbl[46]))(ptr, (ID3D11Resource*)pDstResource.Handle, dstSubresource, dstX, dstY, dstZ, pSrcResource, srcSubresource, (Box*)ppSrcBox);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopySubresourceRegion(ID3D11Resource* pDstResource, uint dstSubresource, uint dstX, uint dstY, uint dstZ, ref ID3D11Resource pSrcResource, uint srcSubresource, ref Box pSrcBox) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppSrcResource = &pSrcResource)
			{
				fixed (Box* ppSrcBox = &pSrcBox)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, uint, uint, uint, ID3D11Resource*, uint, Box*, void>)(LpVtbl[46]))(ptr, pDstResource, dstSubresource, dstX, dstY, dstZ, (ID3D11Resource*)ppSrcResource, srcSubresource, (Box*)ppSrcBox);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopySubresourceRegion(ID3D11Resource* pDstResource, uint dstSubresource, uint dstX, uint dstY, uint dstZ, ComPtr<ID3D11Resource> pSrcResource, uint srcSubresource, ref Box pSrcBox) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Box* ppSrcBox = &pSrcBox)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, uint, uint, uint, ID3D11Resource*, uint, Box*, void>)(LpVtbl[46]))(ptr, pDstResource, dstSubresource, dstX, dstY, dstZ, (ID3D11Resource*)pSrcResource.Handle, srcSubresource, (Box*)ppSrcBox);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopySubresourceRegion(ref ID3D11Resource pDstResource, uint dstSubresource, uint dstX, uint dstY, uint dstZ, ref ID3D11Resource pSrcResource, uint srcSubresource, ref Box pSrcBox) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDstResource = &pDstResource)
			{
				fixed (ID3D11Resource* ppSrcResource = &pSrcResource)
				{
					fixed (Box* ppSrcBox = &pSrcBox)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, uint, uint, uint, ID3D11Resource*, uint, Box*, void>)(LpVtbl[46]))(ptr, (ID3D11Resource*)ppDstResource, dstSubresource, dstX, dstY, dstZ, (ID3D11Resource*)ppSrcResource, srcSubresource, (Box*)ppSrcBox);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopySubresourceRegion(ComPtr<ID3D11Resource> pDstResource, uint dstSubresource, uint dstX, uint dstY, uint dstZ, ComPtr<ID3D11Resource> pSrcResource, uint srcSubresource, ref Box pSrcBox) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Box* ppSrcBox = &pSrcBox)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, uint, uint, uint, ID3D11Resource*, uint, Box*, void>)(LpVtbl[46]))(ptr, (ID3D11Resource*)pDstResource.Handle, dstSubresource, dstX, dstY, dstZ, (ID3D11Resource*)pSrcResource.Handle, srcSubresource, (Box*)ppSrcBox);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyResource(ID3D11Resource* pDstResource, ID3D11Resource* pSrcResource) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, ID3D11Resource*, void>)(LpVtbl[47]))(ptr, pDstResource, pSrcResource);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyResource(ref ID3D11Resource pDstResource, ID3D11Resource* pSrcResource) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDstResource = &pDstResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, ID3D11Resource*, void>)(LpVtbl[47]))(ptr, (ID3D11Resource*)ppDstResource, pSrcResource);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyResource(ComPtr<ID3D11Resource> pDstResource, ID3D11Resource* pSrcResource) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, ID3D11Resource*, void>)(LpVtbl[47]))(ptr, (ID3D11Resource*)pDstResource.Handle, pSrcResource);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyResource(ID3D11Resource* pDstResource, ref ID3D11Resource pSrcResource) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppSrcResource = &pSrcResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, ID3D11Resource*, void>)(LpVtbl[47]))(ptr, pDstResource, (ID3D11Resource*)ppSrcResource);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyResource(ID3D11Resource* pDstResource, ComPtr<ID3D11Resource> pSrcResource) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, ID3D11Resource*, void>)(LpVtbl[47]))(ptr, pDstResource, (ID3D11Resource*)pSrcResource.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyResource(ref ID3D11Resource pDstResource, ref ID3D11Resource pSrcResource) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDstResource = &pDstResource)
			{
				fixed (ID3D11Resource* ppSrcResource = &pSrcResource)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, ID3D11Resource*, void>)(LpVtbl[47]))(ptr, (ID3D11Resource*)ppDstResource, (ID3D11Resource*)ppSrcResource);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyResource(ComPtr<ID3D11Resource> pDstResource, ComPtr<ID3D11Resource> pSrcResource) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, ID3D11Resource*, void>)(LpVtbl[47]))(ptr, (ID3D11Resource*)pDstResource.Handle, (ID3D11Resource*)pSrcResource.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void UpdateSubresource(ID3D11Resource* pDstResource, uint dstSubresource, Box* pDstBox, void* pSrcData, uint srcRowPitch, uint srcDepthPitch) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, Box*, void*, uint, uint, void>)(LpVtbl[48]))(ptr, pDstResource, dstSubresource, pDstBox, pSrcData, srcRowPitch, srcDepthPitch);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void UpdateSubresource(ref ID3D11Resource pDstResource, uint dstSubresource, Box* pDstBox, void* pSrcData, uint srcRowPitch, uint srcDepthPitch) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDstResource = &pDstResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, Box*, void*, uint, uint, void>)(LpVtbl[48]))(ptr, (ID3D11Resource*)ppDstResource, dstSubresource, pDstBox, pSrcData, srcRowPitch, srcDepthPitch);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void UpdateSubresource(ComPtr<ID3D11Resource> pDstResource, uint dstSubresource, Box* pDstBox, void* pSrcData, uint srcRowPitch, uint srcDepthPitch) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, Box*, void*, uint, uint, void>)(LpVtbl[48]))(ptr, (ID3D11Resource*)pDstResource.Handle, dstSubresource, pDstBox, pSrcData, srcRowPitch, srcDepthPitch);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void UpdateSubresource(ID3D11Resource* pDstResource, uint dstSubresource, ref Box pDstBox, void* pSrcData, uint srcRowPitch, uint srcDepthPitch) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Box* ppDstBox = &pDstBox)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, Box*, void*, uint, uint, void>)(LpVtbl[48]))(ptr, pDstResource, dstSubresource, (Box*)ppDstBox, pSrcData, srcRowPitch, srcDepthPitch);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void UpdateSubresource(ref ID3D11Resource pDstResource, uint dstSubresource, ref Box pDstBox, void* pSrcData, uint srcRowPitch, uint srcDepthPitch) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDstResource = &pDstResource)
			{
				fixed (Box* ppDstBox = &pDstBox)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, Box*, void*, uint, uint, void>)(LpVtbl[48]))(ptr, (ID3D11Resource*)ppDstResource, dstSubresource, (Box*)ppDstBox, pSrcData, srcRowPitch, srcDepthPitch);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void UpdateSubresource(ComPtr<ID3D11Resource> pDstResource, uint dstSubresource, ref Box pDstBox, void* pSrcData, uint srcRowPitch, uint srcDepthPitch) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Box* ppDstBox = &pDstBox)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, Box*, void*, uint, uint, void>)(LpVtbl[48]))(ptr, (ID3D11Resource*)pDstResource.Handle, dstSubresource, (Box*)ppDstBox, pSrcData, srcRowPitch, srcDepthPitch);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyStructureCount(ID3D11Buffer* pDstBuffer, uint dstAlignedByteOffset, ID3D11UnorderedAccessView* pSrcView) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer*, uint, ID3D11UnorderedAccessView*, void>)(LpVtbl[49]))(ptr, pDstBuffer, dstAlignedByteOffset, pSrcView);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyStructureCount(ref ID3D11Buffer pDstBuffer, uint dstAlignedByteOffset, ID3D11UnorderedAccessView* pSrcView) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer* ppDstBuffer = &pDstBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer*, uint, ID3D11UnorderedAccessView*, void>)(LpVtbl[49]))(ptr, (ID3D11Buffer*)ppDstBuffer, dstAlignedByteOffset, pSrcView);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyStructureCount(ComPtr<ID3D11Buffer> pDstBuffer, uint dstAlignedByteOffset, ID3D11UnorderedAccessView* pSrcView) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer*, uint, ID3D11UnorderedAccessView*, void>)(LpVtbl[49]))(ptr, (ID3D11Buffer*)pDstBuffer.Handle, dstAlignedByteOffset, pSrcView);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyStructureCount(ID3D11Buffer* pDstBuffer, uint dstAlignedByteOffset, ref ID3D11UnorderedAccessView pSrcView) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11UnorderedAccessView* ppSrcView = &pSrcView)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer*, uint, ID3D11UnorderedAccessView*, void>)(LpVtbl[49]))(ptr, pDstBuffer, dstAlignedByteOffset, (ID3D11UnorderedAccessView*)ppSrcView);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyStructureCount(ID3D11Buffer* pDstBuffer, uint dstAlignedByteOffset, ComPtr<ID3D11UnorderedAccessView> pSrcView) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer*, uint, ID3D11UnorderedAccessView*, void>)(LpVtbl[49]))(ptr, pDstBuffer, dstAlignedByteOffset, (ID3D11UnorderedAccessView*)pSrcView.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyStructureCount(ref ID3D11Buffer pDstBuffer, uint dstAlignedByteOffset, ref ID3D11UnorderedAccessView pSrcView) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer* ppDstBuffer = &pDstBuffer)
			{
				fixed (ID3D11UnorderedAccessView* ppSrcView = &pSrcView)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer*, uint, ID3D11UnorderedAccessView*, void>)(LpVtbl[49]))(ptr, (ID3D11Buffer*)ppDstBuffer, dstAlignedByteOffset, (ID3D11UnorderedAccessView*)ppSrcView);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyStructureCount(ComPtr<ID3D11Buffer> pDstBuffer, uint dstAlignedByteOffset, ComPtr<ID3D11UnorderedAccessView> pSrcView) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer*, uint, ID3D11UnorderedAccessView*, void>)(LpVtbl[49]))(ptr, (ID3D11Buffer*)pDstBuffer.Handle, dstAlignedByteOffset, (ID3D11UnorderedAccessView*)pSrcView.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearRenderTargetView(ID3D11RenderTargetView* pRenderTargetView, float* colorRgba) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11RenderTargetView*, float*, void>)(LpVtbl[50]))(ptr, pRenderTargetView, colorRgba);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearRenderTargetView(ref ID3D11RenderTargetView pRenderTargetView, float* colorRgba) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11RenderTargetView* ppRenderTargetView = &pRenderTargetView)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11RenderTargetView*, float*, void>)(LpVtbl[50]))(ptr, (ID3D11RenderTargetView*)ppRenderTargetView, colorRgba);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearRenderTargetView(ComPtr<ID3D11RenderTargetView> pRenderTargetView, float* colorRgba) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11RenderTargetView*, float*, void>)(LpVtbl[50]))(ptr, (ID3D11RenderTargetView*)pRenderTargetView.Handle, colorRgba);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearRenderTargetView(ID3D11RenderTargetView* pRenderTargetView, ref float colorRgba) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pcolorRgba = &colorRgba)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11RenderTargetView*, float*, void>)(LpVtbl[50]))(ptr, pRenderTargetView, (float*)pcolorRgba);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearRenderTargetView(ID3D11RenderTargetView* pRenderTargetView, ReadOnlySpan<float> colorRgba) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pcolorRgba = colorRgba)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11RenderTargetView*, float*, void>)(LpVtbl[50]))(ptr, pRenderTargetView, (float*)pcolorRgba);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearRenderTargetView(ref ID3D11RenderTargetView pRenderTargetView, ref float colorRgba) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11RenderTargetView* ppRenderTargetView = &pRenderTargetView)
			{
				fixed (float* pcolorRgba = &colorRgba)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11RenderTargetView*, float*, void>)(LpVtbl[50]))(ptr, (ID3D11RenderTargetView*)ppRenderTargetView, (float*)pcolorRgba);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearRenderTargetView(ref ID3D11RenderTargetView pRenderTargetView, ReadOnlySpan<float> colorRgba) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11RenderTargetView* ppRenderTargetView = &pRenderTargetView)
			{
				fixed (float* pcolorRgba = colorRgba)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11RenderTargetView*, float*, void>)(LpVtbl[50]))(ptr, (ID3D11RenderTargetView*)ppRenderTargetView, (float*)pcolorRgba);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearRenderTargetView(ComPtr<ID3D11RenderTargetView> pRenderTargetView, ref float colorRgba) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pcolorRgba = &colorRgba)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11RenderTargetView*, float*, void>)(LpVtbl[50]))(ptr, (ID3D11RenderTargetView*)pRenderTargetView.Handle, (float*)pcolorRgba);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewUint(ID3D11UnorderedAccessView* pUnorderedAccessView, uint* values) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11UnorderedAccessView*, uint*, void>)(LpVtbl[51]))(ptr, pUnorderedAccessView, values);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewUint(ref ID3D11UnorderedAccessView pUnorderedAccessView, uint* values) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11UnorderedAccessView* ppUnorderedAccessView = &pUnorderedAccessView)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11UnorderedAccessView*, uint*, void>)(LpVtbl[51]))(ptr, (ID3D11UnorderedAccessView*)ppUnorderedAccessView, values);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewUint(ComPtr<ID3D11UnorderedAccessView> pUnorderedAccessView, uint* values) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11UnorderedAccessView*, uint*, void>)(LpVtbl[51]))(ptr, (ID3D11UnorderedAccessView*)pUnorderedAccessView.Handle, values);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewUint(ID3D11UnorderedAccessView* pUnorderedAccessView, ref uint values) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* pvalues = &values)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11UnorderedAccessView*, uint*, void>)(LpVtbl[51]))(ptr, pUnorderedAccessView, (uint*)pvalues);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewUint(ID3D11UnorderedAccessView* pUnorderedAccessView, ReadOnlySpan<uint> values) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* pvalues = values)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11UnorderedAccessView*, uint*, void>)(LpVtbl[51]))(ptr, pUnorderedAccessView, (uint*)pvalues);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewUint(ref ID3D11UnorderedAccessView pUnorderedAccessView, ref uint values) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11UnorderedAccessView* ppUnorderedAccessView = &pUnorderedAccessView)
			{
				fixed (uint* pvalues = &values)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11UnorderedAccessView*, uint*, void>)(LpVtbl[51]))(ptr, (ID3D11UnorderedAccessView*)ppUnorderedAccessView, (uint*)pvalues);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewUint(ref ID3D11UnorderedAccessView pUnorderedAccessView, ReadOnlySpan<uint> values) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11UnorderedAccessView* ppUnorderedAccessView = &pUnorderedAccessView)
			{
				fixed (uint* pvalues = values)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11UnorderedAccessView*, uint*, void>)(LpVtbl[51]))(ptr, (ID3D11UnorderedAccessView*)ppUnorderedAccessView, (uint*)pvalues);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewUint(ComPtr<ID3D11UnorderedAccessView> pUnorderedAccessView, ref uint values) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* pvalues = &values)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11UnorderedAccessView*, uint*, void>)(LpVtbl[51]))(ptr, (ID3D11UnorderedAccessView*)pUnorderedAccessView.Handle, (uint*)pvalues);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewFloat(ID3D11UnorderedAccessView* pUnorderedAccessView, float* values) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11UnorderedAccessView*, float*, void>)(LpVtbl[52]))(ptr, pUnorderedAccessView, values);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewFloat(ref ID3D11UnorderedAccessView pUnorderedAccessView, float* values) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11UnorderedAccessView* ppUnorderedAccessView = &pUnorderedAccessView)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11UnorderedAccessView*, float*, void>)(LpVtbl[52]))(ptr, (ID3D11UnorderedAccessView*)ppUnorderedAccessView, values);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewFloat(ComPtr<ID3D11UnorderedAccessView> pUnorderedAccessView, float* values) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11UnorderedAccessView*, float*, void>)(LpVtbl[52]))(ptr, (ID3D11UnorderedAccessView*)pUnorderedAccessView.Handle, values);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewFloat(ID3D11UnorderedAccessView* pUnorderedAccessView, ref float values) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pvalues = &values)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11UnorderedAccessView*, float*, void>)(LpVtbl[52]))(ptr, pUnorderedAccessView, (float*)pvalues);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewFloat(ID3D11UnorderedAccessView* pUnorderedAccessView, ReadOnlySpan<float> values) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pvalues = values)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11UnorderedAccessView*, float*, void>)(LpVtbl[52]))(ptr, pUnorderedAccessView, (float*)pvalues);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewFloat(ref ID3D11UnorderedAccessView pUnorderedAccessView, ref float values) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11UnorderedAccessView* ppUnorderedAccessView = &pUnorderedAccessView)
			{
				fixed (float* pvalues = &values)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11UnorderedAccessView*, float*, void>)(LpVtbl[52]))(ptr, (ID3D11UnorderedAccessView*)ppUnorderedAccessView, (float*)pvalues);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewFloat(ref ID3D11UnorderedAccessView pUnorderedAccessView, ReadOnlySpan<float> values) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11UnorderedAccessView* ppUnorderedAccessView = &pUnorderedAccessView)
			{
				fixed (float* pvalues = values)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11UnorderedAccessView*, float*, void>)(LpVtbl[52]))(ptr, (ID3D11UnorderedAccessView*)ppUnorderedAccessView, (float*)pvalues);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearUnorderedAccessViewFloat(ComPtr<ID3D11UnorderedAccessView> pUnorderedAccessView, ref float values) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pvalues = &values)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11UnorderedAccessView*, float*, void>)(LpVtbl[52]))(ptr, (ID3D11UnorderedAccessView*)pUnorderedAccessView.Handle, (float*)pvalues);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearDepthStencilView(ID3D11DepthStencilView* pDepthStencilView, uint clearFlags, float depth, byte stencil) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DepthStencilView*, uint, float, byte, void>)(LpVtbl[53]))(ptr, pDepthStencilView, clearFlags, depth, stencil);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearDepthStencilView(ref ID3D11DepthStencilView pDepthStencilView, uint clearFlags, float depth, byte stencil) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11DepthStencilView* ppDepthStencilView = &pDepthStencilView)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DepthStencilView*, uint, float, byte, void>)(LpVtbl[53]))(ptr, (ID3D11DepthStencilView*)ppDepthStencilView, clearFlags, depth, stencil);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearDepthStencilView(ComPtr<ID3D11DepthStencilView> pDepthStencilView, uint clearFlags, float depth, byte stencil) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DepthStencilView*, uint, float, byte, void>)(LpVtbl[53]))(ptr, (ID3D11DepthStencilView*)pDepthStencilView.Handle, clearFlags, depth, stencil);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GenerateMips(ID3D11ShaderResourceView* pShaderResourceView) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11ShaderResourceView*, void>)(LpVtbl[54]))(ptr, pShaderResourceView);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GenerateMips(ref ID3D11ShaderResourceView pShaderResourceView) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ShaderResourceView* ppShaderResourceView = &pShaderResourceView)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11ShaderResourceView*, void>)(LpVtbl[54]))(ptr, (ID3D11ShaderResourceView*)ppShaderResourceView);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GenerateMips(ComPtr<ID3D11ShaderResourceView> pShaderResourceView) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11ShaderResourceView*, void>)(LpVtbl[54]))(ptr, (ID3D11ShaderResourceView*)pShaderResourceView.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetResourceMinLOD(ID3D11Resource* pResource, float minLod) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, float, void>)(LpVtbl[55]))(ptr, pResource, minLod);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetResourceMinLOD(ref ID3D11Resource pResource, float minLod) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, float, void>)(LpVtbl[55]))(ptr, (ID3D11Resource*)ppResource, minLod);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetResourceMinLOD(ComPtr<ID3D11Resource> pResource, float minLod) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, float, void>)(LpVtbl[55]))(ptr, (ID3D11Resource*)pResource.Handle, minLod);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe float GetResourceMinLOD(ID3D11Resource* pResource) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			float ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, float>)(LpVtbl[56]))(ptr, pResource);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe float GetResourceMinLOD(ref ID3D11Resource pResource) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				float ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, float>)(LpVtbl[56]))(ptr, (ID3D11Resource*)ppResource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe float GetResourceMinLOD(ComPtr<ID3D11Resource> pResource) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			float ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, float>)(LpVtbl[56]))(ptr, (ID3D11Resource*)pResource.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveSubresource(ID3D11Resource* pDstResource, uint dstSubresource, ID3D11Resource* pSrcResource, uint srcSubresource, Format format) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, ID3D11Resource*, uint, Format, void>)(LpVtbl[57]))(ptr, pDstResource, dstSubresource, pSrcResource, srcSubresource, format);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveSubresource(ref ID3D11Resource pDstResource, uint dstSubresource, ID3D11Resource* pSrcResource, uint srcSubresource, Format format) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDstResource = &pDstResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, ID3D11Resource*, uint, Format, void>)(LpVtbl[57]))(ptr, (ID3D11Resource*)ppDstResource, dstSubresource, pSrcResource, srcSubresource, format);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveSubresource(ComPtr<ID3D11Resource> pDstResource, uint dstSubresource, ID3D11Resource* pSrcResource, uint srcSubresource, Format format) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, ID3D11Resource*, uint, Format, void>)(LpVtbl[57]))(ptr, (ID3D11Resource*)pDstResource.Handle, dstSubresource, pSrcResource, srcSubresource, format);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveSubresource(ID3D11Resource* pDstResource, uint dstSubresource, ref ID3D11Resource pSrcResource, uint srcSubresource, Format format) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppSrcResource = &pSrcResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, ID3D11Resource*, uint, Format, void>)(LpVtbl[57]))(ptr, pDstResource, dstSubresource, (ID3D11Resource*)ppSrcResource, srcSubresource, format);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveSubresource(ID3D11Resource* pDstResource, uint dstSubresource, ComPtr<ID3D11Resource> pSrcResource, uint srcSubresource, Format format) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, ID3D11Resource*, uint, Format, void>)(LpVtbl[57]))(ptr, pDstResource, dstSubresource, (ID3D11Resource*)pSrcResource.Handle, srcSubresource, format);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveSubresource(ref ID3D11Resource pDstResource, uint dstSubresource, ref ID3D11Resource pSrcResource, uint srcSubresource, Format format) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDstResource = &pDstResource)
			{
				fixed (ID3D11Resource* ppSrcResource = &pSrcResource)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, ID3D11Resource*, uint, Format, void>)(LpVtbl[57]))(ptr, (ID3D11Resource*)ppDstResource, dstSubresource, (ID3D11Resource*)ppSrcResource, srcSubresource, format);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ResolveSubresource(ComPtr<ID3D11Resource> pDstResource, uint dstSubresource, ComPtr<ID3D11Resource> pSrcResource, uint srcSubresource, Format format) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, ID3D11Resource*, uint, Format, void>)(LpVtbl[57]))(ptr, (ID3D11Resource*)pDstResource.Handle, dstSubresource, (ID3D11Resource*)pSrcResource.Handle, srcSubresource, format);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ExecuteCommandList(ID3D11CommandList* pCommandList, Bool32 restoreContextState) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11CommandList*, Bool32, void>)(LpVtbl[58]))(ptr, pCommandList, restoreContextState);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ExecuteCommandList(ref ID3D11CommandList pCommandList, Bool32 restoreContextState) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11CommandList* ppCommandList = &pCommandList)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11CommandList*, Bool32, void>)(LpVtbl[58]))(ptr, (ID3D11CommandList*)ppCommandList, restoreContextState);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ExecuteCommandList(ComPtr<ID3D11CommandList> pCommandList, Bool32 restoreContextState) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11CommandList*, Bool32, void>)(LpVtbl[58]))(ptr, (ID3D11CommandList*)pCommandList.Handle, restoreContextState);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSSetShaderResources(uint startSlot, uint numViews, ID3D11ShaderResourceView** ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[59]))(ptr, startSlot, numViews, ppShaderResourceViews);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSSetShaderResources(uint startSlot, uint numViews, ref ID3D11ShaderResourceView* ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ShaderResourceView** pppShaderResourceViews = &ppShaderResourceViews)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[59]))(ptr, startSlot, numViews, (ID3D11ShaderResourceView**)pppShaderResourceViews);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSSetShaderResources(uint startSlot, uint numViews, ComPtr<ID3D11ShaderResourceView> ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[59]))(ptr, startSlot, numViews, (ID3D11ShaderResourceView**)ppShaderResourceViews.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSSetShader(ID3D11HullShader* pHullShader, ID3D11ClassInstance** ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11HullShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[60]))(ptr, pHullShader, ppClassInstances, numClassInstances);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSSetShader(ref ID3D11HullShader pHullShader, ID3D11ClassInstance** ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11HullShader* ppHullShader = &pHullShader)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11HullShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[60]))(ptr, (ID3D11HullShader*)ppHullShader, ppClassInstances, numClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSSetShader(ID3D11HullShader* pHullShader, ref ID3D11ClassInstance* ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11HullShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[60]))(ptr, pHullShader, (ID3D11ClassInstance**)pppClassInstances, numClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSSetShader(ID3D11HullShader* pHullShader, ComPtr<ID3D11ClassInstance> ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11HullShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[60]))(ptr, pHullShader, (ID3D11ClassInstance**)ppClassInstances.Handle, numClassInstances);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSSetShader(ref ID3D11HullShader pHullShader, ref ID3D11ClassInstance* ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11HullShader* ppHullShader = &pHullShader)
			{
				fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11HullShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[60]))(ptr, (ID3D11HullShader*)ppHullShader, (ID3D11ClassInstance**)pppClassInstances, numClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSSetShader(ref ID3D11HullShader pHullShader, ComPtr<ID3D11ClassInstance> ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11HullShader* ppHullShader = &pHullShader)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11HullShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[60]))(ptr, (ID3D11HullShader*)ppHullShader, (ID3D11ClassInstance**)ppClassInstances.Handle, numClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSSetSamplers(uint startSlot, uint numSamplers, ID3D11SamplerState** ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[61]))(ptr, startSlot, numSamplers, ppSamplers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSSetSamplers(uint startSlot, uint numSamplers, ref ID3D11SamplerState* ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11SamplerState** pppSamplers = &ppSamplers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[61]))(ptr, startSlot, numSamplers, (ID3D11SamplerState**)pppSamplers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSSetSamplers(uint startSlot, uint numSamplers, ComPtr<ID3D11SamplerState> ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[61]))(ptr, startSlot, numSamplers, (ID3D11SamplerState**)ppSamplers.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSSetConstantBuffers(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[62]))(ptr, startSlot, numBuffers, ppConstantBuffers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSSetConstantBuffers(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[62]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSSetConstantBuffers(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[62]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSSetShaderResources(uint startSlot, uint numViews, ID3D11ShaderResourceView** ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[63]))(ptr, startSlot, numViews, ppShaderResourceViews);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSSetShaderResources(uint startSlot, uint numViews, ref ID3D11ShaderResourceView* ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ShaderResourceView** pppShaderResourceViews = &ppShaderResourceViews)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[63]))(ptr, startSlot, numViews, (ID3D11ShaderResourceView**)pppShaderResourceViews);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSSetShaderResources(uint startSlot, uint numViews, ComPtr<ID3D11ShaderResourceView> ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[63]))(ptr, startSlot, numViews, (ID3D11ShaderResourceView**)ppShaderResourceViews.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSSetShader(ID3D11DomainShader* pDomainShader, ID3D11ClassInstance** ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DomainShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[64]))(ptr, pDomainShader, ppClassInstances, numClassInstances);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSSetShader(ref ID3D11DomainShader pDomainShader, ID3D11ClassInstance** ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11DomainShader* ppDomainShader = &pDomainShader)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DomainShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[64]))(ptr, (ID3D11DomainShader*)ppDomainShader, ppClassInstances, numClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSSetShader(ID3D11DomainShader* pDomainShader, ref ID3D11ClassInstance* ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DomainShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[64]))(ptr, pDomainShader, (ID3D11ClassInstance**)pppClassInstances, numClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSSetShader(ID3D11DomainShader* pDomainShader, ComPtr<ID3D11ClassInstance> ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DomainShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[64]))(ptr, pDomainShader, (ID3D11ClassInstance**)ppClassInstances.Handle, numClassInstances);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSSetShader(ref ID3D11DomainShader pDomainShader, ref ID3D11ClassInstance* ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11DomainShader* ppDomainShader = &pDomainShader)
			{
				fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DomainShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[64]))(ptr, (ID3D11DomainShader*)ppDomainShader, (ID3D11ClassInstance**)pppClassInstances, numClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSSetShader(ref ID3D11DomainShader pDomainShader, ComPtr<ID3D11ClassInstance> ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11DomainShader* ppDomainShader = &pDomainShader)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DomainShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[64]))(ptr, (ID3D11DomainShader*)ppDomainShader, (ID3D11ClassInstance**)ppClassInstances.Handle, numClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSSetSamplers(uint startSlot, uint numSamplers, ID3D11SamplerState** ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[65]))(ptr, startSlot, numSamplers, ppSamplers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSSetSamplers(uint startSlot, uint numSamplers, ref ID3D11SamplerState* ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11SamplerState** pppSamplers = &ppSamplers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[65]))(ptr, startSlot, numSamplers, (ID3D11SamplerState**)pppSamplers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSSetSamplers(uint startSlot, uint numSamplers, ComPtr<ID3D11SamplerState> ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[65]))(ptr, startSlot, numSamplers, (ID3D11SamplerState**)ppSamplers.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSSetConstantBuffers(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[66]))(ptr, startSlot, numBuffers, ppConstantBuffers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSSetConstantBuffers(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[66]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSSetConstantBuffers(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[66]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetShaderResources(uint startSlot, uint numViews, ID3D11ShaderResourceView** ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[67]))(ptr, startSlot, numViews, ppShaderResourceViews);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetShaderResources(uint startSlot, uint numViews, ref ID3D11ShaderResourceView* ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ShaderResourceView** pppShaderResourceViews = &ppShaderResourceViews)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[67]))(ptr, startSlot, numViews, (ID3D11ShaderResourceView**)pppShaderResourceViews);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetShaderResources(uint startSlot, uint numViews, ComPtr<ID3D11ShaderResourceView> ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[67]))(ptr, startSlot, numViews, (ID3D11ShaderResourceView**)ppShaderResourceViews.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetUnorderedAccessViews(uint startSlot, uint numUaVs, ID3D11UnorderedAccessView** ppUnorderedAccessViews, uint* pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[68]))(ptr, startSlot, numUaVs, ppUnorderedAccessViews, pUAVInitialCounts);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetUnorderedAccessViews(uint startSlot, uint numUaVs, ref ID3D11UnorderedAccessView* ppUnorderedAccessViews, uint* pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11UnorderedAccessView** pppUnorderedAccessViews = &ppUnorderedAccessViews)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[68]))(ptr, startSlot, numUaVs, (ID3D11UnorderedAccessView**)pppUnorderedAccessViews, pUAVInitialCounts);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetUnorderedAccessViews(uint startSlot, uint numUaVs, ComPtr<ID3D11UnorderedAccessView> ppUnorderedAccessViews, uint* pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[68]))(ptr, startSlot, numUaVs, (ID3D11UnorderedAccessView**)ppUnorderedAccessViews.Handle, pUAVInitialCounts);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetUnorderedAccessViews(uint startSlot, uint numUaVs, ID3D11UnorderedAccessView** ppUnorderedAccessViews, ref uint pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppUAVInitialCounts = &pUAVInitialCounts)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[68]))(ptr, startSlot, numUaVs, ppUnorderedAccessViews, (uint*)ppUAVInitialCounts);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetUnorderedAccessViews(uint startSlot, uint numUaVs, ref ID3D11UnorderedAccessView* ppUnorderedAccessViews, ref uint pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11UnorderedAccessView** pppUnorderedAccessViews = &ppUnorderedAccessViews)
			{
				fixed (uint* ppUAVInitialCounts = &pUAVInitialCounts)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[68]))(ptr, startSlot, numUaVs, (ID3D11UnorderedAccessView**)pppUnorderedAccessViews, (uint*)ppUAVInitialCounts);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetUnorderedAccessViews(uint startSlot, uint numUaVs, ComPtr<ID3D11UnorderedAccessView> ppUnorderedAccessViews, ref uint pUAVInitialCounts) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppUAVInitialCounts = &pUAVInitialCounts)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11UnorderedAccessView**, uint*, void>)(LpVtbl[68]))(ptr, startSlot, numUaVs, (ID3D11UnorderedAccessView**)ppUnorderedAccessViews.Handle, (uint*)ppUAVInitialCounts);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetShader(ID3D11ComputeShader* pComputeShader, ID3D11ClassInstance** ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11ComputeShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[69]))(ptr, pComputeShader, ppClassInstances, numClassInstances);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetShader(ref ID3D11ComputeShader pComputeShader, ID3D11ClassInstance** ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ComputeShader* ppComputeShader = &pComputeShader)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11ComputeShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[69]))(ptr, (ID3D11ComputeShader*)ppComputeShader, ppClassInstances, numClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetShader(ID3D11ComputeShader* pComputeShader, ref ID3D11ClassInstance* ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11ComputeShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[69]))(ptr, pComputeShader, (ID3D11ClassInstance**)pppClassInstances, numClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetShader(ID3D11ComputeShader* pComputeShader, ComPtr<ID3D11ClassInstance> ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11ComputeShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[69]))(ptr, pComputeShader, (ID3D11ClassInstance**)ppClassInstances.Handle, numClassInstances);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetShader(ref ID3D11ComputeShader pComputeShader, ref ID3D11ClassInstance* ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ComputeShader* ppComputeShader = &pComputeShader)
			{
				fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11ComputeShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[69]))(ptr, (ID3D11ComputeShader*)ppComputeShader, (ID3D11ClassInstance**)pppClassInstances, numClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetShader(ref ID3D11ComputeShader pComputeShader, ComPtr<ID3D11ClassInstance> ppClassInstances, uint numClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ComputeShader* ppComputeShader = &pComputeShader)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11ComputeShader*, ID3D11ClassInstance**, uint, void>)(LpVtbl[69]))(ptr, (ID3D11ComputeShader*)ppComputeShader, (ID3D11ClassInstance**)ppClassInstances.Handle, numClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetSamplers(uint startSlot, uint numSamplers, ID3D11SamplerState** ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[70]))(ptr, startSlot, numSamplers, ppSamplers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetSamplers(uint startSlot, uint numSamplers, ref ID3D11SamplerState* ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11SamplerState** pppSamplers = &ppSamplers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[70]))(ptr, startSlot, numSamplers, (ID3D11SamplerState**)pppSamplers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetSamplers(uint startSlot, uint numSamplers, ComPtr<ID3D11SamplerState> ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[70]))(ptr, startSlot, numSamplers, (ID3D11SamplerState**)ppSamplers.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetConstantBuffers(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[71]))(ptr, startSlot, numBuffers, ppConstantBuffers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetConstantBuffers(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[71]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetConstantBuffers(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[71]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetConstantBuffers(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[72]))(ptr, startSlot, numBuffers, ppConstantBuffers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetConstantBuffers(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[72]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetConstantBuffers(uint startSlot, uint numBuffers, out ComPtr<ID3D11Buffer> ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppConstantBuffers = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[72]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetShaderResources(uint startSlot, uint numViews, ID3D11ShaderResourceView** ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[73]))(ptr, startSlot, numViews, ppShaderResourceViews);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetShaderResources(uint startSlot, uint numViews, ref ID3D11ShaderResourceView* ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ShaderResourceView** pppShaderResourceViews = &ppShaderResourceViews)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[73]))(ptr, startSlot, numViews, (ID3D11ShaderResourceView**)pppShaderResourceViews);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetShaderResources(uint startSlot, uint numViews, out ComPtr<ID3D11ShaderResourceView> ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppShaderResourceViews = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[73]))(ptr, startSlot, numViews, (ID3D11ShaderResourceView**)ppShaderResourceViews.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetShader(ID3D11PixelShader** ppPixelShader, ID3D11ClassInstance** ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11PixelShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[74]))(ptr, ppPixelShader, ppClassInstances, pNumClassInstances);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetShader(ref ID3D11PixelShader* ppPixelShader, ID3D11ClassInstance** ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11PixelShader** pppPixelShader = &ppPixelShader)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11PixelShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[74]))(ptr, (ID3D11PixelShader**)pppPixelShader, ppClassInstances, pNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetShader(ID3D11PixelShader** ppPixelShader, ref ID3D11ClassInstance* ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11PixelShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[74]))(ptr, ppPixelShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetShader(ID3D11PixelShader** ppPixelShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11PixelShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[74]))(ptr, ppPixelShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetShader(ref ID3D11PixelShader* ppPixelShader, ref ID3D11ClassInstance* ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11PixelShader** pppPixelShader = &ppPixelShader)
			{
				fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11PixelShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[74]))(ptr, (ID3D11PixelShader**)pppPixelShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetShader(ref ID3D11PixelShader* ppPixelShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11PixelShader** pppPixelShader = &ppPixelShader)
			{
				fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11PixelShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[74]))(ptr, (ID3D11PixelShader**)pppPixelShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetShader(ID3D11PixelShader** ppPixelShader, ID3D11ClassInstance** ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumClassInstances = &pNumClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11PixelShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[74]))(ptr, ppPixelShader, ppClassInstances, (uint*)ppNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetShader(ref ID3D11PixelShader* ppPixelShader, ID3D11ClassInstance** ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11PixelShader** pppPixelShader = &ppPixelShader)
			{
				fixed (uint* ppNumClassInstances = &pNumClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11PixelShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[74]))(ptr, (ID3D11PixelShader**)pppPixelShader, ppClassInstances, (uint*)ppNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetShader(ID3D11PixelShader** ppPixelShader, ref ID3D11ClassInstance* ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
			{
				fixed (uint* ppNumClassInstances = &pNumClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11PixelShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[74]))(ptr, ppPixelShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetShader(ID3D11PixelShader** ppPixelShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
			{
				fixed (uint* ppNumClassInstances = &pNumClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11PixelShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[74]))(ptr, ppPixelShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetShader(ref ID3D11PixelShader* ppPixelShader, ref ID3D11ClassInstance* ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11PixelShader** pppPixelShader = &ppPixelShader)
			{
				fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
				{
					fixed (uint* ppNumClassInstances = &pNumClassInstances)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11PixelShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[74]))(ptr, (ID3D11PixelShader**)pppPixelShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetShader(ref ID3D11PixelShader* ppPixelShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11PixelShader** pppPixelShader = &ppPixelShader)
			{
				fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
				{
					fixed (uint* ppNumClassInstances = &pNumClassInstances)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11PixelShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[74]))(ptr, (ID3D11PixelShader**)pppPixelShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetSamplers(uint startSlot, uint numSamplers, ID3D11SamplerState** ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[75]))(ptr, startSlot, numSamplers, ppSamplers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetSamplers(uint startSlot, uint numSamplers, ref ID3D11SamplerState* ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11SamplerState** pppSamplers = &ppSamplers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[75]))(ptr, startSlot, numSamplers, (ID3D11SamplerState**)pppSamplers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetSamplers(uint startSlot, uint numSamplers, out ComPtr<ID3D11SamplerState> ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSamplers = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[75]))(ptr, startSlot, numSamplers, (ID3D11SamplerState**)ppSamplers.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetShader(ID3D11VertexShader** ppVertexShader, ID3D11ClassInstance** ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11VertexShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[76]))(ptr, ppVertexShader, ppClassInstances, pNumClassInstances);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetShader(ref ID3D11VertexShader* ppVertexShader, ID3D11ClassInstance** ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VertexShader** pppVertexShader = &ppVertexShader)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11VertexShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[76]))(ptr, (ID3D11VertexShader**)pppVertexShader, ppClassInstances, pNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetShader(ID3D11VertexShader** ppVertexShader, ref ID3D11ClassInstance* ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11VertexShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[76]))(ptr, ppVertexShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetShader(ID3D11VertexShader** ppVertexShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11VertexShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[76]))(ptr, ppVertexShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetShader(ref ID3D11VertexShader* ppVertexShader, ref ID3D11ClassInstance* ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VertexShader** pppVertexShader = &ppVertexShader)
			{
				fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11VertexShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[76]))(ptr, (ID3D11VertexShader**)pppVertexShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetShader(ref ID3D11VertexShader* ppVertexShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VertexShader** pppVertexShader = &ppVertexShader)
			{
				fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11VertexShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[76]))(ptr, (ID3D11VertexShader**)pppVertexShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetShader(ID3D11VertexShader** ppVertexShader, ID3D11ClassInstance** ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumClassInstances = &pNumClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11VertexShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[76]))(ptr, ppVertexShader, ppClassInstances, (uint*)ppNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetShader(ref ID3D11VertexShader* ppVertexShader, ID3D11ClassInstance** ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VertexShader** pppVertexShader = &ppVertexShader)
			{
				fixed (uint* ppNumClassInstances = &pNumClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11VertexShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[76]))(ptr, (ID3D11VertexShader**)pppVertexShader, ppClassInstances, (uint*)ppNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetShader(ID3D11VertexShader** ppVertexShader, ref ID3D11ClassInstance* ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
			{
				fixed (uint* ppNumClassInstances = &pNumClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11VertexShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[76]))(ptr, ppVertexShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetShader(ID3D11VertexShader** ppVertexShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
			{
				fixed (uint* ppNumClassInstances = &pNumClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11VertexShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[76]))(ptr, ppVertexShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetShader(ref ID3D11VertexShader* ppVertexShader, ref ID3D11ClassInstance* ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VertexShader** pppVertexShader = &ppVertexShader)
			{
				fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
				{
					fixed (uint* ppNumClassInstances = &pNumClassInstances)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11VertexShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[76]))(ptr, (ID3D11VertexShader**)pppVertexShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetShader(ref ID3D11VertexShader* ppVertexShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11VertexShader** pppVertexShader = &ppVertexShader)
			{
				fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
				{
					fixed (uint* ppNumClassInstances = &pNumClassInstances)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11VertexShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[76]))(ptr, (ID3D11VertexShader**)pppVertexShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetConstantBuffers(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[77]))(ptr, startSlot, numBuffers, ppConstantBuffers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetConstantBuffers(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[77]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetConstantBuffers(uint startSlot, uint numBuffers, out ComPtr<ID3D11Buffer> ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppConstantBuffers = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[77]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IAGetInputLayout(ID3D11InputLayout** ppInputLayout) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11InputLayout**, void>)(LpVtbl[78]))(ptr, ppInputLayout);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IAGetInputLayout(ref ID3D11InputLayout* ppInputLayout) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11InputLayout** pppInputLayout = &ppInputLayout)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11InputLayout**, void>)(LpVtbl[78]))(ptr, (ID3D11InputLayout**)pppInputLayout);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IAGetVertexBuffers(uint startSlot, uint numBuffers, ID3D11Buffer** ppVertexBuffers, uint* pStrides, uint* pOffsets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[79]))(ptr, startSlot, numBuffers, ppVertexBuffers, pStrides, pOffsets);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IAGetVertexBuffers(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppVertexBuffers, uint* pStrides, uint* pOffsets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppVertexBuffers = &ppVertexBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[79]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppVertexBuffers, pStrides, pOffsets);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IAGetVertexBuffers(uint startSlot, uint numBuffers, ref ComPtr<ID3D11Buffer> ppVertexBuffers, uint* pStrides, uint* pOffsets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* pppVertexBuffers = &ppVertexBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[79]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppVertexBuffers, pStrides, pOffsets);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IAGetVertexBuffers(uint startSlot, uint numBuffers, ID3D11Buffer** ppVertexBuffers, ref uint pStrides, uint* pOffsets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppStrides = &pStrides)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[79]))(ptr, startSlot, numBuffers, ppVertexBuffers, (uint*)ppStrides, pOffsets);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IAGetVertexBuffers(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppVertexBuffers, ref uint pStrides, uint* pOffsets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppVertexBuffers = &ppVertexBuffers)
			{
				fixed (uint* ppStrides = &pStrides)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[79]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppVertexBuffers, (uint*)ppStrides, pOffsets);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IAGetVertexBuffers(uint startSlot, uint numBuffers, ref ComPtr<ID3D11Buffer> ppVertexBuffers, ref uint pStrides, uint* pOffsets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* pppVertexBuffers = &ppVertexBuffers)
			{
				fixed (uint* ppStrides = &pStrides)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[79]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppVertexBuffers, (uint*)ppStrides, pOffsets);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IAGetVertexBuffers(uint startSlot, uint numBuffers, ID3D11Buffer** ppVertexBuffers, uint* pStrides, ref uint pOffsets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppOffsets = &pOffsets)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[79]))(ptr, startSlot, numBuffers, ppVertexBuffers, pStrides, (uint*)ppOffsets);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IAGetVertexBuffers(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppVertexBuffers, uint* pStrides, ref uint pOffsets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppVertexBuffers = &ppVertexBuffers)
			{
				fixed (uint* ppOffsets = &pOffsets)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[79]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppVertexBuffers, pStrides, (uint*)ppOffsets);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IAGetVertexBuffers(uint startSlot, uint numBuffers, ref ComPtr<ID3D11Buffer> ppVertexBuffers, uint* pStrides, ref uint pOffsets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* pppVertexBuffers = &ppVertexBuffers)
			{
				fixed (uint* ppOffsets = &pOffsets)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[79]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppVertexBuffers, pStrides, (uint*)ppOffsets);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IAGetVertexBuffers(uint startSlot, uint numBuffers, ID3D11Buffer** ppVertexBuffers, ref uint pStrides, ref uint pOffsets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppStrides = &pStrides)
			{
				fixed (uint* ppOffsets = &pOffsets)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[79]))(ptr, startSlot, numBuffers, ppVertexBuffers, (uint*)ppStrides, (uint*)ppOffsets);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IAGetVertexBuffers(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppVertexBuffers, ref uint pStrides, ref uint pOffsets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppVertexBuffers = &ppVertexBuffers)
			{
				fixed (uint* ppStrides = &pStrides)
				{
					fixed (uint* ppOffsets = &pOffsets)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[79]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppVertexBuffers, (uint*)ppStrides, (uint*)ppOffsets);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IAGetVertexBuffers(uint startSlot, uint numBuffers, ref ComPtr<ID3D11Buffer> ppVertexBuffers, ref uint pStrides, ref uint pOffsets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* pppVertexBuffers = &ppVertexBuffers)
			{
				fixed (uint* ppStrides = &pStrides)
				{
					fixed (uint* ppOffsets = &pOffsets)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[79]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppVertexBuffers, (uint*)ppStrides, (uint*)ppOffsets);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IAGetIndexBuffer(ID3D11Buffer** pIndexBuffer, Format* format, uint* offset) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer**, Format*, uint*, void>)(LpVtbl[80]))(ptr, pIndexBuffer, format, offset);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IAGetIndexBuffer(ref ID3D11Buffer* pIndexBuffer, Format* format, uint* offset) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** ppIndexBuffer = &pIndexBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer**, Format*, uint*, void>)(LpVtbl[80]))(ptr, (ID3D11Buffer**)ppIndexBuffer, format, offset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IAGetIndexBuffer(ref ComPtr<ID3D11Buffer> pIndexBuffer, Format* format, uint* offset) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* ppIndexBuffer = &pIndexBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer**, Format*, uint*, void>)(LpVtbl[80]))(ptr, (ID3D11Buffer**)ppIndexBuffer, format, offset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IAGetIndexBuffer(ID3D11Buffer** pIndexBuffer, ref Format format, uint* offset) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Format* pformat = &format)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer**, Format*, uint*, void>)(LpVtbl[80]))(ptr, pIndexBuffer, (Format*)pformat, offset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IAGetIndexBuffer(ref ID3D11Buffer* pIndexBuffer, ref Format format, uint* offset) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** ppIndexBuffer = &pIndexBuffer)
			{
				fixed (Format* pformat = &format)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer**, Format*, uint*, void>)(LpVtbl[80]))(ptr, (ID3D11Buffer**)ppIndexBuffer, (Format*)pformat, offset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IAGetIndexBuffer(ref ComPtr<ID3D11Buffer> pIndexBuffer, ref Format format, uint* offset) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* ppIndexBuffer = &pIndexBuffer)
			{
				fixed (Format* pformat = &format)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer**, Format*, uint*, void>)(LpVtbl[80]))(ptr, (ID3D11Buffer**)ppIndexBuffer, (Format*)pformat, offset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IAGetIndexBuffer(ID3D11Buffer** pIndexBuffer, Format* format, ref uint offset) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* poffset = &offset)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer**, Format*, uint*, void>)(LpVtbl[80]))(ptr, pIndexBuffer, format, (uint*)poffset);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IAGetIndexBuffer(ref ID3D11Buffer* pIndexBuffer, Format* format, ref uint offset) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** ppIndexBuffer = &pIndexBuffer)
			{
				fixed (uint* poffset = &offset)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer**, Format*, uint*, void>)(LpVtbl[80]))(ptr, (ID3D11Buffer**)ppIndexBuffer, format, (uint*)poffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IAGetIndexBuffer(ref ComPtr<ID3D11Buffer> pIndexBuffer, Format* format, ref uint offset) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* ppIndexBuffer = &pIndexBuffer)
			{
				fixed (uint* poffset = &offset)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer**, Format*, uint*, void>)(LpVtbl[80]))(ptr, (ID3D11Buffer**)ppIndexBuffer, format, (uint*)poffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IAGetIndexBuffer(ID3D11Buffer** pIndexBuffer, ref Format format, ref uint offset) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Format* pformat = &format)
			{
				fixed (uint* poffset = &offset)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer**, Format*, uint*, void>)(LpVtbl[80]))(ptr, pIndexBuffer, (Format*)pformat, (uint*)poffset);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IAGetIndexBuffer(ref ID3D11Buffer* pIndexBuffer, ref Format format, ref uint offset) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** ppIndexBuffer = &pIndexBuffer)
			{
				fixed (Format* pformat = &format)
				{
					fixed (uint* poffset = &offset)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer**, Format*, uint*, void>)(LpVtbl[80]))(ptr, (ID3D11Buffer**)ppIndexBuffer, (Format*)pformat, (uint*)poffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IAGetIndexBuffer(ref ComPtr<ID3D11Buffer> pIndexBuffer, ref Format format, ref uint offset) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* ppIndexBuffer = &pIndexBuffer)
			{
				fixed (Format* pformat = &format)
				{
					fixed (uint* poffset = &offset)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer**, Format*, uint*, void>)(LpVtbl[80]))(ptr, (ID3D11Buffer**)ppIndexBuffer, (Format*)pformat, (uint*)poffset);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetConstantBuffers(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[81]))(ptr, startSlot, numBuffers, ppConstantBuffers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetConstantBuffers(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[81]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetConstantBuffers(uint startSlot, uint numBuffers, out ComPtr<ID3D11Buffer> ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppConstantBuffers = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[81]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetShader(ID3D11GeometryShader** ppGeometryShader, ID3D11ClassInstance** ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11GeometryShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[82]))(ptr, ppGeometryShader, ppClassInstances, pNumClassInstances);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetShader(ref ID3D11GeometryShader* ppGeometryShader, ID3D11ClassInstance** ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11GeometryShader** pppGeometryShader = &ppGeometryShader)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11GeometryShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[82]))(ptr, (ID3D11GeometryShader**)pppGeometryShader, ppClassInstances, pNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetShader(ID3D11GeometryShader** ppGeometryShader, ref ID3D11ClassInstance* ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11GeometryShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[82]))(ptr, ppGeometryShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetShader(ID3D11GeometryShader** ppGeometryShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11GeometryShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[82]))(ptr, ppGeometryShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetShader(ref ID3D11GeometryShader* ppGeometryShader, ref ID3D11ClassInstance* ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11GeometryShader** pppGeometryShader = &ppGeometryShader)
			{
				fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11GeometryShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[82]))(ptr, (ID3D11GeometryShader**)pppGeometryShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetShader(ref ID3D11GeometryShader* ppGeometryShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11GeometryShader** pppGeometryShader = &ppGeometryShader)
			{
				fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11GeometryShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[82]))(ptr, (ID3D11GeometryShader**)pppGeometryShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetShader(ID3D11GeometryShader** ppGeometryShader, ID3D11ClassInstance** ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumClassInstances = &pNumClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11GeometryShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[82]))(ptr, ppGeometryShader, ppClassInstances, (uint*)ppNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetShader(ref ID3D11GeometryShader* ppGeometryShader, ID3D11ClassInstance** ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11GeometryShader** pppGeometryShader = &ppGeometryShader)
			{
				fixed (uint* ppNumClassInstances = &pNumClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11GeometryShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[82]))(ptr, (ID3D11GeometryShader**)pppGeometryShader, ppClassInstances, (uint*)ppNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetShader(ID3D11GeometryShader** ppGeometryShader, ref ID3D11ClassInstance* ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
			{
				fixed (uint* ppNumClassInstances = &pNumClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11GeometryShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[82]))(ptr, ppGeometryShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetShader(ID3D11GeometryShader** ppGeometryShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
			{
				fixed (uint* ppNumClassInstances = &pNumClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11GeometryShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[82]))(ptr, ppGeometryShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetShader(ref ID3D11GeometryShader* ppGeometryShader, ref ID3D11ClassInstance* ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11GeometryShader** pppGeometryShader = &ppGeometryShader)
			{
				fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
				{
					fixed (uint* ppNumClassInstances = &pNumClassInstances)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11GeometryShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[82]))(ptr, (ID3D11GeometryShader**)pppGeometryShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetShader(ref ID3D11GeometryShader* ppGeometryShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11GeometryShader** pppGeometryShader = &ppGeometryShader)
			{
				fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
				{
					fixed (uint* ppNumClassInstances = &pNumClassInstances)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11GeometryShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[82]))(ptr, (ID3D11GeometryShader**)pppGeometryShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IAGetPrimitiveTopology(PrimitiveTopology* pTopology) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, PrimitiveTopology*, void>)(LpVtbl[83]))(ptr, pTopology);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void IAGetPrimitiveTopology(ref PrimitiveTopology pTopology) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (PrimitiveTopology* ppTopology = &pTopology)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, PrimitiveTopology*, void>)(LpVtbl[83]))(ptr, (PrimitiveTopology*)ppTopology);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetShaderResources(uint startSlot, uint numViews, ID3D11ShaderResourceView** ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[84]))(ptr, startSlot, numViews, ppShaderResourceViews);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetShaderResources(uint startSlot, uint numViews, ref ID3D11ShaderResourceView* ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ShaderResourceView** pppShaderResourceViews = &ppShaderResourceViews)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[84]))(ptr, startSlot, numViews, (ID3D11ShaderResourceView**)pppShaderResourceViews);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetShaderResources(uint startSlot, uint numViews, out ComPtr<ID3D11ShaderResourceView> ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppShaderResourceViews = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[84]))(ptr, startSlot, numViews, (ID3D11ShaderResourceView**)ppShaderResourceViews.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetSamplers(uint startSlot, uint numSamplers, ID3D11SamplerState** ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[85]))(ptr, startSlot, numSamplers, ppSamplers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetSamplers(uint startSlot, uint numSamplers, ref ID3D11SamplerState* ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11SamplerState** pppSamplers = &ppSamplers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[85]))(ptr, startSlot, numSamplers, (ID3D11SamplerState**)pppSamplers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetSamplers(uint startSlot, uint numSamplers, out ComPtr<ID3D11SamplerState> ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSamplers = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[85]))(ptr, startSlot, numSamplers, (ID3D11SamplerState**)ppSamplers.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetPredication(ID3D11Predicate** ppPredicate, Bool32* pPredicateValue) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Predicate**, Bool32*, void>)(LpVtbl[86]))(ptr, ppPredicate, pPredicateValue);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetPredication(ref ID3D11Predicate* ppPredicate, Bool32* pPredicateValue) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Predicate** pppPredicate = &ppPredicate)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Predicate**, Bool32*, void>)(LpVtbl[86]))(ptr, (ID3D11Predicate**)pppPredicate, pPredicateValue);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetPredication(ID3D11Predicate** ppPredicate, ref Bool32 pPredicateValue) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppPredicateValue = &pPredicateValue)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Predicate**, Bool32*, void>)(LpVtbl[86]))(ptr, ppPredicate, (Bool32*)ppPredicateValue);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetPredication(ref ID3D11Predicate* ppPredicate, ref Bool32 pPredicateValue) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Predicate** pppPredicate = &ppPredicate)
			{
				fixed (Bool32* ppPredicateValue = &pPredicateValue)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Predicate**, Bool32*, void>)(LpVtbl[86]))(ptr, (ID3D11Predicate**)pppPredicate, (Bool32*)ppPredicateValue);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetShaderResources(uint startSlot, uint numViews, ID3D11ShaderResourceView** ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[87]))(ptr, startSlot, numViews, ppShaderResourceViews);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetShaderResources(uint startSlot, uint numViews, ref ID3D11ShaderResourceView* ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ShaderResourceView** pppShaderResourceViews = &ppShaderResourceViews)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[87]))(ptr, startSlot, numViews, (ID3D11ShaderResourceView**)pppShaderResourceViews);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetShaderResources(uint startSlot, uint numViews, out ComPtr<ID3D11ShaderResourceView> ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppShaderResourceViews = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[87]))(ptr, startSlot, numViews, (ID3D11ShaderResourceView**)ppShaderResourceViews.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetSamplers(uint startSlot, uint numSamplers, ID3D11SamplerState** ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[88]))(ptr, startSlot, numSamplers, ppSamplers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetSamplers(uint startSlot, uint numSamplers, ref ID3D11SamplerState* ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11SamplerState** pppSamplers = &ppSamplers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[88]))(ptr, startSlot, numSamplers, (ID3D11SamplerState**)pppSamplers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetSamplers(uint startSlot, uint numSamplers, out ComPtr<ID3D11SamplerState> ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSamplers = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[88]))(ptr, startSlot, numSamplers, (ID3D11SamplerState**)ppSamplers.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetRenderTargets(uint numViews, ID3D11RenderTargetView** ppRenderTargetViews, ID3D11DepthStencilView** ppDepthStencilView) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView**, void>)(LpVtbl[89]))(ptr, numViews, ppRenderTargetViews, ppDepthStencilView);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetRenderTargets(uint numViews, ref ID3D11RenderTargetView* ppRenderTargetViews, ID3D11DepthStencilView** ppDepthStencilView) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11RenderTargetView** pppRenderTargetViews = &ppRenderTargetViews)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView**, void>)(LpVtbl[89]))(ptr, numViews, (ID3D11RenderTargetView**)pppRenderTargetViews, ppDepthStencilView);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetRenderTargets(uint numViews, ref ComPtr<ID3D11RenderTargetView> ppRenderTargetViews, ID3D11DepthStencilView** ppDepthStencilView) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11RenderTargetView>* pppRenderTargetViews = &ppRenderTargetViews)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView**, void>)(LpVtbl[89]))(ptr, numViews, (ID3D11RenderTargetView**)pppRenderTargetViews, ppDepthStencilView);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetRenderTargets(uint numViews, ID3D11RenderTargetView** ppRenderTargetViews, ref ID3D11DepthStencilView* ppDepthStencilView) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11DepthStencilView** pppDepthStencilView = &ppDepthStencilView)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView**, void>)(LpVtbl[89]))(ptr, numViews, ppRenderTargetViews, (ID3D11DepthStencilView**)pppDepthStencilView);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetRenderTargets(uint numViews, ID3D11RenderTargetView** ppRenderTargetViews, out ComPtr<ID3D11DepthStencilView> ppDepthStencilView) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppDepthStencilView = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView**, void>)(LpVtbl[89]))(ptr, numViews, ppRenderTargetViews, (ID3D11DepthStencilView**)ppDepthStencilView.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetRenderTargets(uint numViews, ref ID3D11RenderTargetView* ppRenderTargetViews, ref ID3D11DepthStencilView* ppDepthStencilView) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11RenderTargetView** pppRenderTargetViews = &ppRenderTargetViews)
			{
				fixed (ID3D11DepthStencilView** pppDepthStencilView = &ppDepthStencilView)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView**, void>)(LpVtbl[89]))(ptr, numViews, (ID3D11RenderTargetView**)pppRenderTargetViews, (ID3D11DepthStencilView**)pppDepthStencilView);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetRenderTargets(uint numViews, ref ComPtr<ID3D11RenderTargetView> ppRenderTargetViews, out ComPtr<ID3D11DepthStencilView> ppDepthStencilView) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11RenderTargetView>* pppRenderTargetViews = &ppRenderTargetViews)
			{
				ppDepthStencilView = default;
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView**, void>)(LpVtbl[89]))(ptr, numViews, (ID3D11RenderTargetView**)pppRenderTargetViews, (ID3D11DepthStencilView**)ppDepthStencilView.GetAddressOf());
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ID3D11RenderTargetView** ppRenderTargetViews, ID3D11DepthStencilView** ppDepthStencilView, uint uavStartSlot, uint numUaVs, ID3D11UnorderedAccessView** ppUnorderedAccessViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView**, uint, uint, ID3D11UnorderedAccessView**, void>)(LpVtbl[90]))(ptr, numRtVs, ppRenderTargetViews, ppDepthStencilView, uavStartSlot, numUaVs, ppUnorderedAccessViews);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ref ID3D11RenderTargetView* ppRenderTargetViews, ID3D11DepthStencilView** ppDepthStencilView, uint uavStartSlot, uint numUaVs, ID3D11UnorderedAccessView** ppUnorderedAccessViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11RenderTargetView** pppRenderTargetViews = &ppRenderTargetViews)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView**, uint, uint, ID3D11UnorderedAccessView**, void>)(LpVtbl[90]))(ptr, numRtVs, (ID3D11RenderTargetView**)pppRenderTargetViews, ppDepthStencilView, uavStartSlot, numUaVs, ppUnorderedAccessViews);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ref ComPtr<ID3D11RenderTargetView> ppRenderTargetViews, ID3D11DepthStencilView** ppDepthStencilView, uint uavStartSlot, uint numUaVs, ID3D11UnorderedAccessView** ppUnorderedAccessViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11RenderTargetView>* pppRenderTargetViews = &ppRenderTargetViews)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView**, uint, uint, ID3D11UnorderedAccessView**, void>)(LpVtbl[90]))(ptr, numRtVs, (ID3D11RenderTargetView**)pppRenderTargetViews, ppDepthStencilView, uavStartSlot, numUaVs, ppUnorderedAccessViews);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ID3D11RenderTargetView** ppRenderTargetViews, ref ID3D11DepthStencilView* ppDepthStencilView, uint uavStartSlot, uint numUaVs, ID3D11UnorderedAccessView** ppUnorderedAccessViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11DepthStencilView** pppDepthStencilView = &ppDepthStencilView)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView**, uint, uint, ID3D11UnorderedAccessView**, void>)(LpVtbl[90]))(ptr, numRtVs, ppRenderTargetViews, (ID3D11DepthStencilView**)pppDepthStencilView, uavStartSlot, numUaVs, ppUnorderedAccessViews);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ID3D11RenderTargetView** ppRenderTargetViews, ref ComPtr<ID3D11DepthStencilView> ppDepthStencilView, uint uavStartSlot, uint numUaVs, ID3D11UnorderedAccessView** ppUnorderedAccessViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11DepthStencilView>* pppDepthStencilView = &ppDepthStencilView)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView**, uint, uint, ID3D11UnorderedAccessView**, void>)(LpVtbl[90]))(ptr, numRtVs, ppRenderTargetViews, (ID3D11DepthStencilView**)pppDepthStencilView, uavStartSlot, numUaVs, ppUnorderedAccessViews);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ref ID3D11RenderTargetView* ppRenderTargetViews, ref ID3D11DepthStencilView* ppDepthStencilView, uint uavStartSlot, uint numUaVs, ID3D11UnorderedAccessView** ppUnorderedAccessViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11RenderTargetView** pppRenderTargetViews = &ppRenderTargetViews)
			{
				fixed (ID3D11DepthStencilView** pppDepthStencilView = &ppDepthStencilView)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView**, uint, uint, ID3D11UnorderedAccessView**, void>)(LpVtbl[90]))(ptr, numRtVs, (ID3D11RenderTargetView**)pppRenderTargetViews, (ID3D11DepthStencilView**)pppDepthStencilView, uavStartSlot, numUaVs, ppUnorderedAccessViews);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ref ComPtr<ID3D11RenderTargetView> ppRenderTargetViews, ref ComPtr<ID3D11DepthStencilView> ppDepthStencilView, uint uavStartSlot, uint numUaVs, ID3D11UnorderedAccessView** ppUnorderedAccessViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11RenderTargetView>* pppRenderTargetViews = &ppRenderTargetViews)
			{
				fixed (ComPtr<ID3D11DepthStencilView>* pppDepthStencilView = &ppDepthStencilView)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView**, uint, uint, ID3D11UnorderedAccessView**, void>)(LpVtbl[90]))(ptr, numRtVs, (ID3D11RenderTargetView**)pppRenderTargetViews, (ID3D11DepthStencilView**)pppDepthStencilView, uavStartSlot, numUaVs, ppUnorderedAccessViews);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ID3D11RenderTargetView** ppRenderTargetViews, ID3D11DepthStencilView** ppDepthStencilView, uint uavStartSlot, uint numUaVs, ref ID3D11UnorderedAccessView* ppUnorderedAccessViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11UnorderedAccessView** pppUnorderedAccessViews = &ppUnorderedAccessViews)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView**, uint, uint, ID3D11UnorderedAccessView**, void>)(LpVtbl[90]))(ptr, numRtVs, ppRenderTargetViews, ppDepthStencilView, uavStartSlot, numUaVs, (ID3D11UnorderedAccessView**)pppUnorderedAccessViews);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ID3D11RenderTargetView** ppRenderTargetViews, ID3D11DepthStencilView** ppDepthStencilView, uint uavStartSlot, uint numUaVs, out ComPtr<ID3D11UnorderedAccessView> ppUnorderedAccessViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppUnorderedAccessViews = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView**, uint, uint, ID3D11UnorderedAccessView**, void>)(LpVtbl[90]))(ptr, numRtVs, ppRenderTargetViews, ppDepthStencilView, uavStartSlot, numUaVs, (ID3D11UnorderedAccessView**)ppUnorderedAccessViews.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ref ID3D11RenderTargetView* ppRenderTargetViews, ID3D11DepthStencilView** ppDepthStencilView, uint uavStartSlot, uint numUaVs, ref ID3D11UnorderedAccessView* ppUnorderedAccessViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11RenderTargetView** pppRenderTargetViews = &ppRenderTargetViews)
			{
				fixed (ID3D11UnorderedAccessView** pppUnorderedAccessViews = &ppUnorderedAccessViews)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView**, uint, uint, ID3D11UnorderedAccessView**, void>)(LpVtbl[90]))(ptr, numRtVs, (ID3D11RenderTargetView**)pppRenderTargetViews, ppDepthStencilView, uavStartSlot, numUaVs, (ID3D11UnorderedAccessView**)pppUnorderedAccessViews);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ref ComPtr<ID3D11RenderTargetView> ppRenderTargetViews, ID3D11DepthStencilView** ppDepthStencilView, uint uavStartSlot, uint numUaVs, out ComPtr<ID3D11UnorderedAccessView> ppUnorderedAccessViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11RenderTargetView>* pppRenderTargetViews = &ppRenderTargetViews)
			{
				ppUnorderedAccessViews = default;
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView**, uint, uint, ID3D11UnorderedAccessView**, void>)(LpVtbl[90]))(ptr, numRtVs, (ID3D11RenderTargetView**)pppRenderTargetViews, ppDepthStencilView, uavStartSlot, numUaVs, (ID3D11UnorderedAccessView**)ppUnorderedAccessViews.GetAddressOf());
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ID3D11RenderTargetView** ppRenderTargetViews, ref ID3D11DepthStencilView* ppDepthStencilView, uint uavStartSlot, uint numUaVs, ref ID3D11UnorderedAccessView* ppUnorderedAccessViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11DepthStencilView** pppDepthStencilView = &ppDepthStencilView)
			{
				fixed (ID3D11UnorderedAccessView** pppUnorderedAccessViews = &ppUnorderedAccessViews)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView**, uint, uint, ID3D11UnorderedAccessView**, void>)(LpVtbl[90]))(ptr, numRtVs, ppRenderTargetViews, (ID3D11DepthStencilView**)pppDepthStencilView, uavStartSlot, numUaVs, (ID3D11UnorderedAccessView**)pppUnorderedAccessViews);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ID3D11RenderTargetView** ppRenderTargetViews, ref ComPtr<ID3D11DepthStencilView> ppDepthStencilView, uint uavStartSlot, uint numUaVs, out ComPtr<ID3D11UnorderedAccessView> ppUnorderedAccessViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11DepthStencilView>* pppDepthStencilView = &ppDepthStencilView)
			{
				ppUnorderedAccessViews = default;
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView**, uint, uint, ID3D11UnorderedAccessView**, void>)(LpVtbl[90]))(ptr, numRtVs, ppRenderTargetViews, (ID3D11DepthStencilView**)pppDepthStencilView, uavStartSlot, numUaVs, (ID3D11UnorderedAccessView**)ppUnorderedAccessViews.GetAddressOf());
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ref ID3D11RenderTargetView* ppRenderTargetViews, ref ID3D11DepthStencilView* ppDepthStencilView, uint uavStartSlot, uint numUaVs, ref ID3D11UnorderedAccessView* ppUnorderedAccessViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11RenderTargetView** pppRenderTargetViews = &ppRenderTargetViews)
			{
				fixed (ID3D11DepthStencilView** pppDepthStencilView = &ppDepthStencilView)
				{
					fixed (ID3D11UnorderedAccessView** pppUnorderedAccessViews = &ppUnorderedAccessViews)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView**, uint, uint, ID3D11UnorderedAccessView**, void>)(LpVtbl[90]))(ptr, numRtVs, (ID3D11RenderTargetView**)pppRenderTargetViews, (ID3D11DepthStencilView**)pppDepthStencilView, uavStartSlot, numUaVs, (ID3D11UnorderedAccessView**)pppUnorderedAccessViews);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetRenderTargetsAndUnorderedAccessViews(uint numRtVs, ref ComPtr<ID3D11RenderTargetView> ppRenderTargetViews, ref ComPtr<ID3D11DepthStencilView> ppDepthStencilView, uint uavStartSlot, uint numUaVs, out ComPtr<ID3D11UnorderedAccessView> ppUnorderedAccessViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11RenderTargetView>* pppRenderTargetViews = &ppRenderTargetViews)
			{
				fixed (ComPtr<ID3D11DepthStencilView>* pppDepthStencilView = &ppDepthStencilView)
				{
					ppUnorderedAccessViews = default;
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11RenderTargetView**, ID3D11DepthStencilView**, uint, uint, ID3D11UnorderedAccessView**, void>)(LpVtbl[90]))(ptr, numRtVs, (ID3D11RenderTargetView**)pppRenderTargetViews, (ID3D11DepthStencilView**)pppDepthStencilView, uavStartSlot, numUaVs, (ID3D11UnorderedAccessView**)ppUnorderedAccessViews.GetAddressOf());
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetBlendState(ID3D11BlendState** ppBlendState, float* blendFactor, uint* pSampleMask) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11BlendState**, float*, uint*, void>)(LpVtbl[91]))(ptr, ppBlendState, blendFactor, pSampleMask);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetBlendState(ref ID3D11BlendState* ppBlendState, float* blendFactor, uint* pSampleMask) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11BlendState** pppBlendState = &ppBlendState)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11BlendState**, float*, uint*, void>)(LpVtbl[91]))(ptr, (ID3D11BlendState**)pppBlendState, blendFactor, pSampleMask);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetBlendState(ref ComPtr<ID3D11BlendState> ppBlendState, float* blendFactor, uint* pSampleMask) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11BlendState>* pppBlendState = &ppBlendState)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11BlendState**, float*, uint*, void>)(LpVtbl[91]))(ptr, (ID3D11BlendState**)pppBlendState, blendFactor, pSampleMask);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetBlendState(ID3D11BlendState** ppBlendState, ref float blendFactor, uint* pSampleMask) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pblendFactor = &blendFactor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11BlendState**, float*, uint*, void>)(LpVtbl[91]))(ptr, ppBlendState, (float*)pblendFactor, pSampleMask);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetBlendState(ID3D11BlendState** ppBlendState, ReadOnlySpan<float> blendFactor, uint* pSampleMask) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pblendFactor = blendFactor)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11BlendState**, float*, uint*, void>)(LpVtbl[91]))(ptr, ppBlendState, (float*)pblendFactor, pSampleMask);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetBlendState(ref ID3D11BlendState* ppBlendState, ref float blendFactor, uint* pSampleMask) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11BlendState** pppBlendState = &ppBlendState)
			{
				fixed (float* pblendFactor = &blendFactor)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11BlendState**, float*, uint*, void>)(LpVtbl[91]))(ptr, (ID3D11BlendState**)pppBlendState, (float*)pblendFactor, pSampleMask);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetBlendState(ref ID3D11BlendState* ppBlendState, ReadOnlySpan<float> blendFactor, uint* pSampleMask) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11BlendState** pppBlendState = &ppBlendState)
			{
				fixed (float* pblendFactor = blendFactor)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11BlendState**, float*, uint*, void>)(LpVtbl[91]))(ptr, (ID3D11BlendState**)pppBlendState, (float*)pblendFactor, pSampleMask);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetBlendState(ref ComPtr<ID3D11BlendState> ppBlendState, ref float blendFactor, uint* pSampleMask) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11BlendState>* pppBlendState = &ppBlendState)
			{
				fixed (float* pblendFactor = &blendFactor)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11BlendState**, float*, uint*, void>)(LpVtbl[91]))(ptr, (ID3D11BlendState**)pppBlendState, (float*)pblendFactor, pSampleMask);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetBlendState(ID3D11BlendState** ppBlendState, float* blendFactor, ref uint pSampleMask) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppSampleMask = &pSampleMask)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11BlendState**, float*, uint*, void>)(LpVtbl[91]))(ptr, ppBlendState, blendFactor, (uint*)ppSampleMask);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetBlendState(ref ID3D11BlendState* ppBlendState, float* blendFactor, ref uint pSampleMask) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11BlendState** pppBlendState = &ppBlendState)
			{
				fixed (uint* ppSampleMask = &pSampleMask)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11BlendState**, float*, uint*, void>)(LpVtbl[91]))(ptr, (ID3D11BlendState**)pppBlendState, blendFactor, (uint*)ppSampleMask);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetBlendState(ref ComPtr<ID3D11BlendState> ppBlendState, float* blendFactor, ref uint pSampleMask) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11BlendState>* pppBlendState = &ppBlendState)
			{
				fixed (uint* ppSampleMask = &pSampleMask)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11BlendState**, float*, uint*, void>)(LpVtbl[91]))(ptr, (ID3D11BlendState**)pppBlendState, blendFactor, (uint*)ppSampleMask);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetBlendState(ID3D11BlendState** ppBlendState, ref float blendFactor, ref uint pSampleMask) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pblendFactor = &blendFactor)
			{
				fixed (uint* ppSampleMask = &pSampleMask)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11BlendState**, float*, uint*, void>)(LpVtbl[91]))(ptr, ppBlendState, (float*)pblendFactor, (uint*)ppSampleMask);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetBlendState(ID3D11BlendState** ppBlendState, ReadOnlySpan<float> blendFactor, ref uint pSampleMask) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pblendFactor = blendFactor)
			{
				fixed (uint* ppSampleMask = &pSampleMask)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11BlendState**, float*, uint*, void>)(LpVtbl[91]))(ptr, ppBlendState, (float*)pblendFactor, (uint*)ppSampleMask);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetBlendState(ref ID3D11BlendState* ppBlendState, ref float blendFactor, ref uint pSampleMask) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11BlendState** pppBlendState = &ppBlendState)
			{
				fixed (float* pblendFactor = &blendFactor)
				{
					fixed (uint* ppSampleMask = &pSampleMask)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11BlendState**, float*, uint*, void>)(LpVtbl[91]))(ptr, (ID3D11BlendState**)pppBlendState, (float*)pblendFactor, (uint*)ppSampleMask);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetBlendState(ref ID3D11BlendState* ppBlendState, ReadOnlySpan<float> blendFactor, ref uint pSampleMask) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11BlendState** pppBlendState = &ppBlendState)
			{
				fixed (float* pblendFactor = blendFactor)
				{
					fixed (uint* ppSampleMask = &pSampleMask)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11BlendState**, float*, uint*, void>)(LpVtbl[91]))(ptr, (ID3D11BlendState**)pppBlendState, (float*)pblendFactor, (uint*)ppSampleMask);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetBlendState(ref ComPtr<ID3D11BlendState> ppBlendState, ref float blendFactor, ref uint pSampleMask) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11BlendState>* pppBlendState = &ppBlendState)
			{
				fixed (float* pblendFactor = &blendFactor)
				{
					fixed (uint* ppSampleMask = &pSampleMask)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11BlendState**, float*, uint*, void>)(LpVtbl[91]))(ptr, (ID3D11BlendState**)pppBlendState, (float*)pblendFactor, (uint*)ppSampleMask);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetDepthStencilState(ID3D11DepthStencilState** ppDepthStencilState, uint* pStencilRef) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DepthStencilState**, uint*, void>)(LpVtbl[92]))(ptr, ppDepthStencilState, pStencilRef);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetDepthStencilState(ref ID3D11DepthStencilState* ppDepthStencilState, uint* pStencilRef) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11DepthStencilState** pppDepthStencilState = &ppDepthStencilState)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DepthStencilState**, uint*, void>)(LpVtbl[92]))(ptr, (ID3D11DepthStencilState**)pppDepthStencilState, pStencilRef);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetDepthStencilState(ref ComPtr<ID3D11DepthStencilState> ppDepthStencilState, uint* pStencilRef) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11DepthStencilState>* pppDepthStencilState = &ppDepthStencilState)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DepthStencilState**, uint*, void>)(LpVtbl[92]))(ptr, (ID3D11DepthStencilState**)pppDepthStencilState, pStencilRef);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetDepthStencilState(ID3D11DepthStencilState** ppDepthStencilState, ref uint pStencilRef) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppStencilRef = &pStencilRef)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DepthStencilState**, uint*, void>)(LpVtbl[92]))(ptr, ppDepthStencilState, (uint*)ppStencilRef);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetDepthStencilState(ref ID3D11DepthStencilState* ppDepthStencilState, ref uint pStencilRef) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11DepthStencilState** pppDepthStencilState = &ppDepthStencilState)
			{
				fixed (uint* ppStencilRef = &pStencilRef)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DepthStencilState**, uint*, void>)(LpVtbl[92]))(ptr, (ID3D11DepthStencilState**)pppDepthStencilState, (uint*)ppStencilRef);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void OMGetDepthStencilState(ref ComPtr<ID3D11DepthStencilState> ppDepthStencilState, ref uint pStencilRef) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11DepthStencilState>* pppDepthStencilState = &ppDepthStencilState)
			{
				fixed (uint* ppStencilRef = &pStencilRef)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DepthStencilState**, uint*, void>)(LpVtbl[92]))(ptr, (ID3D11DepthStencilState**)pppDepthStencilState, (uint*)ppStencilRef);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SOGetTargets(uint numBuffers, ID3D11Buffer** ppSOTargets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11Buffer**, void>)(LpVtbl[93]))(ptr, numBuffers, ppSOTargets);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SOGetTargets(uint numBuffers, ref ID3D11Buffer* ppSOTargets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppSOTargets = &ppSOTargets)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11Buffer**, void>)(LpVtbl[93]))(ptr, numBuffers, (ID3D11Buffer**)pppSOTargets);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SOGetTargets(uint numBuffers, out ComPtr<ID3D11Buffer> ppSOTargets) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSOTargets = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, ID3D11Buffer**, void>)(LpVtbl[93]))(ptr, numBuffers, (ID3D11Buffer**)ppSOTargets.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void RSGetState(ID3D11RasterizerState** ppRasterizerState) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11RasterizerState**, void>)(LpVtbl[94]))(ptr, ppRasterizerState);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void RSGetState(ref ID3D11RasterizerState* ppRasterizerState) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11RasterizerState** pppRasterizerState = &ppRasterizerState)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11RasterizerState**, void>)(LpVtbl[94]))(ptr, (ID3D11RasterizerState**)pppRasterizerState);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void RSGetState(out ComPtr<ID3D11RasterizerState> ppRasterizerState) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppRasterizerState = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11RasterizerState**, void>)(LpVtbl[94]))(ptr, (ID3D11RasterizerState**)ppRasterizerState.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void RSGetViewports(uint* pNumViewports, Viewport* pViewports) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint*, Viewport*, void>)(LpVtbl[95]))(ptr, pNumViewports, pViewports);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void RSGetViewports(ref uint pNumViewports, Viewport* pViewports) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumViewports = &pNumViewports)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint*, Viewport*, void>)(LpVtbl[95]))(ptr, (uint*)ppNumViewports, pViewports);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void RSGetViewports(uint* pNumViewports, ref Viewport pViewports) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Viewport* ppViewports = &pViewports)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint*, Viewport*, void>)(LpVtbl[95]))(ptr, pNumViewports, (Viewport*)ppViewports);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void RSGetViewports(ref uint pNumViewports, ref Viewport pViewports) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumViewports = &pNumViewports)
			{
				fixed (Viewport* ppViewports = &pViewports)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint*, Viewport*, void>)(LpVtbl[95]))(ptr, (uint*)ppNumViewports, (Viewport*)ppViewports);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void RSGetScissorRects(uint* pNumRects, Rect32* pRects) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint*, Rect32*, void>)(LpVtbl[96]))(ptr, pNumRects, pRects);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void RSGetScissorRects(ref uint pNumRects, Rect32* pRects) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumRects = &pNumRects)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint*, Rect32*, void>)(LpVtbl[96]))(ptr, (uint*)ppNumRects, pRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void RSGetScissorRects(uint* pNumRects, ref Rect32 pRects) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppRects = &pRects)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint*, Rect32*, void>)(LpVtbl[96]))(ptr, pNumRects, (Rect32*)ppRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void RSGetScissorRects(ref uint pNumRects, ref Rect32 pRects) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumRects = &pNumRects)
			{
				fixed (Rect32* ppRects = &pRects)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint*, Rect32*, void>)(LpVtbl[96]))(ptr, (uint*)ppNumRects, (Rect32*)ppRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetShaderResources(uint startSlot, uint numViews, ID3D11ShaderResourceView** ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[97]))(ptr, startSlot, numViews, ppShaderResourceViews);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetShaderResources(uint startSlot, uint numViews, ref ID3D11ShaderResourceView* ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ShaderResourceView** pppShaderResourceViews = &ppShaderResourceViews)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[97]))(ptr, startSlot, numViews, (ID3D11ShaderResourceView**)pppShaderResourceViews);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetShaderResources(uint startSlot, uint numViews, out ComPtr<ID3D11ShaderResourceView> ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppShaderResourceViews = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[97]))(ptr, startSlot, numViews, (ID3D11ShaderResourceView**)ppShaderResourceViews.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetShader(ID3D11HullShader** ppHullShader, ID3D11ClassInstance** ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11HullShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[98]))(ptr, ppHullShader, ppClassInstances, pNumClassInstances);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetShader(ref ID3D11HullShader* ppHullShader, ID3D11ClassInstance** ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11HullShader** pppHullShader = &ppHullShader)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11HullShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[98]))(ptr, (ID3D11HullShader**)pppHullShader, ppClassInstances, pNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetShader(ID3D11HullShader** ppHullShader, ref ID3D11ClassInstance* ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11HullShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[98]))(ptr, ppHullShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetShader(ID3D11HullShader** ppHullShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11HullShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[98]))(ptr, ppHullShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetShader(ref ID3D11HullShader* ppHullShader, ref ID3D11ClassInstance* ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11HullShader** pppHullShader = &ppHullShader)
			{
				fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11HullShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[98]))(ptr, (ID3D11HullShader**)pppHullShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetShader(ref ID3D11HullShader* ppHullShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11HullShader** pppHullShader = &ppHullShader)
			{
				fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11HullShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[98]))(ptr, (ID3D11HullShader**)pppHullShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetShader(ID3D11HullShader** ppHullShader, ID3D11ClassInstance** ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumClassInstances = &pNumClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11HullShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[98]))(ptr, ppHullShader, ppClassInstances, (uint*)ppNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetShader(ref ID3D11HullShader* ppHullShader, ID3D11ClassInstance** ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11HullShader** pppHullShader = &ppHullShader)
			{
				fixed (uint* ppNumClassInstances = &pNumClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11HullShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[98]))(ptr, (ID3D11HullShader**)pppHullShader, ppClassInstances, (uint*)ppNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetShader(ID3D11HullShader** ppHullShader, ref ID3D11ClassInstance* ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
			{
				fixed (uint* ppNumClassInstances = &pNumClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11HullShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[98]))(ptr, ppHullShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetShader(ID3D11HullShader** ppHullShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
			{
				fixed (uint* ppNumClassInstances = &pNumClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11HullShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[98]))(ptr, ppHullShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetShader(ref ID3D11HullShader* ppHullShader, ref ID3D11ClassInstance* ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11HullShader** pppHullShader = &ppHullShader)
			{
				fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
				{
					fixed (uint* ppNumClassInstances = &pNumClassInstances)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11HullShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[98]))(ptr, (ID3D11HullShader**)pppHullShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetShader(ref ID3D11HullShader* ppHullShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11HullShader** pppHullShader = &ppHullShader)
			{
				fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
				{
					fixed (uint* ppNumClassInstances = &pNumClassInstances)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11HullShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[98]))(ptr, (ID3D11HullShader**)pppHullShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetSamplers(uint startSlot, uint numSamplers, ID3D11SamplerState** ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[99]))(ptr, startSlot, numSamplers, ppSamplers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetSamplers(uint startSlot, uint numSamplers, ref ID3D11SamplerState* ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11SamplerState** pppSamplers = &ppSamplers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[99]))(ptr, startSlot, numSamplers, (ID3D11SamplerState**)pppSamplers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetSamplers(uint startSlot, uint numSamplers, out ComPtr<ID3D11SamplerState> ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSamplers = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[99]))(ptr, startSlot, numSamplers, (ID3D11SamplerState**)ppSamplers.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetConstantBuffers(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[100]))(ptr, startSlot, numBuffers, ppConstantBuffers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetConstantBuffers(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[100]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetConstantBuffers(uint startSlot, uint numBuffers, out ComPtr<ID3D11Buffer> ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppConstantBuffers = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[100]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetShaderResources(uint startSlot, uint numViews, ID3D11ShaderResourceView** ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[101]))(ptr, startSlot, numViews, ppShaderResourceViews);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetShaderResources(uint startSlot, uint numViews, ref ID3D11ShaderResourceView* ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ShaderResourceView** pppShaderResourceViews = &ppShaderResourceViews)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[101]))(ptr, startSlot, numViews, (ID3D11ShaderResourceView**)pppShaderResourceViews);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetShaderResources(uint startSlot, uint numViews, out ComPtr<ID3D11ShaderResourceView> ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppShaderResourceViews = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[101]))(ptr, startSlot, numViews, (ID3D11ShaderResourceView**)ppShaderResourceViews.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetShader(ID3D11DomainShader** ppDomainShader, ID3D11ClassInstance** ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DomainShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[102]))(ptr, ppDomainShader, ppClassInstances, pNumClassInstances);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetShader(ref ID3D11DomainShader* ppDomainShader, ID3D11ClassInstance** ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11DomainShader** pppDomainShader = &ppDomainShader)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DomainShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[102]))(ptr, (ID3D11DomainShader**)pppDomainShader, ppClassInstances, pNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetShader(ID3D11DomainShader** ppDomainShader, ref ID3D11ClassInstance* ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DomainShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[102]))(ptr, ppDomainShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetShader(ID3D11DomainShader** ppDomainShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DomainShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[102]))(ptr, ppDomainShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetShader(ref ID3D11DomainShader* ppDomainShader, ref ID3D11ClassInstance* ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11DomainShader** pppDomainShader = &ppDomainShader)
			{
				fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DomainShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[102]))(ptr, (ID3D11DomainShader**)pppDomainShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetShader(ref ID3D11DomainShader* ppDomainShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11DomainShader** pppDomainShader = &ppDomainShader)
			{
				fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DomainShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[102]))(ptr, (ID3D11DomainShader**)pppDomainShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetShader(ID3D11DomainShader** ppDomainShader, ID3D11ClassInstance** ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumClassInstances = &pNumClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DomainShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[102]))(ptr, ppDomainShader, ppClassInstances, (uint*)ppNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetShader(ref ID3D11DomainShader* ppDomainShader, ID3D11ClassInstance** ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11DomainShader** pppDomainShader = &ppDomainShader)
			{
				fixed (uint* ppNumClassInstances = &pNumClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DomainShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[102]))(ptr, (ID3D11DomainShader**)pppDomainShader, ppClassInstances, (uint*)ppNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetShader(ID3D11DomainShader** ppDomainShader, ref ID3D11ClassInstance* ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
			{
				fixed (uint* ppNumClassInstances = &pNumClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DomainShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[102]))(ptr, ppDomainShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetShader(ID3D11DomainShader** ppDomainShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
			{
				fixed (uint* ppNumClassInstances = &pNumClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DomainShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[102]))(ptr, ppDomainShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetShader(ref ID3D11DomainShader* ppDomainShader, ref ID3D11ClassInstance* ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11DomainShader** pppDomainShader = &ppDomainShader)
			{
				fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
				{
					fixed (uint* ppNumClassInstances = &pNumClassInstances)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DomainShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[102]))(ptr, (ID3D11DomainShader**)pppDomainShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetShader(ref ID3D11DomainShader* ppDomainShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11DomainShader** pppDomainShader = &ppDomainShader)
			{
				fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
				{
					fixed (uint* ppNumClassInstances = &pNumClassInstances)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DomainShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[102]))(ptr, (ID3D11DomainShader**)pppDomainShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetSamplers(uint startSlot, uint numSamplers, ID3D11SamplerState** ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[103]))(ptr, startSlot, numSamplers, ppSamplers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetSamplers(uint startSlot, uint numSamplers, ref ID3D11SamplerState* ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11SamplerState** pppSamplers = &ppSamplers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[103]))(ptr, startSlot, numSamplers, (ID3D11SamplerState**)pppSamplers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetSamplers(uint startSlot, uint numSamplers, out ComPtr<ID3D11SamplerState> ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSamplers = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[103]))(ptr, startSlot, numSamplers, (ID3D11SamplerState**)ppSamplers.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetConstantBuffers(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[104]))(ptr, startSlot, numBuffers, ppConstantBuffers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetConstantBuffers(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[104]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetConstantBuffers(uint startSlot, uint numBuffers, out ComPtr<ID3D11Buffer> ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppConstantBuffers = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[104]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetShaderResources(uint startSlot, uint numViews, ID3D11ShaderResourceView** ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[105]))(ptr, startSlot, numViews, ppShaderResourceViews);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetShaderResources(uint startSlot, uint numViews, ref ID3D11ShaderResourceView* ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ShaderResourceView** pppShaderResourceViews = &ppShaderResourceViews)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[105]))(ptr, startSlot, numViews, (ID3D11ShaderResourceView**)pppShaderResourceViews);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetShaderResources(uint startSlot, uint numViews, out ComPtr<ID3D11ShaderResourceView> ppShaderResourceViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppShaderResourceViews = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11ShaderResourceView**, void>)(LpVtbl[105]))(ptr, startSlot, numViews, (ID3D11ShaderResourceView**)ppShaderResourceViews.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetUnorderedAccessViews(uint startSlot, uint numUaVs, ID3D11UnorderedAccessView** ppUnorderedAccessViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11UnorderedAccessView**, void>)(LpVtbl[106]))(ptr, startSlot, numUaVs, ppUnorderedAccessViews);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetUnorderedAccessViews(uint startSlot, uint numUaVs, ref ID3D11UnorderedAccessView* ppUnorderedAccessViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11UnorderedAccessView** pppUnorderedAccessViews = &ppUnorderedAccessViews)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11UnorderedAccessView**, void>)(LpVtbl[106]))(ptr, startSlot, numUaVs, (ID3D11UnorderedAccessView**)pppUnorderedAccessViews);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetUnorderedAccessViews(uint startSlot, uint numUaVs, out ComPtr<ID3D11UnorderedAccessView> ppUnorderedAccessViews) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppUnorderedAccessViews = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11UnorderedAccessView**, void>)(LpVtbl[106]))(ptr, startSlot, numUaVs, (ID3D11UnorderedAccessView**)ppUnorderedAccessViews.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetShader(ID3D11ComputeShader** ppComputeShader, ID3D11ClassInstance** ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11ComputeShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[107]))(ptr, ppComputeShader, ppClassInstances, pNumClassInstances);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetShader(ref ID3D11ComputeShader* ppComputeShader, ID3D11ClassInstance** ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ComputeShader** pppComputeShader = &ppComputeShader)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11ComputeShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[107]))(ptr, (ID3D11ComputeShader**)pppComputeShader, ppClassInstances, pNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetShader(ID3D11ComputeShader** ppComputeShader, ref ID3D11ClassInstance* ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11ComputeShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[107]))(ptr, ppComputeShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetShader(ID3D11ComputeShader** ppComputeShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11ComputeShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[107]))(ptr, ppComputeShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetShader(ref ID3D11ComputeShader* ppComputeShader, ref ID3D11ClassInstance* ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ComputeShader** pppComputeShader = &ppComputeShader)
			{
				fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11ComputeShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[107]))(ptr, (ID3D11ComputeShader**)pppComputeShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetShader(ref ID3D11ComputeShader* ppComputeShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, uint* pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ComputeShader** pppComputeShader = &ppComputeShader)
			{
				fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11ComputeShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[107]))(ptr, (ID3D11ComputeShader**)pppComputeShader, (ID3D11ClassInstance**)pppClassInstances, pNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetShader(ID3D11ComputeShader** ppComputeShader, ID3D11ClassInstance** ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumClassInstances = &pNumClassInstances)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11ComputeShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[107]))(ptr, ppComputeShader, ppClassInstances, (uint*)ppNumClassInstances);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetShader(ref ID3D11ComputeShader* ppComputeShader, ID3D11ClassInstance** ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ComputeShader** pppComputeShader = &ppComputeShader)
			{
				fixed (uint* ppNumClassInstances = &pNumClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11ComputeShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[107]))(ptr, (ID3D11ComputeShader**)pppComputeShader, ppClassInstances, (uint*)ppNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetShader(ID3D11ComputeShader** ppComputeShader, ref ID3D11ClassInstance* ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
			{
				fixed (uint* ppNumClassInstances = &pNumClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11ComputeShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[107]))(ptr, ppComputeShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetShader(ID3D11ComputeShader** ppComputeShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
			{
				fixed (uint* ppNumClassInstances = &pNumClassInstances)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11ComputeShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[107]))(ptr, ppComputeShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetShader(ref ID3D11ComputeShader* ppComputeShader, ref ID3D11ClassInstance* ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ComputeShader** pppComputeShader = &ppComputeShader)
			{
				fixed (ID3D11ClassInstance** pppClassInstances = &ppClassInstances)
				{
					fixed (uint* ppNumClassInstances = &pNumClassInstances)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11ComputeShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[107]))(ptr, (ID3D11ComputeShader**)pppComputeShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetShader(ref ID3D11ComputeShader* ppComputeShader, ref ComPtr<ID3D11ClassInstance> ppClassInstances, ref uint pNumClassInstances) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11ComputeShader** pppComputeShader = &ppComputeShader)
			{
				fixed (ComPtr<ID3D11ClassInstance>* pppClassInstances = &ppClassInstances)
				{
					fixed (uint* ppNumClassInstances = &pNumClassInstances)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11ComputeShader**, ID3D11ClassInstance**, uint*, void>)(LpVtbl[107]))(ptr, (ID3D11ComputeShader**)pppComputeShader, (ID3D11ClassInstance**)pppClassInstances, (uint*)ppNumClassInstances);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetSamplers(uint startSlot, uint numSamplers, ID3D11SamplerState** ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[108]))(ptr, startSlot, numSamplers, ppSamplers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetSamplers(uint startSlot, uint numSamplers, ref ID3D11SamplerState* ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11SamplerState** pppSamplers = &ppSamplers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[108]))(ptr, startSlot, numSamplers, (ID3D11SamplerState**)pppSamplers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetSamplers(uint startSlot, uint numSamplers, out ComPtr<ID3D11SamplerState> ppSamplers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppSamplers = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11SamplerState**, void>)(LpVtbl[108]))(ptr, startSlot, numSamplers, (ID3D11SamplerState**)ppSamplers.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetConstantBuffers(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[109]))(ptr, startSlot, numBuffers, ppConstantBuffers);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetConstantBuffers(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[109]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetConstantBuffers(uint startSlot, uint numBuffers, out ComPtr<ID3D11Buffer> ppConstantBuffers) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppConstantBuffers = default;
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, void>)(LpVtbl[109]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.GetAddressOf());
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearState() 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, void>)(LpVtbl[110]))(ptr);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void Flush() 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, void>)(LpVtbl[111]))(ptr);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe DeviceContextType GetType() 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			DeviceContextType ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, DeviceContextType>)(LpVtbl[112]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint GetContextFlags() 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint>)(LpVtbl[113]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult FinishCommandList(Bool32 restoreDeferredContextState, ID3D11CommandList** ppCommandList) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, Bool32, ID3D11CommandList**, HResult>)(LpVtbl[114]))(ptr, restoreDeferredContextState, ppCommandList);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult FinishCommandList(Bool32 restoreDeferredContextState, ref ID3D11CommandList* ppCommandList) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11CommandList** pppCommandList = &ppCommandList)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, Bool32, ID3D11CommandList**, HResult>)(LpVtbl[114]))(ptr, restoreDeferredContextState, (ID3D11CommandList**)pppCommandList);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult FinishCommandList(Bool32 restoreDeferredContextState, out ComPtr<ID3D11CommandList> ppCommandList) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppCommandList = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, Bool32, ID3D11CommandList**, HResult>)(LpVtbl[114]))(ptr, restoreDeferredContextState, (ID3D11CommandList**)ppCommandList.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopySubresourceRegion1(ID3D11Resource* pDstResource, uint dstSubresource, uint dstX, uint dstY, uint dstZ, ID3D11Resource* pSrcResource, uint srcSubresource, Box* pSrcBox, uint copyFlags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, uint, uint, uint, ID3D11Resource*, uint, Box*, uint, void>)(LpVtbl[115]))(ptr, pDstResource, dstSubresource, dstX, dstY, dstZ, pSrcResource, srcSubresource, pSrcBox, copyFlags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopySubresourceRegion1(ref ID3D11Resource pDstResource, uint dstSubresource, uint dstX, uint dstY, uint dstZ, ID3D11Resource* pSrcResource, uint srcSubresource, Box* pSrcBox, uint copyFlags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDstResource = &pDstResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, uint, uint, uint, ID3D11Resource*, uint, Box*, uint, void>)(LpVtbl[115]))(ptr, (ID3D11Resource*)ppDstResource, dstSubresource, dstX, dstY, dstZ, pSrcResource, srcSubresource, pSrcBox, copyFlags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopySubresourceRegion1(ComPtr<ID3D11Resource> pDstResource, uint dstSubresource, uint dstX, uint dstY, uint dstZ, ID3D11Resource* pSrcResource, uint srcSubresource, Box* pSrcBox, uint copyFlags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, uint, uint, uint, ID3D11Resource*, uint, Box*, uint, void>)(LpVtbl[115]))(ptr, (ID3D11Resource*)pDstResource.Handle, dstSubresource, dstX, dstY, dstZ, pSrcResource, srcSubresource, pSrcBox, copyFlags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopySubresourceRegion1(ID3D11Resource* pDstResource, uint dstSubresource, uint dstX, uint dstY, uint dstZ, ref ID3D11Resource pSrcResource, uint srcSubresource, Box* pSrcBox, uint copyFlags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppSrcResource = &pSrcResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, uint, uint, uint, ID3D11Resource*, uint, Box*, uint, void>)(LpVtbl[115]))(ptr, pDstResource, dstSubresource, dstX, dstY, dstZ, (ID3D11Resource*)ppSrcResource, srcSubresource, pSrcBox, copyFlags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopySubresourceRegion1(ID3D11Resource* pDstResource, uint dstSubresource, uint dstX, uint dstY, uint dstZ, ComPtr<ID3D11Resource> pSrcResource, uint srcSubresource, Box* pSrcBox, uint copyFlags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, uint, uint, uint, ID3D11Resource*, uint, Box*, uint, void>)(LpVtbl[115]))(ptr, pDstResource, dstSubresource, dstX, dstY, dstZ, (ID3D11Resource*)pSrcResource.Handle, srcSubresource, pSrcBox, copyFlags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopySubresourceRegion1(ref ID3D11Resource pDstResource, uint dstSubresource, uint dstX, uint dstY, uint dstZ, ref ID3D11Resource pSrcResource, uint srcSubresource, Box* pSrcBox, uint copyFlags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDstResource = &pDstResource)
			{
				fixed (ID3D11Resource* ppSrcResource = &pSrcResource)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, uint, uint, uint, ID3D11Resource*, uint, Box*, uint, void>)(LpVtbl[115]))(ptr, (ID3D11Resource*)ppDstResource, dstSubresource, dstX, dstY, dstZ, (ID3D11Resource*)ppSrcResource, srcSubresource, pSrcBox, copyFlags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopySubresourceRegion1(ComPtr<ID3D11Resource> pDstResource, uint dstSubresource, uint dstX, uint dstY, uint dstZ, ComPtr<ID3D11Resource> pSrcResource, uint srcSubresource, Box* pSrcBox, uint copyFlags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, uint, uint, uint, ID3D11Resource*, uint, Box*, uint, void>)(LpVtbl[115]))(ptr, (ID3D11Resource*)pDstResource.Handle, dstSubresource, dstX, dstY, dstZ, (ID3D11Resource*)pSrcResource.Handle, srcSubresource, pSrcBox, copyFlags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopySubresourceRegion1(ID3D11Resource* pDstResource, uint dstSubresource, uint dstX, uint dstY, uint dstZ, ID3D11Resource* pSrcResource, uint srcSubresource, ref Box pSrcBox, uint copyFlags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Box* ppSrcBox = &pSrcBox)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, uint, uint, uint, ID3D11Resource*, uint, Box*, uint, void>)(LpVtbl[115]))(ptr, pDstResource, dstSubresource, dstX, dstY, dstZ, pSrcResource, srcSubresource, (Box*)ppSrcBox, copyFlags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopySubresourceRegion1(ref ID3D11Resource pDstResource, uint dstSubresource, uint dstX, uint dstY, uint dstZ, ID3D11Resource* pSrcResource, uint srcSubresource, ref Box pSrcBox, uint copyFlags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDstResource = &pDstResource)
			{
				fixed (Box* ppSrcBox = &pSrcBox)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, uint, uint, uint, ID3D11Resource*, uint, Box*, uint, void>)(LpVtbl[115]))(ptr, (ID3D11Resource*)ppDstResource, dstSubresource, dstX, dstY, dstZ, pSrcResource, srcSubresource, (Box*)ppSrcBox, copyFlags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopySubresourceRegion1(ComPtr<ID3D11Resource> pDstResource, uint dstSubresource, uint dstX, uint dstY, uint dstZ, ID3D11Resource* pSrcResource, uint srcSubresource, ref Box pSrcBox, uint copyFlags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Box* ppSrcBox = &pSrcBox)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, uint, uint, uint, ID3D11Resource*, uint, Box*, uint, void>)(LpVtbl[115]))(ptr, (ID3D11Resource*)pDstResource.Handle, dstSubresource, dstX, dstY, dstZ, pSrcResource, srcSubresource, (Box*)ppSrcBox, copyFlags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopySubresourceRegion1(ID3D11Resource* pDstResource, uint dstSubresource, uint dstX, uint dstY, uint dstZ, ref ID3D11Resource pSrcResource, uint srcSubresource, ref Box pSrcBox, uint copyFlags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppSrcResource = &pSrcResource)
			{
				fixed (Box* ppSrcBox = &pSrcBox)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, uint, uint, uint, ID3D11Resource*, uint, Box*, uint, void>)(LpVtbl[115]))(ptr, pDstResource, dstSubresource, dstX, dstY, dstZ, (ID3D11Resource*)ppSrcResource, srcSubresource, (Box*)ppSrcBox, copyFlags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopySubresourceRegion1(ID3D11Resource* pDstResource, uint dstSubresource, uint dstX, uint dstY, uint dstZ, ComPtr<ID3D11Resource> pSrcResource, uint srcSubresource, ref Box pSrcBox, uint copyFlags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Box* ppSrcBox = &pSrcBox)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, uint, uint, uint, ID3D11Resource*, uint, Box*, uint, void>)(LpVtbl[115]))(ptr, pDstResource, dstSubresource, dstX, dstY, dstZ, (ID3D11Resource*)pSrcResource.Handle, srcSubresource, (Box*)ppSrcBox, copyFlags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopySubresourceRegion1(ref ID3D11Resource pDstResource, uint dstSubresource, uint dstX, uint dstY, uint dstZ, ref ID3D11Resource pSrcResource, uint srcSubresource, ref Box pSrcBox, uint copyFlags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDstResource = &pDstResource)
			{
				fixed (ID3D11Resource* ppSrcResource = &pSrcResource)
				{
					fixed (Box* ppSrcBox = &pSrcBox)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, uint, uint, uint, ID3D11Resource*, uint, Box*, uint, void>)(LpVtbl[115]))(ptr, (ID3D11Resource*)ppDstResource, dstSubresource, dstX, dstY, dstZ, (ID3D11Resource*)ppSrcResource, srcSubresource, (Box*)ppSrcBox, copyFlags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopySubresourceRegion1(ComPtr<ID3D11Resource> pDstResource, uint dstSubresource, uint dstX, uint dstY, uint dstZ, ComPtr<ID3D11Resource> pSrcResource, uint srcSubresource, ref Box pSrcBox, uint copyFlags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Box* ppSrcBox = &pSrcBox)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, uint, uint, uint, ID3D11Resource*, uint, Box*, uint, void>)(LpVtbl[115]))(ptr, (ID3D11Resource*)pDstResource.Handle, dstSubresource, dstX, dstY, dstZ, (ID3D11Resource*)pSrcResource.Handle, srcSubresource, (Box*)ppSrcBox, copyFlags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void UpdateSubresource1(ID3D11Resource* pDstResource, uint dstSubresource, Box* pDstBox, void* pSrcData, uint srcRowPitch, uint srcDepthPitch, uint copyFlags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, Box*, void*, uint, uint, uint, void>)(LpVtbl[116]))(ptr, pDstResource, dstSubresource, pDstBox, pSrcData, srcRowPitch, srcDepthPitch, copyFlags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void UpdateSubresource1(ref ID3D11Resource pDstResource, uint dstSubresource, Box* pDstBox, void* pSrcData, uint srcRowPitch, uint srcDepthPitch, uint copyFlags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDstResource = &pDstResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, Box*, void*, uint, uint, uint, void>)(LpVtbl[116]))(ptr, (ID3D11Resource*)ppDstResource, dstSubresource, pDstBox, pSrcData, srcRowPitch, srcDepthPitch, copyFlags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void UpdateSubresource1(ComPtr<ID3D11Resource> pDstResource, uint dstSubresource, Box* pDstBox, void* pSrcData, uint srcRowPitch, uint srcDepthPitch, uint copyFlags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, Box*, void*, uint, uint, uint, void>)(LpVtbl[116]))(ptr, (ID3D11Resource*)pDstResource.Handle, dstSubresource, pDstBox, pSrcData, srcRowPitch, srcDepthPitch, copyFlags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void UpdateSubresource1(ID3D11Resource* pDstResource, uint dstSubresource, ref Box pDstBox, void* pSrcData, uint srcRowPitch, uint srcDepthPitch, uint copyFlags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Box* ppDstBox = &pDstBox)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, Box*, void*, uint, uint, uint, void>)(LpVtbl[116]))(ptr, pDstResource, dstSubresource, (Box*)ppDstBox, pSrcData, srcRowPitch, srcDepthPitch, copyFlags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void UpdateSubresource1(ref ID3D11Resource pDstResource, uint dstSubresource, ref Box pDstBox, void* pSrcData, uint srcRowPitch, uint srcDepthPitch, uint copyFlags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDstResource = &pDstResource)
			{
				fixed (Box* ppDstBox = &pDstBox)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, Box*, void*, uint, uint, uint, void>)(LpVtbl[116]))(ptr, (ID3D11Resource*)ppDstResource, dstSubresource, (Box*)ppDstBox, pSrcData, srcRowPitch, srcDepthPitch, copyFlags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void UpdateSubresource1(ComPtr<ID3D11Resource> pDstResource, uint dstSubresource, ref Box pDstBox, void* pSrcData, uint srcRowPitch, uint srcDepthPitch, uint copyFlags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Box* ppDstBox = &pDstBox)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, Box*, void*, uint, uint, uint, void>)(LpVtbl[116]))(ptr, (ID3D11Resource*)pDstResource.Handle, dstSubresource, (Box*)ppDstBox, pSrcData, srcRowPitch, srcDepthPitch, copyFlags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DiscardResource(ID3D11Resource* pResource) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, void>)(LpVtbl[117]))(ptr, pResource);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DiscardResource(ref ID3D11Resource pResource) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppResource = &pResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, void>)(LpVtbl[117]))(ptr, (ID3D11Resource*)ppResource);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DiscardResource(ComPtr<ID3D11Resource> pResource) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, void>)(LpVtbl[117]))(ptr, (ID3D11Resource*)pResource.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DiscardView(ID3D11View* pResourceView) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11View*, void>)(LpVtbl[118]))(ptr, pResourceView);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DiscardView(ref ID3D11View pResourceView) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11View* ppResourceView = &pResourceView)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11View*, void>)(LpVtbl[118]))(ptr, (ID3D11View*)ppResourceView);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DiscardView(ComPtr<ID3D11View> pResourceView) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11View*, void>)(LpVtbl[118]))(ptr, (ID3D11View*)pResourceView.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSSetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[119]))(ptr, startSlot, numBuffers, ppConstantBuffers, pFirstConstant, pNumConstants);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSSetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[119]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSSetConstantBuffers1(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[119]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.Handle, pFirstConstant, pNumConstants);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSSetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[119]))(ptr, startSlot, numBuffers, ppConstantBuffers, (uint*)ppFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSSetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[119]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, pNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSSetConstantBuffers1(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[119]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.Handle, (uint*)ppFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSSetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumConstants = &pNumConstants)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[119]))(ptr, startSlot, numBuffers, ppConstantBuffers, pFirstConstant, (uint*)ppNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSSetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[119]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSSetConstantBuffers1(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumConstants = &pNumConstants)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[119]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.Handle, pFirstConstant, (uint*)ppNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSSetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[119]))(ptr, startSlot, numBuffers, ppConstantBuffers, (uint*)ppFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSSetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					fixed (uint* ppNumConstants = &pNumConstants)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[119]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, (uint*)ppNumConstants);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSSetConstantBuffers1(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[119]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.Handle, (uint*)ppFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSSetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[120]))(ptr, startSlot, numBuffers, ppConstantBuffers, pFirstConstant, pNumConstants);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSSetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[120]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSSetConstantBuffers1(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[120]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.Handle, pFirstConstant, pNumConstants);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSSetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[120]))(ptr, startSlot, numBuffers, ppConstantBuffers, (uint*)ppFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSSetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[120]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, pNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSSetConstantBuffers1(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[120]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.Handle, (uint*)ppFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSSetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumConstants = &pNumConstants)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[120]))(ptr, startSlot, numBuffers, ppConstantBuffers, pFirstConstant, (uint*)ppNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSSetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[120]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSSetConstantBuffers1(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumConstants = &pNumConstants)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[120]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.Handle, pFirstConstant, (uint*)ppNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSSetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[120]))(ptr, startSlot, numBuffers, ppConstantBuffers, (uint*)ppFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSSetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					fixed (uint* ppNumConstants = &pNumConstants)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[120]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, (uint*)ppNumConstants);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSSetConstantBuffers1(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[120]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.Handle, (uint*)ppFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSSetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[121]))(ptr, startSlot, numBuffers, ppConstantBuffers, pFirstConstant, pNumConstants);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSSetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[121]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSSetConstantBuffers1(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[121]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.Handle, pFirstConstant, pNumConstants);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSSetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[121]))(ptr, startSlot, numBuffers, ppConstantBuffers, (uint*)ppFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSSetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[121]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, pNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSSetConstantBuffers1(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[121]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.Handle, (uint*)ppFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSSetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumConstants = &pNumConstants)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[121]))(ptr, startSlot, numBuffers, ppConstantBuffers, pFirstConstant, (uint*)ppNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSSetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[121]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSSetConstantBuffers1(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumConstants = &pNumConstants)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[121]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.Handle, pFirstConstant, (uint*)ppNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSSetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[121]))(ptr, startSlot, numBuffers, ppConstantBuffers, (uint*)ppFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSSetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					fixed (uint* ppNumConstants = &pNumConstants)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[121]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, (uint*)ppNumConstants);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSSetConstantBuffers1(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[121]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.Handle, (uint*)ppFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSSetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[122]))(ptr, startSlot, numBuffers, ppConstantBuffers, pFirstConstant, pNumConstants);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSSetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[122]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSSetConstantBuffers1(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[122]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.Handle, pFirstConstant, pNumConstants);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSSetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[122]))(ptr, startSlot, numBuffers, ppConstantBuffers, (uint*)ppFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSSetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[122]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, pNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSSetConstantBuffers1(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[122]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.Handle, (uint*)ppFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSSetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumConstants = &pNumConstants)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[122]))(ptr, startSlot, numBuffers, ppConstantBuffers, pFirstConstant, (uint*)ppNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSSetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[122]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSSetConstantBuffers1(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumConstants = &pNumConstants)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[122]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.Handle, pFirstConstant, (uint*)ppNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSSetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[122]))(ptr, startSlot, numBuffers, ppConstantBuffers, (uint*)ppFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSSetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					fixed (uint* ppNumConstants = &pNumConstants)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[122]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, (uint*)ppNumConstants);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSSetConstantBuffers1(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[122]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.Handle, (uint*)ppFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSSetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[123]))(ptr, startSlot, numBuffers, ppConstantBuffers, pFirstConstant, pNumConstants);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSSetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[123]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSSetConstantBuffers1(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[123]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.Handle, pFirstConstant, pNumConstants);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSSetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[123]))(ptr, startSlot, numBuffers, ppConstantBuffers, (uint*)ppFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSSetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[123]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, pNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSSetConstantBuffers1(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[123]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.Handle, (uint*)ppFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSSetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumConstants = &pNumConstants)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[123]))(ptr, startSlot, numBuffers, ppConstantBuffers, pFirstConstant, (uint*)ppNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSSetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[123]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSSetConstantBuffers1(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumConstants = &pNumConstants)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[123]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.Handle, pFirstConstant, (uint*)ppNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSSetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[123]))(ptr, startSlot, numBuffers, ppConstantBuffers, (uint*)ppFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSSetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					fixed (uint* ppNumConstants = &pNumConstants)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[123]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, (uint*)ppNumConstants);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSSetConstantBuffers1(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[123]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.Handle, (uint*)ppFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[124]))(ptr, startSlot, numBuffers, ppConstantBuffers, pFirstConstant, pNumConstants);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[124]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetConstantBuffers1(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[124]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.Handle, pFirstConstant, pNumConstants);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[124]))(ptr, startSlot, numBuffers, ppConstantBuffers, (uint*)ppFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[124]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, pNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetConstantBuffers1(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[124]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.Handle, (uint*)ppFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumConstants = &pNumConstants)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[124]))(ptr, startSlot, numBuffers, ppConstantBuffers, pFirstConstant, (uint*)ppNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[124]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetConstantBuffers1(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumConstants = &pNumConstants)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[124]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.Handle, pFirstConstant, (uint*)ppNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[124]))(ptr, startSlot, numBuffers, ppConstantBuffers, (uint*)ppFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					fixed (uint* ppNumConstants = &pNumConstants)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[124]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, (uint*)ppNumConstants);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSSetConstantBuffers1(uint startSlot, uint numBuffers, ComPtr<ID3D11Buffer> ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[124]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)ppConstantBuffers.Handle, (uint*)ppFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[125]))(ptr, startSlot, numBuffers, ppConstantBuffers, pFirstConstant, pNumConstants);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[125]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ComPtr<ID3D11Buffer> ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[125]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[125]))(ptr, startSlot, numBuffers, ppConstantBuffers, (uint*)ppFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[125]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, pNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ComPtr<ID3D11Buffer> ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[125]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, pNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumConstants = &pNumConstants)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[125]))(ptr, startSlot, numBuffers, ppConstantBuffers, pFirstConstant, (uint*)ppNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[125]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ComPtr<ID3D11Buffer> ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[125]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[125]))(ptr, startSlot, numBuffers, ppConstantBuffers, (uint*)ppFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					fixed (uint* ppNumConstants = &pNumConstants)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[125]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, (uint*)ppNumConstants);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void VSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ComPtr<ID3D11Buffer> ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					fixed (uint* ppNumConstants = &pNumConstants)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[125]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, (uint*)ppNumConstants);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[126]))(ptr, startSlot, numBuffers, ppConstantBuffers, pFirstConstant, pNumConstants);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[126]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ComPtr<ID3D11Buffer> ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[126]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[126]))(ptr, startSlot, numBuffers, ppConstantBuffers, (uint*)ppFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[126]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, pNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ComPtr<ID3D11Buffer> ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[126]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, pNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumConstants = &pNumConstants)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[126]))(ptr, startSlot, numBuffers, ppConstantBuffers, pFirstConstant, (uint*)ppNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[126]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ComPtr<ID3D11Buffer> ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[126]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[126]))(ptr, startSlot, numBuffers, ppConstantBuffers, (uint*)ppFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					fixed (uint* ppNumConstants = &pNumConstants)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[126]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, (uint*)ppNumConstants);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void HSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ComPtr<ID3D11Buffer> ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					fixed (uint* ppNumConstants = &pNumConstants)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[126]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, (uint*)ppNumConstants);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[127]))(ptr, startSlot, numBuffers, ppConstantBuffers, pFirstConstant, pNumConstants);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[127]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ComPtr<ID3D11Buffer> ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[127]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[127]))(ptr, startSlot, numBuffers, ppConstantBuffers, (uint*)ppFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[127]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, pNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ComPtr<ID3D11Buffer> ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[127]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, pNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumConstants = &pNumConstants)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[127]))(ptr, startSlot, numBuffers, ppConstantBuffers, pFirstConstant, (uint*)ppNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[127]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ComPtr<ID3D11Buffer> ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[127]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[127]))(ptr, startSlot, numBuffers, ppConstantBuffers, (uint*)ppFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					fixed (uint* ppNumConstants = &pNumConstants)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[127]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, (uint*)ppNumConstants);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ComPtr<ID3D11Buffer> ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					fixed (uint* ppNumConstants = &pNumConstants)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[127]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, (uint*)ppNumConstants);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[128]))(ptr, startSlot, numBuffers, ppConstantBuffers, pFirstConstant, pNumConstants);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[128]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ComPtr<ID3D11Buffer> ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[128]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[128]))(ptr, startSlot, numBuffers, ppConstantBuffers, (uint*)ppFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[128]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, pNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ComPtr<ID3D11Buffer> ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[128]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, pNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumConstants = &pNumConstants)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[128]))(ptr, startSlot, numBuffers, ppConstantBuffers, pFirstConstant, (uint*)ppNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[128]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ComPtr<ID3D11Buffer> ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[128]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[128]))(ptr, startSlot, numBuffers, ppConstantBuffers, (uint*)ppFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					fixed (uint* ppNumConstants = &pNumConstants)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[128]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, (uint*)ppNumConstants);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ComPtr<ID3D11Buffer> ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					fixed (uint* ppNumConstants = &pNumConstants)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[128]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, (uint*)ppNumConstants);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[129]))(ptr, startSlot, numBuffers, ppConstantBuffers, pFirstConstant, pNumConstants);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[129]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ComPtr<ID3D11Buffer> ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[129]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[129]))(ptr, startSlot, numBuffers, ppConstantBuffers, (uint*)ppFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[129]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, pNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ComPtr<ID3D11Buffer> ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[129]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, pNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumConstants = &pNumConstants)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[129]))(ptr, startSlot, numBuffers, ppConstantBuffers, pFirstConstant, (uint*)ppNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[129]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ComPtr<ID3D11Buffer> ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[129]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[129]))(ptr, startSlot, numBuffers, ppConstantBuffers, (uint*)ppFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					fixed (uint* ppNumConstants = &pNumConstants)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[129]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, (uint*)ppNumConstants);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void PSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ComPtr<ID3D11Buffer> ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					fixed (uint* ppNumConstants = &pNumConstants)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[129]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, (uint*)ppNumConstants);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[130]))(ptr, startSlot, numBuffers, ppConstantBuffers, pFirstConstant, pNumConstants);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[130]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ComPtr<ID3D11Buffer> ppConstantBuffers, uint* pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* pppConstantBuffers = &ppConstantBuffers)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[130]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[130]))(ptr, startSlot, numBuffers, ppConstantBuffers, (uint*)ppFirstConstant, pNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[130]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, pNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ComPtr<ID3D11Buffer> ppConstantBuffers, ref uint pFirstConstant, uint* pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[130]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, pNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumConstants = &pNumConstants)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[130]))(ptr, startSlot, numBuffers, ppConstantBuffers, pFirstConstant, (uint*)ppNumConstants);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[130]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ComPtr<ID3D11Buffer> ppConstantBuffers, uint* pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[130]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, pFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetConstantBuffers1(uint startSlot, uint numBuffers, ID3D11Buffer** ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFirstConstant = &pFirstConstant)
			{
				fixed (uint* ppNumConstants = &pNumConstants)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[130]))(ptr, startSlot, numBuffers, ppConstantBuffers, (uint*)ppFirstConstant, (uint*)ppNumConstants);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ID3D11Buffer* ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer** pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					fixed (uint* ppNumConstants = &pNumConstants)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[130]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, (uint*)ppNumConstants);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CSGetConstantBuffers1(uint startSlot, uint numBuffers, ref ComPtr<ID3D11Buffer> ppConstantBuffers, ref uint pFirstConstant, ref uint pNumConstants) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ComPtr<ID3D11Buffer>* pppConstantBuffers = &ppConstantBuffers)
			{
				fixed (uint* ppFirstConstant = &pFirstConstant)
				{
					fixed (uint* ppNumConstants = &pNumConstants)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, uint, uint, ID3D11Buffer**, uint*, uint*, void>)(LpVtbl[130]))(ptr, startSlot, numBuffers, (ID3D11Buffer**)pppConstantBuffers, (uint*)ppFirstConstant, (uint*)ppNumConstants);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SwapDeviceContextState(ID3DDeviceContextState* pState, ID3DDeviceContextState** ppPreviousState) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3DDeviceContextState*, ID3DDeviceContextState**, void>)(LpVtbl[131]))(ptr, pState, ppPreviousState);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SwapDeviceContextState(ref ID3DDeviceContextState pState, ID3DDeviceContextState** ppPreviousState) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3DDeviceContextState* ppState = &pState)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3DDeviceContextState*, ID3DDeviceContextState**, void>)(LpVtbl[131]))(ptr, (ID3DDeviceContextState*)ppState, ppPreviousState);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SwapDeviceContextState(ID3DDeviceContextState* pState, ref ID3DDeviceContextState* ppPreviousState) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3DDeviceContextState** pppPreviousState = &ppPreviousState)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3DDeviceContextState*, ID3DDeviceContextState**, void>)(LpVtbl[131]))(ptr, pState, (ID3DDeviceContextState**)pppPreviousState);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SwapDeviceContextState(ref ID3DDeviceContextState pState, ref ID3DDeviceContextState* ppPreviousState) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3DDeviceContextState* ppState = &pState)
			{
				fixed (ID3DDeviceContextState** pppPreviousState = &ppPreviousState)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3DDeviceContextState*, ID3DDeviceContextState**, void>)(LpVtbl[131]))(ptr, (ID3DDeviceContextState*)ppState, (ID3DDeviceContextState**)pppPreviousState);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearView(ID3D11View* pView, float* color, Rect32* pRect, uint numRects) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11View*, float*, Rect32*, uint, void>)(LpVtbl[132]))(ptr, pView, color, pRect, numRects);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearView(ref ID3D11View pView, float* color, Rect32* pRect, uint numRects) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11View* ppView = &pView)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11View*, float*, Rect32*, uint, void>)(LpVtbl[132]))(ptr, (ID3D11View*)ppView, color, pRect, numRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearView(ComPtr<ID3D11View> pView, float* color, Rect32* pRect, uint numRects) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11View*, float*, Rect32*, uint, void>)(LpVtbl[132]))(ptr, (ID3D11View*)pView.Handle, color, pRect, numRects);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearView(ID3D11View* pView, ref float color, Rect32* pRect, uint numRects) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pcolor = &color)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11View*, float*, Rect32*, uint, void>)(LpVtbl[132]))(ptr, pView, (float*)pcolor, pRect, numRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearView(ID3D11View* pView, ReadOnlySpan<float> color, Rect32* pRect, uint numRects) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pcolor = color)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11View*, float*, Rect32*, uint, void>)(LpVtbl[132]))(ptr, pView, (float*)pcolor, pRect, numRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearView(ref ID3D11View pView, ref float color, Rect32* pRect, uint numRects) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11View* ppView = &pView)
			{
				fixed (float* pcolor = &color)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11View*, float*, Rect32*, uint, void>)(LpVtbl[132]))(ptr, (ID3D11View*)ppView, (float*)pcolor, pRect, numRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearView(ref ID3D11View pView, ReadOnlySpan<float> color, Rect32* pRect, uint numRects) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11View* ppView = &pView)
			{
				fixed (float* pcolor = color)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11View*, float*, Rect32*, uint, void>)(LpVtbl[132]))(ptr, (ID3D11View*)ppView, (float*)pcolor, pRect, numRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearView(ComPtr<ID3D11View> pView, ref float color, Rect32* pRect, uint numRects) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pcolor = &color)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11View*, float*, Rect32*, uint, void>)(LpVtbl[132]))(ptr, (ID3D11View*)pView.Handle, (float*)pcolor, pRect, numRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearView(ID3D11View* pView, float* color, ref Rect32 pRect, uint numRects) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppRect = &pRect)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11View*, float*, Rect32*, uint, void>)(LpVtbl[132]))(ptr, pView, color, (Rect32*)ppRect, numRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearView(ref ID3D11View pView, float* color, ref Rect32 pRect, uint numRects) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11View* ppView = &pView)
			{
				fixed (Rect32* ppRect = &pRect)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11View*, float*, Rect32*, uint, void>)(LpVtbl[132]))(ptr, (ID3D11View*)ppView, color, (Rect32*)ppRect, numRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearView(ComPtr<ID3D11View> pView, float* color, ref Rect32 pRect, uint numRects) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppRect = &pRect)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11View*, float*, Rect32*, uint, void>)(LpVtbl[132]))(ptr, (ID3D11View*)pView.Handle, color, (Rect32*)ppRect, numRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearView(ID3D11View* pView, ref float color, ref Rect32 pRect, uint numRects) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pcolor = &color)
			{
				fixed (Rect32* ppRect = &pRect)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11View*, float*, Rect32*, uint, void>)(LpVtbl[132]))(ptr, pView, (float*)pcolor, (Rect32*)ppRect, numRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearView(ID3D11View* pView, ReadOnlySpan<float> color, ref Rect32 pRect, uint numRects) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pcolor = color)
			{
				fixed (Rect32* ppRect = &pRect)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11View*, float*, Rect32*, uint, void>)(LpVtbl[132]))(ptr, pView, (float*)pcolor, (Rect32*)ppRect, numRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearView(ref ID3D11View pView, ref float color, ref Rect32 pRect, uint numRects) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11View* ppView = &pView)
			{
				fixed (float* pcolor = &color)
				{
					fixed (Rect32* ppRect = &pRect)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11View*, float*, Rect32*, uint, void>)(LpVtbl[132]))(ptr, (ID3D11View*)ppView, (float*)pcolor, (Rect32*)ppRect, numRects);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearView(ref ID3D11View pView, ReadOnlySpan<float> color, ref Rect32 pRect, uint numRects) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11View* ppView = &pView)
			{
				fixed (float* pcolor = color)
				{
					fixed (Rect32* ppRect = &pRect)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11View*, float*, Rect32*, uint, void>)(LpVtbl[132]))(ptr, (ID3D11View*)ppView, (float*)pcolor, (Rect32*)ppRect, numRects);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ClearView(ComPtr<ID3D11View> pView, ref float color, ref Rect32 pRect, uint numRects) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* pcolor = &color)
			{
				fixed (Rect32* ppRect = &pRect)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11View*, float*, Rect32*, uint, void>)(LpVtbl[132]))(ptr, (ID3D11View*)pView.Handle, (float*)pcolor, (Rect32*)ppRect, numRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DiscardView1(ID3D11View* pResourceView, Rect32* pRects, uint numRects) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11View*, Rect32*, uint, void>)(LpVtbl[133]))(ptr, pResourceView, pRects, numRects);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DiscardView1(ref ID3D11View pResourceView, Rect32* pRects, uint numRects) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11View* ppResourceView = &pResourceView)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11View*, Rect32*, uint, void>)(LpVtbl[133]))(ptr, (ID3D11View*)ppResourceView, pRects, numRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DiscardView1(ComPtr<ID3D11View> pResourceView, Rect32* pRects, uint numRects) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11View*, Rect32*, uint, void>)(LpVtbl[133]))(ptr, (ID3D11View*)pResourceView.Handle, pRects, numRects);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DiscardView1(ID3D11View* pResourceView, ref Rect32 pRects, uint numRects) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppRects = &pRects)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11View*, Rect32*, uint, void>)(LpVtbl[133]))(ptr, pResourceView, (Rect32*)ppRects, numRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DiscardView1(ref ID3D11View pResourceView, ref Rect32 pRects, uint numRects) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11View* ppResourceView = &pResourceView)
			{
				fixed (Rect32* ppRects = &pRects)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11View*, Rect32*, uint, void>)(LpVtbl[133]))(ptr, (ID3D11View*)ppResourceView, (Rect32*)ppRects, numRects);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void DiscardView1(ComPtr<ID3D11View> pResourceView, ref Rect32 pRects, uint numRects) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Rect32* ppRects = &pRects)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11View*, Rect32*, uint, void>)(LpVtbl[133]))(ptr, (ID3D11View*)pResourceView.Handle, (Rect32*)ppRects, numRects);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer* ppTilePool = &pTilePool)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (ID3D11Buffer* ppTilePool = &pTilePool)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (ID3D11Buffer* ppTilePool = &pTilePool)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (ID3D11Buffer* ppTilePool = &pTilePool)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (ID3D11Buffer* ppTilePool = &pTilePool)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (ID3D11Buffer* ppTilePool = &pTilePool)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (ID3D11Buffer* ppTilePool = &pTilePool)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
					{
						fixed (ID3D11Buffer* ppTilePool = &pTilePool)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppRangeFlags = &pRangeFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppRangeFlags = &pRangeFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
					{
						fixed (uint* ppRangeFlags = &pRangeFlags)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer* ppTilePool = &pTilePool)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppRangeFlags = &pRangeFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (ID3D11Buffer* ppTilePool = &pTilePool)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppRangeFlags = &pRangeFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (ID3D11Buffer* ppTilePool = &pTilePool)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (ID3D11Buffer* ppTilePool = &pTilePool)
					{
						fixed (uint* ppRangeFlags = &pRangeFlags)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (ID3D11Buffer* ppTilePool = &pTilePool)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (ID3D11Buffer* ppTilePool = &pTilePool)
					{
						fixed (uint* ppRangeFlags = &pRangeFlags)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (ID3D11Buffer* ppTilePool = &pTilePool)
					{
						fixed (uint* ppRangeFlags = &pRangeFlags)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
					{
						fixed (ID3D11Buffer* ppTilePool = &pTilePool)
						{
							fixed (uint* ppRangeFlags = &pRangeFlags)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
					{
						fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer* ppTilePool = &pTilePool)
			{
				fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (ID3D11Buffer* ppTilePool = &pTilePool)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (ID3D11Buffer* ppTilePool = &pTilePool)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (ID3D11Buffer* ppTilePool = &pTilePool)
					{
						fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (ID3D11Buffer* ppTilePool = &pTilePool)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (ID3D11Buffer* ppTilePool = &pTilePool)
					{
						fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (ID3D11Buffer* ppTilePool = &pTilePool)
					{
						fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
					{
						fixed (ID3D11Buffer* ppTilePool = &pTilePool)
						{
							fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppRangeFlags = &pRangeFlags)
			{
				fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppRangeFlags = &pRangeFlags)
			{
				fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
					{
						fixed (uint* ppRangeFlags = &pRangeFlags)
						{
							fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer* ppTilePool = &pTilePool)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppRangeFlags = &pRangeFlags)
			{
				fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (ID3D11Buffer* ppTilePool = &pTilePool)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppRangeFlags = &pRangeFlags)
			{
				fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (ID3D11Buffer* ppTilePool = &pTilePool)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (ID3D11Buffer* ppTilePool = &pTilePool)
					{
						fixed (uint* ppRangeFlags = &pRangeFlags)
						{
							fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (ID3D11Buffer* ppTilePool = &pTilePool)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (ID3D11Buffer* ppTilePool = &pTilePool)
					{
						fixed (uint* ppRangeFlags = &pRangeFlags)
						{
							fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (ID3D11Buffer* ppTilePool = &pTilePool)
					{
						fixed (uint* ppRangeFlags = &pRangeFlags)
						{
							fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
					{
						fixed (ID3D11Buffer* ppTilePool = &pTilePool)
						{
							fixed (uint* ppRangeFlags = &pRangeFlags)
							{
								fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
								{
									HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
									return ret;
								}
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, uint* pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, pRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer* ppTilePool = &pTilePool)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (ID3D11Buffer* ppTilePool = &pTilePool)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (ID3D11Buffer* ppTilePool = &pTilePool)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (ID3D11Buffer* ppTilePool = &pTilePool)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (ID3D11Buffer* ppTilePool = &pTilePool)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (ID3D11Buffer* ppTilePool = &pTilePool)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (ID3D11Buffer* ppTilePool = &pTilePool)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
					{
						fixed (ID3D11Buffer* ppTilePool = &pTilePool)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppRangeFlags = &pRangeFlags)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppRangeFlags = &pRangeFlags)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
					{
						fixed (uint* ppRangeFlags = &pRangeFlags)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer* ppTilePool = &pTilePool)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppRangeFlags = &pRangeFlags)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (ID3D11Buffer* ppTilePool = &pTilePool)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppRangeFlags = &pRangeFlags)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (ID3D11Buffer* ppTilePool = &pTilePool)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (ID3D11Buffer* ppTilePool = &pTilePool)
					{
						fixed (uint* ppRangeFlags = &pRangeFlags)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (ID3D11Buffer* ppTilePool = &pTilePool)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (ID3D11Buffer* ppTilePool = &pTilePool)
					{
						fixed (uint* ppRangeFlags = &pRangeFlags)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (ID3D11Buffer* ppTilePool = &pTilePool)
					{
						fixed (uint* ppRangeFlags = &pRangeFlags)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
					{
						fixed (ID3D11Buffer* ppTilePool = &pTilePool)
						{
							fixed (uint* ppRangeFlags = &pRangeFlags)
							{
								fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
								{
									HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
									return ret;
								}
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, uint* pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, pTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
					{
						fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer* ppTilePool = &pTilePool)
			{
				fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (ID3D11Buffer* ppTilePool = &pTilePool)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
			{
				fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (ID3D11Buffer* ppTilePool = &pTilePool)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (ID3D11Buffer* ppTilePool = &pTilePool)
					{
						fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (ID3D11Buffer* ppTilePool = &pTilePool)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (ID3D11Buffer* ppTilePool = &pTilePool)
					{
						fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (ID3D11Buffer* ppTilePool = &pTilePool)
					{
						fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
					{
						fixed (ID3D11Buffer* ppTilePool = &pTilePool)
						{
							fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
							{
								fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
								{
									HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
									return ret;
								}
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, uint* pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, pRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppRangeFlags = &pRangeFlags)
			{
				fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppRangeFlags = &pRangeFlags)
			{
				fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
					{
						fixed (uint* ppRangeFlags = &pRangeFlags)
						{
							fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
							{
								fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
								{
									HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
									return ret;
								}
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ID3D11Buffer* pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, pTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer* ppTilePool = &pTilePool)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppRangeFlags = &pRangeFlags)
			{
				fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (ID3D11Buffer* ppTilePool = &pTilePool)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppRangeFlags = &pRangeFlags)
			{
				fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
				{
					fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (ID3D11Buffer* ppTilePool = &pTilePool)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (ID3D11Buffer* ppTilePool = &pTilePool)
					{
						fixed (uint* ppRangeFlags = &pRangeFlags)
						{
							fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
							{
								fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
								{
									HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
									return ret;
								}
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, TileRegionSize* pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, pTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (ID3D11Buffer* ppTilePool = &pTilePool)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (ID3D11Buffer* ppTilePool = &pTilePool)
					{
						fixed (uint* ppRangeFlags = &pRangeFlags)
						{
							fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
							{
								fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
								{
									HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
									return ret;
								}
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, TiledResourceCoordinate* pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
			{
				fixed (uint* ppRangeFlags = &pRangeFlags)
				{
					fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
					{
						fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, pTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (ID3D11Buffer* ppTilePool = &pTilePool)
					{
						fixed (uint* ppRangeFlags = &pRangeFlags)
						{
							fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
							{
								fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
								{
									HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
									return ret;
								}
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ID3D11Resource* pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, pTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ref ID3D11Resource pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ref ID3D11Buffer pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
				{
					fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
					{
						fixed (ID3D11Buffer* ppTilePool = &pTilePool)
						{
							fixed (uint* ppRangeFlags = &pRangeFlags)
							{
								fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
								{
									fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
									{
										HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)ppTiledResource, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)ppTilePool, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
										return ret;
									}
								}
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult UpdateTileMappings(ComPtr<ID3D11Resource> pTiledResource, uint numTiledResourceRegions, ref TiledResourceCoordinate pTiledResourceRegionStartCoordinates, ref TileRegionSize pTiledResourceRegionSizes, ComPtr<ID3D11Buffer> pTilePool, uint numRanges, ref uint pRangeFlags, ref uint pTilePoolStartOffsets, ref uint pRangeTileCounts, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTiledResourceRegionStartCoordinates = &pTiledResourceRegionStartCoordinates)
			{
				fixed (TileRegionSize* ppTiledResourceRegionSizes = &pTiledResourceRegionSizes)
				{
					fixed (uint* ppRangeFlags = &pRangeFlags)
					{
						fixed (uint* ppTilePoolStartOffsets = &pTilePoolStartOffsets)
						{
							fixed (uint* ppRangeTileCounts = &pRangeTileCounts)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, uint, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, uint, uint*, uint*, uint*, uint, HResult>)(LpVtbl[134]))(ptr, (ID3D11Resource*)pTiledResource.Handle, numTiledResourceRegions, (TiledResourceCoordinate*)ppTiledResourceRegionStartCoordinates, (TileRegionSize*)ppTiledResourceRegionSizes, (ID3D11Buffer*)pTilePool.Handle, numRanges, (uint*)ppRangeFlags, (uint*)ppTilePoolStartOffsets, (uint*)ppRangeTileCounts, flags);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ID3D11Resource* pDestTiledResource, TiledResourceCoordinate* pDestRegionStartCoordinate, ID3D11Resource* pSourceTiledResource, TiledResourceCoordinate* pSourceRegionStartCoordinate, TileRegionSize* pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, pDestTiledResource, pDestRegionStartCoordinate, pSourceTiledResource, pSourceRegionStartCoordinate, pTileRegionSize, flags);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ref ID3D11Resource pDestTiledResource, TiledResourceCoordinate* pDestRegionStartCoordinate, ID3D11Resource* pSourceTiledResource, TiledResourceCoordinate* pSourceRegionStartCoordinate, TileRegionSize* pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDestTiledResource = &pDestTiledResource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)ppDestTiledResource, pDestRegionStartCoordinate, pSourceTiledResource, pSourceRegionStartCoordinate, pTileRegionSize, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ComPtr<ID3D11Resource> pDestTiledResource, TiledResourceCoordinate* pDestRegionStartCoordinate, ID3D11Resource* pSourceTiledResource, TiledResourceCoordinate* pSourceRegionStartCoordinate, TileRegionSize* pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)pDestTiledResource.Handle, pDestRegionStartCoordinate, pSourceTiledResource, pSourceRegionStartCoordinate, pTileRegionSize, flags);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ID3D11Resource* pDestTiledResource, ref TiledResourceCoordinate pDestRegionStartCoordinate, ID3D11Resource* pSourceTiledResource, TiledResourceCoordinate* pSourceRegionStartCoordinate, TileRegionSize* pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppDestRegionStartCoordinate = &pDestRegionStartCoordinate)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, pDestTiledResource, (TiledResourceCoordinate*)ppDestRegionStartCoordinate, pSourceTiledResource, pSourceRegionStartCoordinate, pTileRegionSize, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ref ID3D11Resource pDestTiledResource, ref TiledResourceCoordinate pDestRegionStartCoordinate, ID3D11Resource* pSourceTiledResource, TiledResourceCoordinate* pSourceRegionStartCoordinate, TileRegionSize* pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDestTiledResource = &pDestTiledResource)
			{
				fixed (TiledResourceCoordinate* ppDestRegionStartCoordinate = &pDestRegionStartCoordinate)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)ppDestTiledResource, (TiledResourceCoordinate*)ppDestRegionStartCoordinate, pSourceTiledResource, pSourceRegionStartCoordinate, pTileRegionSize, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ComPtr<ID3D11Resource> pDestTiledResource, ref TiledResourceCoordinate pDestRegionStartCoordinate, ID3D11Resource* pSourceTiledResource, TiledResourceCoordinate* pSourceRegionStartCoordinate, TileRegionSize* pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppDestRegionStartCoordinate = &pDestRegionStartCoordinate)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)pDestTiledResource.Handle, (TiledResourceCoordinate*)ppDestRegionStartCoordinate, pSourceTiledResource, pSourceRegionStartCoordinate, pTileRegionSize, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ID3D11Resource* pDestTiledResource, TiledResourceCoordinate* pDestRegionStartCoordinate, ref ID3D11Resource pSourceTiledResource, TiledResourceCoordinate* pSourceRegionStartCoordinate, TileRegionSize* pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppSourceTiledResource = &pSourceTiledResource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, pDestTiledResource, pDestRegionStartCoordinate, (ID3D11Resource*)ppSourceTiledResource, pSourceRegionStartCoordinate, pTileRegionSize, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ID3D11Resource* pDestTiledResource, TiledResourceCoordinate* pDestRegionStartCoordinate, ComPtr<ID3D11Resource> pSourceTiledResource, TiledResourceCoordinate* pSourceRegionStartCoordinate, TileRegionSize* pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, pDestTiledResource, pDestRegionStartCoordinate, (ID3D11Resource*)pSourceTiledResource.Handle, pSourceRegionStartCoordinate, pTileRegionSize, flags);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ref ID3D11Resource pDestTiledResource, TiledResourceCoordinate* pDestRegionStartCoordinate, ref ID3D11Resource pSourceTiledResource, TiledResourceCoordinate* pSourceRegionStartCoordinate, TileRegionSize* pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDestTiledResource = &pDestTiledResource)
			{
				fixed (ID3D11Resource* ppSourceTiledResource = &pSourceTiledResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)ppDestTiledResource, pDestRegionStartCoordinate, (ID3D11Resource*)ppSourceTiledResource, pSourceRegionStartCoordinate, pTileRegionSize, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ComPtr<ID3D11Resource> pDestTiledResource, TiledResourceCoordinate* pDestRegionStartCoordinate, ComPtr<ID3D11Resource> pSourceTiledResource, TiledResourceCoordinate* pSourceRegionStartCoordinate, TileRegionSize* pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)pDestTiledResource.Handle, pDestRegionStartCoordinate, (ID3D11Resource*)pSourceTiledResource.Handle, pSourceRegionStartCoordinate, pTileRegionSize, flags);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ID3D11Resource* pDestTiledResource, ref TiledResourceCoordinate pDestRegionStartCoordinate, ref ID3D11Resource pSourceTiledResource, TiledResourceCoordinate* pSourceRegionStartCoordinate, TileRegionSize* pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppDestRegionStartCoordinate = &pDestRegionStartCoordinate)
			{
				fixed (ID3D11Resource* ppSourceTiledResource = &pSourceTiledResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, pDestTiledResource, (TiledResourceCoordinate*)ppDestRegionStartCoordinate, (ID3D11Resource*)ppSourceTiledResource, pSourceRegionStartCoordinate, pTileRegionSize, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ID3D11Resource* pDestTiledResource, ref TiledResourceCoordinate pDestRegionStartCoordinate, ComPtr<ID3D11Resource> pSourceTiledResource, TiledResourceCoordinate* pSourceRegionStartCoordinate, TileRegionSize* pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppDestRegionStartCoordinate = &pDestRegionStartCoordinate)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, pDestTiledResource, (TiledResourceCoordinate*)ppDestRegionStartCoordinate, (ID3D11Resource*)pSourceTiledResource.Handle, pSourceRegionStartCoordinate, pTileRegionSize, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ref ID3D11Resource pDestTiledResource, ref TiledResourceCoordinate pDestRegionStartCoordinate, ref ID3D11Resource pSourceTiledResource, TiledResourceCoordinate* pSourceRegionStartCoordinate, TileRegionSize* pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDestTiledResource = &pDestTiledResource)
			{
				fixed (TiledResourceCoordinate* ppDestRegionStartCoordinate = &pDestRegionStartCoordinate)
				{
					fixed (ID3D11Resource* ppSourceTiledResource = &pSourceTiledResource)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)ppDestTiledResource, (TiledResourceCoordinate*)ppDestRegionStartCoordinate, (ID3D11Resource*)ppSourceTiledResource, pSourceRegionStartCoordinate, pTileRegionSize, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ComPtr<ID3D11Resource> pDestTiledResource, ref TiledResourceCoordinate pDestRegionStartCoordinate, ComPtr<ID3D11Resource> pSourceTiledResource, TiledResourceCoordinate* pSourceRegionStartCoordinate, TileRegionSize* pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppDestRegionStartCoordinate = &pDestRegionStartCoordinate)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)pDestTiledResource.Handle, (TiledResourceCoordinate*)ppDestRegionStartCoordinate, (ID3D11Resource*)pSourceTiledResource.Handle, pSourceRegionStartCoordinate, pTileRegionSize, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ID3D11Resource* pDestTiledResource, TiledResourceCoordinate* pDestRegionStartCoordinate, ID3D11Resource* pSourceTiledResource, ref TiledResourceCoordinate pSourceRegionStartCoordinate, TileRegionSize* pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppSourceRegionStartCoordinate = &pSourceRegionStartCoordinate)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, pDestTiledResource, pDestRegionStartCoordinate, pSourceTiledResource, (TiledResourceCoordinate*)ppSourceRegionStartCoordinate, pTileRegionSize, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ref ID3D11Resource pDestTiledResource, TiledResourceCoordinate* pDestRegionStartCoordinate, ID3D11Resource* pSourceTiledResource, ref TiledResourceCoordinate pSourceRegionStartCoordinate, TileRegionSize* pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDestTiledResource = &pDestTiledResource)
			{
				fixed (TiledResourceCoordinate* ppSourceRegionStartCoordinate = &pSourceRegionStartCoordinate)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)ppDestTiledResource, pDestRegionStartCoordinate, pSourceTiledResource, (TiledResourceCoordinate*)ppSourceRegionStartCoordinate, pTileRegionSize, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ComPtr<ID3D11Resource> pDestTiledResource, TiledResourceCoordinate* pDestRegionStartCoordinate, ID3D11Resource* pSourceTiledResource, ref TiledResourceCoordinate pSourceRegionStartCoordinate, TileRegionSize* pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppSourceRegionStartCoordinate = &pSourceRegionStartCoordinate)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)pDestTiledResource.Handle, pDestRegionStartCoordinate, pSourceTiledResource, (TiledResourceCoordinate*)ppSourceRegionStartCoordinate, pTileRegionSize, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ID3D11Resource* pDestTiledResource, ref TiledResourceCoordinate pDestRegionStartCoordinate, ID3D11Resource* pSourceTiledResource, ref TiledResourceCoordinate pSourceRegionStartCoordinate, TileRegionSize* pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppDestRegionStartCoordinate = &pDestRegionStartCoordinate)
			{
				fixed (TiledResourceCoordinate* ppSourceRegionStartCoordinate = &pSourceRegionStartCoordinate)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, pDestTiledResource, (TiledResourceCoordinate*)ppDestRegionStartCoordinate, pSourceTiledResource, (TiledResourceCoordinate*)ppSourceRegionStartCoordinate, pTileRegionSize, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ref ID3D11Resource pDestTiledResource, ref TiledResourceCoordinate pDestRegionStartCoordinate, ID3D11Resource* pSourceTiledResource, ref TiledResourceCoordinate pSourceRegionStartCoordinate, TileRegionSize* pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDestTiledResource = &pDestTiledResource)
			{
				fixed (TiledResourceCoordinate* ppDestRegionStartCoordinate = &pDestRegionStartCoordinate)
				{
					fixed (TiledResourceCoordinate* ppSourceRegionStartCoordinate = &pSourceRegionStartCoordinate)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)ppDestTiledResource, (TiledResourceCoordinate*)ppDestRegionStartCoordinate, pSourceTiledResource, (TiledResourceCoordinate*)ppSourceRegionStartCoordinate, pTileRegionSize, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ComPtr<ID3D11Resource> pDestTiledResource, ref TiledResourceCoordinate pDestRegionStartCoordinate, ID3D11Resource* pSourceTiledResource, ref TiledResourceCoordinate pSourceRegionStartCoordinate, TileRegionSize* pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppDestRegionStartCoordinate = &pDestRegionStartCoordinate)
			{
				fixed (TiledResourceCoordinate* ppSourceRegionStartCoordinate = &pSourceRegionStartCoordinate)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)pDestTiledResource.Handle, (TiledResourceCoordinate*)ppDestRegionStartCoordinate, pSourceTiledResource, (TiledResourceCoordinate*)ppSourceRegionStartCoordinate, pTileRegionSize, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ID3D11Resource* pDestTiledResource, TiledResourceCoordinate* pDestRegionStartCoordinate, ref ID3D11Resource pSourceTiledResource, ref TiledResourceCoordinate pSourceRegionStartCoordinate, TileRegionSize* pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppSourceTiledResource = &pSourceTiledResource)
			{
				fixed (TiledResourceCoordinate* ppSourceRegionStartCoordinate = &pSourceRegionStartCoordinate)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, pDestTiledResource, pDestRegionStartCoordinate, (ID3D11Resource*)ppSourceTiledResource, (TiledResourceCoordinate*)ppSourceRegionStartCoordinate, pTileRegionSize, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ID3D11Resource* pDestTiledResource, TiledResourceCoordinate* pDestRegionStartCoordinate, ComPtr<ID3D11Resource> pSourceTiledResource, ref TiledResourceCoordinate pSourceRegionStartCoordinate, TileRegionSize* pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppSourceRegionStartCoordinate = &pSourceRegionStartCoordinate)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, pDestTiledResource, pDestRegionStartCoordinate, (ID3D11Resource*)pSourceTiledResource.Handle, (TiledResourceCoordinate*)ppSourceRegionStartCoordinate, pTileRegionSize, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ref ID3D11Resource pDestTiledResource, TiledResourceCoordinate* pDestRegionStartCoordinate, ref ID3D11Resource pSourceTiledResource, ref TiledResourceCoordinate pSourceRegionStartCoordinate, TileRegionSize* pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDestTiledResource = &pDestTiledResource)
			{
				fixed (ID3D11Resource* ppSourceTiledResource = &pSourceTiledResource)
				{
					fixed (TiledResourceCoordinate* ppSourceRegionStartCoordinate = &pSourceRegionStartCoordinate)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)ppDestTiledResource, pDestRegionStartCoordinate, (ID3D11Resource*)ppSourceTiledResource, (TiledResourceCoordinate*)ppSourceRegionStartCoordinate, pTileRegionSize, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ComPtr<ID3D11Resource> pDestTiledResource, TiledResourceCoordinate* pDestRegionStartCoordinate, ComPtr<ID3D11Resource> pSourceTiledResource, ref TiledResourceCoordinate pSourceRegionStartCoordinate, TileRegionSize* pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppSourceRegionStartCoordinate = &pSourceRegionStartCoordinate)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)pDestTiledResource.Handle, pDestRegionStartCoordinate, (ID3D11Resource*)pSourceTiledResource.Handle, (TiledResourceCoordinate*)ppSourceRegionStartCoordinate, pTileRegionSize, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ID3D11Resource* pDestTiledResource, ref TiledResourceCoordinate pDestRegionStartCoordinate, ref ID3D11Resource pSourceTiledResource, ref TiledResourceCoordinate pSourceRegionStartCoordinate, TileRegionSize* pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppDestRegionStartCoordinate = &pDestRegionStartCoordinate)
			{
				fixed (ID3D11Resource* ppSourceTiledResource = &pSourceTiledResource)
				{
					fixed (TiledResourceCoordinate* ppSourceRegionStartCoordinate = &pSourceRegionStartCoordinate)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, pDestTiledResource, (TiledResourceCoordinate*)ppDestRegionStartCoordinate, (ID3D11Resource*)ppSourceTiledResource, (TiledResourceCoordinate*)ppSourceRegionStartCoordinate, pTileRegionSize, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ID3D11Resource* pDestTiledResource, ref TiledResourceCoordinate pDestRegionStartCoordinate, ComPtr<ID3D11Resource> pSourceTiledResource, ref TiledResourceCoordinate pSourceRegionStartCoordinate, TileRegionSize* pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppDestRegionStartCoordinate = &pDestRegionStartCoordinate)
			{
				fixed (TiledResourceCoordinate* ppSourceRegionStartCoordinate = &pSourceRegionStartCoordinate)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, pDestTiledResource, (TiledResourceCoordinate*)ppDestRegionStartCoordinate, (ID3D11Resource*)pSourceTiledResource.Handle, (TiledResourceCoordinate*)ppSourceRegionStartCoordinate, pTileRegionSize, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ref ID3D11Resource pDestTiledResource, ref TiledResourceCoordinate pDestRegionStartCoordinate, ref ID3D11Resource pSourceTiledResource, ref TiledResourceCoordinate pSourceRegionStartCoordinate, TileRegionSize* pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDestTiledResource = &pDestTiledResource)
			{
				fixed (TiledResourceCoordinate* ppDestRegionStartCoordinate = &pDestRegionStartCoordinate)
				{
					fixed (ID3D11Resource* ppSourceTiledResource = &pSourceTiledResource)
					{
						fixed (TiledResourceCoordinate* ppSourceRegionStartCoordinate = &pSourceRegionStartCoordinate)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)ppDestTiledResource, (TiledResourceCoordinate*)ppDestRegionStartCoordinate, (ID3D11Resource*)ppSourceTiledResource, (TiledResourceCoordinate*)ppSourceRegionStartCoordinate, pTileRegionSize, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ComPtr<ID3D11Resource> pDestTiledResource, ref TiledResourceCoordinate pDestRegionStartCoordinate, ComPtr<ID3D11Resource> pSourceTiledResource, ref TiledResourceCoordinate pSourceRegionStartCoordinate, TileRegionSize* pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppDestRegionStartCoordinate = &pDestRegionStartCoordinate)
			{
				fixed (TiledResourceCoordinate* ppSourceRegionStartCoordinate = &pSourceRegionStartCoordinate)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)pDestTiledResource.Handle, (TiledResourceCoordinate*)ppDestRegionStartCoordinate, (ID3D11Resource*)pSourceTiledResource.Handle, (TiledResourceCoordinate*)ppSourceRegionStartCoordinate, pTileRegionSize, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ID3D11Resource* pDestTiledResource, TiledResourceCoordinate* pDestRegionStartCoordinate, ID3D11Resource* pSourceTiledResource, TiledResourceCoordinate* pSourceRegionStartCoordinate, ref TileRegionSize pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, pDestTiledResource, pDestRegionStartCoordinate, pSourceTiledResource, pSourceRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ref ID3D11Resource pDestTiledResource, TiledResourceCoordinate* pDestRegionStartCoordinate, ID3D11Resource* pSourceTiledResource, TiledResourceCoordinate* pSourceRegionStartCoordinate, ref TileRegionSize pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDestTiledResource = &pDestTiledResource)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)ppDestTiledResource, pDestRegionStartCoordinate, pSourceTiledResource, pSourceRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ComPtr<ID3D11Resource> pDestTiledResource, TiledResourceCoordinate* pDestRegionStartCoordinate, ID3D11Resource* pSourceTiledResource, TiledResourceCoordinate* pSourceRegionStartCoordinate, ref TileRegionSize pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)pDestTiledResource.Handle, pDestRegionStartCoordinate, pSourceTiledResource, pSourceRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ID3D11Resource* pDestTiledResource, ref TiledResourceCoordinate pDestRegionStartCoordinate, ID3D11Resource* pSourceTiledResource, TiledResourceCoordinate* pSourceRegionStartCoordinate, ref TileRegionSize pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppDestRegionStartCoordinate = &pDestRegionStartCoordinate)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, pDestTiledResource, (TiledResourceCoordinate*)ppDestRegionStartCoordinate, pSourceTiledResource, pSourceRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ref ID3D11Resource pDestTiledResource, ref TiledResourceCoordinate pDestRegionStartCoordinate, ID3D11Resource* pSourceTiledResource, TiledResourceCoordinate* pSourceRegionStartCoordinate, ref TileRegionSize pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDestTiledResource = &pDestTiledResource)
			{
				fixed (TiledResourceCoordinate* ppDestRegionStartCoordinate = &pDestRegionStartCoordinate)
				{
					fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)ppDestTiledResource, (TiledResourceCoordinate*)ppDestRegionStartCoordinate, pSourceTiledResource, pSourceRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ComPtr<ID3D11Resource> pDestTiledResource, ref TiledResourceCoordinate pDestRegionStartCoordinate, ID3D11Resource* pSourceTiledResource, TiledResourceCoordinate* pSourceRegionStartCoordinate, ref TileRegionSize pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppDestRegionStartCoordinate = &pDestRegionStartCoordinate)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)pDestTiledResource.Handle, (TiledResourceCoordinate*)ppDestRegionStartCoordinate, pSourceTiledResource, pSourceRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ID3D11Resource* pDestTiledResource, TiledResourceCoordinate* pDestRegionStartCoordinate, ref ID3D11Resource pSourceTiledResource, TiledResourceCoordinate* pSourceRegionStartCoordinate, ref TileRegionSize pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppSourceTiledResource = &pSourceTiledResource)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, pDestTiledResource, pDestRegionStartCoordinate, (ID3D11Resource*)ppSourceTiledResource, pSourceRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ID3D11Resource* pDestTiledResource, TiledResourceCoordinate* pDestRegionStartCoordinate, ComPtr<ID3D11Resource> pSourceTiledResource, TiledResourceCoordinate* pSourceRegionStartCoordinate, ref TileRegionSize pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, pDestTiledResource, pDestRegionStartCoordinate, (ID3D11Resource*)pSourceTiledResource.Handle, pSourceRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ref ID3D11Resource pDestTiledResource, TiledResourceCoordinate* pDestRegionStartCoordinate, ref ID3D11Resource pSourceTiledResource, TiledResourceCoordinate* pSourceRegionStartCoordinate, ref TileRegionSize pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDestTiledResource = &pDestTiledResource)
			{
				fixed (ID3D11Resource* ppSourceTiledResource = &pSourceTiledResource)
				{
					fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)ppDestTiledResource, pDestRegionStartCoordinate, (ID3D11Resource*)ppSourceTiledResource, pSourceRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ComPtr<ID3D11Resource> pDestTiledResource, TiledResourceCoordinate* pDestRegionStartCoordinate, ComPtr<ID3D11Resource> pSourceTiledResource, TiledResourceCoordinate* pSourceRegionStartCoordinate, ref TileRegionSize pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)pDestTiledResource.Handle, pDestRegionStartCoordinate, (ID3D11Resource*)pSourceTiledResource.Handle, pSourceRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, flags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ID3D11Resource* pDestTiledResource, ref TiledResourceCoordinate pDestRegionStartCoordinate, ref ID3D11Resource pSourceTiledResource, TiledResourceCoordinate* pSourceRegionStartCoordinate, ref TileRegionSize pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppDestRegionStartCoordinate = &pDestRegionStartCoordinate)
			{
				fixed (ID3D11Resource* ppSourceTiledResource = &pSourceTiledResource)
				{
					fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, pDestTiledResource, (TiledResourceCoordinate*)ppDestRegionStartCoordinate, (ID3D11Resource*)ppSourceTiledResource, pSourceRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ID3D11Resource* pDestTiledResource, ref TiledResourceCoordinate pDestRegionStartCoordinate, ComPtr<ID3D11Resource> pSourceTiledResource, TiledResourceCoordinate* pSourceRegionStartCoordinate, ref TileRegionSize pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppDestRegionStartCoordinate = &pDestRegionStartCoordinate)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, pDestTiledResource, (TiledResourceCoordinate*)ppDestRegionStartCoordinate, (ID3D11Resource*)pSourceTiledResource.Handle, pSourceRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ref ID3D11Resource pDestTiledResource, ref TiledResourceCoordinate pDestRegionStartCoordinate, ref ID3D11Resource pSourceTiledResource, TiledResourceCoordinate* pSourceRegionStartCoordinate, ref TileRegionSize pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDestTiledResource = &pDestTiledResource)
			{
				fixed (TiledResourceCoordinate* ppDestRegionStartCoordinate = &pDestRegionStartCoordinate)
				{
					fixed (ID3D11Resource* ppSourceTiledResource = &pSourceTiledResource)
					{
						fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)ppDestTiledResource, (TiledResourceCoordinate*)ppDestRegionStartCoordinate, (ID3D11Resource*)ppSourceTiledResource, pSourceRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ComPtr<ID3D11Resource> pDestTiledResource, ref TiledResourceCoordinate pDestRegionStartCoordinate, ComPtr<ID3D11Resource> pSourceTiledResource, TiledResourceCoordinate* pSourceRegionStartCoordinate, ref TileRegionSize pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppDestRegionStartCoordinate = &pDestRegionStartCoordinate)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)pDestTiledResource.Handle, (TiledResourceCoordinate*)ppDestRegionStartCoordinate, (ID3D11Resource*)pSourceTiledResource.Handle, pSourceRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ID3D11Resource* pDestTiledResource, TiledResourceCoordinate* pDestRegionStartCoordinate, ID3D11Resource* pSourceTiledResource, ref TiledResourceCoordinate pSourceRegionStartCoordinate, ref TileRegionSize pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppSourceRegionStartCoordinate = &pSourceRegionStartCoordinate)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, pDestTiledResource, pDestRegionStartCoordinate, pSourceTiledResource, (TiledResourceCoordinate*)ppSourceRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ref ID3D11Resource pDestTiledResource, TiledResourceCoordinate* pDestRegionStartCoordinate, ID3D11Resource* pSourceTiledResource, ref TiledResourceCoordinate pSourceRegionStartCoordinate, ref TileRegionSize pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDestTiledResource = &pDestTiledResource)
			{
				fixed (TiledResourceCoordinate* ppSourceRegionStartCoordinate = &pSourceRegionStartCoordinate)
				{
					fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)ppDestTiledResource, pDestRegionStartCoordinate, pSourceTiledResource, (TiledResourceCoordinate*)ppSourceRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ComPtr<ID3D11Resource> pDestTiledResource, TiledResourceCoordinate* pDestRegionStartCoordinate, ID3D11Resource* pSourceTiledResource, ref TiledResourceCoordinate pSourceRegionStartCoordinate, ref TileRegionSize pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppSourceRegionStartCoordinate = &pSourceRegionStartCoordinate)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)pDestTiledResource.Handle, pDestRegionStartCoordinate, pSourceTiledResource, (TiledResourceCoordinate*)ppSourceRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ID3D11Resource* pDestTiledResource, ref TiledResourceCoordinate pDestRegionStartCoordinate, ID3D11Resource* pSourceTiledResource, ref TiledResourceCoordinate pSourceRegionStartCoordinate, ref TileRegionSize pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppDestRegionStartCoordinate = &pDestRegionStartCoordinate)
			{
				fixed (TiledResourceCoordinate* ppSourceRegionStartCoordinate = &pSourceRegionStartCoordinate)
				{
					fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, pDestTiledResource, (TiledResourceCoordinate*)ppDestRegionStartCoordinate, pSourceTiledResource, (TiledResourceCoordinate*)ppSourceRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ref ID3D11Resource pDestTiledResource, ref TiledResourceCoordinate pDestRegionStartCoordinate, ID3D11Resource* pSourceTiledResource, ref TiledResourceCoordinate pSourceRegionStartCoordinate, ref TileRegionSize pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDestTiledResource = &pDestTiledResource)
			{
				fixed (TiledResourceCoordinate* ppDestRegionStartCoordinate = &pDestRegionStartCoordinate)
				{
					fixed (TiledResourceCoordinate* ppSourceRegionStartCoordinate = &pSourceRegionStartCoordinate)
					{
						fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)ppDestTiledResource, (TiledResourceCoordinate*)ppDestRegionStartCoordinate, pSourceTiledResource, (TiledResourceCoordinate*)ppSourceRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ComPtr<ID3D11Resource> pDestTiledResource, ref TiledResourceCoordinate pDestRegionStartCoordinate, ID3D11Resource* pSourceTiledResource, ref TiledResourceCoordinate pSourceRegionStartCoordinate, ref TileRegionSize pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppDestRegionStartCoordinate = &pDestRegionStartCoordinate)
			{
				fixed (TiledResourceCoordinate* ppSourceRegionStartCoordinate = &pSourceRegionStartCoordinate)
				{
					fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)pDestTiledResource.Handle, (TiledResourceCoordinate*)ppDestRegionStartCoordinate, pSourceTiledResource, (TiledResourceCoordinate*)ppSourceRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ID3D11Resource* pDestTiledResource, TiledResourceCoordinate* pDestRegionStartCoordinate, ref ID3D11Resource pSourceTiledResource, ref TiledResourceCoordinate pSourceRegionStartCoordinate, ref TileRegionSize pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppSourceTiledResource = &pSourceTiledResource)
			{
				fixed (TiledResourceCoordinate* ppSourceRegionStartCoordinate = &pSourceRegionStartCoordinate)
				{
					fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, pDestTiledResource, pDestRegionStartCoordinate, (ID3D11Resource*)ppSourceTiledResource, (TiledResourceCoordinate*)ppSourceRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ID3D11Resource* pDestTiledResource, TiledResourceCoordinate* pDestRegionStartCoordinate, ComPtr<ID3D11Resource> pSourceTiledResource, ref TiledResourceCoordinate pSourceRegionStartCoordinate, ref TileRegionSize pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppSourceRegionStartCoordinate = &pSourceRegionStartCoordinate)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, pDestTiledResource, pDestRegionStartCoordinate, (ID3D11Resource*)pSourceTiledResource.Handle, (TiledResourceCoordinate*)ppSourceRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ref ID3D11Resource pDestTiledResource, TiledResourceCoordinate* pDestRegionStartCoordinate, ref ID3D11Resource pSourceTiledResource, ref TiledResourceCoordinate pSourceRegionStartCoordinate, ref TileRegionSize pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDestTiledResource = &pDestTiledResource)
			{
				fixed (ID3D11Resource* ppSourceTiledResource = &pSourceTiledResource)
				{
					fixed (TiledResourceCoordinate* ppSourceRegionStartCoordinate = &pSourceRegionStartCoordinate)
					{
						fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)ppDestTiledResource, pDestRegionStartCoordinate, (ID3D11Resource*)ppSourceTiledResource, (TiledResourceCoordinate*)ppSourceRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ComPtr<ID3D11Resource> pDestTiledResource, TiledResourceCoordinate* pDestRegionStartCoordinate, ComPtr<ID3D11Resource> pSourceTiledResource, ref TiledResourceCoordinate pSourceRegionStartCoordinate, ref TileRegionSize pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppSourceRegionStartCoordinate = &pSourceRegionStartCoordinate)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)pDestTiledResource.Handle, pDestRegionStartCoordinate, (ID3D11Resource*)pSourceTiledResource.Handle, (TiledResourceCoordinate*)ppSourceRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, flags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ID3D11Resource* pDestTiledResource, ref TiledResourceCoordinate pDestRegionStartCoordinate, ref ID3D11Resource pSourceTiledResource, ref TiledResourceCoordinate pSourceRegionStartCoordinate, ref TileRegionSize pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppDestRegionStartCoordinate = &pDestRegionStartCoordinate)
			{
				fixed (ID3D11Resource* ppSourceTiledResource = &pSourceTiledResource)
				{
					fixed (TiledResourceCoordinate* ppSourceRegionStartCoordinate = &pSourceRegionStartCoordinate)
					{
						fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, pDestTiledResource, (TiledResourceCoordinate*)ppDestRegionStartCoordinate, (ID3D11Resource*)ppSourceTiledResource, (TiledResourceCoordinate*)ppSourceRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, flags);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ID3D11Resource* pDestTiledResource, ref TiledResourceCoordinate pDestRegionStartCoordinate, ComPtr<ID3D11Resource> pSourceTiledResource, ref TiledResourceCoordinate pSourceRegionStartCoordinate, ref TileRegionSize pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppDestRegionStartCoordinate = &pDestRegionStartCoordinate)
			{
				fixed (TiledResourceCoordinate* ppSourceRegionStartCoordinate = &pSourceRegionStartCoordinate)
				{
					fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, pDestTiledResource, (TiledResourceCoordinate*)ppDestRegionStartCoordinate, (ID3D11Resource*)pSourceTiledResource.Handle, (TiledResourceCoordinate*)ppSourceRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ref ID3D11Resource pDestTiledResource, ref TiledResourceCoordinate pDestRegionStartCoordinate, ref ID3D11Resource pSourceTiledResource, ref TiledResourceCoordinate pSourceRegionStartCoordinate, ref TileRegionSize pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDestTiledResource = &pDestTiledResource)
			{
				fixed (TiledResourceCoordinate* ppDestRegionStartCoordinate = &pDestRegionStartCoordinate)
				{
					fixed (ID3D11Resource* ppSourceTiledResource = &pSourceTiledResource)
					{
						fixed (TiledResourceCoordinate* ppSourceRegionStartCoordinate = &pSourceRegionStartCoordinate)
						{
							fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)ppDestTiledResource, (TiledResourceCoordinate*)ppDestRegionStartCoordinate, (ID3D11Resource*)ppSourceTiledResource, (TiledResourceCoordinate*)ppSourceRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, flags);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CopyTileMappings(ComPtr<ID3D11Resource> pDestTiledResource, ref TiledResourceCoordinate pDestRegionStartCoordinate, ComPtr<ID3D11Resource> pSourceTiledResource, ref TiledResourceCoordinate pSourceRegionStartCoordinate, ref TileRegionSize pTileRegionSize, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppDestRegionStartCoordinate = &pDestRegionStartCoordinate)
			{
				fixed (TiledResourceCoordinate* ppSourceRegionStartCoordinate = &pSourceRegionStartCoordinate)
				{
					fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, uint, HResult>)(LpVtbl[135]))(ptr, (ID3D11Resource*)pDestTiledResource.Handle, (TiledResourceCoordinate*)ppDestRegionStartCoordinate, (ID3D11Resource*)pSourceTiledResource.Handle, (TiledResourceCoordinate*)ppSourceRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, flags);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ID3D11Resource* pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ID3D11Buffer* pBuffer, ulong bufferStartOffsetInBytes, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, ulong, uint, void>)(LpVtbl[136]))(ptr, pTiledResource, pTileRegionStartCoordinate, pTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ref ID3D11Resource pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ID3D11Buffer* pBuffer, ulong bufferStartOffsetInBytes, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, ulong, uint, void>)(LpVtbl[136]))(ptr, (ID3D11Resource*)ppTiledResource, pTileRegionStartCoordinate, pTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ComPtr<ID3D11Resource> pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ID3D11Buffer* pBuffer, ulong bufferStartOffsetInBytes, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, ulong, uint, void>)(LpVtbl[136]))(ptr, (ID3D11Resource*)pTiledResource.Handle, pTileRegionStartCoordinate, pTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ID3D11Resource* pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ID3D11Buffer* pBuffer, ulong bufferStartOffsetInBytes, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, ulong, uint, void>)(LpVtbl[136]))(ptr, pTiledResource, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, pTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ref ID3D11Resource pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ID3D11Buffer* pBuffer, ulong bufferStartOffsetInBytes, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, ulong, uint, void>)(LpVtbl[136]))(ptr, (ID3D11Resource*)ppTiledResource, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, pTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ComPtr<ID3D11Resource> pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ID3D11Buffer* pBuffer, ulong bufferStartOffsetInBytes, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, ulong, uint, void>)(LpVtbl[136]))(ptr, (ID3D11Resource*)pTiledResource.Handle, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, pTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ID3D11Resource* pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ID3D11Buffer* pBuffer, ulong bufferStartOffsetInBytes, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, ulong, uint, void>)(LpVtbl[136]))(ptr, pTiledResource, pTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ref ID3D11Resource pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ID3D11Buffer* pBuffer, ulong bufferStartOffsetInBytes, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, ulong, uint, void>)(LpVtbl[136]))(ptr, (ID3D11Resource*)ppTiledResource, pTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ComPtr<ID3D11Resource> pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ID3D11Buffer* pBuffer, ulong bufferStartOffsetInBytes, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, ulong, uint, void>)(LpVtbl[136]))(ptr, (ID3D11Resource*)pTiledResource.Handle, pTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ID3D11Resource* pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ID3D11Buffer* pBuffer, ulong bufferStartOffsetInBytes, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, ulong, uint, void>)(LpVtbl[136]))(ptr, pTiledResource, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ref ID3D11Resource pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ID3D11Buffer* pBuffer, ulong bufferStartOffsetInBytes, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
				{
					fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, ulong, uint, void>)(LpVtbl[136]))(ptr, (ID3D11Resource*)ppTiledResource, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ComPtr<ID3D11Resource> pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ID3D11Buffer* pBuffer, ulong bufferStartOffsetInBytes, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, ulong, uint, void>)(LpVtbl[136]))(ptr, (ID3D11Resource*)pTiledResource.Handle, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, pBuffer, bufferStartOffsetInBytes, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ID3D11Resource* pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ref ID3D11Buffer pBuffer, ulong bufferStartOffsetInBytes, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer* ppBuffer = &pBuffer)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, ulong, uint, void>)(LpVtbl[136]))(ptr, pTiledResource, pTileRegionStartCoordinate, pTileRegionSize, (ID3D11Buffer*)ppBuffer, bufferStartOffsetInBytes, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ID3D11Resource* pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ComPtr<ID3D11Buffer> pBuffer, ulong bufferStartOffsetInBytes, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, ulong, uint, void>)(LpVtbl[136]))(ptr, pTiledResource, pTileRegionStartCoordinate, pTileRegionSize, (ID3D11Buffer*)pBuffer.Handle, bufferStartOffsetInBytes, flags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ref ID3D11Resource pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ref ID3D11Buffer pBuffer, ulong bufferStartOffsetInBytes, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (ID3D11Buffer* ppBuffer = &pBuffer)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, ulong, uint, void>)(LpVtbl[136]))(ptr, (ID3D11Resource*)ppTiledResource, pTileRegionStartCoordinate, pTileRegionSize, (ID3D11Buffer*)ppBuffer, bufferStartOffsetInBytes, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ComPtr<ID3D11Resource> pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ComPtr<ID3D11Buffer> pBuffer, ulong bufferStartOffsetInBytes, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, ulong, uint, void>)(LpVtbl[136]))(ptr, (ID3D11Resource*)pTiledResource.Handle, pTileRegionStartCoordinate, pTileRegionSize, (ID3D11Buffer*)pBuffer.Handle, bufferStartOffsetInBytes, flags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ID3D11Resource* pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ref ID3D11Buffer pBuffer, ulong bufferStartOffsetInBytes, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
			{
				fixed (ID3D11Buffer* ppBuffer = &pBuffer)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, ulong, uint, void>)(LpVtbl[136]))(ptr, pTiledResource, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, pTileRegionSize, (ID3D11Buffer*)ppBuffer, bufferStartOffsetInBytes, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ID3D11Resource* pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ComPtr<ID3D11Buffer> pBuffer, ulong bufferStartOffsetInBytes, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, ulong, uint, void>)(LpVtbl[136]))(ptr, pTiledResource, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, pTileRegionSize, (ID3D11Buffer*)pBuffer.Handle, bufferStartOffsetInBytes, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ref ID3D11Resource pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ref ID3D11Buffer pBuffer, ulong bufferStartOffsetInBytes, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
				{
					fixed (ID3D11Buffer* ppBuffer = &pBuffer)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, ulong, uint, void>)(LpVtbl[136]))(ptr, (ID3D11Resource*)ppTiledResource, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, pTileRegionSize, (ID3D11Buffer*)ppBuffer, bufferStartOffsetInBytes, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ComPtr<ID3D11Resource> pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, TileRegionSize* pTileRegionSize, ComPtr<ID3D11Buffer> pBuffer, ulong bufferStartOffsetInBytes, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, ulong, uint, void>)(LpVtbl[136]))(ptr, (ID3D11Resource*)pTiledResource.Handle, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, pTileRegionSize, (ID3D11Buffer*)pBuffer.Handle, bufferStartOffsetInBytes, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ID3D11Resource* pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ref ID3D11Buffer pBuffer, ulong bufferStartOffsetInBytes, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
			{
				fixed (ID3D11Buffer* ppBuffer = &pBuffer)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, ulong, uint, void>)(LpVtbl[136]))(ptr, pTiledResource, pTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, (ID3D11Buffer*)ppBuffer, bufferStartOffsetInBytes, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ID3D11Resource* pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ComPtr<ID3D11Buffer> pBuffer, ulong bufferStartOffsetInBytes, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, ulong, uint, void>)(LpVtbl[136]))(ptr, pTiledResource, pTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, (ID3D11Buffer*)pBuffer.Handle, bufferStartOffsetInBytes, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ref ID3D11Resource pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ref ID3D11Buffer pBuffer, ulong bufferStartOffsetInBytes, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					fixed (ID3D11Buffer* ppBuffer = &pBuffer)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, ulong, uint, void>)(LpVtbl[136]))(ptr, (ID3D11Resource*)ppTiledResource, pTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, (ID3D11Buffer*)ppBuffer, bufferStartOffsetInBytes, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ComPtr<ID3D11Resource> pTiledResource, TiledResourceCoordinate* pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ComPtr<ID3D11Buffer> pBuffer, ulong bufferStartOffsetInBytes, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, ulong, uint, void>)(LpVtbl[136]))(ptr, (ID3D11Resource*)pTiledResource.Handle, pTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, (ID3D11Buffer*)pBuffer.Handle, bufferStartOffsetInBytes, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ID3D11Resource* pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ref ID3D11Buffer pBuffer, ulong bufferStartOffsetInBytes, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					fixed (ID3D11Buffer* ppBuffer = &pBuffer)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, ulong, uint, void>)(LpVtbl[136]))(ptr, pTiledResource, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, (ID3D11Buffer*)ppBuffer, bufferStartOffsetInBytes, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ID3D11Resource* pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ComPtr<ID3D11Buffer> pBuffer, ulong bufferStartOffsetInBytes, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, ulong, uint, void>)(LpVtbl[136]))(ptr, pTiledResource, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, (ID3D11Buffer*)pBuffer.Handle, bufferStartOffsetInBytes, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ref ID3D11Resource pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ref ID3D11Buffer pBuffer, ulong bufferStartOffsetInBytes, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppTiledResource = &pTiledResource)
			{
				fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
				{
					fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
					{
						fixed (ID3D11Buffer* ppBuffer = &pBuffer)
						{
							((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, ulong, uint, void>)(LpVtbl[136]))(ptr, (ID3D11Resource*)ppTiledResource, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, (ID3D11Buffer*)ppBuffer, bufferStartOffsetInBytes, flags);
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void CopyTiles(ComPtr<ID3D11Resource> pTiledResource, ref TiledResourceCoordinate pTileRegionStartCoordinate, ref TileRegionSize pTileRegionSize, ComPtr<ID3D11Buffer> pBuffer, ulong bufferStartOffsetInBytes, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppTileRegionStartCoordinate = &pTileRegionStartCoordinate)
			{
				fixed (TileRegionSize* ppTileRegionSize = &pTileRegionSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, ID3D11Buffer*, ulong, uint, void>)(LpVtbl[136]))(ptr, (ID3D11Resource*)pTiledResource.Handle, (TiledResourceCoordinate*)ppTileRegionStartCoordinate, (TileRegionSize*)ppTileRegionSize, (ID3D11Buffer*)pBuffer.Handle, bufferStartOffsetInBytes, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void UpdateTiles(ID3D11Resource* pDestTiledResource, TiledResourceCoordinate* pDestTileRegionStartCoordinate, TileRegionSize* pDestTileRegionSize, void* pSourceTileData, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, void*, uint, void>)(LpVtbl[137]))(ptr, pDestTiledResource, pDestTileRegionStartCoordinate, pDestTileRegionSize, pSourceTileData, flags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void UpdateTiles(ref ID3D11Resource pDestTiledResource, TiledResourceCoordinate* pDestTileRegionStartCoordinate, TileRegionSize* pDestTileRegionSize, void* pSourceTileData, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDestTiledResource = &pDestTiledResource)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, void*, uint, void>)(LpVtbl[137]))(ptr, (ID3D11Resource*)ppDestTiledResource, pDestTileRegionStartCoordinate, pDestTileRegionSize, pSourceTileData, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void UpdateTiles(ComPtr<ID3D11Resource> pDestTiledResource, TiledResourceCoordinate* pDestTileRegionStartCoordinate, TileRegionSize* pDestTileRegionSize, void* pSourceTileData, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, void*, uint, void>)(LpVtbl[137]))(ptr, (ID3D11Resource*)pDestTiledResource.Handle, pDestTileRegionStartCoordinate, pDestTileRegionSize, pSourceTileData, flags);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void UpdateTiles(ID3D11Resource* pDestTiledResource, ref TiledResourceCoordinate pDestTileRegionStartCoordinate, TileRegionSize* pDestTileRegionSize, void* pSourceTileData, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppDestTileRegionStartCoordinate = &pDestTileRegionStartCoordinate)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, void*, uint, void>)(LpVtbl[137]))(ptr, pDestTiledResource, (TiledResourceCoordinate*)ppDestTileRegionStartCoordinate, pDestTileRegionSize, pSourceTileData, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void UpdateTiles(ref ID3D11Resource pDestTiledResource, ref TiledResourceCoordinate pDestTileRegionStartCoordinate, TileRegionSize* pDestTileRegionSize, void* pSourceTileData, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDestTiledResource = &pDestTiledResource)
			{
				fixed (TiledResourceCoordinate* ppDestTileRegionStartCoordinate = &pDestTileRegionStartCoordinate)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, void*, uint, void>)(LpVtbl[137]))(ptr, (ID3D11Resource*)ppDestTiledResource, (TiledResourceCoordinate*)ppDestTileRegionStartCoordinate, pDestTileRegionSize, pSourceTileData, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void UpdateTiles(ComPtr<ID3D11Resource> pDestTiledResource, ref TiledResourceCoordinate pDestTileRegionStartCoordinate, TileRegionSize* pDestTileRegionSize, void* pSourceTileData, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppDestTileRegionStartCoordinate = &pDestTileRegionStartCoordinate)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, void*, uint, void>)(LpVtbl[137]))(ptr, (ID3D11Resource*)pDestTiledResource.Handle, (TiledResourceCoordinate*)ppDestTileRegionStartCoordinate, pDestTileRegionSize, pSourceTileData, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void UpdateTiles(ID3D11Resource* pDestTiledResource, TiledResourceCoordinate* pDestTileRegionStartCoordinate, ref TileRegionSize pDestTileRegionSize, void* pSourceTileData, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppDestTileRegionSize = &pDestTileRegionSize)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, void*, uint, void>)(LpVtbl[137]))(ptr, pDestTiledResource, pDestTileRegionStartCoordinate, (TileRegionSize*)ppDestTileRegionSize, pSourceTileData, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void UpdateTiles(ref ID3D11Resource pDestTiledResource, TiledResourceCoordinate* pDestTileRegionStartCoordinate, ref TileRegionSize pDestTileRegionSize, void* pSourceTileData, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDestTiledResource = &pDestTiledResource)
			{
				fixed (TileRegionSize* ppDestTileRegionSize = &pDestTileRegionSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, void*, uint, void>)(LpVtbl[137]))(ptr, (ID3D11Resource*)ppDestTiledResource, pDestTileRegionStartCoordinate, (TileRegionSize*)ppDestTileRegionSize, pSourceTileData, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void UpdateTiles(ComPtr<ID3D11Resource> pDestTiledResource, TiledResourceCoordinate* pDestTileRegionStartCoordinate, ref TileRegionSize pDestTileRegionSize, void* pSourceTileData, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TileRegionSize* ppDestTileRegionSize = &pDestTileRegionSize)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, void*, uint, void>)(LpVtbl[137]))(ptr, (ID3D11Resource*)pDestTiledResource.Handle, pDestTileRegionStartCoordinate, (TileRegionSize*)ppDestTileRegionSize, pSourceTileData, flags);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void UpdateTiles(ID3D11Resource* pDestTiledResource, ref TiledResourceCoordinate pDestTileRegionStartCoordinate, ref TileRegionSize pDestTileRegionSize, void* pSourceTileData, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppDestTileRegionStartCoordinate = &pDestTileRegionStartCoordinate)
			{
				fixed (TileRegionSize* ppDestTileRegionSize = &pDestTileRegionSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, void*, uint, void>)(LpVtbl[137]))(ptr, pDestTiledResource, (TiledResourceCoordinate*)ppDestTileRegionStartCoordinate, (TileRegionSize*)ppDestTileRegionSize, pSourceTileData, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void UpdateTiles(ref ID3D11Resource pDestTiledResource, ref TiledResourceCoordinate pDestTileRegionStartCoordinate, ref TileRegionSize pDestTileRegionSize, void* pSourceTileData, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Resource* ppDestTiledResource = &pDestTiledResource)
			{
				fixed (TiledResourceCoordinate* ppDestTileRegionStartCoordinate = &pDestTileRegionStartCoordinate)
				{
					fixed (TileRegionSize* ppDestTileRegionSize = &pDestTileRegionSize)
					{
						((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, void*, uint, void>)(LpVtbl[137]))(ptr, (ID3D11Resource*)ppDestTiledResource, (TiledResourceCoordinate*)ppDestTileRegionStartCoordinate, (TileRegionSize*)ppDestTileRegionSize, pSourceTileData, flags);
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void UpdateTiles(ComPtr<ID3D11Resource> pDestTiledResource, ref TiledResourceCoordinate pDestTileRegionStartCoordinate, ref TileRegionSize pDestTileRegionSize, void* pSourceTileData, uint flags) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (TiledResourceCoordinate* ppDestTileRegionStartCoordinate = &pDestTileRegionStartCoordinate)
			{
				fixed (TileRegionSize* ppDestTileRegionSize = &pDestTileRegionSize)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Resource*, TiledResourceCoordinate*, TileRegionSize*, void*, uint, void>)(LpVtbl[137]))(ptr, (ID3D11Resource*)pDestTiledResource.Handle, (TiledResourceCoordinate*)ppDestTileRegionStartCoordinate, (TileRegionSize*)ppDestTileRegionSize, pSourceTileData, flags);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult ResizeTilePool(ID3D11Buffer* pTilePool, ulong newSizeInBytes) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer*, ulong, HResult>)(LpVtbl[138]))(ptr, pTilePool, newSizeInBytes);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult ResizeTilePool(ref ID3D11Buffer pTilePool, ulong newSizeInBytes) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Buffer* ppTilePool = &pTilePool)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer*, ulong, HResult>)(LpVtbl[138]))(ptr, (ID3D11Buffer*)ppTilePool, newSizeInBytes);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult ResizeTilePool(ComPtr<ID3D11Buffer> pTilePool, ulong newSizeInBytes) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Buffer*, ulong, HResult>)(LpVtbl[138]))(ptr, (ID3D11Buffer*)pTilePool.Handle, newSizeInBytes);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void TiledResourceBarrier(ID3D11DeviceChild* pTiledResourceOrViewAccessBeforeBarrier, ID3D11DeviceChild* pTiledResourceOrViewAccessAfterBarrier) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DeviceChild*, ID3D11DeviceChild*, void>)(LpVtbl[139]))(ptr, pTiledResourceOrViewAccessBeforeBarrier, pTiledResourceOrViewAccessAfterBarrier);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void TiledResourceBarrier(ref ID3D11DeviceChild pTiledResourceOrViewAccessBeforeBarrier, ID3D11DeviceChild* pTiledResourceOrViewAccessAfterBarrier) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11DeviceChild* ppTiledResourceOrViewAccessBeforeBarrier = &pTiledResourceOrViewAccessBeforeBarrier)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DeviceChild*, ID3D11DeviceChild*, void>)(LpVtbl[139]))(ptr, (ID3D11DeviceChild*)ppTiledResourceOrViewAccessBeforeBarrier, pTiledResourceOrViewAccessAfterBarrier);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void TiledResourceBarrier(ComPtr<ID3D11DeviceChild> pTiledResourceOrViewAccessBeforeBarrier, ID3D11DeviceChild* pTiledResourceOrViewAccessAfterBarrier) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DeviceChild*, ID3D11DeviceChild*, void>)(LpVtbl[139]))(ptr, (ID3D11DeviceChild*)pTiledResourceOrViewAccessBeforeBarrier.Handle, pTiledResourceOrViewAccessAfterBarrier);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void TiledResourceBarrier(ID3D11DeviceChild* pTiledResourceOrViewAccessBeforeBarrier, ref ID3D11DeviceChild pTiledResourceOrViewAccessAfterBarrier) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11DeviceChild* ppTiledResourceOrViewAccessAfterBarrier = &pTiledResourceOrViewAccessAfterBarrier)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DeviceChild*, ID3D11DeviceChild*, void>)(LpVtbl[139]))(ptr, pTiledResourceOrViewAccessBeforeBarrier, (ID3D11DeviceChild*)ppTiledResourceOrViewAccessAfterBarrier);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void TiledResourceBarrier(ID3D11DeviceChild* pTiledResourceOrViewAccessBeforeBarrier, ComPtr<ID3D11DeviceChild> pTiledResourceOrViewAccessAfterBarrier) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DeviceChild*, ID3D11DeviceChild*, void>)(LpVtbl[139]))(ptr, pTiledResourceOrViewAccessBeforeBarrier, (ID3D11DeviceChild*)pTiledResourceOrViewAccessAfterBarrier.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void TiledResourceBarrier(ref ID3D11DeviceChild pTiledResourceOrViewAccessBeforeBarrier, ref ID3D11DeviceChild pTiledResourceOrViewAccessAfterBarrier) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11DeviceChild* ppTiledResourceOrViewAccessBeforeBarrier = &pTiledResourceOrViewAccessBeforeBarrier)
			{
				fixed (ID3D11DeviceChild* ppTiledResourceOrViewAccessAfterBarrier = &pTiledResourceOrViewAccessAfterBarrier)
				{
					((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DeviceChild*, ID3D11DeviceChild*, void>)(LpVtbl[139]))(ptr, (ID3D11DeviceChild*)ppTiledResourceOrViewAccessBeforeBarrier, (ID3D11DeviceChild*)ppTiledResourceOrViewAccessAfterBarrier);
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void TiledResourceBarrier(ComPtr<ID3D11DeviceChild> pTiledResourceOrViewAccessBeforeBarrier, ComPtr<ID3D11DeviceChild> pTiledResourceOrViewAccessAfterBarrier) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11DeviceChild*, ID3D11DeviceChild*, void>)(LpVtbl[139]))(ptr, (ID3D11DeviceChild*)pTiledResourceOrViewAccessBeforeBarrier.Handle, (ID3D11DeviceChild*)pTiledResourceOrViewAccessAfterBarrier.Handle);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe Bool32 IsAnnotationEnabled() 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Bool32 ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, Bool32>)(LpVtbl[140]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetMarkerInt(char* pLabel, int data) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, char*, int, void>)(LpVtbl[141]))(ptr, pLabel, data);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetMarkerInt(ReadOnlySpan<char> pLabel, int data) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (char* ppLabel = pLabel)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, char*, int, void>)(LpVtbl[141]))(ptr, (char*)ppLabel, data);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetMarkerInt(string pLabel, int data) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (pLabel != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(pLabel);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(pLabel, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, char*, int, void>)(LpVtbl[141]))(ptr, pStr0, data);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void BeginEventInt(char* pLabel, int data) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, char*, int, void>)(LpVtbl[142]))(ptr, pLabel, data);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void BeginEventInt(ReadOnlySpan<char> pLabel, int data) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (char* ppLabel = pLabel)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, char*, int, void>)(LpVtbl[142]))(ptr, (char*)ppLabel, data);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void BeginEventInt(string pLabel, int data) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (pLabel != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(pLabel);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(pLabel, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, char*, int, void>)(LpVtbl[142]))(ptr, pStr0, data);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void EndEvent() 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, void>)(LpVtbl[143]))(ptr);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void Flush1(ContextType contextType, nint hEvent) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ContextType, nint, void>)(LpVtbl[144]))(ptr, contextType, hEvent);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void SetHardwareProtectionState(Bool32 hwProtectionEnable) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, Bool32, void>)(LpVtbl[145]))(ptr, hwProtectionEnable);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetHardwareProtectionState(Bool32* pHwProtectionEnable) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, Bool32*, void>)(LpVtbl[146]))(ptr, pHwProtectionEnable);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void GetHardwareProtectionState(ref Bool32 pHwProtectionEnable) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Bool32* ppHwProtectionEnable = &pHwProtectionEnable)
			{
				((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, Bool32*, void>)(LpVtbl[146]))(ptr, (Bool32*)ppHwProtectionEnable);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult Signal(ID3D11Fence* pFence, ulong value) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Fence*, ulong, HResult>)(LpVtbl[147]))(ptr, pFence, value);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult Signal(ref ID3D11Fence pFence, ulong value) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Fence* ppFence = &pFence)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Fence*, ulong, HResult>)(LpVtbl[147]))(ptr, (ID3D11Fence*)ppFence, value);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult Signal(ComPtr<ID3D11Fence> pFence, ulong value) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Fence*, ulong, HResult>)(LpVtbl[147]))(ptr, (ID3D11Fence*)pFence.Handle, value);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult Wait(ID3D11Fence* pFence, ulong value) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Fence*, ulong, HResult>)(LpVtbl[148]))(ptr, pFence, value);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult Wait(ref ID3D11Fence pFence, ulong value) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ID3D11Fence* ppFence = &pFence)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Fence*, ulong, HResult>)(LpVtbl[148]))(ptr, (ID3D11Fence*)ppFence, value);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult Wait(ComPtr<ID3D11Fence> pFence, ulong value) 
		{
			ID3D11DeviceContext4* ptr = (ID3D11DeviceContext4*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<ID3D11DeviceContext4*, ID3D11Fence*, ulong, HResult>)(LpVtbl[148]))(ptr, (ID3D11Fence*)pFence.Handle, value);
			return ret;
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator ID3D11DeviceContext3 (ID3D11DeviceContext4 value)
		{
			return Unsafe.As<ID3D11DeviceContext4, ID3D11DeviceContext3>(ref value);
		}

		public unsafe static implicit operator ID3D11DeviceContext2 (ID3D11DeviceContext4 value)
		{
			return Unsafe.As<ID3D11DeviceContext4, ID3D11DeviceContext2>(ref value);
		}

		public unsafe static implicit operator ID3D11DeviceContext1 (ID3D11DeviceContext4 value)
		{
			return Unsafe.As<ID3D11DeviceContext4, ID3D11DeviceContext1>(ref value);
		}

		public unsafe static implicit operator ID3D11DeviceContext (ID3D11DeviceContext4 value)
		{
			return Unsafe.As<ID3D11DeviceContext4, ID3D11DeviceContext>(ref value);
		}

		public unsafe static implicit operator ID3D11DeviceChild (ID3D11DeviceContext4 value)
		{
			return Unsafe.As<ID3D11DeviceContext4, ID3D11DeviceChild>(ref value);
		}

		public unsafe static implicit operator IUnknown (ID3D11DeviceContext4 value)
		{
			return Unsafe.As<ID3D11DeviceContext4, IUnknown>(ref value);
		}

	}

}
