// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;
using HexaGen.Runtime.COM;

namespace Hexa.NET.X3DAudio
{
	public unsafe partial class X3DAudio
	{
		/// <summary>
		/// calculates DSP settings with respect to 3D parameters<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "X3DAudioCalculate")]
		[return: NativeName(NativeNameType.Type, "void")]
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void CalculateNative([NativeName(NativeNameType.Param, "Instance")] [NativeName(NativeNameType.Type, "const X3DAUDIO_HANDLE")] X3DAudioHandle instance, [NativeName(NativeNameType.Param, "pListener")] [NativeName(NativeNameType.Type, "const X3DAUDIO_LISTENER*")] X3DAudioListener* pListener, [NativeName(NativeNameType.Param, "pEmitter")] [NativeName(NativeNameType.Type, "const X3DAUDIO_EMITTER*")] X3DAudioEmitter* pEmitter, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "pDSPSettings")] [NativeName(NativeNameType.Type, "X3DAUDIO_DSP_SETTINGS*")] X3DAudioDspSettings* pDSPSettings)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<X3DAudioHandle, X3DAudioListener*, X3DAudioEmitter*, uint, X3DAudioDspSettings*, void>)funcTable[1])(instance, pListener, pEmitter, flags, pDSPSettings);
			#else
			((delegate* unmanaged[Cdecl]<X3DAudioHandle, nint, nint, uint, nint, void>)funcTable[1])(instance, (nint)pListener, (nint)pEmitter, flags, (nint)pDSPSettings);
			#endif
		}

		/// <summary>
		/// calculates DSP settings with respect to 3D parameters<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "X3DAudioCalculate")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void Calculate([NativeName(NativeNameType.Param, "Instance")] [NativeName(NativeNameType.Type, "const X3DAUDIO_HANDLE")] X3DAudioHandle instance, [NativeName(NativeNameType.Param, "pListener")] [NativeName(NativeNameType.Type, "const X3DAUDIO_LISTENER*")] X3DAudioListener* pListener, [NativeName(NativeNameType.Param, "pEmitter")] [NativeName(NativeNameType.Type, "const X3DAUDIO_EMITTER*")] X3DAudioEmitter* pEmitter, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "pDSPSettings")] [NativeName(NativeNameType.Type, "X3DAUDIO_DSP_SETTINGS*")] X3DAudioDspSettings* pDSPSettings)
		{
			CalculateNative(instance, pListener, pEmitter, flags, pDSPSettings);
		}

		/// <summary>
		/// calculates DSP settings with respect to 3D parameters<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "X3DAudioCalculate")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void Calculate([NativeName(NativeNameType.Param, "Instance")] [NativeName(NativeNameType.Type, "const X3DAUDIO_HANDLE")] X3DAudioHandle instance, [NativeName(NativeNameType.Param, "pListener")] [NativeName(NativeNameType.Type, "const X3DAUDIO_LISTENER*")] ref X3DAudioListener pListener, [NativeName(NativeNameType.Param, "pEmitter")] [NativeName(NativeNameType.Type, "const X3DAUDIO_EMITTER*")] X3DAudioEmitter* pEmitter, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "pDSPSettings")] [NativeName(NativeNameType.Type, "X3DAUDIO_DSP_SETTINGS*")] X3DAudioDspSettings* pDSPSettings)
		{
			fixed (X3DAudioListener* ppListener = &pListener)
			{
				CalculateNative(instance, (X3DAudioListener*)ppListener, pEmitter, flags, pDSPSettings);
			}
		}

		/// <summary>
		/// calculates DSP settings with respect to 3D parameters<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "X3DAudioCalculate")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void Calculate([NativeName(NativeNameType.Param, "Instance")] [NativeName(NativeNameType.Type, "const X3DAUDIO_HANDLE")] X3DAudioHandle instance, [NativeName(NativeNameType.Param, "pListener")] [NativeName(NativeNameType.Type, "const X3DAUDIO_LISTENER*")] X3DAudioListener* pListener, [NativeName(NativeNameType.Param, "pEmitter")] [NativeName(NativeNameType.Type, "const X3DAUDIO_EMITTER*")] ref X3DAudioEmitter pEmitter, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "pDSPSettings")] [NativeName(NativeNameType.Type, "X3DAUDIO_DSP_SETTINGS*")] X3DAudioDspSettings* pDSPSettings)
		{
			fixed (X3DAudioEmitter* ppEmitter = &pEmitter)
			{
				CalculateNative(instance, pListener, (X3DAudioEmitter*)ppEmitter, flags, pDSPSettings);
			}
		}

		/// <summary>
		/// calculates DSP settings with respect to 3D parameters<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "X3DAudioCalculate")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void Calculate([NativeName(NativeNameType.Param, "Instance")] [NativeName(NativeNameType.Type, "const X3DAUDIO_HANDLE")] X3DAudioHandle instance, [NativeName(NativeNameType.Param, "pListener")] [NativeName(NativeNameType.Type, "const X3DAUDIO_LISTENER*")] ref X3DAudioListener pListener, [NativeName(NativeNameType.Param, "pEmitter")] [NativeName(NativeNameType.Type, "const X3DAUDIO_EMITTER*")] ref X3DAudioEmitter pEmitter, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "pDSPSettings")] [NativeName(NativeNameType.Type, "X3DAUDIO_DSP_SETTINGS*")] X3DAudioDspSettings* pDSPSettings)
		{
			fixed (X3DAudioListener* ppListener = &pListener)
			{
				fixed (X3DAudioEmitter* ppEmitter = &pEmitter)
				{
					CalculateNative(instance, (X3DAudioListener*)ppListener, (X3DAudioEmitter*)ppEmitter, flags, pDSPSettings);
				}
			}
		}

		/// <summary>
		/// calculates DSP settings with respect to 3D parameters<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "X3DAudioCalculate")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void Calculate([NativeName(NativeNameType.Param, "Instance")] [NativeName(NativeNameType.Type, "const X3DAUDIO_HANDLE")] X3DAudioHandle instance, [NativeName(NativeNameType.Param, "pListener")] [NativeName(NativeNameType.Type, "const X3DAUDIO_LISTENER*")] X3DAudioListener* pListener, [NativeName(NativeNameType.Param, "pEmitter")] [NativeName(NativeNameType.Type, "const X3DAUDIO_EMITTER*")] X3DAudioEmitter* pEmitter, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "pDSPSettings")] [NativeName(NativeNameType.Type, "X3DAUDIO_DSP_SETTINGS*")] ref X3DAudioDspSettings pDSPSettings)
		{
			fixed (X3DAudioDspSettings* ppDSPSettings = &pDSPSettings)
			{
				CalculateNative(instance, pListener, pEmitter, flags, (X3DAudioDspSettings*)ppDSPSettings);
			}
		}

		/// <summary>
		/// calculates DSP settings with respect to 3D parameters<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "X3DAudioCalculate")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void Calculate([NativeName(NativeNameType.Param, "Instance")] [NativeName(NativeNameType.Type, "const X3DAUDIO_HANDLE")] X3DAudioHandle instance, [NativeName(NativeNameType.Param, "pListener")] [NativeName(NativeNameType.Type, "const X3DAUDIO_LISTENER*")] ref X3DAudioListener pListener, [NativeName(NativeNameType.Param, "pEmitter")] [NativeName(NativeNameType.Type, "const X3DAUDIO_EMITTER*")] X3DAudioEmitter* pEmitter, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "pDSPSettings")] [NativeName(NativeNameType.Type, "X3DAUDIO_DSP_SETTINGS*")] ref X3DAudioDspSettings pDSPSettings)
		{
			fixed (X3DAudioListener* ppListener = &pListener)
			{
				fixed (X3DAudioDspSettings* ppDSPSettings = &pDSPSettings)
				{
					CalculateNative(instance, (X3DAudioListener*)ppListener, pEmitter, flags, (X3DAudioDspSettings*)ppDSPSettings);
				}
			}
		}

		/// <summary>
		/// calculates DSP settings with respect to 3D parameters<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "X3DAudioCalculate")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void Calculate([NativeName(NativeNameType.Param, "Instance")] [NativeName(NativeNameType.Type, "const X3DAUDIO_HANDLE")] X3DAudioHandle instance, [NativeName(NativeNameType.Param, "pListener")] [NativeName(NativeNameType.Type, "const X3DAUDIO_LISTENER*")] X3DAudioListener* pListener, [NativeName(NativeNameType.Param, "pEmitter")] [NativeName(NativeNameType.Type, "const X3DAUDIO_EMITTER*")] ref X3DAudioEmitter pEmitter, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "pDSPSettings")] [NativeName(NativeNameType.Type, "X3DAUDIO_DSP_SETTINGS*")] ref X3DAudioDspSettings pDSPSettings)
		{
			fixed (X3DAudioEmitter* ppEmitter = &pEmitter)
			{
				fixed (X3DAudioDspSettings* ppDSPSettings = &pDSPSettings)
				{
					CalculateNative(instance, pListener, (X3DAudioEmitter*)ppEmitter, flags, (X3DAudioDspSettings*)ppDSPSettings);
				}
			}
		}

		/// <summary>
		/// calculates DSP settings with respect to 3D parameters<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "X3DAudioCalculate")]
		[return: NativeName(NativeNameType.Type, "void")]
		public static void Calculate([NativeName(NativeNameType.Param, "Instance")] [NativeName(NativeNameType.Type, "const X3DAUDIO_HANDLE")] X3DAudioHandle instance, [NativeName(NativeNameType.Param, "pListener")] [NativeName(NativeNameType.Type, "const X3DAUDIO_LISTENER*")] ref X3DAudioListener pListener, [NativeName(NativeNameType.Param, "pEmitter")] [NativeName(NativeNameType.Type, "const X3DAUDIO_EMITTER*")] ref X3DAudioEmitter pEmitter, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "pDSPSettings")] [NativeName(NativeNameType.Type, "X3DAUDIO_DSP_SETTINGS*")] ref X3DAudioDspSettings pDSPSettings)
		{
			fixed (X3DAudioListener* ppListener = &pListener)
			{
				fixed (X3DAudioEmitter* ppEmitter = &pEmitter)
				{
					fixed (X3DAudioDspSettings* ppDSPSettings = &pDSPSettings)
					{
						CalculateNative(instance, (X3DAudioListener*)ppListener, (X3DAudioEmitter*)ppEmitter, flags, (X3DAudioDspSettings*)ppDSPSettings);
					}
				}
			}
		}

	}
}
