// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using HexaGen.Runtime.COM;

namespace Hexa.NET.DXC
{
	public static unsafe partial class Extensions
	{

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOptionArgName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOptionArgName(this ComPtr<IDxcOptimizerPass> comObj, [NativeName(NativeNameType.Param, "argIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint argIndex, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPWSTR*")] ref char* ppResult) 
		{
			IDxcOptimizerPass* handle = comObj.Handle;
			fixed (char** pppResult = &ppResult)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizerPass*, uint, char**, int>)(handle->LpVtbl[6]))(handle, argIndex, (char**)pppResult);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOptionArgDescription")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOptionArgDescription(this ComPtr<IDxcOptimizerPass> comObj, [NativeName(NativeNameType.Param, "argIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint argIndex, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPWSTR*")] char** ppResult) 
		{
			IDxcOptimizerPass* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizerPass*, uint, char**, int>)(handle->LpVtbl[7]))(handle, argIndex, ppResult);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOptionArgDescription")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOptionArgDescription(this ComPtr<IDxcOptimizerPass> comObj, [NativeName(NativeNameType.Param, "argIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint argIndex, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPWSTR*")] ref char* ppResult) 
		{
			IDxcOptimizerPass* handle = comObj.Handle;
			fixed (char** pppResult = &ppResult)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizerPass*, uint, char**, int>)(handle->LpVtbl[7]))(handle, argIndex, (char**)pppResult);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcOptimizer* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcOptimizer* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<IDxcOptimizer> comObj) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<IDxcOptimizer> comObj) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetAvailablePassCount")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetAvailablePassCount(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pCount")] [NativeName(NativeNameType.Type, "UINT32*")] uint* pCount) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, uint*, int>)(handle->LpVtbl[3]))(handle, pCount);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetAvailablePassCount")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetAvailablePassCount(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pCount")] [NativeName(NativeNameType.Type, "UINT32*")] ref uint pCount) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			fixed (uint* ppCount = &pCount)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, uint*, int>)(handle->LpVtbl[3]))(handle, (uint*)ppCount);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetAvailablePass")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetAvailablePass(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "index")] [NativeName(NativeNameType.Type, "UINT32")] uint index, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOptimizerPass**")] IDxcOptimizerPass** ppResult) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, uint, IDxcOptimizerPass**, int>)(handle->LpVtbl[4]))(handle, index, ppResult);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetAvailablePass")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetAvailablePass(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "index")] [NativeName(NativeNameType.Type, "UINT32")] uint index, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOptimizerPass**")] ref IDxcOptimizerPass* ppResult) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			fixed (IDxcOptimizerPass** pppResult = &ppResult)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, uint, IDxcOptimizerPass**, int>)(handle->LpVtbl[4]))(handle, index, (IDxcOptimizerPass**)pppResult);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetAvailablePass")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetAvailablePass(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "index")] [NativeName(NativeNameType.Type, "UINT32")] uint index, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOptimizerPass**")] out ComPtr<IDxcOptimizerPass> ppResult) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			ppResult = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, uint, IDxcOptimizerPass**, int>)(handle->LpVtbl[4]))(handle, index, (IDxcOptimizerPass**)ppResult.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RunOptimizer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RunOptimizer(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pBlob, [NativeName(NativeNameType.Param, "ppOptions")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** ppOptions, [NativeName(NativeNameType.Param, "optionCount")] [NativeName(NativeNameType.Type, "UINT32")] uint optionCount, [NativeName(NativeNameType.Param, "pOutputModule")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** pOutputModule, [NativeName(NativeNameType.Param, "ppOutputText")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] IDxcBlobEncoding** ppOutputText) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, IDxcBlob*, char**, uint, IDxcBlob**, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, pBlob, ppOptions, optionCount, pOutputModule, ppOutputText);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RunOptimizer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RunOptimizer(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ref IDxcBlob pBlob, [NativeName(NativeNameType.Param, "ppOptions")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** ppOptions, [NativeName(NativeNameType.Param, "optionCount")] [NativeName(NativeNameType.Type, "UINT32")] uint optionCount, [NativeName(NativeNameType.Param, "pOutputModule")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** pOutputModule, [NativeName(NativeNameType.Param, "ppOutputText")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] IDxcBlobEncoding** ppOutputText) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			fixed (IDxcBlob* ppBlob = &pBlob)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, IDxcBlob*, char**, uint, IDxcBlob**, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, (IDxcBlob*)ppBlob, ppOptions, optionCount, pOutputModule, ppOutputText);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RunOptimizer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RunOptimizer(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ComPtr<IDxcBlob> pBlob, [NativeName(NativeNameType.Param, "ppOptions")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** ppOptions, [NativeName(NativeNameType.Param, "optionCount")] [NativeName(NativeNameType.Type, "UINT32")] uint optionCount, [NativeName(NativeNameType.Param, "pOutputModule")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** pOutputModule, [NativeName(NativeNameType.Param, "ppOutputText")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] IDxcBlobEncoding** ppOutputText) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, IDxcBlob*, char**, uint, IDxcBlob**, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, (IDxcBlob*)pBlob.Handle, ppOptions, optionCount, pOutputModule, ppOutputText);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RunOptimizer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RunOptimizer(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pBlob, [NativeName(NativeNameType.Param, "ppOptions")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* ppOptions, [NativeName(NativeNameType.Param, "optionCount")] [NativeName(NativeNameType.Type, "UINT32")] uint optionCount, [NativeName(NativeNameType.Param, "pOutputModule")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** pOutputModule, [NativeName(NativeNameType.Param, "ppOutputText")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] IDxcBlobEncoding** ppOutputText) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			fixed (char** pppOptions = &ppOptions)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, IDxcBlob*, char**, uint, IDxcBlob**, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, pBlob, (char**)pppOptions, optionCount, pOutputModule, ppOutputText);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RunOptimizer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RunOptimizer(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ref IDxcBlob pBlob, [NativeName(NativeNameType.Param, "ppOptions")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* ppOptions, [NativeName(NativeNameType.Param, "optionCount")] [NativeName(NativeNameType.Type, "UINT32")] uint optionCount, [NativeName(NativeNameType.Param, "pOutputModule")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** pOutputModule, [NativeName(NativeNameType.Param, "ppOutputText")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] IDxcBlobEncoding** ppOutputText) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			fixed (IDxcBlob* ppBlob = &pBlob)
			{
				fixed (char** pppOptions = &ppOptions)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, IDxcBlob*, char**, uint, IDxcBlob**, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, (IDxcBlob*)ppBlob, (char**)pppOptions, optionCount, pOutputModule, ppOutputText);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RunOptimizer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RunOptimizer(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ComPtr<IDxcBlob> pBlob, [NativeName(NativeNameType.Param, "ppOptions")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* ppOptions, [NativeName(NativeNameType.Param, "optionCount")] [NativeName(NativeNameType.Type, "UINT32")] uint optionCount, [NativeName(NativeNameType.Param, "pOutputModule")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** pOutputModule, [NativeName(NativeNameType.Param, "ppOutputText")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] IDxcBlobEncoding** ppOutputText) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			fixed (char** pppOptions = &ppOptions)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, IDxcBlob*, char**, uint, IDxcBlob**, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, (IDxcBlob*)pBlob.Handle, (char**)pppOptions, optionCount, pOutputModule, ppOutputText);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RunOptimizer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RunOptimizer(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pBlob, [NativeName(NativeNameType.Param, "ppOptions")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** ppOptions, [NativeName(NativeNameType.Param, "optionCount")] [NativeName(NativeNameType.Type, "UINT32")] uint optionCount, [NativeName(NativeNameType.Param, "pOutputModule")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref IDxcBlob* pOutputModule, [NativeName(NativeNameType.Param, "ppOutputText")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] IDxcBlobEncoding** ppOutputText) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			fixed (IDxcBlob** ppOutputModule = &pOutputModule)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, IDxcBlob*, char**, uint, IDxcBlob**, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, pBlob, ppOptions, optionCount, (IDxcBlob**)ppOutputModule, ppOutputText);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RunOptimizer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RunOptimizer(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pBlob, [NativeName(NativeNameType.Param, "ppOptions")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** ppOptions, [NativeName(NativeNameType.Param, "optionCount")] [NativeName(NativeNameType.Type, "UINT32")] uint optionCount, [NativeName(NativeNameType.Param, "pOutputModule")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref ComPtr<IDxcBlob> pOutputModule, [NativeName(NativeNameType.Param, "ppOutputText")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] IDxcBlobEncoding** ppOutputText) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			fixed (ComPtr<IDxcBlob>* ppOutputModule = &pOutputModule)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, IDxcBlob*, char**, uint, IDxcBlob**, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, pBlob, ppOptions, optionCount, (IDxcBlob**)ppOutputModule, ppOutputText);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RunOptimizer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RunOptimizer(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ref IDxcBlob pBlob, [NativeName(NativeNameType.Param, "ppOptions")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** ppOptions, [NativeName(NativeNameType.Param, "optionCount")] [NativeName(NativeNameType.Type, "UINT32")] uint optionCount, [NativeName(NativeNameType.Param, "pOutputModule")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref IDxcBlob* pOutputModule, [NativeName(NativeNameType.Param, "ppOutputText")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] IDxcBlobEncoding** ppOutputText) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			fixed (IDxcBlob* ppBlob = &pBlob)
			{
				fixed (IDxcBlob** ppOutputModule = &pOutputModule)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, IDxcBlob*, char**, uint, IDxcBlob**, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, (IDxcBlob*)ppBlob, ppOptions, optionCount, (IDxcBlob**)ppOutputModule, ppOutputText);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RunOptimizer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RunOptimizer(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ComPtr<IDxcBlob> pBlob, [NativeName(NativeNameType.Param, "ppOptions")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** ppOptions, [NativeName(NativeNameType.Param, "optionCount")] [NativeName(NativeNameType.Type, "UINT32")] uint optionCount, [NativeName(NativeNameType.Param, "pOutputModule")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref ComPtr<IDxcBlob> pOutputModule, [NativeName(NativeNameType.Param, "ppOutputText")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] IDxcBlobEncoding** ppOutputText) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			fixed (ComPtr<IDxcBlob>* ppOutputModule = &pOutputModule)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, IDxcBlob*, char**, uint, IDxcBlob**, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, (IDxcBlob*)pBlob.Handle, ppOptions, optionCount, (IDxcBlob**)ppOutputModule, ppOutputText);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RunOptimizer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RunOptimizer(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pBlob, [NativeName(NativeNameType.Param, "ppOptions")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* ppOptions, [NativeName(NativeNameType.Param, "optionCount")] [NativeName(NativeNameType.Type, "UINT32")] uint optionCount, [NativeName(NativeNameType.Param, "pOutputModule")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref IDxcBlob* pOutputModule, [NativeName(NativeNameType.Param, "ppOutputText")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] IDxcBlobEncoding** ppOutputText) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			fixed (char** pppOptions = &ppOptions)
			{
				fixed (IDxcBlob** ppOutputModule = &pOutputModule)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, IDxcBlob*, char**, uint, IDxcBlob**, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, pBlob, (char**)pppOptions, optionCount, (IDxcBlob**)ppOutputModule, ppOutputText);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RunOptimizer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RunOptimizer(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pBlob, [NativeName(NativeNameType.Param, "ppOptions")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* ppOptions, [NativeName(NativeNameType.Param, "optionCount")] [NativeName(NativeNameType.Type, "UINT32")] uint optionCount, [NativeName(NativeNameType.Param, "pOutputModule")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref ComPtr<IDxcBlob> pOutputModule, [NativeName(NativeNameType.Param, "ppOutputText")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] IDxcBlobEncoding** ppOutputText) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			fixed (char** pppOptions = &ppOptions)
			{
				fixed (ComPtr<IDxcBlob>* ppOutputModule = &pOutputModule)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, IDxcBlob*, char**, uint, IDxcBlob**, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, pBlob, (char**)pppOptions, optionCount, (IDxcBlob**)ppOutputModule, ppOutputText);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RunOptimizer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RunOptimizer(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ref IDxcBlob pBlob, [NativeName(NativeNameType.Param, "ppOptions")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* ppOptions, [NativeName(NativeNameType.Param, "optionCount")] [NativeName(NativeNameType.Type, "UINT32")] uint optionCount, [NativeName(NativeNameType.Param, "pOutputModule")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref IDxcBlob* pOutputModule, [NativeName(NativeNameType.Param, "ppOutputText")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] IDxcBlobEncoding** ppOutputText) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			fixed (IDxcBlob* ppBlob = &pBlob)
			{
				fixed (char** pppOptions = &ppOptions)
				{
					fixed (IDxcBlob** ppOutputModule = &pOutputModule)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, IDxcBlob*, char**, uint, IDxcBlob**, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, (IDxcBlob*)ppBlob, (char**)pppOptions, optionCount, (IDxcBlob**)ppOutputModule, ppOutputText);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RunOptimizer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RunOptimizer(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ComPtr<IDxcBlob> pBlob, [NativeName(NativeNameType.Param, "ppOptions")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* ppOptions, [NativeName(NativeNameType.Param, "optionCount")] [NativeName(NativeNameType.Type, "UINT32")] uint optionCount, [NativeName(NativeNameType.Param, "pOutputModule")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref ComPtr<IDxcBlob> pOutputModule, [NativeName(NativeNameType.Param, "ppOutputText")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] IDxcBlobEncoding** ppOutputText) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			fixed (char** pppOptions = &ppOptions)
			{
				fixed (ComPtr<IDxcBlob>* ppOutputModule = &pOutputModule)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, IDxcBlob*, char**, uint, IDxcBlob**, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, (IDxcBlob*)pBlob.Handle, (char**)pppOptions, optionCount, (IDxcBlob**)ppOutputModule, ppOutputText);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RunOptimizer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RunOptimizer(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pBlob, [NativeName(NativeNameType.Param, "ppOptions")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** ppOptions, [NativeName(NativeNameType.Param, "optionCount")] [NativeName(NativeNameType.Type, "UINT32")] uint optionCount, [NativeName(NativeNameType.Param, "pOutputModule")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** pOutputModule, [NativeName(NativeNameType.Param, "ppOutputText")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] ref IDxcBlobEncoding* ppOutputText) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			fixed (IDxcBlobEncoding** pppOutputText = &ppOutputText)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, IDxcBlob*, char**, uint, IDxcBlob**, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, pBlob, ppOptions, optionCount, pOutputModule, (IDxcBlobEncoding**)pppOutputText);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RunOptimizer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RunOptimizer(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pBlob, [NativeName(NativeNameType.Param, "ppOptions")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** ppOptions, [NativeName(NativeNameType.Param, "optionCount")] [NativeName(NativeNameType.Type, "UINT32")] uint optionCount, [NativeName(NativeNameType.Param, "pOutputModule")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** pOutputModule, [NativeName(NativeNameType.Param, "ppOutputText")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] out ComPtr<IDxcBlobEncoding> ppOutputText) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			ppOutputText = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, IDxcBlob*, char**, uint, IDxcBlob**, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, pBlob, ppOptions, optionCount, pOutputModule, (IDxcBlobEncoding**)ppOutputText.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RunOptimizer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RunOptimizer(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ref IDxcBlob pBlob, [NativeName(NativeNameType.Param, "ppOptions")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** ppOptions, [NativeName(NativeNameType.Param, "optionCount")] [NativeName(NativeNameType.Type, "UINT32")] uint optionCount, [NativeName(NativeNameType.Param, "pOutputModule")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** pOutputModule, [NativeName(NativeNameType.Param, "ppOutputText")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] ref IDxcBlobEncoding* ppOutputText) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			fixed (IDxcBlob* ppBlob = &pBlob)
			{
				fixed (IDxcBlobEncoding** pppOutputText = &ppOutputText)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, IDxcBlob*, char**, uint, IDxcBlob**, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, (IDxcBlob*)ppBlob, ppOptions, optionCount, pOutputModule, (IDxcBlobEncoding**)pppOutputText);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RunOptimizer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RunOptimizer(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ComPtr<IDxcBlob> pBlob, [NativeName(NativeNameType.Param, "ppOptions")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** ppOptions, [NativeName(NativeNameType.Param, "optionCount")] [NativeName(NativeNameType.Type, "UINT32")] uint optionCount, [NativeName(NativeNameType.Param, "pOutputModule")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** pOutputModule, [NativeName(NativeNameType.Param, "ppOutputText")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] out ComPtr<IDxcBlobEncoding> ppOutputText) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			ppOutputText = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, IDxcBlob*, char**, uint, IDxcBlob**, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, (IDxcBlob*)pBlob.Handle, ppOptions, optionCount, pOutputModule, (IDxcBlobEncoding**)ppOutputText.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RunOptimizer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RunOptimizer(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pBlob, [NativeName(NativeNameType.Param, "ppOptions")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* ppOptions, [NativeName(NativeNameType.Param, "optionCount")] [NativeName(NativeNameType.Type, "UINT32")] uint optionCount, [NativeName(NativeNameType.Param, "pOutputModule")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** pOutputModule, [NativeName(NativeNameType.Param, "ppOutputText")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] ref IDxcBlobEncoding* ppOutputText) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			fixed (char** pppOptions = &ppOptions)
			{
				fixed (IDxcBlobEncoding** pppOutputText = &ppOutputText)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, IDxcBlob*, char**, uint, IDxcBlob**, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, pBlob, (char**)pppOptions, optionCount, pOutputModule, (IDxcBlobEncoding**)pppOutputText);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RunOptimizer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RunOptimizer(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pBlob, [NativeName(NativeNameType.Param, "ppOptions")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* ppOptions, [NativeName(NativeNameType.Param, "optionCount")] [NativeName(NativeNameType.Type, "UINT32")] uint optionCount, [NativeName(NativeNameType.Param, "pOutputModule")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** pOutputModule, [NativeName(NativeNameType.Param, "ppOutputText")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] out ComPtr<IDxcBlobEncoding> ppOutputText) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			fixed (char** pppOptions = &ppOptions)
			{
				ppOutputText = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, IDxcBlob*, char**, uint, IDxcBlob**, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, pBlob, (char**)pppOptions, optionCount, pOutputModule, (IDxcBlobEncoding**)ppOutputText.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RunOptimizer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RunOptimizer(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ref IDxcBlob pBlob, [NativeName(NativeNameType.Param, "ppOptions")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* ppOptions, [NativeName(NativeNameType.Param, "optionCount")] [NativeName(NativeNameType.Type, "UINT32")] uint optionCount, [NativeName(NativeNameType.Param, "pOutputModule")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** pOutputModule, [NativeName(NativeNameType.Param, "ppOutputText")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] ref IDxcBlobEncoding* ppOutputText) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			fixed (IDxcBlob* ppBlob = &pBlob)
			{
				fixed (char** pppOptions = &ppOptions)
				{
					fixed (IDxcBlobEncoding** pppOutputText = &ppOutputText)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, IDxcBlob*, char**, uint, IDxcBlob**, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, (IDxcBlob*)ppBlob, (char**)pppOptions, optionCount, pOutputModule, (IDxcBlobEncoding**)pppOutputText);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RunOptimizer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RunOptimizer(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ComPtr<IDxcBlob> pBlob, [NativeName(NativeNameType.Param, "ppOptions")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* ppOptions, [NativeName(NativeNameType.Param, "optionCount")] [NativeName(NativeNameType.Type, "UINT32")] uint optionCount, [NativeName(NativeNameType.Param, "pOutputModule")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** pOutputModule, [NativeName(NativeNameType.Param, "ppOutputText")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] out ComPtr<IDxcBlobEncoding> ppOutputText) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			fixed (char** pppOptions = &ppOptions)
			{
				ppOutputText = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, IDxcBlob*, char**, uint, IDxcBlob**, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, (IDxcBlob*)pBlob.Handle, (char**)pppOptions, optionCount, pOutputModule, (IDxcBlobEncoding**)ppOutputText.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RunOptimizer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RunOptimizer(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pBlob, [NativeName(NativeNameType.Param, "ppOptions")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** ppOptions, [NativeName(NativeNameType.Param, "optionCount")] [NativeName(NativeNameType.Type, "UINT32")] uint optionCount, [NativeName(NativeNameType.Param, "pOutputModule")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref IDxcBlob* pOutputModule, [NativeName(NativeNameType.Param, "ppOutputText")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] ref IDxcBlobEncoding* ppOutputText) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			fixed (IDxcBlob** ppOutputModule = &pOutputModule)
			{
				fixed (IDxcBlobEncoding** pppOutputText = &ppOutputText)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, IDxcBlob*, char**, uint, IDxcBlob**, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, pBlob, ppOptions, optionCount, (IDxcBlob**)ppOutputModule, (IDxcBlobEncoding**)pppOutputText);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RunOptimizer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RunOptimizer(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pBlob, [NativeName(NativeNameType.Param, "ppOptions")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** ppOptions, [NativeName(NativeNameType.Param, "optionCount")] [NativeName(NativeNameType.Type, "UINT32")] uint optionCount, [NativeName(NativeNameType.Param, "pOutputModule")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref ComPtr<IDxcBlob> pOutputModule, [NativeName(NativeNameType.Param, "ppOutputText")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] out ComPtr<IDxcBlobEncoding> ppOutputText) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			fixed (ComPtr<IDxcBlob>* ppOutputModule = &pOutputModule)
			{
				ppOutputText = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, IDxcBlob*, char**, uint, IDxcBlob**, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, pBlob, ppOptions, optionCount, (IDxcBlob**)ppOutputModule, (IDxcBlobEncoding**)ppOutputText.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RunOptimizer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RunOptimizer(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ref IDxcBlob pBlob, [NativeName(NativeNameType.Param, "ppOptions")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** ppOptions, [NativeName(NativeNameType.Param, "optionCount")] [NativeName(NativeNameType.Type, "UINT32")] uint optionCount, [NativeName(NativeNameType.Param, "pOutputModule")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref IDxcBlob* pOutputModule, [NativeName(NativeNameType.Param, "ppOutputText")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] ref IDxcBlobEncoding* ppOutputText) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			fixed (IDxcBlob* ppBlob = &pBlob)
			{
				fixed (IDxcBlob** ppOutputModule = &pOutputModule)
				{
					fixed (IDxcBlobEncoding** pppOutputText = &ppOutputText)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, IDxcBlob*, char**, uint, IDxcBlob**, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, (IDxcBlob*)ppBlob, ppOptions, optionCount, (IDxcBlob**)ppOutputModule, (IDxcBlobEncoding**)pppOutputText);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RunOptimizer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RunOptimizer(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ComPtr<IDxcBlob> pBlob, [NativeName(NativeNameType.Param, "ppOptions")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** ppOptions, [NativeName(NativeNameType.Param, "optionCount")] [NativeName(NativeNameType.Type, "UINT32")] uint optionCount, [NativeName(NativeNameType.Param, "pOutputModule")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref ComPtr<IDxcBlob> pOutputModule, [NativeName(NativeNameType.Param, "ppOutputText")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] out ComPtr<IDxcBlobEncoding> ppOutputText) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			fixed (ComPtr<IDxcBlob>* ppOutputModule = &pOutputModule)
			{
				ppOutputText = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, IDxcBlob*, char**, uint, IDxcBlob**, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, (IDxcBlob*)pBlob.Handle, ppOptions, optionCount, (IDxcBlob**)ppOutputModule, (IDxcBlobEncoding**)ppOutputText.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RunOptimizer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RunOptimizer(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pBlob, [NativeName(NativeNameType.Param, "ppOptions")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* ppOptions, [NativeName(NativeNameType.Param, "optionCount")] [NativeName(NativeNameType.Type, "UINT32")] uint optionCount, [NativeName(NativeNameType.Param, "pOutputModule")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref IDxcBlob* pOutputModule, [NativeName(NativeNameType.Param, "ppOutputText")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] ref IDxcBlobEncoding* ppOutputText) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			fixed (char** pppOptions = &ppOptions)
			{
				fixed (IDxcBlob** ppOutputModule = &pOutputModule)
				{
					fixed (IDxcBlobEncoding** pppOutputText = &ppOutputText)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, IDxcBlob*, char**, uint, IDxcBlob**, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, pBlob, (char**)pppOptions, optionCount, (IDxcBlob**)ppOutputModule, (IDxcBlobEncoding**)pppOutputText);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RunOptimizer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RunOptimizer(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pBlob, [NativeName(NativeNameType.Param, "ppOptions")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* ppOptions, [NativeName(NativeNameType.Param, "optionCount")] [NativeName(NativeNameType.Type, "UINT32")] uint optionCount, [NativeName(NativeNameType.Param, "pOutputModule")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref ComPtr<IDxcBlob> pOutputModule, [NativeName(NativeNameType.Param, "ppOutputText")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] out ComPtr<IDxcBlobEncoding> ppOutputText) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			fixed (char** pppOptions = &ppOptions)
			{
				fixed (ComPtr<IDxcBlob>* ppOutputModule = &pOutputModule)
				{
					ppOutputText = default;
					int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, IDxcBlob*, char**, uint, IDxcBlob**, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, pBlob, (char**)pppOptions, optionCount, (IDxcBlob**)ppOutputModule, (IDxcBlobEncoding**)ppOutputText.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RunOptimizer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RunOptimizer(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ref IDxcBlob pBlob, [NativeName(NativeNameType.Param, "ppOptions")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* ppOptions, [NativeName(NativeNameType.Param, "optionCount")] [NativeName(NativeNameType.Type, "UINT32")] uint optionCount, [NativeName(NativeNameType.Param, "pOutputModule")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref IDxcBlob* pOutputModule, [NativeName(NativeNameType.Param, "ppOutputText")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] ref IDxcBlobEncoding* ppOutputText) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			fixed (IDxcBlob* ppBlob = &pBlob)
			{
				fixed (char** pppOptions = &ppOptions)
				{
					fixed (IDxcBlob** ppOutputModule = &pOutputModule)
					{
						fixed (IDxcBlobEncoding** pppOutputText = &ppOutputText)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, IDxcBlob*, char**, uint, IDxcBlob**, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, (IDxcBlob*)ppBlob, (char**)pppOptions, optionCount, (IDxcBlob**)ppOutputModule, (IDxcBlobEncoding**)pppOutputText);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RunOptimizer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RunOptimizer(this ComPtr<IDxcOptimizer> comObj, [NativeName(NativeNameType.Param, "pBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ComPtr<IDxcBlob> pBlob, [NativeName(NativeNameType.Param, "ppOptions")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* ppOptions, [NativeName(NativeNameType.Param, "optionCount")] [NativeName(NativeNameType.Type, "UINT32")] uint optionCount, [NativeName(NativeNameType.Param, "pOutputModule")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref ComPtr<IDxcBlob> pOutputModule, [NativeName(NativeNameType.Param, "ppOutputText")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] out ComPtr<IDxcBlobEncoding> ppOutputText) 
		{
			IDxcOptimizer* handle = comObj.Handle;
			fixed (char** pppOptions = &ppOptions)
			{
				fixed (ComPtr<IDxcBlob>* ppOutputModule = &pOutputModule)
				{
					ppOutputText = default;
					int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizer*, IDxcBlob*, char**, uint, IDxcBlob**, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, (IDxcBlob*)pBlob.Handle, (char**)pppOptions, optionCount, (IDxcBlob**)ppOutputModule, (IDxcBlobEncoding**)ppOutputText.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<IDxcVersionInfo> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDxcVersionInfo* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<IDxcVersionInfo> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDxcVersionInfo* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<IDxcVersionInfo> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcVersionInfo* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<IDxcVersionInfo> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcVersionInfo* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<IDxcVersionInfo> comObj) 
		{
			IDxcVersionInfo* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<IDxcVersionInfo> comObj) 
		{
			IDxcVersionInfo* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetVersion")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetVersion(this ComPtr<IDxcVersionInfo> comObj, [NativeName(NativeNameType.Param, "pMajor")] [NativeName(NativeNameType.Type, "UINT32*")] uint* pMajor, [NativeName(NativeNameType.Param, "pMinor")] [NativeName(NativeNameType.Type, "UINT32*")] uint* pMinor) 
		{
			IDxcVersionInfo* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo*, uint*, uint*, int>)(handle->LpVtbl[3]))(handle, pMajor, pMinor);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetVersion")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetVersion(this ComPtr<IDxcVersionInfo> comObj, [NativeName(NativeNameType.Param, "pMajor")] [NativeName(NativeNameType.Type, "UINT32*")] ref uint pMajor, [NativeName(NativeNameType.Param, "pMinor")] [NativeName(NativeNameType.Type, "UINT32*")] uint* pMinor) 
		{
			IDxcVersionInfo* handle = comObj.Handle;
			fixed (uint* ppMajor = &pMajor)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo*, uint*, uint*, int>)(handle->LpVtbl[3]))(handle, (uint*)ppMajor, pMinor);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetVersion")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetVersion(this ComPtr<IDxcVersionInfo> comObj, [NativeName(NativeNameType.Param, "pMajor")] [NativeName(NativeNameType.Type, "UINT32*")] uint* pMajor, [NativeName(NativeNameType.Param, "pMinor")] [NativeName(NativeNameType.Type, "UINT32*")] ref uint pMinor) 
		{
			IDxcVersionInfo* handle = comObj.Handle;
			fixed (uint* ppMinor = &pMinor)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo*, uint*, uint*, int>)(handle->LpVtbl[3]))(handle, pMajor, (uint*)ppMinor);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetVersion")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetVersion(this ComPtr<IDxcVersionInfo> comObj, [NativeName(NativeNameType.Param, "pMajor")] [NativeName(NativeNameType.Type, "UINT32*")] ref uint pMajor, [NativeName(NativeNameType.Param, "pMinor")] [NativeName(NativeNameType.Type, "UINT32*")] ref uint pMinor) 
		{
			IDxcVersionInfo* handle = comObj.Handle;
			fixed (uint* ppMajor = &pMajor)
			{
				fixed (uint* ppMinor = &pMinor)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo*, uint*, uint*, int>)(handle->LpVtbl[3]))(handle, (uint*)ppMajor, (uint*)ppMinor);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetFlags")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetFlags(this ComPtr<IDxcVersionInfo> comObj, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT32*")] uint* pFlags) 
		{
			IDxcVersionInfo* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo*, uint*, int>)(handle->LpVtbl[4]))(handle, pFlags);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetFlags")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetFlags(this ComPtr<IDxcVersionInfo> comObj, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT32*")] ref uint pFlags) 
		{
			IDxcVersionInfo* handle = comObj.Handle;
			fixed (uint* ppFlags = &pFlags)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo*, uint*, int>)(handle->LpVtbl[4]))(handle, (uint*)ppFlags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<IDxcVersionInfo2> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDxcVersionInfo2* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo2*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<IDxcVersionInfo2> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDxcVersionInfo2* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo2*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<IDxcVersionInfo2> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcVersionInfo2* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo2*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<IDxcVersionInfo2> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcVersionInfo2* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo2*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<IDxcVersionInfo2> comObj) 
		{
			IDxcVersionInfo2* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo2*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<IDxcVersionInfo2> comObj) 
		{
			IDxcVersionInfo2* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo2*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetVersion")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetVersion(this ComPtr<IDxcVersionInfo2> comObj, [NativeName(NativeNameType.Param, "pMajor")] [NativeName(NativeNameType.Type, "UINT32*")] uint* pMajor, [NativeName(NativeNameType.Param, "pMinor")] [NativeName(NativeNameType.Type, "UINT32*")] uint* pMinor) 
		{
			IDxcVersionInfo2* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo2*, uint*, uint*, int>)(handle->LpVtbl[3]))(handle, pMajor, pMinor);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetVersion")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetVersion(this ComPtr<IDxcVersionInfo2> comObj, [NativeName(NativeNameType.Param, "pMajor")] [NativeName(NativeNameType.Type, "UINT32*")] ref uint pMajor, [NativeName(NativeNameType.Param, "pMinor")] [NativeName(NativeNameType.Type, "UINT32*")] uint* pMinor) 
		{
			IDxcVersionInfo2* handle = comObj.Handle;
			fixed (uint* ppMajor = &pMajor)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo2*, uint*, uint*, int>)(handle->LpVtbl[3]))(handle, (uint*)ppMajor, pMinor);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetVersion")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetVersion(this ComPtr<IDxcVersionInfo2> comObj, [NativeName(NativeNameType.Param, "pMajor")] [NativeName(NativeNameType.Type, "UINT32*")] uint* pMajor, [NativeName(NativeNameType.Param, "pMinor")] [NativeName(NativeNameType.Type, "UINT32*")] ref uint pMinor) 
		{
			IDxcVersionInfo2* handle = comObj.Handle;
			fixed (uint* ppMinor = &pMinor)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo2*, uint*, uint*, int>)(handle->LpVtbl[3]))(handle, pMajor, (uint*)ppMinor);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetVersion")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetVersion(this ComPtr<IDxcVersionInfo2> comObj, [NativeName(NativeNameType.Param, "pMajor")] [NativeName(NativeNameType.Type, "UINT32*")] ref uint pMajor, [NativeName(NativeNameType.Param, "pMinor")] [NativeName(NativeNameType.Type, "UINT32*")] ref uint pMinor) 
		{
			IDxcVersionInfo2* handle = comObj.Handle;
			fixed (uint* ppMajor = &pMajor)
			{
				fixed (uint* ppMinor = &pMinor)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo2*, uint*, uint*, int>)(handle->LpVtbl[3]))(handle, (uint*)ppMajor, (uint*)ppMinor);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetFlags")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetFlags(this ComPtr<IDxcVersionInfo2> comObj, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT32*")] uint* pFlags) 
		{
			IDxcVersionInfo2* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo2*, uint*, int>)(handle->LpVtbl[4]))(handle, pFlags);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetFlags")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetFlags(this ComPtr<IDxcVersionInfo2> comObj, [NativeName(NativeNameType.Param, "pFlags")] [NativeName(NativeNameType.Type, "UINT32*")] ref uint pFlags) 
		{
			IDxcVersionInfo2* handle = comObj.Handle;
			fixed (uint* ppFlags = &pFlags)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo2*, uint*, int>)(handle->LpVtbl[4]))(handle, (uint*)ppFlags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetCommitInfo")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetCommitInfo(this ComPtr<IDxcVersionInfo2> comObj, [NativeName(NativeNameType.Param, "pCommitCount")] [NativeName(NativeNameType.Type, "UINT32*")] uint* pCommitCount, [NativeName(NativeNameType.Param, "pCommitHash")] [NativeName(NativeNameType.Type, "char**")] byte** pCommitHash) 
		{
			IDxcVersionInfo2* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo2*, uint*, byte**, int>)(handle->LpVtbl[5]))(handle, pCommitCount, pCommitHash);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetCommitInfo")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetCommitInfo(this ComPtr<IDxcVersionInfo2> comObj, [NativeName(NativeNameType.Param, "pCommitCount")] [NativeName(NativeNameType.Type, "UINT32*")] ref uint pCommitCount, [NativeName(NativeNameType.Param, "pCommitHash")] [NativeName(NativeNameType.Type, "char**")] byte** pCommitHash) 
		{
			IDxcVersionInfo2* handle = comObj.Handle;
			fixed (uint* ppCommitCount = &pCommitCount)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo2*, uint*, byte**, int>)(handle->LpVtbl[5]))(handle, (uint*)ppCommitCount, pCommitHash);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetCommitInfo")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetCommitInfo(this ComPtr<IDxcVersionInfo2> comObj, [NativeName(NativeNameType.Param, "pCommitCount")] [NativeName(NativeNameType.Type, "UINT32*")] uint* pCommitCount, [NativeName(NativeNameType.Param, "pCommitHash")] [NativeName(NativeNameType.Type, "char**")] ref byte* pCommitHash) 
		{
			IDxcVersionInfo2* handle = comObj.Handle;
			fixed (byte** ppCommitHash = &pCommitHash)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo2*, uint*, byte**, int>)(handle->LpVtbl[5]))(handle, pCommitCount, (byte**)ppCommitHash);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetCommitInfo")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetCommitInfo(this ComPtr<IDxcVersionInfo2> comObj, [NativeName(NativeNameType.Param, "pCommitCount")] [NativeName(NativeNameType.Type, "UINT32*")] ref uint pCommitCount, [NativeName(NativeNameType.Param, "pCommitHash")] [NativeName(NativeNameType.Type, "char**")] ref byte* pCommitHash) 
		{
			IDxcVersionInfo2* handle = comObj.Handle;
			fixed (uint* ppCommitCount = &pCommitCount)
			{
				fixed (byte** ppCommitHash = &pCommitHash)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo2*, uint*, byte**, int>)(handle->LpVtbl[5]))(handle, (uint*)ppCommitCount, (byte**)ppCommitHash);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<IDxcVersionInfo3> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDxcVersionInfo3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo3*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<IDxcVersionInfo3> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDxcVersionInfo3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo3*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<IDxcVersionInfo3> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcVersionInfo3* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo3*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<IDxcVersionInfo3> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcVersionInfo3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo3*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<IDxcVersionInfo3> comObj) 
		{
			IDxcVersionInfo3* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo3*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<IDxcVersionInfo3> comObj) 
		{
			IDxcVersionInfo3* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo3*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetCustomVersionString")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetCustomVersionString(this ComPtr<IDxcVersionInfo3> comObj, [NativeName(NativeNameType.Param, "pVersionString")] [NativeName(NativeNameType.Type, "char**")] byte** pVersionString) 
		{
			IDxcVersionInfo3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo3*, byte**, int>)(handle->LpVtbl[3]))(handle, pVersionString);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetCustomVersionString")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetCustomVersionString(this ComPtr<IDxcVersionInfo3> comObj, [NativeName(NativeNameType.Param, "pVersionString")] [NativeName(NativeNameType.Type, "char**")] ref byte* pVersionString) 
		{
			IDxcVersionInfo3* handle = comObj.Handle;
			fixed (byte** ppVersionString = &pVersionString)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcVersionInfo3*, byte**, int>)(handle->LpVtbl[3]))(handle, (byte**)ppVersionString);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcPdbUtils* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcPdbUtils* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<IDxcPdbUtils> comObj) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<IDxcPdbUtils> comObj) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Load")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Load(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "pPdbOrDxil")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pPdbOrDxil) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, IDxcBlob*, int>)(handle->LpVtbl[3]))(handle, pPdbOrDxil);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Load")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Load(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "pPdbOrDxil")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ref IDxcBlob pPdbOrDxil) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			fixed (IDxcBlob* ppPdbOrDxil = &pPdbOrDxil)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, IDxcBlob*, int>)(handle->LpVtbl[3]))(handle, (IDxcBlob*)ppPdbOrDxil);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Load")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Load(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "pPdbOrDxil")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ComPtr<IDxcBlob> pPdbOrDxil) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, IDxcBlob*, int>)(handle->LpVtbl[3]))(handle, (IDxcBlob*)pPdbOrDxil.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetSourceCount")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetSourceCount(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "pCount")] [NativeName(NativeNameType.Type, "UINT32*")] uint* pCount) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, uint*, int>)(handle->LpVtbl[4]))(handle, pCount);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetSourceCount")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetSourceCount(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "pCount")] [NativeName(NativeNameType.Type, "UINT32*")] ref uint pCount) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			fixed (uint* ppCount = &pCount)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, uint*, int>)(handle->LpVtbl[4]))(handle, (uint*)ppCount);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetSource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetSource(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] IDxcBlobEncoding** ppResult) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, uint, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, uIndex, ppResult);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetSource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetSource(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] ref IDxcBlobEncoding* ppResult) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			fixed (IDxcBlobEncoding** pppResult = &ppResult)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, uint, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, uIndex, (IDxcBlobEncoding**)pppResult);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetSource")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetSource(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] out ComPtr<IDxcBlobEncoding> ppResult) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			ppResult = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, uint, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, uIndex, (IDxcBlobEncoding**)ppResult.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetSourceName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetSourceName(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "pResult")] [NativeName(NativeNameType.Type, "BSTR*")] void** pResult) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, uint, void**, int>)(handle->LpVtbl[6]))(handle, uIndex, pResult);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetSourceName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetSourceName(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "pResult")] [NativeName(NativeNameType.Type, "BSTR*")] ref void* pResult) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			fixed (void** ppResult = &pResult)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, uint, void**, int>)(handle->LpVtbl[6]))(handle, uIndex, (void**)ppResult);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetFlagCount")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetFlagCount(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "pCount")] [NativeName(NativeNameType.Type, "UINT32*")] uint* pCount) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, uint*, int>)(handle->LpVtbl[7]))(handle, pCount);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetFlagCount")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetFlagCount(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "pCount")] [NativeName(NativeNameType.Type, "UINT32*")] ref uint pCount) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			fixed (uint* ppCount = &pCount)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, uint*, int>)(handle->LpVtbl[7]))(handle, (uint*)ppCount);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetFlag")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetFlag(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "pResult")] [NativeName(NativeNameType.Type, "BSTR*")] void** pResult) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, uint, void**, int>)(handle->LpVtbl[8]))(handle, uIndex, pResult);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetFlag")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetFlag(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "pResult")] [NativeName(NativeNameType.Type, "BSTR*")] ref void* pResult) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			fixed (void** ppResult = &pResult)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, uint, void**, int>)(handle->LpVtbl[8]))(handle, uIndex, (void**)ppResult);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetArgCount")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetArgCount(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "pCount")] [NativeName(NativeNameType.Type, "UINT32*")] uint* pCount) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, uint*, int>)(handle->LpVtbl[9]))(handle, pCount);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetArgCount")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetArgCount(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "pCount")] [NativeName(NativeNameType.Type, "UINT32*")] ref uint pCount) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			fixed (uint* ppCount = &pCount)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, uint*, int>)(handle->LpVtbl[9]))(handle, (uint*)ppCount);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetArg")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetArg(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "pResult")] [NativeName(NativeNameType.Type, "BSTR*")] void** pResult) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, uint, void**, int>)(handle->LpVtbl[10]))(handle, uIndex, pResult);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetArg")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetArg(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "pResult")] [NativeName(NativeNameType.Type, "BSTR*")] ref void* pResult) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			fixed (void** ppResult = &pResult)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, uint, void**, int>)(handle->LpVtbl[10]))(handle, uIndex, (void**)ppResult);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetArgPairCount")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetArgPairCount(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "pCount")] [NativeName(NativeNameType.Type, "UINT32*")] uint* pCount) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, uint*, int>)(handle->LpVtbl[11]))(handle, pCount);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetArgPairCount")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetArgPairCount(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "pCount")] [NativeName(NativeNameType.Type, "UINT32*")] ref uint pCount) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			fixed (uint* ppCount = &pCount)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, uint*, int>)(handle->LpVtbl[11]))(handle, (uint*)ppCount);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetArgPair")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetArgPair(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "pName")] [NativeName(NativeNameType.Type, "BSTR*")] void** pName, [NativeName(NativeNameType.Param, "pValue")] [NativeName(NativeNameType.Type, "BSTR*")] void** pValue) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, uint, void**, void**, int>)(handle->LpVtbl[12]))(handle, uIndex, pName, pValue);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetArgPair")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetArgPair(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "pName")] [NativeName(NativeNameType.Type, "BSTR*")] ref void* pName, [NativeName(NativeNameType.Param, "pValue")] [NativeName(NativeNameType.Type, "BSTR*")] void** pValue) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			fixed (void** ppName = &pName)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, uint, void**, void**, int>)(handle->LpVtbl[12]))(handle, uIndex, (void**)ppName, pValue);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetArgPair")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetArgPair(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "pName")] [NativeName(NativeNameType.Type, "BSTR*")] void** pName, [NativeName(NativeNameType.Param, "pValue")] [NativeName(NativeNameType.Type, "BSTR*")] ref void* pValue) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			fixed (void** ppValue = &pValue)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, uint, void**, void**, int>)(handle->LpVtbl[12]))(handle, uIndex, pName, (void**)ppValue);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetArgPair")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetArgPair(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "pName")] [NativeName(NativeNameType.Type, "BSTR*")] ref void* pName, [NativeName(NativeNameType.Param, "pValue")] [NativeName(NativeNameType.Type, "BSTR*")] ref void* pValue) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			fixed (void** ppName = &pName)
			{
				fixed (void** ppValue = &pValue)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, uint, void**, void**, int>)(handle->LpVtbl[12]))(handle, uIndex, (void**)ppName, (void**)ppValue);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDefineCount")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDefineCount(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "pCount")] [NativeName(NativeNameType.Type, "UINT32*")] uint* pCount) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, uint*, int>)(handle->LpVtbl[13]))(handle, pCount);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDefineCount")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDefineCount(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "pCount")] [NativeName(NativeNameType.Type, "UINT32*")] ref uint pCount) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			fixed (uint* ppCount = &pCount)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, uint*, int>)(handle->LpVtbl[13]))(handle, (uint*)ppCount);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDefine")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDefine(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "pResult")] [NativeName(NativeNameType.Type, "BSTR*")] void** pResult) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, uint, void**, int>)(handle->LpVtbl[14]))(handle, uIndex, pResult);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDefine")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDefine(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "pResult")] [NativeName(NativeNameType.Type, "BSTR*")] ref void* pResult) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			fixed (void** ppResult = &pResult)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, uint, void**, int>)(handle->LpVtbl[14]))(handle, uIndex, (void**)ppResult);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetTargetProfile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetTargetProfile(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "pResult")] [NativeName(NativeNameType.Type, "BSTR*")] void** pResult) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, void**, int>)(handle->LpVtbl[15]))(handle, pResult);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetTargetProfile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetTargetProfile(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "pResult")] [NativeName(NativeNameType.Type, "BSTR*")] ref void* pResult) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			fixed (void** ppResult = &pResult)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, void**, int>)(handle->LpVtbl[15]))(handle, (void**)ppResult);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetEntryPoint")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetEntryPoint(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "pResult")] [NativeName(NativeNameType.Type, "BSTR*")] void** pResult) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, void**, int>)(handle->LpVtbl[16]))(handle, pResult);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetEntryPoint")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetEntryPoint(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "pResult")] [NativeName(NativeNameType.Type, "BSTR*")] ref void* pResult) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			fixed (void** ppResult = &pResult)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, void**, int>)(handle->LpVtbl[16]))(handle, (void**)ppResult);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetMainFileName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetMainFileName(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "pResult")] [NativeName(NativeNameType.Type, "BSTR*")] void** pResult) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, void**, int>)(handle->LpVtbl[17]))(handle, pResult);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetMainFileName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetMainFileName(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "pResult")] [NativeName(NativeNameType.Type, "BSTR*")] ref void* pResult) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			fixed (void** ppResult = &pResult)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, void**, int>)(handle->LpVtbl[17]))(handle, (void**)ppResult);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetHash")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetHash(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** ppResult) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, IDxcBlob**, int>)(handle->LpVtbl[18]))(handle, ppResult);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetHash")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetHash(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref IDxcBlob* ppResult) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			fixed (IDxcBlob** pppResult = &ppResult)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, IDxcBlob**, int>)(handle->LpVtbl[18]))(handle, (IDxcBlob**)pppResult);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetHash")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetHash(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcBlob**")] out ComPtr<IDxcBlob> ppResult) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			ppResult = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, IDxcBlob**, int>)(handle->LpVtbl[18]))(handle, (IDxcBlob**)ppResult.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetName(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "pResult")] [NativeName(NativeNameType.Type, "BSTR*")] void** pResult) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, void**, int>)(handle->LpVtbl[19]))(handle, pResult);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetName(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "pResult")] [NativeName(NativeNameType.Type, "BSTR*")] ref void* pResult) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			fixed (void** ppResult = &pResult)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, void**, int>)(handle->LpVtbl[19]))(handle, (void**)ppResult);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "IsFullPDB")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public static int IsFullPDB(this ComPtr<IDxcPdbUtils> comObj) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, int>)(handle->LpVtbl[20]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetFullPDB")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetFullPDB(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "ppFullPDB")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** ppFullPDB) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, IDxcBlob**, int>)(handle->LpVtbl[21]))(handle, ppFullPDB);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetFullPDB")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetFullPDB(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "ppFullPDB")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref IDxcBlob* ppFullPDB) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			fixed (IDxcBlob** pppFullPDB = &ppFullPDB)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, IDxcBlob**, int>)(handle->LpVtbl[21]))(handle, (IDxcBlob**)pppFullPDB);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetFullPDB")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetFullPDB(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "ppFullPDB")] [NativeName(NativeNameType.Type, "IDxcBlob**")] out ComPtr<IDxcBlob> ppFullPDB) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			ppFullPDB = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, IDxcBlob**, int>)(handle->LpVtbl[21]))(handle, (IDxcBlob**)ppFullPDB.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetVersionInfo")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetVersionInfo(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "ppVersionInfo")] [NativeName(NativeNameType.Type, "IDxcVersionInfo**")] IDxcVersionInfo** ppVersionInfo) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, IDxcVersionInfo**, int>)(handle->LpVtbl[22]))(handle, ppVersionInfo);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetVersionInfo")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetVersionInfo(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "ppVersionInfo")] [NativeName(NativeNameType.Type, "IDxcVersionInfo**")] ref IDxcVersionInfo* ppVersionInfo) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			fixed (IDxcVersionInfo** pppVersionInfo = &ppVersionInfo)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, IDxcVersionInfo**, int>)(handle->LpVtbl[22]))(handle, (IDxcVersionInfo**)pppVersionInfo);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetVersionInfo")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetVersionInfo(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "ppVersionInfo")] [NativeName(NativeNameType.Type, "IDxcVersionInfo**")] out ComPtr<IDxcVersionInfo> ppVersionInfo) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			ppVersionInfo = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, IDxcVersionInfo**, int>)(handle->LpVtbl[22]))(handle, (IDxcVersionInfo**)ppVersionInfo.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetCompiler")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetCompiler(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "pCompiler")] [NativeName(NativeNameType.Type, "IDxcCompiler3*")] IDxcCompiler3* pCompiler) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, IDxcCompiler3*, int>)(handle->LpVtbl[23]))(handle, pCompiler);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetCompiler")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetCompiler(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "pCompiler")] [NativeName(NativeNameType.Type, "IDxcCompiler3*")] ref IDxcCompiler3 pCompiler) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			fixed (IDxcCompiler3* ppCompiler = &pCompiler)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, IDxcCompiler3*, int>)(handle->LpVtbl[23]))(handle, (IDxcCompiler3*)ppCompiler);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SetCompiler")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SetCompiler(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "pCompiler")] [NativeName(NativeNameType.Type, "IDxcCompiler3*")] ComPtr<IDxcCompiler3> pCompiler) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, IDxcCompiler3*, int>)(handle->LpVtbl[23]))(handle, (IDxcCompiler3*)pCompiler.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CompileForFullPDB")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CompileForFullPDB(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcResult**")] IDxcResult** ppResult) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, IDxcResult**, int>)(handle->LpVtbl[24]))(handle, ppResult);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CompileForFullPDB")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CompileForFullPDB(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcResult**")] ref IDxcResult* ppResult) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			fixed (IDxcResult** pppResult = &ppResult)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, IDxcResult**, int>)(handle->LpVtbl[24]))(handle, (IDxcResult**)pppResult);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CompileForFullPDB")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CompileForFullPDB(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcResult**")] out ComPtr<IDxcResult> ppResult) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			ppResult = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, IDxcResult**, int>)(handle->LpVtbl[24]))(handle, (IDxcResult**)ppResult.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "OverrideArgs")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int OverrideArgs(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "pArgPairs")] [NativeName(NativeNameType.Type, "DxcArgPair*")] DxcArgPair* pArgPairs, [NativeName(NativeNameType.Param, "uNumArgPairs")] [NativeName(NativeNameType.Type, "UINT32")] uint uNumArgPairs) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, DxcArgPair*, uint, int>)(handle->LpVtbl[25]))(handle, pArgPairs, uNumArgPairs);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "OverrideArgs")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int OverrideArgs(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "pArgPairs")] [NativeName(NativeNameType.Type, "DxcArgPair*")] ref DxcArgPair pArgPairs, [NativeName(NativeNameType.Param, "uNumArgPairs")] [NativeName(NativeNameType.Type, "UINT32")] uint uNumArgPairs) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			fixed (DxcArgPair* ppArgPairs = &pArgPairs)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, DxcArgPair*, uint, int>)(handle->LpVtbl[25]))(handle, (DxcArgPair*)ppArgPairs, uNumArgPairs);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "OverrideRootSignature")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int OverrideRootSignature(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "pRootSignature")] [NativeName(NativeNameType.Type, "const WCHAR*")] char* pRootSignature) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, char*, int>)(handle->LpVtbl[26]))(handle, pRootSignature);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "OverrideRootSignature")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int OverrideRootSignature(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "pRootSignature")] [NativeName(NativeNameType.Type, "const WCHAR*")] ref char pRootSignature) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			fixed (char* ppRootSignature = &pRootSignature)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, char*, int>)(handle->LpVtbl[26]))(handle, (char*)ppRootSignature);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "OverrideRootSignature")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int OverrideRootSignature(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "pRootSignature")] [NativeName(NativeNameType.Type, "const WCHAR*")] ReadOnlySpan<char> pRootSignature) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			fixed (char* ppRootSignature = pRootSignature)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, char*, int>)(handle->LpVtbl[26]))(handle, (char*)ppRootSignature);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "OverrideRootSignature")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int OverrideRootSignature(this ComPtr<IDxcPdbUtils> comObj, [NativeName(NativeNameType.Param, "pRootSignature")] [NativeName(NativeNameType.Type, "const WCHAR*")] string pRootSignature) 
		{
			IDxcPdbUtils* handle = comObj.Handle;
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (pRootSignature != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(pRootSignature);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(pRootSignature, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			int ret = ((delegate* unmanaged[Stdcall]<IDxcPdbUtils*, char*, int>)(handle->LpVtbl[26]))(handle, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

	}
}
