// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using HexaGen.Runtime.COM;

namespace Hexa.NET.DXC
{
	public static unsafe partial class Extensions
	{

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] ref IDxcCompilerArgs* ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			fixed (DxcDefine* ppDefines = &pDefines)
			{
				fixed (IDxcCompilerArgs** pppArgs = &ppArgs)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, pSourceName, pEntryPoint, pTargetProfile, pArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)pppArgs);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] out ComPtr<IDxcCompilerArgs> ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			fixed (DxcDefine* ppDefines = &pDefines)
			{
				ppArgs = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, pSourceName, pEntryPoint, pTargetProfile, pArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)ppArgs.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] ReadOnlySpan<char> pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] ref IDxcCompilerArgs* ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			fixed (char* ppSourceName = pSourceName)
			{
				fixed (DxcDefine* ppDefines = &pDefines)
				{
					fixed (IDxcCompilerArgs** pppArgs = &ppArgs)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, (char*)ppSourceName, pEntryPoint, pTargetProfile, pArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)pppArgs);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] string pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] ref IDxcCompilerArgs* ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (pSourceName != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(pSourceName);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(pSourceName, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			fixed (DxcDefine* ppDefines = &pDefines)
			{
				fixed (IDxcCompilerArgs** pppArgs = &ppArgs)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, pStr0, pEntryPoint, pTargetProfile, pArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)pppArgs);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						Utils.Free(pStr0);
					}
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] ReadOnlySpan<char> pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] ref IDxcCompilerArgs* ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			fixed (char* ppEntryPoint = pEntryPoint)
			{
				fixed (DxcDefine* ppDefines = &pDefines)
				{
					fixed (IDxcCompilerArgs** pppArgs = &ppArgs)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, pSourceName, (char*)ppEntryPoint, pTargetProfile, pArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)pppArgs);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] string pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] ref IDxcCompilerArgs* ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (pEntryPoint != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(pEntryPoint);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(pEntryPoint, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			fixed (DxcDefine* ppDefines = &pDefines)
			{
				fixed (IDxcCompilerArgs** pppArgs = &ppArgs)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, pSourceName, pStr0, pTargetProfile, pArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)pppArgs);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						Utils.Free(pStr0);
					}
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] ReadOnlySpan<char> pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] ReadOnlySpan<char> pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] ref IDxcCompilerArgs* ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			fixed (char* ppSourceName = pSourceName)
			{
				fixed (char* ppEntryPoint = pEntryPoint)
				{
					fixed (DxcDefine* ppDefines = &pDefines)
					{
						fixed (IDxcCompilerArgs** pppArgs = &ppArgs)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, (char*)ppSourceName, (char*)ppEntryPoint, pTargetProfile, pArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)pppArgs);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] string pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] string pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] ref IDxcCompilerArgs* ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (pSourceName != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(pSourceName);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(pSourceName, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			char* pStr1 = null;
			int pStrSize1 = 0;
			if (pEntryPoint != null)
			{
				pStrSize1 = Utils.GetByteCountUTF16(pEntryPoint);
				if (pStrSize1 >= Utils.MaxStackallocSize)
				{
					pStr1 = Utils.Alloc<char>(pStrSize1 + 1);
				}
				else
				{
					byte* pStrStack1 = stackalloc byte[pStrSize1 + 1];
					pStr1 = (char*)pStrStack1;
				}
				int pStrOffset1 = Utils.EncodeStringUTF16(pEntryPoint, pStr1, pStrSize1);
				pStr1[pStrOffset1] = '\0';
			}
			fixed (DxcDefine* ppDefines = &pDefines)
			{
				fixed (IDxcCompilerArgs** pppArgs = &ppArgs)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, pStr0, pStr1, pTargetProfile, pArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)pppArgs);
					if (pStrSize1 >= Utils.MaxStackallocSize)
					{
						Utils.Free(pStr1);
					}
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						Utils.Free(pStr0);
					}
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] ReadOnlySpan<char> pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] ref IDxcCompilerArgs* ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			fixed (char* ppTargetProfile = pTargetProfile)
			{
				fixed (DxcDefine* ppDefines = &pDefines)
				{
					fixed (IDxcCompilerArgs** pppArgs = &ppArgs)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, pSourceName, pEntryPoint, (char*)ppTargetProfile, pArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)pppArgs);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] string pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] ref IDxcCompilerArgs* ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (pTargetProfile != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(pTargetProfile);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(pTargetProfile, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			fixed (DxcDefine* ppDefines = &pDefines)
			{
				fixed (IDxcCompilerArgs** pppArgs = &ppArgs)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, pSourceName, pEntryPoint, pStr0, pArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)pppArgs);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						Utils.Free(pStr0);
					}
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] ReadOnlySpan<char> pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] ReadOnlySpan<char> pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] ref IDxcCompilerArgs* ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			fixed (char* ppSourceName = pSourceName)
			{
				fixed (char* ppTargetProfile = pTargetProfile)
				{
					fixed (DxcDefine* ppDefines = &pDefines)
					{
						fixed (IDxcCompilerArgs** pppArgs = &ppArgs)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, (char*)ppSourceName, pEntryPoint, (char*)ppTargetProfile, pArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)pppArgs);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] string pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] string pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] ref IDxcCompilerArgs* ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (pSourceName != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(pSourceName);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(pSourceName, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			char* pStr1 = null;
			int pStrSize1 = 0;
			if (pTargetProfile != null)
			{
				pStrSize1 = Utils.GetByteCountUTF16(pTargetProfile);
				if (pStrSize1 >= Utils.MaxStackallocSize)
				{
					pStr1 = Utils.Alloc<char>(pStrSize1 + 1);
				}
				else
				{
					byte* pStrStack1 = stackalloc byte[pStrSize1 + 1];
					pStr1 = (char*)pStrStack1;
				}
				int pStrOffset1 = Utils.EncodeStringUTF16(pTargetProfile, pStr1, pStrSize1);
				pStr1[pStrOffset1] = '\0';
			}
			fixed (DxcDefine* ppDefines = &pDefines)
			{
				fixed (IDxcCompilerArgs** pppArgs = &ppArgs)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, pStr0, pEntryPoint, pStr1, pArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)pppArgs);
					if (pStrSize1 >= Utils.MaxStackallocSize)
					{
						Utils.Free(pStr1);
					}
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						Utils.Free(pStr0);
					}
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] ReadOnlySpan<char> pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] ReadOnlySpan<char> pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] ref IDxcCompilerArgs* ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			fixed (char* ppEntryPoint = pEntryPoint)
			{
				fixed (char* ppTargetProfile = pTargetProfile)
				{
					fixed (DxcDefine* ppDefines = &pDefines)
					{
						fixed (IDxcCompilerArgs** pppArgs = &ppArgs)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, pSourceName, (char*)ppEntryPoint, (char*)ppTargetProfile, pArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)pppArgs);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] string pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] string pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] ref IDxcCompilerArgs* ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (pEntryPoint != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(pEntryPoint);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(pEntryPoint, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			char* pStr1 = null;
			int pStrSize1 = 0;
			if (pTargetProfile != null)
			{
				pStrSize1 = Utils.GetByteCountUTF16(pTargetProfile);
				if (pStrSize1 >= Utils.MaxStackallocSize)
				{
					pStr1 = Utils.Alloc<char>(pStrSize1 + 1);
				}
				else
				{
					byte* pStrStack1 = stackalloc byte[pStrSize1 + 1];
					pStr1 = (char*)pStrStack1;
				}
				int pStrOffset1 = Utils.EncodeStringUTF16(pTargetProfile, pStr1, pStrSize1);
				pStr1[pStrOffset1] = '\0';
			}
			fixed (DxcDefine* ppDefines = &pDefines)
			{
				fixed (IDxcCompilerArgs** pppArgs = &ppArgs)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, pSourceName, pStr0, pStr1, pArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)pppArgs);
					if (pStrSize1 >= Utils.MaxStackallocSize)
					{
						Utils.Free(pStr1);
					}
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						Utils.Free(pStr0);
					}
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] ReadOnlySpan<char> pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] ReadOnlySpan<char> pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] ReadOnlySpan<char> pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] ref IDxcCompilerArgs* ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			fixed (char* ppSourceName = pSourceName)
			{
				fixed (char* ppEntryPoint = pEntryPoint)
				{
					fixed (char* ppTargetProfile = pTargetProfile)
					{
						fixed (DxcDefine* ppDefines = &pDefines)
						{
							fixed (IDxcCompilerArgs** pppArgs = &ppArgs)
							{
								int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, (char*)ppSourceName, (char*)ppEntryPoint, (char*)ppTargetProfile, pArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)pppArgs);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] string pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] string pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] string pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] ref IDxcCompilerArgs* ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (pSourceName != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(pSourceName);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(pSourceName, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			char* pStr1 = null;
			int pStrSize1 = 0;
			if (pEntryPoint != null)
			{
				pStrSize1 = Utils.GetByteCountUTF16(pEntryPoint);
				if (pStrSize1 >= Utils.MaxStackallocSize)
				{
					pStr1 = Utils.Alloc<char>(pStrSize1 + 1);
				}
				else
				{
					byte* pStrStack1 = stackalloc byte[pStrSize1 + 1];
					pStr1 = (char*)pStrStack1;
				}
				int pStrOffset1 = Utils.EncodeStringUTF16(pEntryPoint, pStr1, pStrSize1);
				pStr1[pStrOffset1] = '\0';
			}
			char* pStr2 = null;
			int pStrSize2 = 0;
			if (pTargetProfile != null)
			{
				pStrSize2 = Utils.GetByteCountUTF16(pTargetProfile);
				if (pStrSize2 >= Utils.MaxStackallocSize)
				{
					pStr2 = Utils.Alloc<char>(pStrSize2 + 1);
				}
				else
				{
					byte* pStrStack2 = stackalloc byte[pStrSize2 + 1];
					pStr2 = (char*)pStrStack2;
				}
				int pStrOffset2 = Utils.EncodeStringUTF16(pTargetProfile, pStr2, pStrSize2);
				pStr2[pStrOffset2] = '\0';
			}
			fixed (DxcDefine* ppDefines = &pDefines)
			{
				fixed (IDxcCompilerArgs** pppArgs = &ppArgs)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, pStr0, pStr1, pStr2, pArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)pppArgs);
					if (pStrSize2 >= Utils.MaxStackallocSize)
					{
						Utils.Free(pStr2);
					}
					if (pStrSize1 >= Utils.MaxStackallocSize)
					{
						Utils.Free(pStr1);
					}
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						Utils.Free(pStr0);
					}
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] ref IDxcCompilerArgs* ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			fixed (char** ppArguments = &pArguments)
			{
				fixed (DxcDefine* ppDefines = &pDefines)
				{
					fixed (IDxcCompilerArgs** pppArgs = &ppArgs)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, pSourceName, pEntryPoint, pTargetProfile, (char**)ppArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)pppArgs);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] out ComPtr<IDxcCompilerArgs> ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			fixed (char** ppArguments = &pArguments)
			{
				fixed (DxcDefine* ppDefines = &pDefines)
				{
					ppArgs = default;
					int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, pSourceName, pEntryPoint, pTargetProfile, (char**)ppArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)ppArgs.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] ReadOnlySpan<char> pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] ref IDxcCompilerArgs* ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			fixed (char* ppSourceName = pSourceName)
			{
				fixed (char** ppArguments = &pArguments)
				{
					fixed (DxcDefine* ppDefines = &pDefines)
					{
						fixed (IDxcCompilerArgs** pppArgs = &ppArgs)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, (char*)ppSourceName, pEntryPoint, pTargetProfile, (char**)ppArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)pppArgs);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] string pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] ref IDxcCompilerArgs* ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (pSourceName != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(pSourceName);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(pSourceName, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			fixed (char** ppArguments = &pArguments)
			{
				fixed (DxcDefine* ppDefines = &pDefines)
				{
					fixed (IDxcCompilerArgs** pppArgs = &ppArgs)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, pStr0, pEntryPoint, pTargetProfile, (char**)ppArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)pppArgs);
						if (pStrSize0 >= Utils.MaxStackallocSize)
						{
							Utils.Free(pStr0);
						}
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] ReadOnlySpan<char> pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] ref IDxcCompilerArgs* ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			fixed (char* ppEntryPoint = pEntryPoint)
			{
				fixed (char** ppArguments = &pArguments)
				{
					fixed (DxcDefine* ppDefines = &pDefines)
					{
						fixed (IDxcCompilerArgs** pppArgs = &ppArgs)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, pSourceName, (char*)ppEntryPoint, pTargetProfile, (char**)ppArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)pppArgs);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] string pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] ref IDxcCompilerArgs* ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (pEntryPoint != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(pEntryPoint);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(pEntryPoint, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			fixed (char** ppArguments = &pArguments)
			{
				fixed (DxcDefine* ppDefines = &pDefines)
				{
					fixed (IDxcCompilerArgs** pppArgs = &ppArgs)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, pSourceName, pStr0, pTargetProfile, (char**)ppArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)pppArgs);
						if (pStrSize0 >= Utils.MaxStackallocSize)
						{
							Utils.Free(pStr0);
						}
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] ReadOnlySpan<char> pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] ReadOnlySpan<char> pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] ref IDxcCompilerArgs* ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			fixed (char* ppSourceName = pSourceName)
			{
				fixed (char* ppEntryPoint = pEntryPoint)
				{
					fixed (char** ppArguments = &pArguments)
					{
						fixed (DxcDefine* ppDefines = &pDefines)
						{
							fixed (IDxcCompilerArgs** pppArgs = &ppArgs)
							{
								int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, (char*)ppSourceName, (char*)ppEntryPoint, pTargetProfile, (char**)ppArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)pppArgs);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] string pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] string pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] ref IDxcCompilerArgs* ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (pSourceName != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(pSourceName);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(pSourceName, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			char* pStr1 = null;
			int pStrSize1 = 0;
			if (pEntryPoint != null)
			{
				pStrSize1 = Utils.GetByteCountUTF16(pEntryPoint);
				if (pStrSize1 >= Utils.MaxStackallocSize)
				{
					pStr1 = Utils.Alloc<char>(pStrSize1 + 1);
				}
				else
				{
					byte* pStrStack1 = stackalloc byte[pStrSize1 + 1];
					pStr1 = (char*)pStrStack1;
				}
				int pStrOffset1 = Utils.EncodeStringUTF16(pEntryPoint, pStr1, pStrSize1);
				pStr1[pStrOffset1] = '\0';
			}
			fixed (char** ppArguments = &pArguments)
			{
				fixed (DxcDefine* ppDefines = &pDefines)
				{
					fixed (IDxcCompilerArgs** pppArgs = &ppArgs)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, pStr0, pStr1, pTargetProfile, (char**)ppArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)pppArgs);
						if (pStrSize1 >= Utils.MaxStackallocSize)
						{
							Utils.Free(pStr1);
						}
						if (pStrSize0 >= Utils.MaxStackallocSize)
						{
							Utils.Free(pStr0);
						}
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] ReadOnlySpan<char> pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] ref IDxcCompilerArgs* ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			fixed (char* ppTargetProfile = pTargetProfile)
			{
				fixed (char** ppArguments = &pArguments)
				{
					fixed (DxcDefine* ppDefines = &pDefines)
					{
						fixed (IDxcCompilerArgs** pppArgs = &ppArgs)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, pSourceName, pEntryPoint, (char*)ppTargetProfile, (char**)ppArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)pppArgs);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] string pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] ref IDxcCompilerArgs* ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (pTargetProfile != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(pTargetProfile);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(pTargetProfile, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			fixed (char** ppArguments = &pArguments)
			{
				fixed (DxcDefine* ppDefines = &pDefines)
				{
					fixed (IDxcCompilerArgs** pppArgs = &ppArgs)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, pSourceName, pEntryPoint, pStr0, (char**)ppArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)pppArgs);
						if (pStrSize0 >= Utils.MaxStackallocSize)
						{
							Utils.Free(pStr0);
						}
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] ReadOnlySpan<char> pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] ReadOnlySpan<char> pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] ref IDxcCompilerArgs* ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			fixed (char* ppSourceName = pSourceName)
			{
				fixed (char* ppTargetProfile = pTargetProfile)
				{
					fixed (char** ppArguments = &pArguments)
					{
						fixed (DxcDefine* ppDefines = &pDefines)
						{
							fixed (IDxcCompilerArgs** pppArgs = &ppArgs)
							{
								int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, (char*)ppSourceName, pEntryPoint, (char*)ppTargetProfile, (char**)ppArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)pppArgs);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] string pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] string pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] ref IDxcCompilerArgs* ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (pSourceName != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(pSourceName);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(pSourceName, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			char* pStr1 = null;
			int pStrSize1 = 0;
			if (pTargetProfile != null)
			{
				pStrSize1 = Utils.GetByteCountUTF16(pTargetProfile);
				if (pStrSize1 >= Utils.MaxStackallocSize)
				{
					pStr1 = Utils.Alloc<char>(pStrSize1 + 1);
				}
				else
				{
					byte* pStrStack1 = stackalloc byte[pStrSize1 + 1];
					pStr1 = (char*)pStrStack1;
				}
				int pStrOffset1 = Utils.EncodeStringUTF16(pTargetProfile, pStr1, pStrSize1);
				pStr1[pStrOffset1] = '\0';
			}
			fixed (char** ppArguments = &pArguments)
			{
				fixed (DxcDefine* ppDefines = &pDefines)
				{
					fixed (IDxcCompilerArgs** pppArgs = &ppArgs)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, pStr0, pEntryPoint, pStr1, (char**)ppArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)pppArgs);
						if (pStrSize1 >= Utils.MaxStackallocSize)
						{
							Utils.Free(pStr1);
						}
						if (pStrSize0 >= Utils.MaxStackallocSize)
						{
							Utils.Free(pStr0);
						}
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] ReadOnlySpan<char> pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] ReadOnlySpan<char> pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] ref IDxcCompilerArgs* ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			fixed (char* ppEntryPoint = pEntryPoint)
			{
				fixed (char* ppTargetProfile = pTargetProfile)
				{
					fixed (char** ppArguments = &pArguments)
					{
						fixed (DxcDefine* ppDefines = &pDefines)
						{
							fixed (IDxcCompilerArgs** pppArgs = &ppArgs)
							{
								int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, pSourceName, (char*)ppEntryPoint, (char*)ppTargetProfile, (char**)ppArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)pppArgs);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] string pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] string pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] ref IDxcCompilerArgs* ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (pEntryPoint != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(pEntryPoint);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(pEntryPoint, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			char* pStr1 = null;
			int pStrSize1 = 0;
			if (pTargetProfile != null)
			{
				pStrSize1 = Utils.GetByteCountUTF16(pTargetProfile);
				if (pStrSize1 >= Utils.MaxStackallocSize)
				{
					pStr1 = Utils.Alloc<char>(pStrSize1 + 1);
				}
				else
				{
					byte* pStrStack1 = stackalloc byte[pStrSize1 + 1];
					pStr1 = (char*)pStrStack1;
				}
				int pStrOffset1 = Utils.EncodeStringUTF16(pTargetProfile, pStr1, pStrSize1);
				pStr1[pStrOffset1] = '\0';
			}
			fixed (char** ppArguments = &pArguments)
			{
				fixed (DxcDefine* ppDefines = &pDefines)
				{
					fixed (IDxcCompilerArgs** pppArgs = &ppArgs)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, pSourceName, pStr0, pStr1, (char**)ppArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)pppArgs);
						if (pStrSize1 >= Utils.MaxStackallocSize)
						{
							Utils.Free(pStr1);
						}
						if (pStrSize0 >= Utils.MaxStackallocSize)
						{
							Utils.Free(pStr0);
						}
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] ReadOnlySpan<char> pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] ReadOnlySpan<char> pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] ReadOnlySpan<char> pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] ref IDxcCompilerArgs* ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			fixed (char* ppSourceName = pSourceName)
			{
				fixed (char* ppEntryPoint = pEntryPoint)
				{
					fixed (char* ppTargetProfile = pTargetProfile)
					{
						fixed (char** ppArguments = &pArguments)
						{
							fixed (DxcDefine* ppDefines = &pDefines)
							{
								fixed (IDxcCompilerArgs** pppArgs = &ppArgs)
								{
									int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, (char*)ppSourceName, (char*)ppEntryPoint, (char*)ppTargetProfile, (char**)ppArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)pppArgs);
									return ret;
								}
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "BuildArguments")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int BuildArguments(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pSourceName")] [NativeName(NativeNameType.Type, "LPCWSTR")] string pSourceName, [NativeName(NativeNameType.Param, "pEntryPoint")] [NativeName(NativeNameType.Type, "LPCWSTR")] string pEntryPoint, [NativeName(NativeNameType.Param, "pTargetProfile")] [NativeName(NativeNameType.Type, "LPCWSTR")] string pTargetProfile, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pDefines")] [NativeName(NativeNameType.Type, "const DxcDefine*")] ref DxcDefine pDefines, [NativeName(NativeNameType.Param, "defineCount")] [NativeName(NativeNameType.Type, "UINT32")] uint defineCount, [NativeName(NativeNameType.Param, "ppArgs")] [NativeName(NativeNameType.Type, "IDxcCompilerArgs**")] ref IDxcCompilerArgs* ppArgs) 
		{
			IDxcUtils* handle = comObj.Handle;
			char* pStr0 = null;
			int pStrSize0 = 0;
			if (pSourceName != null)
			{
				pStrSize0 = Utils.GetByteCountUTF16(pSourceName);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<char>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = (char*)pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF16(pSourceName, pStr0, pStrSize0);
				pStr0[pStrOffset0] = '\0';
			}
			char* pStr1 = null;
			int pStrSize1 = 0;
			if (pEntryPoint != null)
			{
				pStrSize1 = Utils.GetByteCountUTF16(pEntryPoint);
				if (pStrSize1 >= Utils.MaxStackallocSize)
				{
					pStr1 = Utils.Alloc<char>(pStrSize1 + 1);
				}
				else
				{
					byte* pStrStack1 = stackalloc byte[pStrSize1 + 1];
					pStr1 = (char*)pStrStack1;
				}
				int pStrOffset1 = Utils.EncodeStringUTF16(pEntryPoint, pStr1, pStrSize1);
				pStr1[pStrOffset1] = '\0';
			}
			char* pStr2 = null;
			int pStrSize2 = 0;
			if (pTargetProfile != null)
			{
				pStrSize2 = Utils.GetByteCountUTF16(pTargetProfile);
				if (pStrSize2 >= Utils.MaxStackallocSize)
				{
					pStr2 = Utils.Alloc<char>(pStrSize2 + 1);
				}
				else
				{
					byte* pStrStack2 = stackalloc byte[pStrSize2 + 1];
					pStr2 = (char*)pStrStack2;
				}
				int pStrOffset2 = Utils.EncodeStringUTF16(pTargetProfile, pStr2, pStrSize2);
				pStr2[pStrOffset2] = '\0';
			}
			fixed (char** ppArguments = &pArguments)
			{
				fixed (DxcDefine* ppDefines = &pDefines)
				{
					fixed (IDxcCompilerArgs** pppArgs = &ppArgs)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, char*, char*, char*, char**, uint, DxcDefine*, uint, IDxcCompilerArgs**, int>)(handle->LpVtbl[14]))(handle, pStr0, pStr1, pStr2, (char**)ppArguments, argCount, (DxcDefine*)ppDefines, defineCount, (IDxcCompilerArgs**)pppArgs);
						if (pStrSize2 >= Utils.MaxStackallocSize)
						{
							Utils.Free(pStr2);
						}
						if (pStrSize1 >= Utils.MaxStackallocSize)
						{
							Utils.Free(pStr1);
						}
						if (pStrSize0 >= Utils.MaxStackallocSize)
						{
							Utils.Free(pStr0);
						}
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Takes the shader PDB and returns the hash and the container inside it<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPDBContents")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPDBContents(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pPDBBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pPDBBlob, [NativeName(NativeNameType.Param, "ppHash")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** ppHash, [NativeName(NativeNameType.Param, "ppContainer")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** ppContainer) 
		{
			IDxcUtils* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, IDxcBlob*, IDxcBlob**, IDxcBlob**, int>)(handle->LpVtbl[15]))(handle, pPDBBlob, ppHash, ppContainer);
			return ret;
		}

		/// <summary>
		/// Takes the shader PDB and returns the hash and the container inside it<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPDBContents")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPDBContents(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pPDBBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ref IDxcBlob pPDBBlob, [NativeName(NativeNameType.Param, "ppHash")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** ppHash, [NativeName(NativeNameType.Param, "ppContainer")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** ppContainer) 
		{
			IDxcUtils* handle = comObj.Handle;
			fixed (IDxcBlob* ppPDBBlob = &pPDBBlob)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, IDxcBlob*, IDxcBlob**, IDxcBlob**, int>)(handle->LpVtbl[15]))(handle, (IDxcBlob*)ppPDBBlob, ppHash, ppContainer);
				return ret;
			}
		}

		/// <summary>
		/// Takes the shader PDB and returns the hash and the container inside it<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPDBContents")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPDBContents(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pPDBBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ComPtr<IDxcBlob> pPDBBlob, [NativeName(NativeNameType.Param, "ppHash")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** ppHash, [NativeName(NativeNameType.Param, "ppContainer")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** ppContainer) 
		{
			IDxcUtils* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, IDxcBlob*, IDxcBlob**, IDxcBlob**, int>)(handle->LpVtbl[15]))(handle, (IDxcBlob*)pPDBBlob.Handle, ppHash, ppContainer);
			return ret;
		}

		/// <summary>
		/// Takes the shader PDB and returns the hash and the container inside it<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPDBContents")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPDBContents(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pPDBBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pPDBBlob, [NativeName(NativeNameType.Param, "ppHash")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref IDxcBlob* ppHash, [NativeName(NativeNameType.Param, "ppContainer")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** ppContainer) 
		{
			IDxcUtils* handle = comObj.Handle;
			fixed (IDxcBlob** pppHash = &ppHash)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, IDxcBlob*, IDxcBlob**, IDxcBlob**, int>)(handle->LpVtbl[15]))(handle, pPDBBlob, (IDxcBlob**)pppHash, ppContainer);
				return ret;
			}
		}

		/// <summary>
		/// Takes the shader PDB and returns the hash and the container inside it<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPDBContents")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPDBContents(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pPDBBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pPDBBlob, [NativeName(NativeNameType.Param, "ppHash")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref ComPtr<IDxcBlob> ppHash, [NativeName(NativeNameType.Param, "ppContainer")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** ppContainer) 
		{
			IDxcUtils* handle = comObj.Handle;
			fixed (ComPtr<IDxcBlob>* pppHash = &ppHash)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, IDxcBlob*, IDxcBlob**, IDxcBlob**, int>)(handle->LpVtbl[15]))(handle, pPDBBlob, (IDxcBlob**)pppHash, ppContainer);
				return ret;
			}
		}

		/// <summary>
		/// Takes the shader PDB and returns the hash and the container inside it<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPDBContents")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPDBContents(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pPDBBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ref IDxcBlob pPDBBlob, [NativeName(NativeNameType.Param, "ppHash")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref IDxcBlob* ppHash, [NativeName(NativeNameType.Param, "ppContainer")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** ppContainer) 
		{
			IDxcUtils* handle = comObj.Handle;
			fixed (IDxcBlob* ppPDBBlob = &pPDBBlob)
			{
				fixed (IDxcBlob** pppHash = &ppHash)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, IDxcBlob*, IDxcBlob**, IDxcBlob**, int>)(handle->LpVtbl[15]))(handle, (IDxcBlob*)ppPDBBlob, (IDxcBlob**)pppHash, ppContainer);
					return ret;
				}
			}
		}

		/// <summary>
		/// Takes the shader PDB and returns the hash and the container inside it<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPDBContents")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPDBContents(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pPDBBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ComPtr<IDxcBlob> pPDBBlob, [NativeName(NativeNameType.Param, "ppHash")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref ComPtr<IDxcBlob> ppHash, [NativeName(NativeNameType.Param, "ppContainer")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** ppContainer) 
		{
			IDxcUtils* handle = comObj.Handle;
			fixed (ComPtr<IDxcBlob>* pppHash = &ppHash)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, IDxcBlob*, IDxcBlob**, IDxcBlob**, int>)(handle->LpVtbl[15]))(handle, (IDxcBlob*)pPDBBlob.Handle, (IDxcBlob**)pppHash, ppContainer);
				return ret;
			}
		}

		/// <summary>
		/// Takes the shader PDB and returns the hash and the container inside it<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPDBContents")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPDBContents(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pPDBBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pPDBBlob, [NativeName(NativeNameType.Param, "ppHash")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** ppHash, [NativeName(NativeNameType.Param, "ppContainer")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref IDxcBlob* ppContainer) 
		{
			IDxcUtils* handle = comObj.Handle;
			fixed (IDxcBlob** pppContainer = &ppContainer)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, IDxcBlob*, IDxcBlob**, IDxcBlob**, int>)(handle->LpVtbl[15]))(handle, pPDBBlob, ppHash, (IDxcBlob**)pppContainer);
				return ret;
			}
		}

		/// <summary>
		/// Takes the shader PDB and returns the hash and the container inside it<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPDBContents")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPDBContents(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pPDBBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pPDBBlob, [NativeName(NativeNameType.Param, "ppHash")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** ppHash, [NativeName(NativeNameType.Param, "ppContainer")] [NativeName(NativeNameType.Type, "IDxcBlob**")] out ComPtr<IDxcBlob> ppContainer) 
		{
			IDxcUtils* handle = comObj.Handle;
			ppContainer = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, IDxcBlob*, IDxcBlob**, IDxcBlob**, int>)(handle->LpVtbl[15]))(handle, pPDBBlob, ppHash, (IDxcBlob**)ppContainer.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// Takes the shader PDB and returns the hash and the container inside it<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPDBContents")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPDBContents(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pPDBBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ref IDxcBlob pPDBBlob, [NativeName(NativeNameType.Param, "ppHash")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** ppHash, [NativeName(NativeNameType.Param, "ppContainer")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref IDxcBlob* ppContainer) 
		{
			IDxcUtils* handle = comObj.Handle;
			fixed (IDxcBlob* ppPDBBlob = &pPDBBlob)
			{
				fixed (IDxcBlob** pppContainer = &ppContainer)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, IDxcBlob*, IDxcBlob**, IDxcBlob**, int>)(handle->LpVtbl[15]))(handle, (IDxcBlob*)ppPDBBlob, ppHash, (IDxcBlob**)pppContainer);
					return ret;
				}
			}
		}

		/// <summary>
		/// Takes the shader PDB and returns the hash and the container inside it<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPDBContents")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPDBContents(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pPDBBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ComPtr<IDxcBlob> pPDBBlob, [NativeName(NativeNameType.Param, "ppHash")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** ppHash, [NativeName(NativeNameType.Param, "ppContainer")] [NativeName(NativeNameType.Type, "IDxcBlob**")] out ComPtr<IDxcBlob> ppContainer) 
		{
			IDxcUtils* handle = comObj.Handle;
			ppContainer = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, IDxcBlob*, IDxcBlob**, IDxcBlob**, int>)(handle->LpVtbl[15]))(handle, (IDxcBlob*)pPDBBlob.Handle, ppHash, (IDxcBlob**)ppContainer.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// Takes the shader PDB and returns the hash and the container inside it<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPDBContents")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPDBContents(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pPDBBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pPDBBlob, [NativeName(NativeNameType.Param, "ppHash")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref IDxcBlob* ppHash, [NativeName(NativeNameType.Param, "ppContainer")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref IDxcBlob* ppContainer) 
		{
			IDxcUtils* handle = comObj.Handle;
			fixed (IDxcBlob** pppHash = &ppHash)
			{
				fixed (IDxcBlob** pppContainer = &ppContainer)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, IDxcBlob*, IDxcBlob**, IDxcBlob**, int>)(handle->LpVtbl[15]))(handle, pPDBBlob, (IDxcBlob**)pppHash, (IDxcBlob**)pppContainer);
					return ret;
				}
			}
		}

		/// <summary>
		/// Takes the shader PDB and returns the hash and the container inside it<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPDBContents")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPDBContents(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pPDBBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pPDBBlob, [NativeName(NativeNameType.Param, "ppHash")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref ComPtr<IDxcBlob> ppHash, [NativeName(NativeNameType.Param, "ppContainer")] [NativeName(NativeNameType.Type, "IDxcBlob**")] out ComPtr<IDxcBlob> ppContainer) 
		{
			IDxcUtils* handle = comObj.Handle;
			fixed (ComPtr<IDxcBlob>* pppHash = &ppHash)
			{
				ppContainer = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, IDxcBlob*, IDxcBlob**, IDxcBlob**, int>)(handle->LpVtbl[15]))(handle, pPDBBlob, (IDxcBlob**)pppHash, (IDxcBlob**)ppContainer.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// Takes the shader PDB and returns the hash and the container inside it<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPDBContents")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPDBContents(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pPDBBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ref IDxcBlob pPDBBlob, [NativeName(NativeNameType.Param, "ppHash")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref IDxcBlob* ppHash, [NativeName(NativeNameType.Param, "ppContainer")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref IDxcBlob* ppContainer) 
		{
			IDxcUtils* handle = comObj.Handle;
			fixed (IDxcBlob* ppPDBBlob = &pPDBBlob)
			{
				fixed (IDxcBlob** pppHash = &ppHash)
				{
					fixed (IDxcBlob** pppContainer = &ppContainer)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, IDxcBlob*, IDxcBlob**, IDxcBlob**, int>)(handle->LpVtbl[15]))(handle, (IDxcBlob*)ppPDBBlob, (IDxcBlob**)pppHash, (IDxcBlob**)pppContainer);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Takes the shader PDB and returns the hash and the container inside it<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPDBContents")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPDBContents(this ComPtr<IDxcUtils> comObj, [NativeName(NativeNameType.Param, "pPDBBlob")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ComPtr<IDxcBlob> pPDBBlob, [NativeName(NativeNameType.Param, "ppHash")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref ComPtr<IDxcBlob> ppHash, [NativeName(NativeNameType.Param, "ppContainer")] [NativeName(NativeNameType.Type, "IDxcBlob**")] out ComPtr<IDxcBlob> ppContainer) 
		{
			IDxcUtils* handle = comObj.Handle;
			fixed (ComPtr<IDxcBlob>* pppHash = &ppHash)
			{
				ppContainer = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDxcUtils*, IDxcBlob*, IDxcBlob**, IDxcBlob**, int>)(handle->LpVtbl[15]))(handle, (IDxcBlob*)pPDBBlob.Handle, (IDxcBlob**)pppHash, (IDxcBlob**)ppContainer.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<IDxcResult> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDxcResult* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcResult*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<IDxcResult> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDxcResult* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcResult*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<IDxcResult> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcResult* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcResult*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<IDxcResult> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcResult* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDxcResult*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<IDxcResult> comObj) 
		{
			IDxcResult* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcResult*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<IDxcResult> comObj) 
		{
			IDxcResult* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcResult*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetStatus")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetStatus(this ComPtr<IDxcResult> comObj, [NativeName(NativeNameType.Param, "pStatus")] [NativeName(NativeNameType.Type, "HRESULT*")] int* pStatus) 
		{
			IDxcResult* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcResult*, int*, int>)(handle->LpVtbl[3]))(handle, pStatus);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetStatus")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetStatus(this ComPtr<IDxcResult> comObj, [NativeName(NativeNameType.Param, "pStatus")] [NativeName(NativeNameType.Type, "HRESULT*")] ref int pStatus) 
		{
			IDxcResult* handle = comObj.Handle;
			fixed (int* ppStatus = &pStatus)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcResult*, int*, int>)(handle->LpVtbl[3]))(handle, (int*)ppStatus);
				return ret;
			}
		}

		/// <summary>
		/// GetResult returns the main result of the operation.<br/>
		/// This corresponds to:<br/>
		/// DXC_OUT_OBJECT - Compile() with shader or library target<br/>
		/// DXC_OUT_DISASSEMBLY - Disassemble()<br/>
		/// DXC_OUT_HLSL - Compile() with -P<br/>
		/// DXC_OUT_ROOT_SIGNATURE - Compile() with rootsig_* target<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "GetResult")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetResult(this ComPtr<IDxcResult> comObj, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** ppResult) 
		{
			IDxcResult* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcResult*, IDxcBlob**, int>)(handle->LpVtbl[4]))(handle, ppResult);
			return ret;
		}

		/// <summary>
		/// GetResult returns the main result of the operation.<br/>
		/// This corresponds to:<br/>
		/// DXC_OUT_OBJECT - Compile() with shader or library target<br/>
		/// DXC_OUT_DISASSEMBLY - Disassemble()<br/>
		/// DXC_OUT_HLSL - Compile() with -P<br/>
		/// DXC_OUT_ROOT_SIGNATURE - Compile() with rootsig_* target<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "GetResult")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetResult(this ComPtr<IDxcResult> comObj, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref IDxcBlob* ppResult) 
		{
			IDxcResult* handle = comObj.Handle;
			fixed (IDxcBlob** pppResult = &ppResult)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcResult*, IDxcBlob**, int>)(handle->LpVtbl[4]))(handle, (IDxcBlob**)pppResult);
				return ret;
			}
		}

		/// <summary>
		/// GetResult returns the main result of the operation.<br/>
		/// This corresponds to:<br/>
		/// DXC_OUT_OBJECT - Compile() with shader or library target<br/>
		/// DXC_OUT_DISASSEMBLY - Disassemble()<br/>
		/// DXC_OUT_HLSL - Compile() with -P<br/>
		/// DXC_OUT_ROOT_SIGNATURE - Compile() with rootsig_* target<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "GetResult")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetResult(this ComPtr<IDxcResult> comObj, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcBlob**")] out ComPtr<IDxcBlob> ppResult) 
		{
			IDxcResult* handle = comObj.Handle;
			ppResult = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcResult*, IDxcBlob**, int>)(handle->LpVtbl[4]))(handle, (IDxcBlob**)ppResult.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// GetErrorBuffer Corresponds to DXC_OUT_ERRORS.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "GetErrorBuffer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetErrorBuffer(this ComPtr<IDxcResult> comObj, [NativeName(NativeNameType.Param, "ppErrors")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] IDxcBlobEncoding** ppErrors) 
		{
			IDxcResult* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcResult*, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, ppErrors);
			return ret;
		}

		/// <summary>
		/// GetErrorBuffer Corresponds to DXC_OUT_ERRORS.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "GetErrorBuffer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetErrorBuffer(this ComPtr<IDxcResult> comObj, [NativeName(NativeNameType.Param, "ppErrors")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] ref IDxcBlobEncoding* ppErrors) 
		{
			IDxcResult* handle = comObj.Handle;
			fixed (IDxcBlobEncoding** pppErrors = &ppErrors)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcResult*, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, (IDxcBlobEncoding**)pppErrors);
				return ret;
			}
		}

		/// <summary>
		/// GetErrorBuffer Corresponds to DXC_OUT_ERRORS.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "GetErrorBuffer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetErrorBuffer(this ComPtr<IDxcResult> comObj, [NativeName(NativeNameType.Param, "ppErrors")] [NativeName(NativeNameType.Type, "IDxcBlobEncoding**")] out ComPtr<IDxcBlobEncoding> ppErrors) 
		{
			IDxcResult* handle = comObj.Handle;
			ppErrors = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcResult*, IDxcBlobEncoding**, int>)(handle->LpVtbl[5]))(handle, (IDxcBlobEncoding**)ppErrors.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "HasOutput")]
		[return: NativeName(NativeNameType.Type, "BOOL")]
		public static int HasOutput(this ComPtr<IDxcResult> comObj, [NativeName(NativeNameType.Param, "dxcOutKind")] [NativeName(NativeNameType.Type, "DXC_OUT_KIND")] DxcOutKind dxcOutKind) 
		{
			IDxcResult* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcResult*, DxcOutKind, int>)(handle->LpVtbl[6]))(handle, dxcOutKind);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput(this ComPtr<IDxcResult> comObj, [NativeName(NativeNameType.Param, "dxcOutKind")] [NativeName(NativeNameType.Type, "DXC_OUT_KIND")] DxcOutKind dxcOutKind, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* iid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] IDxcBlobUtf16** ppOutputName) 
		{
			IDxcResult* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcResult*, DxcOutKind, Guid*, void**, IDxcBlobUtf16**, int>)(handle->LpVtbl[7]))(handle, dxcOutKind, iid, ppvObject, ppOutputName);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput(this ComPtr<IDxcResult> comObj, [NativeName(NativeNameType.Param, "dxcOutKind")] [NativeName(NativeNameType.Type, "DXC_OUT_KIND")] DxcOutKind dxcOutKind, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid iid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] IDxcBlobUtf16** ppOutputName) 
		{
			IDxcResult* handle = comObj.Handle;
			fixed (Guid* piid = &iid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcResult*, DxcOutKind, Guid*, void**, IDxcBlobUtf16**, int>)(handle->LpVtbl[7]))(handle, dxcOutKind, (Guid*)piid, ppvObject, ppOutputName);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput<T>(this ComPtr<IDxcResult> comObj, [NativeName(NativeNameType.Param, "dxcOutKind")] [NativeName(NativeNameType.Type, "DXC_OUT_KIND")] DxcOutKind dxcOutKind, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] ref ComPtr<T> ppvObject, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] IDxcBlobUtf16** ppOutputName) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcResult* handle = comObj.Handle;
			fixed (ComPtr<T>* pppvObject = &ppvObject)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcResult*, DxcOutKind, Guid*, void**, IDxcBlobUtf16**, int>)(handle->LpVtbl[7]))(handle, dxcOutKind, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)pppvObject, ppOutputName);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput<T>(this ComPtr<IDxcResult> comObj, [NativeName(NativeNameType.Param, "dxcOutKind")] [NativeName(NativeNameType.Type, "DXC_OUT_KIND")] DxcOutKind dxcOutKind, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid iid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] ref ComPtr<T> ppvObject, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] IDxcBlobUtf16** ppOutputName) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcResult* handle = comObj.Handle;
			fixed (Guid* piid = &iid)
			{
				fixed (ComPtr<T>* pppvObject = &ppvObject)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcResult*, DxcOutKind, Guid*, void**, IDxcBlobUtf16**, int>)(handle->LpVtbl[7]))(handle, dxcOutKind, (Guid*)piid, (void**)pppvObject, ppOutputName);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput(this ComPtr<IDxcResult> comObj, [NativeName(NativeNameType.Param, "dxcOutKind")] [NativeName(NativeNameType.Type, "DXC_OUT_KIND")] DxcOutKind dxcOutKind, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* iid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] ref IDxcBlobUtf16* ppOutputName) 
		{
			IDxcResult* handle = comObj.Handle;
			fixed (IDxcBlobUtf16** pppOutputName = &ppOutputName)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcResult*, DxcOutKind, Guid*, void**, IDxcBlobUtf16**, int>)(handle->LpVtbl[7]))(handle, dxcOutKind, iid, ppvObject, (IDxcBlobUtf16**)pppOutputName);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput(this ComPtr<IDxcResult> comObj, [NativeName(NativeNameType.Param, "dxcOutKind")] [NativeName(NativeNameType.Type, "DXC_OUT_KIND")] DxcOutKind dxcOutKind, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* iid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] out ComPtr<IDxcBlobUtf16> ppOutputName) 
		{
			IDxcResult* handle = comObj.Handle;
			ppOutputName = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcResult*, DxcOutKind, Guid*, void**, IDxcBlobUtf16**, int>)(handle->LpVtbl[7]))(handle, dxcOutKind, iid, ppvObject, (IDxcBlobUtf16**)ppOutputName.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput(this ComPtr<IDxcResult> comObj, [NativeName(NativeNameType.Param, "dxcOutKind")] [NativeName(NativeNameType.Type, "DXC_OUT_KIND")] DxcOutKind dxcOutKind, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid iid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] ref IDxcBlobUtf16* ppOutputName) 
		{
			IDxcResult* handle = comObj.Handle;
			fixed (Guid* piid = &iid)
			{
				fixed (IDxcBlobUtf16** pppOutputName = &ppOutputName)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcResult*, DxcOutKind, Guid*, void**, IDxcBlobUtf16**, int>)(handle->LpVtbl[7]))(handle, dxcOutKind, (Guid*)piid, ppvObject, (IDxcBlobUtf16**)pppOutputName);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput(this ComPtr<IDxcResult> comObj, [NativeName(NativeNameType.Param, "dxcOutKind")] [NativeName(NativeNameType.Type, "DXC_OUT_KIND")] DxcOutKind dxcOutKind, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid iid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] out ComPtr<IDxcBlobUtf16> ppOutputName) 
		{
			IDxcResult* handle = comObj.Handle;
			fixed (Guid* piid = &iid)
			{
				ppOutputName = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDxcResult*, DxcOutKind, Guid*, void**, IDxcBlobUtf16**, int>)(handle->LpVtbl[7]))(handle, dxcOutKind, (Guid*)piid, ppvObject, (IDxcBlobUtf16**)ppOutputName.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput<T>(this ComPtr<IDxcResult> comObj, [NativeName(NativeNameType.Param, "dxcOutKind")] [NativeName(NativeNameType.Type, "DXC_OUT_KIND")] DxcOutKind dxcOutKind, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] ref ComPtr<T> ppvObject, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] out ComPtr<IDxcBlobUtf16> ppOutputName) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcResult* handle = comObj.Handle;
			fixed (ComPtr<T>* pppvObject = &ppvObject)
			{
				ppOutputName = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDxcResult*, DxcOutKind, Guid*, void**, IDxcBlobUtf16**, int>)(handle->LpVtbl[7]))(handle, dxcOutKind, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)pppvObject, (IDxcBlobUtf16**)ppOutputName.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput<T>(this ComPtr<IDxcResult> comObj, [NativeName(NativeNameType.Param, "dxcOutKind")] [NativeName(NativeNameType.Type, "DXC_OUT_KIND")] DxcOutKind dxcOutKind, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid iid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] ref ComPtr<T> ppvObject, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] out ComPtr<IDxcBlobUtf16> ppOutputName) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcResult* handle = comObj.Handle;
			fixed (Guid* piid = &iid)
			{
				fixed (ComPtr<T>* pppvObject = &ppvObject)
				{
					ppOutputName = default;
					int ret = ((delegate* unmanaged[Stdcall]<IDxcResult*, DxcOutKind, Guid*, void**, IDxcBlobUtf16**, int>)(handle->LpVtbl[7]))(handle, dxcOutKind, (Guid*)piid, (void**)pppvObject, (IDxcBlobUtf16**)ppOutputName.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetNumOutputs")]
		[return: NativeName(NativeNameType.Type, "UINT32")]
		public static uint GetNumOutputs(this ComPtr<IDxcResult> comObj) 
		{
			IDxcResult* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcResult*, uint>)(handle->LpVtbl[8]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutputByIndex")]
		[return: NativeName(NativeNameType.Type, "DXC_OUT_KIND")]
		public static DxcOutKind GetOutputByIndex(this ComPtr<IDxcResult> comObj, [NativeName(NativeNameType.Param, "Index")] [NativeName(NativeNameType.Type, "UINT32")] uint index) 
		{
			IDxcResult* handle = comObj.Handle;
			DxcOutKind ret = ((delegate* unmanaged[Stdcall]<IDxcResult*, uint, DxcOutKind>)(handle->LpVtbl[9]))(handle, index);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "PrimaryOutput")]
		[return: NativeName(NativeNameType.Type, "DXC_OUT_KIND")]
		public static DxcOutKind PrimaryOutput(this ComPtr<IDxcResult> comObj) 
		{
			IDxcResult* handle = comObj.Handle;
			DxcOutKind ret = ((delegate* unmanaged[Stdcall]<IDxcResult*, DxcOutKind>)(handle->LpVtbl[10]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<IDxcExtraOutputs> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDxcExtraOutputs* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcExtraOutputs*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<IDxcExtraOutputs> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDxcExtraOutputs* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcExtraOutputs*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<IDxcExtraOutputs> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcExtraOutputs* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcExtraOutputs*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<IDxcExtraOutputs> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcExtraOutputs* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDxcExtraOutputs*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<IDxcExtraOutputs> comObj) 
		{
			IDxcExtraOutputs* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcExtraOutputs*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<IDxcExtraOutputs> comObj) 
		{
			IDxcExtraOutputs* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcExtraOutputs*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutputCount")]
		[return: NativeName(NativeNameType.Type, "UINT32")]
		public static uint GetOutputCount(this ComPtr<IDxcExtraOutputs> comObj) 
		{
			IDxcExtraOutputs* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcExtraOutputs*, uint>)(handle->LpVtbl[3]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput(this ComPtr<IDxcExtraOutputs> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* iid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject, [NativeName(NativeNameType.Param, "ppOutputType")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] IDxcBlobUtf16** ppOutputType, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] IDxcBlobUtf16** ppOutputName) 
		{
			IDxcExtraOutputs* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcExtraOutputs*, uint, Guid*, void**, IDxcBlobUtf16**, IDxcBlobUtf16**, int>)(handle->LpVtbl[4]))(handle, uIndex, iid, ppvObject, ppOutputType, ppOutputName);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput(this ComPtr<IDxcExtraOutputs> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid iid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject, [NativeName(NativeNameType.Param, "ppOutputType")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] IDxcBlobUtf16** ppOutputType, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] IDxcBlobUtf16** ppOutputName) 
		{
			IDxcExtraOutputs* handle = comObj.Handle;
			fixed (Guid* piid = &iid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcExtraOutputs*, uint, Guid*, void**, IDxcBlobUtf16**, IDxcBlobUtf16**, int>)(handle->LpVtbl[4]))(handle, uIndex, (Guid*)piid, ppvObject, ppOutputType, ppOutputName);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput<T>(this ComPtr<IDxcExtraOutputs> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] ref ComPtr<T> ppvObject, [NativeName(NativeNameType.Param, "ppOutputType")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] IDxcBlobUtf16** ppOutputType, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] IDxcBlobUtf16** ppOutputName) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcExtraOutputs* handle = comObj.Handle;
			fixed (ComPtr<T>* pppvObject = &ppvObject)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcExtraOutputs*, uint, Guid*, void**, IDxcBlobUtf16**, IDxcBlobUtf16**, int>)(handle->LpVtbl[4]))(handle, uIndex, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)pppvObject, ppOutputType, ppOutputName);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput<T>(this ComPtr<IDxcExtraOutputs> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid iid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] ref ComPtr<T> ppvObject, [NativeName(NativeNameType.Param, "ppOutputType")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] IDxcBlobUtf16** ppOutputType, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] IDxcBlobUtf16** ppOutputName) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcExtraOutputs* handle = comObj.Handle;
			fixed (Guid* piid = &iid)
			{
				fixed (ComPtr<T>* pppvObject = &ppvObject)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcExtraOutputs*, uint, Guid*, void**, IDxcBlobUtf16**, IDxcBlobUtf16**, int>)(handle->LpVtbl[4]))(handle, uIndex, (Guid*)piid, (void**)pppvObject, ppOutputType, ppOutputName);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput(this ComPtr<IDxcExtraOutputs> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* iid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject, [NativeName(NativeNameType.Param, "ppOutputType")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] ref IDxcBlobUtf16* ppOutputType, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] IDxcBlobUtf16** ppOutputName) 
		{
			IDxcExtraOutputs* handle = comObj.Handle;
			fixed (IDxcBlobUtf16** pppOutputType = &ppOutputType)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcExtraOutputs*, uint, Guid*, void**, IDxcBlobUtf16**, IDxcBlobUtf16**, int>)(handle->LpVtbl[4]))(handle, uIndex, iid, ppvObject, (IDxcBlobUtf16**)pppOutputType, ppOutputName);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput(this ComPtr<IDxcExtraOutputs> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* iid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject, [NativeName(NativeNameType.Param, "ppOutputType")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] ref ComPtr<IDxcBlobUtf16> ppOutputType, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] IDxcBlobUtf16** ppOutputName) 
		{
			IDxcExtraOutputs* handle = comObj.Handle;
			fixed (ComPtr<IDxcBlobUtf16>* pppOutputType = &ppOutputType)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcExtraOutputs*, uint, Guid*, void**, IDxcBlobUtf16**, IDxcBlobUtf16**, int>)(handle->LpVtbl[4]))(handle, uIndex, iid, ppvObject, (IDxcBlobUtf16**)pppOutputType, ppOutputName);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput(this ComPtr<IDxcExtraOutputs> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid iid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject, [NativeName(NativeNameType.Param, "ppOutputType")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] ref IDxcBlobUtf16* ppOutputType, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] IDxcBlobUtf16** ppOutputName) 
		{
			IDxcExtraOutputs* handle = comObj.Handle;
			fixed (Guid* piid = &iid)
			{
				fixed (IDxcBlobUtf16** pppOutputType = &ppOutputType)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcExtraOutputs*, uint, Guid*, void**, IDxcBlobUtf16**, IDxcBlobUtf16**, int>)(handle->LpVtbl[4]))(handle, uIndex, (Guid*)piid, ppvObject, (IDxcBlobUtf16**)pppOutputType, ppOutputName);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput(this ComPtr<IDxcExtraOutputs> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid iid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject, [NativeName(NativeNameType.Param, "ppOutputType")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] ref ComPtr<IDxcBlobUtf16> ppOutputType, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] IDxcBlobUtf16** ppOutputName) 
		{
			IDxcExtraOutputs* handle = comObj.Handle;
			fixed (Guid* piid = &iid)
			{
				fixed (ComPtr<IDxcBlobUtf16>* pppOutputType = &ppOutputType)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcExtraOutputs*, uint, Guid*, void**, IDxcBlobUtf16**, IDxcBlobUtf16**, int>)(handle->LpVtbl[4]))(handle, uIndex, (Guid*)piid, ppvObject, (IDxcBlobUtf16**)pppOutputType, ppOutputName);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput<T>(this ComPtr<IDxcExtraOutputs> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] ref ComPtr<T> ppvObject, [NativeName(NativeNameType.Param, "ppOutputType")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] ref ComPtr<IDxcBlobUtf16> ppOutputType, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] IDxcBlobUtf16** ppOutputName) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcExtraOutputs* handle = comObj.Handle;
			fixed (ComPtr<T>* pppvObject = &ppvObject)
			{
				fixed (ComPtr<IDxcBlobUtf16>* pppOutputType = &ppOutputType)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcExtraOutputs*, uint, Guid*, void**, IDxcBlobUtf16**, IDxcBlobUtf16**, int>)(handle->LpVtbl[4]))(handle, uIndex, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)pppvObject, (IDxcBlobUtf16**)pppOutputType, ppOutputName);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput<T>(this ComPtr<IDxcExtraOutputs> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid iid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] ref ComPtr<T> ppvObject, [NativeName(NativeNameType.Param, "ppOutputType")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] ref ComPtr<IDxcBlobUtf16> ppOutputType, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] IDxcBlobUtf16** ppOutputName) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcExtraOutputs* handle = comObj.Handle;
			fixed (Guid* piid = &iid)
			{
				fixed (ComPtr<T>* pppvObject = &ppvObject)
				{
					fixed (ComPtr<IDxcBlobUtf16>* pppOutputType = &ppOutputType)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcExtraOutputs*, uint, Guid*, void**, IDxcBlobUtf16**, IDxcBlobUtf16**, int>)(handle->LpVtbl[4]))(handle, uIndex, (Guid*)piid, (void**)pppvObject, (IDxcBlobUtf16**)pppOutputType, ppOutputName);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput(this ComPtr<IDxcExtraOutputs> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* iid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject, [NativeName(NativeNameType.Param, "ppOutputType")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] IDxcBlobUtf16** ppOutputType, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] ref IDxcBlobUtf16* ppOutputName) 
		{
			IDxcExtraOutputs* handle = comObj.Handle;
			fixed (IDxcBlobUtf16** pppOutputName = &ppOutputName)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcExtraOutputs*, uint, Guid*, void**, IDxcBlobUtf16**, IDxcBlobUtf16**, int>)(handle->LpVtbl[4]))(handle, uIndex, iid, ppvObject, ppOutputType, (IDxcBlobUtf16**)pppOutputName);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput(this ComPtr<IDxcExtraOutputs> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* iid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject, [NativeName(NativeNameType.Param, "ppOutputType")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] IDxcBlobUtf16** ppOutputType, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] out ComPtr<IDxcBlobUtf16> ppOutputName) 
		{
			IDxcExtraOutputs* handle = comObj.Handle;
			ppOutputName = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcExtraOutputs*, uint, Guid*, void**, IDxcBlobUtf16**, IDxcBlobUtf16**, int>)(handle->LpVtbl[4]))(handle, uIndex, iid, ppvObject, ppOutputType, (IDxcBlobUtf16**)ppOutputName.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput(this ComPtr<IDxcExtraOutputs> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid iid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject, [NativeName(NativeNameType.Param, "ppOutputType")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] IDxcBlobUtf16** ppOutputType, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] ref IDxcBlobUtf16* ppOutputName) 
		{
			IDxcExtraOutputs* handle = comObj.Handle;
			fixed (Guid* piid = &iid)
			{
				fixed (IDxcBlobUtf16** pppOutputName = &ppOutputName)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcExtraOutputs*, uint, Guid*, void**, IDxcBlobUtf16**, IDxcBlobUtf16**, int>)(handle->LpVtbl[4]))(handle, uIndex, (Guid*)piid, ppvObject, ppOutputType, (IDxcBlobUtf16**)pppOutputName);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput(this ComPtr<IDxcExtraOutputs> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid iid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject, [NativeName(NativeNameType.Param, "ppOutputType")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] IDxcBlobUtf16** ppOutputType, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] out ComPtr<IDxcBlobUtf16> ppOutputName) 
		{
			IDxcExtraOutputs* handle = comObj.Handle;
			fixed (Guid* piid = &iid)
			{
				ppOutputName = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDxcExtraOutputs*, uint, Guid*, void**, IDxcBlobUtf16**, IDxcBlobUtf16**, int>)(handle->LpVtbl[4]))(handle, uIndex, (Guid*)piid, ppvObject, ppOutputType, (IDxcBlobUtf16**)ppOutputName.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput<T>(this ComPtr<IDxcExtraOutputs> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] ref ComPtr<T> ppvObject, [NativeName(NativeNameType.Param, "ppOutputType")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] IDxcBlobUtf16** ppOutputType, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] out ComPtr<IDxcBlobUtf16> ppOutputName) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcExtraOutputs* handle = comObj.Handle;
			fixed (ComPtr<T>* pppvObject = &ppvObject)
			{
				ppOutputName = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDxcExtraOutputs*, uint, Guid*, void**, IDxcBlobUtf16**, IDxcBlobUtf16**, int>)(handle->LpVtbl[4]))(handle, uIndex, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)pppvObject, ppOutputType, (IDxcBlobUtf16**)ppOutputName.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput<T>(this ComPtr<IDxcExtraOutputs> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid iid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] ref ComPtr<T> ppvObject, [NativeName(NativeNameType.Param, "ppOutputType")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] IDxcBlobUtf16** ppOutputType, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] out ComPtr<IDxcBlobUtf16> ppOutputName) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcExtraOutputs* handle = comObj.Handle;
			fixed (Guid* piid = &iid)
			{
				fixed (ComPtr<T>* pppvObject = &ppvObject)
				{
					ppOutputName = default;
					int ret = ((delegate* unmanaged[Stdcall]<IDxcExtraOutputs*, uint, Guid*, void**, IDxcBlobUtf16**, IDxcBlobUtf16**, int>)(handle->LpVtbl[4]))(handle, uIndex, (Guid*)piid, (void**)pppvObject, ppOutputType, (IDxcBlobUtf16**)ppOutputName.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput(this ComPtr<IDxcExtraOutputs> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* iid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject, [NativeName(NativeNameType.Param, "ppOutputType")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] ref IDxcBlobUtf16* ppOutputType, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] ref IDxcBlobUtf16* ppOutputName) 
		{
			IDxcExtraOutputs* handle = comObj.Handle;
			fixed (IDxcBlobUtf16** pppOutputType = &ppOutputType)
			{
				fixed (IDxcBlobUtf16** pppOutputName = &ppOutputName)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcExtraOutputs*, uint, Guid*, void**, IDxcBlobUtf16**, IDxcBlobUtf16**, int>)(handle->LpVtbl[4]))(handle, uIndex, iid, ppvObject, (IDxcBlobUtf16**)pppOutputType, (IDxcBlobUtf16**)pppOutputName);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput(this ComPtr<IDxcExtraOutputs> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* iid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject, [NativeName(NativeNameType.Param, "ppOutputType")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] ref ComPtr<IDxcBlobUtf16> ppOutputType, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] out ComPtr<IDxcBlobUtf16> ppOutputName) 
		{
			IDxcExtraOutputs* handle = comObj.Handle;
			fixed (ComPtr<IDxcBlobUtf16>* pppOutputType = &ppOutputType)
			{
				ppOutputName = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDxcExtraOutputs*, uint, Guid*, void**, IDxcBlobUtf16**, IDxcBlobUtf16**, int>)(handle->LpVtbl[4]))(handle, uIndex, iid, ppvObject, (IDxcBlobUtf16**)pppOutputType, (IDxcBlobUtf16**)ppOutputName.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput(this ComPtr<IDxcExtraOutputs> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid iid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject, [NativeName(NativeNameType.Param, "ppOutputType")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] ref IDxcBlobUtf16* ppOutputType, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] ref IDxcBlobUtf16* ppOutputName) 
		{
			IDxcExtraOutputs* handle = comObj.Handle;
			fixed (Guid* piid = &iid)
			{
				fixed (IDxcBlobUtf16** pppOutputType = &ppOutputType)
				{
					fixed (IDxcBlobUtf16** pppOutputName = &ppOutputName)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcExtraOutputs*, uint, Guid*, void**, IDxcBlobUtf16**, IDxcBlobUtf16**, int>)(handle->LpVtbl[4]))(handle, uIndex, (Guid*)piid, ppvObject, (IDxcBlobUtf16**)pppOutputType, (IDxcBlobUtf16**)pppOutputName);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput(this ComPtr<IDxcExtraOutputs> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid iid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject, [NativeName(NativeNameType.Param, "ppOutputType")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] ref ComPtr<IDxcBlobUtf16> ppOutputType, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] out ComPtr<IDxcBlobUtf16> ppOutputName) 
		{
			IDxcExtraOutputs* handle = comObj.Handle;
			fixed (Guid* piid = &iid)
			{
				fixed (ComPtr<IDxcBlobUtf16>* pppOutputType = &ppOutputType)
				{
					ppOutputName = default;
					int ret = ((delegate* unmanaged[Stdcall]<IDxcExtraOutputs*, uint, Guid*, void**, IDxcBlobUtf16**, IDxcBlobUtf16**, int>)(handle->LpVtbl[4]))(handle, uIndex, (Guid*)piid, ppvObject, (IDxcBlobUtf16**)pppOutputType, (IDxcBlobUtf16**)ppOutputName.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput<T>(this ComPtr<IDxcExtraOutputs> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] ref ComPtr<T> ppvObject, [NativeName(NativeNameType.Param, "ppOutputType")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] ref ComPtr<IDxcBlobUtf16> ppOutputType, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] out ComPtr<IDxcBlobUtf16> ppOutputName) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcExtraOutputs* handle = comObj.Handle;
			fixed (ComPtr<T>* pppvObject = &ppvObject)
			{
				fixed (ComPtr<IDxcBlobUtf16>* pppOutputType = &ppOutputType)
				{
					ppOutputName = default;
					int ret = ((delegate* unmanaged[Stdcall]<IDxcExtraOutputs*, uint, Guid*, void**, IDxcBlobUtf16**, IDxcBlobUtf16**, int>)(handle->LpVtbl[4]))(handle, uIndex, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)pppvObject, (IDxcBlobUtf16**)pppOutputType, (IDxcBlobUtf16**)ppOutputName.GetAddressOf());
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOutput")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOutput<T>(this ComPtr<IDxcExtraOutputs> comObj, [NativeName(NativeNameType.Param, "uIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint uIndex, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid iid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] ref ComPtr<T> ppvObject, [NativeName(NativeNameType.Param, "ppOutputType")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] ref ComPtr<IDxcBlobUtf16> ppOutputType, [NativeName(NativeNameType.Param, "ppOutputName")] [NativeName(NativeNameType.Type, "IDxcBlobUtf16**")] out ComPtr<IDxcBlobUtf16> ppOutputName) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcExtraOutputs* handle = comObj.Handle;
			fixed (Guid* piid = &iid)
			{
				fixed (ComPtr<T>* pppvObject = &ppvObject)
				{
					fixed (ComPtr<IDxcBlobUtf16>* pppOutputType = &ppOutputType)
					{
						ppOutputName = default;
						int ret = ((delegate* unmanaged[Stdcall]<IDxcExtraOutputs*, uint, Guid*, void**, IDxcBlobUtf16**, IDxcBlobUtf16**, int>)(handle->LpVtbl[4]))(handle, uIndex, (Guid*)piid, (void**)pppvObject, (IDxcBlobUtf16**)pppOutputType, (IDxcBlobUtf16**)ppOutputName.GetAddressOf());
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcCompiler3* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<IDxcCompiler3> comObj) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<IDxcCompiler3> comObj) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] DxcBuffer* pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] IDxcIncludeHandler* pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] void** ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pSource, pArguments, argCount, pIncludeHandler, riid, ppResult);
			return ret;
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] ref DxcBuffer pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] IDxcIncludeHandler* pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] void** ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (DxcBuffer* ppSource = &pSource)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (DxcBuffer*)ppSource, pArguments, argCount, pIncludeHandler, riid, ppResult);
				return ret;
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] DxcBuffer* pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] IDxcIncludeHandler* pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] void** ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (char** ppArguments = &pArguments)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pSource, (char**)ppArguments, argCount, pIncludeHandler, riid, ppResult);
				return ret;
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] ref DxcBuffer pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] IDxcIncludeHandler* pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] void** ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (DxcBuffer* ppSource = &pSource)
			{
				fixed (char** ppArguments = &pArguments)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (DxcBuffer*)ppSource, (char**)ppArguments, argCount, pIncludeHandler, riid, ppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] DxcBuffer* pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ref IDxcIncludeHandler pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] void** ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pSource, pArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, riid, ppResult);
				return ret;
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] DxcBuffer* pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ComPtr<IDxcIncludeHandler> pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] void** ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pSource, pArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, riid, ppResult);
			return ret;
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] ref DxcBuffer pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ref IDxcIncludeHandler pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] void** ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (DxcBuffer* ppSource = &pSource)
			{
				fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (DxcBuffer*)ppSource, pArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, riid, ppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] ref DxcBuffer pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ComPtr<IDxcIncludeHandler> pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] void** ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (DxcBuffer* ppSource = &pSource)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (DxcBuffer*)ppSource, pArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, riid, ppResult);
				return ret;
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] DxcBuffer* pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ref IDxcIncludeHandler pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] void** ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (char** ppArguments = &pArguments)
			{
				fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, riid, ppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] DxcBuffer* pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ComPtr<IDxcIncludeHandler> pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] void** ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (char** ppArguments = &pArguments)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, riid, ppResult);
				return ret;
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] ref DxcBuffer pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ref IDxcIncludeHandler pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] void** ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (DxcBuffer* ppSource = &pSource)
			{
				fixed (char** ppArguments = &pArguments)
				{
					fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (DxcBuffer*)ppSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, riid, ppResult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] ref DxcBuffer pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ComPtr<IDxcIncludeHandler> pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] void** ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (DxcBuffer* ppSource = &pSource)
			{
				fixed (char** ppArguments = &pArguments)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (DxcBuffer*)ppSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, riid, ppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] DxcBuffer* pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] IDxcIncludeHandler* pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] void** ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pSource, pArguments, argCount, pIncludeHandler, (Guid*)priid, ppResult);
				return ret;
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] ref DxcBuffer pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] IDxcIncludeHandler* pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] void** ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (DxcBuffer* ppSource = &pSource)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (DxcBuffer*)ppSource, pArguments, argCount, pIncludeHandler, (Guid*)priid, ppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] DxcBuffer* pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] IDxcIncludeHandler* pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] void** ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (char** ppArguments = &pArguments)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pSource, (char**)ppArguments, argCount, pIncludeHandler, (Guid*)priid, ppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] ref DxcBuffer pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] IDxcIncludeHandler* pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] void** ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (DxcBuffer* ppSource = &pSource)
			{
				fixed (char** ppArguments = &pArguments)
				{
					fixed (Guid* priid = &riid)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (DxcBuffer*)ppSource, (char**)ppArguments, argCount, pIncludeHandler, (Guid*)priid, ppResult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] DxcBuffer* pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ref IDxcIncludeHandler pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] void** ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pSource, pArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, (Guid*)priid, ppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] DxcBuffer* pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ComPtr<IDxcIncludeHandler> pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] void** ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pSource, pArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, (Guid*)priid, ppResult);
				return ret;
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] ref DxcBuffer pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ref IDxcIncludeHandler pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] void** ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (DxcBuffer* ppSource = &pSource)
			{
				fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
				{
					fixed (Guid* priid = &riid)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (DxcBuffer*)ppSource, pArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, (Guid*)priid, ppResult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] ref DxcBuffer pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ComPtr<IDxcIncludeHandler> pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] void** ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (DxcBuffer* ppSource = &pSource)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (DxcBuffer*)ppSource, pArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, (Guid*)priid, ppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] DxcBuffer* pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ref IDxcIncludeHandler pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] void** ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (char** ppArguments = &pArguments)
			{
				fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
				{
					fixed (Guid* priid = &riid)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, (Guid*)priid, ppResult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] DxcBuffer* pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ComPtr<IDxcIncludeHandler> pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] void** ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (char** ppArguments = &pArguments)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, (Guid*)priid, ppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] ref DxcBuffer pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ref IDxcIncludeHandler pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] void** ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (DxcBuffer* ppSource = &pSource)
			{
				fixed (char** ppArguments = &pArguments)
				{
					fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
					{
						fixed (Guid* priid = &riid)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (DxcBuffer*)ppSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, (Guid*)priid, ppResult);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] ref DxcBuffer pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ComPtr<IDxcIncludeHandler> pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] void** ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (DxcBuffer* ppSource = &pSource)
			{
				fixed (char** ppArguments = &pArguments)
				{
					fixed (Guid* priid = &riid)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (DxcBuffer*)ppSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, (Guid*)priid, ppResult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] DxcBuffer* pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] IDxcIncludeHandler* pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (void** pppResult = &ppResult)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pSource, pArguments, argCount, pIncludeHandler, riid, (void**)pppResult);
				return ret;
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] ref DxcBuffer pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] IDxcIncludeHandler* pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (DxcBuffer* ppSource = &pSource)
			{
				fixed (void** pppResult = &ppResult)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (DxcBuffer*)ppSource, pArguments, argCount, pIncludeHandler, riid, (void**)pppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] DxcBuffer* pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] IDxcIncludeHandler* pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (char** ppArguments = &pArguments)
			{
				fixed (void** pppResult = &ppResult)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pSource, (char**)ppArguments, argCount, pIncludeHandler, riid, (void**)pppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] ref DxcBuffer pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] IDxcIncludeHandler* pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (DxcBuffer* ppSource = &pSource)
			{
				fixed (char** ppArguments = &pArguments)
				{
					fixed (void** pppResult = &ppResult)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (DxcBuffer*)ppSource, (char**)ppArguments, argCount, pIncludeHandler, riid, (void**)pppResult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] DxcBuffer* pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ref IDxcIncludeHandler pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
			{
				fixed (void** pppResult = &ppResult)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pSource, pArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, riid, (void**)pppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] DxcBuffer* pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ComPtr<IDxcIncludeHandler> pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (void** pppResult = &ppResult)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pSource, pArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, riid, (void**)pppResult);
				return ret;
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] ref DxcBuffer pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ref IDxcIncludeHandler pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (DxcBuffer* ppSource = &pSource)
			{
				fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
				{
					fixed (void** pppResult = &ppResult)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (DxcBuffer*)ppSource, pArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, riid, (void**)pppResult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] ref DxcBuffer pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ComPtr<IDxcIncludeHandler> pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (DxcBuffer* ppSource = &pSource)
			{
				fixed (void** pppResult = &ppResult)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (DxcBuffer*)ppSource, pArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, riid, (void**)pppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] DxcBuffer* pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ref IDxcIncludeHandler pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (char** ppArguments = &pArguments)
			{
				fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
				{
					fixed (void** pppResult = &ppResult)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, riid, (void**)pppResult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] DxcBuffer* pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ComPtr<IDxcIncludeHandler> pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (char** ppArguments = &pArguments)
			{
				fixed (void** pppResult = &ppResult)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, riid, (void**)pppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] ref DxcBuffer pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ref IDxcIncludeHandler pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (DxcBuffer* ppSource = &pSource)
			{
				fixed (char** ppArguments = &pArguments)
				{
					fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
					{
						fixed (void** pppResult = &ppResult)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (DxcBuffer*)ppSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, riid, (void**)pppResult);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] ref DxcBuffer pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ComPtr<IDxcIncludeHandler> pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (DxcBuffer* ppSource = &pSource)
			{
				fixed (char** ppArguments = &pArguments)
				{
					fixed (void** pppResult = &ppResult)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (DxcBuffer*)ppSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, riid, (void**)pppResult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] DxcBuffer* pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] IDxcIncludeHandler* pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				fixed (void** pppResult = &ppResult)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pSource, pArguments, argCount, pIncludeHandler, (Guid*)priid, (void**)pppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] ref DxcBuffer pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] IDxcIncludeHandler* pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (DxcBuffer* ppSource = &pSource)
			{
				fixed (Guid* priid = &riid)
				{
					fixed (void** pppResult = &ppResult)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (DxcBuffer*)ppSource, pArguments, argCount, pIncludeHandler, (Guid*)priid, (void**)pppResult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] DxcBuffer* pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] IDxcIncludeHandler* pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (char** ppArguments = &pArguments)
			{
				fixed (Guid* priid = &riid)
				{
					fixed (void** pppResult = &ppResult)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pSource, (char**)ppArguments, argCount, pIncludeHandler, (Guid*)priid, (void**)pppResult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] ref DxcBuffer pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] IDxcIncludeHandler* pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (DxcBuffer* ppSource = &pSource)
			{
				fixed (char** ppArguments = &pArguments)
				{
					fixed (Guid* priid = &riid)
					{
						fixed (void** pppResult = &ppResult)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (DxcBuffer*)ppSource, (char**)ppArguments, argCount, pIncludeHandler, (Guid*)priid, (void**)pppResult);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] DxcBuffer* pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ref IDxcIncludeHandler pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
			{
				fixed (Guid* priid = &riid)
				{
					fixed (void** pppResult = &ppResult)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pSource, pArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, (Guid*)priid, (void**)pppResult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] DxcBuffer* pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ComPtr<IDxcIncludeHandler> pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				fixed (void** pppResult = &ppResult)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pSource, pArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, (Guid*)priid, (void**)pppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] ref DxcBuffer pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ref IDxcIncludeHandler pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (DxcBuffer* ppSource = &pSource)
			{
				fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
				{
					fixed (Guid* priid = &riid)
					{
						fixed (void** pppResult = &ppResult)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (DxcBuffer*)ppSource, pArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, (Guid*)priid, (void**)pppResult);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] ref DxcBuffer pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] char** pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ComPtr<IDxcIncludeHandler> pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (DxcBuffer* ppSource = &pSource)
			{
				fixed (Guid* priid = &riid)
				{
					fixed (void** pppResult = &ppResult)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (DxcBuffer*)ppSource, pArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, (Guid*)priid, (void**)pppResult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] DxcBuffer* pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ref IDxcIncludeHandler pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (char** ppArguments = &pArguments)
			{
				fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
				{
					fixed (Guid* priid = &riid)
					{
						fixed (void** pppResult = &ppResult)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, (Guid*)priid, (void**)pppResult);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] DxcBuffer* pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ComPtr<IDxcIncludeHandler> pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (char** ppArguments = &pArguments)
			{
				fixed (Guid* priid = &riid)
				{
					fixed (void** pppResult = &ppResult)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, pSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, (Guid*)priid, (void**)pppResult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] ref DxcBuffer pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ref IDxcIncludeHandler pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (DxcBuffer* ppSource = &pSource)
			{
				fixed (char** ppArguments = &pArguments)
				{
					fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
					{
						fixed (Guid* priid = &riid)
						{
							fixed (void** pppResult = &ppResult)
							{
								int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (DxcBuffer*)ppSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, (Guid*)priid, (void**)pppResult);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Compile")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Compile(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] ref DxcBuffer pSource, [NativeName(NativeNameType.Param, "pArguments")] [NativeName(NativeNameType.Type, "LPCWSTR*")] ref char* pArguments, [NativeName(NativeNameType.Param, "argCount")] [NativeName(NativeNameType.Type, "UINT32")] uint argCount, [NativeName(NativeNameType.Param, "pIncludeHandler")] [NativeName(NativeNameType.Type, "IDxcIncludeHandler*")] ComPtr<IDxcIncludeHandler> pIncludeHandler, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (DxcBuffer* ppSource = &pSource)
			{
				fixed (char** ppArguments = &pArguments)
				{
					fixed (Guid* priid = &riid)
					{
						fixed (void** pppResult = &ppResult)
						{
							int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, int>)(handle->LpVtbl[3]))(handle, (DxcBuffer*)ppSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, (Guid*)priid, (void**)pppResult);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// Disassemble a program.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Disassemble")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Disassemble(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pObject")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] DxcBuffer* pObject, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] void** ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, pObject, riid, ppResult);
			return ret;
		}

		/// <summary>
		/// Disassemble a program.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Disassemble")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Disassemble(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pObject")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] ref DxcBuffer pObject, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] void** ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (DxcBuffer* ppObject = &pObject)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, (DxcBuffer*)ppObject, riid, ppResult);
				return ret;
			}
		}

		/// <summary>
		/// Disassemble a program.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Disassemble")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Disassemble(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pObject")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] DxcBuffer* pObject, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] void** ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, pObject, (Guid*)priid, ppResult);
				return ret;
			}
		}

		/// <summary>
		/// Disassemble a program.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Disassemble")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Disassemble(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pObject")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] ref DxcBuffer pObject, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] void** ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (DxcBuffer* ppObject = &pObject)
			{
				fixed (Guid* priid = &riid)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, (DxcBuffer*)ppObject, (Guid*)priid, ppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Disassemble a program.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Disassemble")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Disassemble(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pObject")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] DxcBuffer* pObject, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (void** pppResult = &ppResult)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, pObject, riid, (void**)pppResult);
				return ret;
			}
		}

		/// <summary>
		/// Disassemble a program.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Disassemble")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Disassemble(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pObject")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] ref DxcBuffer pObject, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (DxcBuffer* ppObject = &pObject)
			{
				fixed (void** pppResult = &ppResult)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, (DxcBuffer*)ppObject, riid, (void**)pppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Disassemble a program.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Disassemble")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Disassemble(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pObject")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] DxcBuffer* pObject, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				fixed (void** pppResult = &ppResult)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, pObject, (Guid*)priid, (void**)pppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Disassemble a program.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Disassemble")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Disassemble(this ComPtr<IDxcCompiler3> comObj, [NativeName(NativeNameType.Param, "pObject")] [NativeName(NativeNameType.Type, "const DxcBuffer*")] ref DxcBuffer pObject, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPVOID*")] ref void* ppResult) 
		{
			IDxcCompiler3* handle = comObj.Handle;
			fixed (DxcBuffer* ppObject = &pObject)
			{
				fixed (Guid* priid = &riid)
				{
					fixed (void** pppResult = &ppResult)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, DxcBuffer*, Guid*, void**, int>)(handle->LpVtbl[4]))(handle, (DxcBuffer*)ppObject, (Guid*)priid, (void**)pppResult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<IDxcValidator> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDxcValidator* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<IDxcValidator> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDxcValidator* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<IDxcValidator> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcValidator* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<IDxcValidator> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcValidator* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<IDxcValidator> comObj) 
		{
			IDxcValidator* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcValidator*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<IDxcValidator> comObj) 
		{
			IDxcValidator* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcValidator*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// Validate a shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Validate")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Validate(this ComPtr<IDxcValidator> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pShader, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] IDxcOperationResult** ppResult) 
		{
			IDxcValidator* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator*, IDxcBlob*, uint, IDxcOperationResult**, int>)(handle->LpVtbl[3]))(handle, pShader, flags, ppResult);
			return ret;
		}

		/// <summary>
		/// Validate a shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Validate")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Validate(this ComPtr<IDxcValidator> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ref IDxcBlob pShader, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] IDxcOperationResult** ppResult) 
		{
			IDxcValidator* handle = comObj.Handle;
			fixed (IDxcBlob* ppShader = &pShader)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator*, IDxcBlob*, uint, IDxcOperationResult**, int>)(handle->LpVtbl[3]))(handle, (IDxcBlob*)ppShader, flags, ppResult);
				return ret;
			}
		}

		/// <summary>
		/// Validate a shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Validate")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Validate(this ComPtr<IDxcValidator> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ComPtr<IDxcBlob> pShader, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] IDxcOperationResult** ppResult) 
		{
			IDxcValidator* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator*, IDxcBlob*, uint, IDxcOperationResult**, int>)(handle->LpVtbl[3]))(handle, (IDxcBlob*)pShader.Handle, flags, ppResult);
			return ret;
		}

		/// <summary>
		/// Validate a shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Validate")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Validate(this ComPtr<IDxcValidator> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pShader, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] ref IDxcOperationResult* ppResult) 
		{
			IDxcValidator* handle = comObj.Handle;
			fixed (IDxcOperationResult** pppResult = &ppResult)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator*, IDxcBlob*, uint, IDxcOperationResult**, int>)(handle->LpVtbl[3]))(handle, pShader, flags, (IDxcOperationResult**)pppResult);
				return ret;
			}
		}

		/// <summary>
		/// Validate a shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Validate")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Validate(this ComPtr<IDxcValidator> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pShader, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] out ComPtr<IDxcOperationResult> ppResult) 
		{
			IDxcValidator* handle = comObj.Handle;
			ppResult = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator*, IDxcBlob*, uint, IDxcOperationResult**, int>)(handle->LpVtbl[3]))(handle, pShader, flags, (IDxcOperationResult**)ppResult.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// Validate a shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Validate")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Validate(this ComPtr<IDxcValidator> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ref IDxcBlob pShader, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] ref IDxcOperationResult* ppResult) 
		{
			IDxcValidator* handle = comObj.Handle;
			fixed (IDxcBlob* ppShader = &pShader)
			{
				fixed (IDxcOperationResult** pppResult = &ppResult)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator*, IDxcBlob*, uint, IDxcOperationResult**, int>)(handle->LpVtbl[3]))(handle, (IDxcBlob*)ppShader, flags, (IDxcOperationResult**)pppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Validate a shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Validate")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Validate(this ComPtr<IDxcValidator> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ComPtr<IDxcBlob> pShader, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] out ComPtr<IDxcOperationResult> ppResult) 
		{
			IDxcValidator* handle = comObj.Handle;
			ppResult = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator*, IDxcBlob*, uint, IDxcOperationResult**, int>)(handle->LpVtbl[3]))(handle, (IDxcBlob*)pShader.Handle, flags, (IDxcOperationResult**)ppResult.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<IDxcValidator2> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDxcValidator2* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator2*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<IDxcValidator2> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDxcValidator2* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator2*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<IDxcValidator2> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcValidator2* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator2*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<IDxcValidator2> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcValidator2* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator2*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<IDxcValidator2> comObj) 
		{
			IDxcValidator2* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcValidator2*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<IDxcValidator2> comObj) 
		{
			IDxcValidator2* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcValidator2*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// Validate a shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Validate")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Validate(this ComPtr<IDxcValidator2> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pShader, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] IDxcOperationResult** ppResult) 
		{
			IDxcValidator2* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator2*, IDxcBlob*, uint, IDxcOperationResult**, int>)(handle->LpVtbl[3]))(handle, pShader, flags, ppResult);
			return ret;
		}

		/// <summary>
		/// Validate a shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Validate")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Validate(this ComPtr<IDxcValidator2> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ref IDxcBlob pShader, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] IDxcOperationResult** ppResult) 
		{
			IDxcValidator2* handle = comObj.Handle;
			fixed (IDxcBlob* ppShader = &pShader)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator2*, IDxcBlob*, uint, IDxcOperationResult**, int>)(handle->LpVtbl[3]))(handle, (IDxcBlob*)ppShader, flags, ppResult);
				return ret;
			}
		}

		/// <summary>
		/// Validate a shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Validate")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Validate(this ComPtr<IDxcValidator2> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ComPtr<IDxcBlob> pShader, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] IDxcOperationResult** ppResult) 
		{
			IDxcValidator2* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator2*, IDxcBlob*, uint, IDxcOperationResult**, int>)(handle->LpVtbl[3]))(handle, (IDxcBlob*)pShader.Handle, flags, ppResult);
			return ret;
		}

		/// <summary>
		/// Validate a shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Validate")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Validate(this ComPtr<IDxcValidator2> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pShader, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] ref IDxcOperationResult* ppResult) 
		{
			IDxcValidator2* handle = comObj.Handle;
			fixed (IDxcOperationResult** pppResult = &ppResult)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator2*, IDxcBlob*, uint, IDxcOperationResult**, int>)(handle->LpVtbl[3]))(handle, pShader, flags, (IDxcOperationResult**)pppResult);
				return ret;
			}
		}

		/// <summary>
		/// Validate a shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Validate")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Validate(this ComPtr<IDxcValidator2> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pShader, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] out ComPtr<IDxcOperationResult> ppResult) 
		{
			IDxcValidator2* handle = comObj.Handle;
			ppResult = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator2*, IDxcBlob*, uint, IDxcOperationResult**, int>)(handle->LpVtbl[3]))(handle, pShader, flags, (IDxcOperationResult**)ppResult.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// Validate a shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Validate")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Validate(this ComPtr<IDxcValidator2> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ref IDxcBlob pShader, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] ref IDxcOperationResult* ppResult) 
		{
			IDxcValidator2* handle = comObj.Handle;
			fixed (IDxcBlob* ppShader = &pShader)
			{
				fixed (IDxcOperationResult** pppResult = &ppResult)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator2*, IDxcBlob*, uint, IDxcOperationResult**, int>)(handle->LpVtbl[3]))(handle, (IDxcBlob*)ppShader, flags, (IDxcOperationResult**)pppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Validate a shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "Validate")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Validate(this ComPtr<IDxcValidator2> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ComPtr<IDxcBlob> pShader, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] out ComPtr<IDxcOperationResult> ppResult) 
		{
			IDxcValidator2* handle = comObj.Handle;
			ppResult = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator2*, IDxcBlob*, uint, IDxcOperationResult**, int>)(handle->LpVtbl[3]))(handle, (IDxcBlob*)pShader.Handle, flags, (IDxcOperationResult**)ppResult.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// Validate a shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ValidateWithDebug")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int ValidateWithDebug(this ComPtr<IDxcValidator2> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pShader, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "pOptDebugBitcode")] [NativeName(NativeNameType.Type, "DxcBuffer*")] DxcBuffer* pOptDebugBitcode, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] IDxcOperationResult** ppResult) 
		{
			IDxcValidator2* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator2*, IDxcBlob*, uint, DxcBuffer*, IDxcOperationResult**, int>)(handle->LpVtbl[4]))(handle, pShader, flags, pOptDebugBitcode, ppResult);
			return ret;
		}

		/// <summary>
		/// Validate a shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ValidateWithDebug")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int ValidateWithDebug(this ComPtr<IDxcValidator2> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ref IDxcBlob pShader, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "pOptDebugBitcode")] [NativeName(NativeNameType.Type, "DxcBuffer*")] DxcBuffer* pOptDebugBitcode, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] IDxcOperationResult** ppResult) 
		{
			IDxcValidator2* handle = comObj.Handle;
			fixed (IDxcBlob* ppShader = &pShader)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator2*, IDxcBlob*, uint, DxcBuffer*, IDxcOperationResult**, int>)(handle->LpVtbl[4]))(handle, (IDxcBlob*)ppShader, flags, pOptDebugBitcode, ppResult);
				return ret;
			}
		}

		/// <summary>
		/// Validate a shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ValidateWithDebug")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int ValidateWithDebug(this ComPtr<IDxcValidator2> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ComPtr<IDxcBlob> pShader, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "pOptDebugBitcode")] [NativeName(NativeNameType.Type, "DxcBuffer*")] DxcBuffer* pOptDebugBitcode, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] IDxcOperationResult** ppResult) 
		{
			IDxcValidator2* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator2*, IDxcBlob*, uint, DxcBuffer*, IDxcOperationResult**, int>)(handle->LpVtbl[4]))(handle, (IDxcBlob*)pShader.Handle, flags, pOptDebugBitcode, ppResult);
			return ret;
		}

		/// <summary>
		/// Validate a shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ValidateWithDebug")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int ValidateWithDebug(this ComPtr<IDxcValidator2> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pShader, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "pOptDebugBitcode")] [NativeName(NativeNameType.Type, "DxcBuffer*")] ref DxcBuffer pOptDebugBitcode, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] IDxcOperationResult** ppResult) 
		{
			IDxcValidator2* handle = comObj.Handle;
			fixed (DxcBuffer* ppOptDebugBitcode = &pOptDebugBitcode)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator2*, IDxcBlob*, uint, DxcBuffer*, IDxcOperationResult**, int>)(handle->LpVtbl[4]))(handle, pShader, flags, (DxcBuffer*)ppOptDebugBitcode, ppResult);
				return ret;
			}
		}

		/// <summary>
		/// Validate a shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ValidateWithDebug")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int ValidateWithDebug(this ComPtr<IDxcValidator2> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ref IDxcBlob pShader, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "pOptDebugBitcode")] [NativeName(NativeNameType.Type, "DxcBuffer*")] ref DxcBuffer pOptDebugBitcode, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] IDxcOperationResult** ppResult) 
		{
			IDxcValidator2* handle = comObj.Handle;
			fixed (IDxcBlob* ppShader = &pShader)
			{
				fixed (DxcBuffer* ppOptDebugBitcode = &pOptDebugBitcode)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator2*, IDxcBlob*, uint, DxcBuffer*, IDxcOperationResult**, int>)(handle->LpVtbl[4]))(handle, (IDxcBlob*)ppShader, flags, (DxcBuffer*)ppOptDebugBitcode, ppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Validate a shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ValidateWithDebug")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int ValidateWithDebug(this ComPtr<IDxcValidator2> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ComPtr<IDxcBlob> pShader, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "pOptDebugBitcode")] [NativeName(NativeNameType.Type, "DxcBuffer*")] ref DxcBuffer pOptDebugBitcode, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] IDxcOperationResult** ppResult) 
		{
			IDxcValidator2* handle = comObj.Handle;
			fixed (DxcBuffer* ppOptDebugBitcode = &pOptDebugBitcode)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator2*, IDxcBlob*, uint, DxcBuffer*, IDxcOperationResult**, int>)(handle->LpVtbl[4]))(handle, (IDxcBlob*)pShader.Handle, flags, (DxcBuffer*)ppOptDebugBitcode, ppResult);
				return ret;
			}
		}

		/// <summary>
		/// Validate a shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ValidateWithDebug")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int ValidateWithDebug(this ComPtr<IDxcValidator2> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pShader, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "pOptDebugBitcode")] [NativeName(NativeNameType.Type, "DxcBuffer*")] DxcBuffer* pOptDebugBitcode, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] ref IDxcOperationResult* ppResult) 
		{
			IDxcValidator2* handle = comObj.Handle;
			fixed (IDxcOperationResult** pppResult = &ppResult)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator2*, IDxcBlob*, uint, DxcBuffer*, IDxcOperationResult**, int>)(handle->LpVtbl[4]))(handle, pShader, flags, pOptDebugBitcode, (IDxcOperationResult**)pppResult);
				return ret;
			}
		}

		/// <summary>
		/// Validate a shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ValidateWithDebug")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int ValidateWithDebug(this ComPtr<IDxcValidator2> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pShader, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "pOptDebugBitcode")] [NativeName(NativeNameType.Type, "DxcBuffer*")] DxcBuffer* pOptDebugBitcode, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] out ComPtr<IDxcOperationResult> ppResult) 
		{
			IDxcValidator2* handle = comObj.Handle;
			ppResult = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator2*, IDxcBlob*, uint, DxcBuffer*, IDxcOperationResult**, int>)(handle->LpVtbl[4]))(handle, pShader, flags, pOptDebugBitcode, (IDxcOperationResult**)ppResult.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// Validate a shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ValidateWithDebug")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int ValidateWithDebug(this ComPtr<IDxcValidator2> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ref IDxcBlob pShader, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "pOptDebugBitcode")] [NativeName(NativeNameType.Type, "DxcBuffer*")] DxcBuffer* pOptDebugBitcode, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] ref IDxcOperationResult* ppResult) 
		{
			IDxcValidator2* handle = comObj.Handle;
			fixed (IDxcBlob* ppShader = &pShader)
			{
				fixed (IDxcOperationResult** pppResult = &ppResult)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator2*, IDxcBlob*, uint, DxcBuffer*, IDxcOperationResult**, int>)(handle->LpVtbl[4]))(handle, (IDxcBlob*)ppShader, flags, pOptDebugBitcode, (IDxcOperationResult**)pppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Validate a shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ValidateWithDebug")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int ValidateWithDebug(this ComPtr<IDxcValidator2> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ComPtr<IDxcBlob> pShader, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "pOptDebugBitcode")] [NativeName(NativeNameType.Type, "DxcBuffer*")] DxcBuffer* pOptDebugBitcode, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] out ComPtr<IDxcOperationResult> ppResult) 
		{
			IDxcValidator2* handle = comObj.Handle;
			ppResult = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator2*, IDxcBlob*, uint, DxcBuffer*, IDxcOperationResult**, int>)(handle->LpVtbl[4]))(handle, (IDxcBlob*)pShader.Handle, flags, pOptDebugBitcode, (IDxcOperationResult**)ppResult.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// Validate a shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ValidateWithDebug")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int ValidateWithDebug(this ComPtr<IDxcValidator2> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pShader, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "pOptDebugBitcode")] [NativeName(NativeNameType.Type, "DxcBuffer*")] ref DxcBuffer pOptDebugBitcode, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] ref IDxcOperationResult* ppResult) 
		{
			IDxcValidator2* handle = comObj.Handle;
			fixed (DxcBuffer* ppOptDebugBitcode = &pOptDebugBitcode)
			{
				fixed (IDxcOperationResult** pppResult = &ppResult)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator2*, IDxcBlob*, uint, DxcBuffer*, IDxcOperationResult**, int>)(handle->LpVtbl[4]))(handle, pShader, flags, (DxcBuffer*)ppOptDebugBitcode, (IDxcOperationResult**)pppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Validate a shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ValidateWithDebug")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int ValidateWithDebug(this ComPtr<IDxcValidator2> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pShader, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "pOptDebugBitcode")] [NativeName(NativeNameType.Type, "DxcBuffer*")] ref DxcBuffer pOptDebugBitcode, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] out ComPtr<IDxcOperationResult> ppResult) 
		{
			IDxcValidator2* handle = comObj.Handle;
			fixed (DxcBuffer* ppOptDebugBitcode = &pOptDebugBitcode)
			{
				ppResult = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator2*, IDxcBlob*, uint, DxcBuffer*, IDxcOperationResult**, int>)(handle->LpVtbl[4]))(handle, pShader, flags, (DxcBuffer*)ppOptDebugBitcode, (IDxcOperationResult**)ppResult.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// Validate a shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ValidateWithDebug")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int ValidateWithDebug(this ComPtr<IDxcValidator2> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ref IDxcBlob pShader, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "pOptDebugBitcode")] [NativeName(NativeNameType.Type, "DxcBuffer*")] ref DxcBuffer pOptDebugBitcode, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] ref IDxcOperationResult* ppResult) 
		{
			IDxcValidator2* handle = comObj.Handle;
			fixed (IDxcBlob* ppShader = &pShader)
			{
				fixed (DxcBuffer* ppOptDebugBitcode = &pOptDebugBitcode)
				{
					fixed (IDxcOperationResult** pppResult = &ppResult)
					{
						int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator2*, IDxcBlob*, uint, DxcBuffer*, IDxcOperationResult**, int>)(handle->LpVtbl[4]))(handle, (IDxcBlob*)ppShader, flags, (DxcBuffer*)ppOptDebugBitcode, (IDxcOperationResult**)pppResult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Validate a shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "ValidateWithDebug")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int ValidateWithDebug(this ComPtr<IDxcValidator2> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ComPtr<IDxcBlob> pShader, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "pOptDebugBitcode")] [NativeName(NativeNameType.Type, "DxcBuffer*")] ref DxcBuffer pOptDebugBitcode, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] out ComPtr<IDxcOperationResult> ppResult) 
		{
			IDxcValidator2* handle = comObj.Handle;
			fixed (DxcBuffer* ppOptDebugBitcode = &pOptDebugBitcode)
			{
				ppResult = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDxcValidator2*, IDxcBlob*, uint, DxcBuffer*, IDxcOperationResult**, int>)(handle->LpVtbl[4]))(handle, (IDxcBlob*)pShader.Handle, flags, (DxcBuffer*)ppOptDebugBitcode, (IDxcOperationResult**)ppResult.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<IDxcContainerBuilder> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDxcContainerBuilder* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerBuilder*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<IDxcContainerBuilder> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDxcContainerBuilder* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerBuilder*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<IDxcContainerBuilder> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcContainerBuilder* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerBuilder*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<IDxcContainerBuilder> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcContainerBuilder* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerBuilder*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<IDxcContainerBuilder> comObj) 
		{
			IDxcContainerBuilder* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcContainerBuilder*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<IDxcContainerBuilder> comObj) 
		{
			IDxcContainerBuilder* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcContainerBuilder*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Load")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Load(this ComPtr<IDxcContainerBuilder> comObj, [NativeName(NativeNameType.Param, "pDxilContainerHeader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pDxilContainerHeader) 
		{
			IDxcContainerBuilder* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerBuilder*, IDxcBlob*, int>)(handle->LpVtbl[3]))(handle, pDxilContainerHeader);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Load")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Load(this ComPtr<IDxcContainerBuilder> comObj, [NativeName(NativeNameType.Param, "pDxilContainerHeader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ref IDxcBlob pDxilContainerHeader) 
		{
			IDxcContainerBuilder* handle = comObj.Handle;
			fixed (IDxcBlob* ppDxilContainerHeader = &pDxilContainerHeader)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerBuilder*, IDxcBlob*, int>)(handle->LpVtbl[3]))(handle, (IDxcBlob*)ppDxilContainerHeader);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Load")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Load(this ComPtr<IDxcContainerBuilder> comObj, [NativeName(NativeNameType.Param, "pDxilContainerHeader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ComPtr<IDxcBlob> pDxilContainerHeader) 
		{
			IDxcContainerBuilder* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerBuilder*, IDxcBlob*, int>)(handle->LpVtbl[3]))(handle, (IDxcBlob*)pDxilContainerHeader.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddPart")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int AddPart(this ComPtr<IDxcContainerBuilder> comObj, [NativeName(NativeNameType.Param, "fourCC")] [NativeName(NativeNameType.Type, "UINT32")] uint fourCC, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pSource) 
		{
			IDxcContainerBuilder* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerBuilder*, uint, IDxcBlob*, int>)(handle->LpVtbl[4]))(handle, fourCC, pSource);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddPart")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int AddPart(this ComPtr<IDxcContainerBuilder> comObj, [NativeName(NativeNameType.Param, "fourCC")] [NativeName(NativeNameType.Type, "UINT32")] uint fourCC, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ref IDxcBlob pSource) 
		{
			IDxcContainerBuilder* handle = comObj.Handle;
			fixed (IDxcBlob* ppSource = &pSource)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerBuilder*, uint, IDxcBlob*, int>)(handle->LpVtbl[4]))(handle, fourCC, (IDxcBlob*)ppSource);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddPart")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int AddPart(this ComPtr<IDxcContainerBuilder> comObj, [NativeName(NativeNameType.Param, "fourCC")] [NativeName(NativeNameType.Type, "UINT32")] uint fourCC, [NativeName(NativeNameType.Param, "pSource")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ComPtr<IDxcBlob> pSource) 
		{
			IDxcContainerBuilder* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerBuilder*, uint, IDxcBlob*, int>)(handle->LpVtbl[4]))(handle, fourCC, (IDxcBlob*)pSource.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "RemovePart")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int RemovePart(this ComPtr<IDxcContainerBuilder> comObj, [NativeName(NativeNameType.Param, "fourCC")] [NativeName(NativeNameType.Type, "UINT32")] uint fourCC) 
		{
			IDxcContainerBuilder* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerBuilder*, uint, int>)(handle->LpVtbl[5]))(handle, fourCC);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SerializeContainer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SerializeContainer(this ComPtr<IDxcContainerBuilder> comObj, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] IDxcOperationResult** ppResult) 
		{
			IDxcContainerBuilder* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerBuilder*, IDxcOperationResult**, int>)(handle->LpVtbl[6]))(handle, ppResult);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SerializeContainer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SerializeContainer(this ComPtr<IDxcContainerBuilder> comObj, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] ref IDxcOperationResult* ppResult) 
		{
			IDxcContainerBuilder* handle = comObj.Handle;
			fixed (IDxcOperationResult** pppResult = &ppResult)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerBuilder*, IDxcOperationResult**, int>)(handle->LpVtbl[6]))(handle, (IDxcOperationResult**)pppResult);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "SerializeContainer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int SerializeContainer(this ComPtr<IDxcContainerBuilder> comObj, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] out ComPtr<IDxcOperationResult> ppResult) 
		{
			IDxcContainerBuilder* handle = comObj.Handle;
			ppResult = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerBuilder*, IDxcOperationResult**, int>)(handle->LpVtbl[6]))(handle, (IDxcOperationResult**)ppResult.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<IDxcAssembler> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDxcAssembler* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcAssembler*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<IDxcAssembler> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDxcAssembler* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcAssembler*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<IDxcAssembler> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcAssembler* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcAssembler*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<IDxcAssembler> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcAssembler* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDxcAssembler*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<IDxcAssembler> comObj) 
		{
			IDxcAssembler* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcAssembler*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<IDxcAssembler> comObj) 
		{
			IDxcAssembler* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcAssembler*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// Assemble dxil in ll or llvm bitcode to DXIL container.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "AssembleToContainer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int AssembleToContainer(this ComPtr<IDxcAssembler> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pShader, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] IDxcOperationResult** ppResult) 
		{
			IDxcAssembler* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcAssembler*, IDxcBlob*, IDxcOperationResult**, int>)(handle->LpVtbl[3]))(handle, pShader, ppResult);
			return ret;
		}

		/// <summary>
		/// Assemble dxil in ll or llvm bitcode to DXIL container.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "AssembleToContainer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int AssembleToContainer(this ComPtr<IDxcAssembler> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ref IDxcBlob pShader, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] IDxcOperationResult** ppResult) 
		{
			IDxcAssembler* handle = comObj.Handle;
			fixed (IDxcBlob* ppShader = &pShader)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcAssembler*, IDxcBlob*, IDxcOperationResult**, int>)(handle->LpVtbl[3]))(handle, (IDxcBlob*)ppShader, ppResult);
				return ret;
			}
		}

		/// <summary>
		/// Assemble dxil in ll or llvm bitcode to DXIL container.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "AssembleToContainer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int AssembleToContainer(this ComPtr<IDxcAssembler> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ComPtr<IDxcBlob> pShader, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] IDxcOperationResult** ppResult) 
		{
			IDxcAssembler* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcAssembler*, IDxcBlob*, IDxcOperationResult**, int>)(handle->LpVtbl[3]))(handle, (IDxcBlob*)pShader.Handle, ppResult);
			return ret;
		}

		/// <summary>
		/// Assemble dxil in ll or llvm bitcode to DXIL container.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "AssembleToContainer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int AssembleToContainer(this ComPtr<IDxcAssembler> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pShader, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] ref IDxcOperationResult* ppResult) 
		{
			IDxcAssembler* handle = comObj.Handle;
			fixed (IDxcOperationResult** pppResult = &ppResult)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcAssembler*, IDxcBlob*, IDxcOperationResult**, int>)(handle->LpVtbl[3]))(handle, pShader, (IDxcOperationResult**)pppResult);
				return ret;
			}
		}

		/// <summary>
		/// Assemble dxil in ll or llvm bitcode to DXIL container.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "AssembleToContainer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int AssembleToContainer(this ComPtr<IDxcAssembler> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pShader, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] out ComPtr<IDxcOperationResult> ppResult) 
		{
			IDxcAssembler* handle = comObj.Handle;
			ppResult = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcAssembler*, IDxcBlob*, IDxcOperationResult**, int>)(handle->LpVtbl[3]))(handle, pShader, (IDxcOperationResult**)ppResult.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// Assemble dxil in ll or llvm bitcode to DXIL container.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "AssembleToContainer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int AssembleToContainer(this ComPtr<IDxcAssembler> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ref IDxcBlob pShader, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] ref IDxcOperationResult* ppResult) 
		{
			IDxcAssembler* handle = comObj.Handle;
			fixed (IDxcBlob* ppShader = &pShader)
			{
				fixed (IDxcOperationResult** pppResult = &ppResult)
				{
					int ret = ((delegate* unmanaged[Stdcall]<IDxcAssembler*, IDxcBlob*, IDxcOperationResult**, int>)(handle->LpVtbl[3]))(handle, (IDxcBlob*)ppShader, (IDxcOperationResult**)pppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Assemble dxil in ll or llvm bitcode to DXIL container.<br/>
		/// </summary>
		[NativeName(NativeNameType.Func, "AssembleToContainer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int AssembleToContainer(this ComPtr<IDxcAssembler> comObj, [NativeName(NativeNameType.Param, "pShader")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ComPtr<IDxcBlob> pShader, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcOperationResult**")] out ComPtr<IDxcOperationResult> ppResult) 
		{
			IDxcAssembler* handle = comObj.Handle;
			ppResult = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcAssembler*, IDxcBlob*, IDxcOperationResult**, int>)(handle->LpVtbl[3]))(handle, (IDxcBlob*)pShader.Handle, (IDxcOperationResult**)ppResult.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<IDxcContainerReflection> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDxcContainerReflection* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerReflection*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<IDxcContainerReflection> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDxcContainerReflection* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerReflection*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<IDxcContainerReflection> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcContainerReflection* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerReflection*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<IDxcContainerReflection> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcContainerReflection* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerReflection*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<IDxcContainerReflection> comObj) 
		{
			IDxcContainerReflection* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcContainerReflection*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<IDxcContainerReflection> comObj) 
		{
			IDxcContainerReflection* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcContainerReflection*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Load")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Load(this ComPtr<IDxcContainerReflection> comObj, [NativeName(NativeNameType.Param, "pContainer")] [NativeName(NativeNameType.Type, "IDxcBlob*")] IDxcBlob* pContainer) 
		{
			IDxcContainerReflection* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerReflection*, IDxcBlob*, int>)(handle->LpVtbl[3]))(handle, pContainer);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Load")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Load(this ComPtr<IDxcContainerReflection> comObj, [NativeName(NativeNameType.Param, "pContainer")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ref IDxcBlob pContainer) 
		{
			IDxcContainerReflection* handle = comObj.Handle;
			fixed (IDxcBlob* ppContainer = &pContainer)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerReflection*, IDxcBlob*, int>)(handle->LpVtbl[3]))(handle, (IDxcBlob*)ppContainer);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Load")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int Load(this ComPtr<IDxcContainerReflection> comObj, [NativeName(NativeNameType.Param, "pContainer")] [NativeName(NativeNameType.Type, "IDxcBlob*")] ComPtr<IDxcBlob> pContainer) 
		{
			IDxcContainerReflection* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerReflection*, IDxcBlob*, int>)(handle->LpVtbl[3]))(handle, (IDxcBlob*)pContainer.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPartCount")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPartCount(this ComPtr<IDxcContainerReflection> comObj, [NativeName(NativeNameType.Param, "pResult")] [NativeName(NativeNameType.Type, "UINT32*")] uint* pResult) 
		{
			IDxcContainerReflection* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerReflection*, uint*, int>)(handle->LpVtbl[4]))(handle, pResult);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPartCount")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPartCount(this ComPtr<IDxcContainerReflection> comObj, [NativeName(NativeNameType.Param, "pResult")] [NativeName(NativeNameType.Type, "UINT32*")] ref uint pResult) 
		{
			IDxcContainerReflection* handle = comObj.Handle;
			fixed (uint* ppResult = &pResult)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerReflection*, uint*, int>)(handle->LpVtbl[4]))(handle, (uint*)ppResult);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPartKind")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPartKind(this ComPtr<IDxcContainerReflection> comObj, [NativeName(NativeNameType.Param, "idx")] [NativeName(NativeNameType.Type, "UINT32")] uint idx, [NativeName(NativeNameType.Param, "pResult")] [NativeName(NativeNameType.Type, "UINT32*")] uint* pResult) 
		{
			IDxcContainerReflection* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerReflection*, uint, uint*, int>)(handle->LpVtbl[5]))(handle, idx, pResult);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPartKind")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPartKind(this ComPtr<IDxcContainerReflection> comObj, [NativeName(NativeNameType.Param, "idx")] [NativeName(NativeNameType.Type, "UINT32")] uint idx, [NativeName(NativeNameType.Param, "pResult")] [NativeName(NativeNameType.Type, "UINT32*")] ref uint pResult) 
		{
			IDxcContainerReflection* handle = comObj.Handle;
			fixed (uint* ppResult = &pResult)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerReflection*, uint, uint*, int>)(handle->LpVtbl[5]))(handle, idx, (uint*)ppResult);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPartContent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPartContent(this ComPtr<IDxcContainerReflection> comObj, [NativeName(NativeNameType.Param, "idx")] [NativeName(NativeNameType.Type, "UINT32")] uint idx, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcBlob**")] IDxcBlob** ppResult) 
		{
			IDxcContainerReflection* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerReflection*, uint, IDxcBlob**, int>)(handle->LpVtbl[6]))(handle, idx, ppResult);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPartContent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPartContent(this ComPtr<IDxcContainerReflection> comObj, [NativeName(NativeNameType.Param, "idx")] [NativeName(NativeNameType.Type, "UINT32")] uint idx, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcBlob**")] ref IDxcBlob* ppResult) 
		{
			IDxcContainerReflection* handle = comObj.Handle;
			fixed (IDxcBlob** pppResult = &ppResult)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerReflection*, uint, IDxcBlob**, int>)(handle->LpVtbl[6]))(handle, idx, (IDxcBlob**)pppResult);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPartContent")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPartContent(this ComPtr<IDxcContainerReflection> comObj, [NativeName(NativeNameType.Param, "idx")] [NativeName(NativeNameType.Type, "UINT32")] uint idx, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "IDxcBlob**")] out ComPtr<IDxcBlob> ppResult) 
		{
			IDxcContainerReflection* handle = comObj.Handle;
			ppResult = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerReflection*, uint, IDxcBlob**, int>)(handle->LpVtbl[6]))(handle, idx, (IDxcBlob**)ppResult.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "FindFirstPartKind")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int FindFirstPartKind(this ComPtr<IDxcContainerReflection> comObj, [NativeName(NativeNameType.Param, "kind")] [NativeName(NativeNameType.Type, "UINT32")] uint kind, [NativeName(NativeNameType.Param, "pResult")] [NativeName(NativeNameType.Type, "UINT32*")] uint* pResult) 
		{
			IDxcContainerReflection* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerReflection*, uint, uint*, int>)(handle->LpVtbl[7]))(handle, kind, pResult);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "FindFirstPartKind")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int FindFirstPartKind(this ComPtr<IDxcContainerReflection> comObj, [NativeName(NativeNameType.Param, "kind")] [NativeName(NativeNameType.Type, "UINT32")] uint kind, [NativeName(NativeNameType.Param, "pResult")] [NativeName(NativeNameType.Type, "UINT32*")] ref uint pResult) 
		{
			IDxcContainerReflection* handle = comObj.Handle;
			fixed (uint* ppResult = &pResult)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerReflection*, uint, uint*, int>)(handle->LpVtbl[7]))(handle, kind, (uint*)ppResult);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPartReflection")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPartReflection(this ComPtr<IDxcContainerReflection> comObj, [NativeName(NativeNameType.Param, "idx")] [NativeName(NativeNameType.Type, "UINT32")] uint idx, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* iid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDxcContainerReflection* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerReflection*, uint, Guid*, void**, int>)(handle->LpVtbl[8]))(handle, idx, iid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPartReflection")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPartReflection(this ComPtr<IDxcContainerReflection> comObj, [NativeName(NativeNameType.Param, "idx")] [NativeName(NativeNameType.Type, "UINT32")] uint idx, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid iid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDxcContainerReflection* handle = comObj.Handle;
			fixed (Guid* piid = &iid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerReflection*, uint, Guid*, void**, int>)(handle->LpVtbl[8]))(handle, idx, (Guid*)piid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPartReflection")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPartReflection<T>(this ComPtr<IDxcContainerReflection> comObj, [NativeName(NativeNameType.Param, "idx")] [NativeName(NativeNameType.Type, "UINT32")] uint idx, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcContainerReflection* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerReflection*, uint, Guid*, void**, int>)(handle->LpVtbl[8]))(handle, idx, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetPartReflection")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetPartReflection<T>(this ComPtr<IDxcContainerReflection> comObj, [NativeName(NativeNameType.Param, "idx")] [NativeName(NativeNameType.Type, "UINT32")] uint idx, [NativeName(NativeNameType.Param, "iid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid iid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcContainerReflection* handle = comObj.Handle;
			fixed (Guid* piid = &iid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDxcContainerReflection*, uint, Guid*, void**, int>)(handle->LpVtbl[8]))(handle, idx, (Guid*)piid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<IDxcOptimizerPass> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDxcOptimizerPass* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizerPass*, Guid*, void**, int>)(*handle->LpVtbl))(handle, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface(this ComPtr<IDxcOptimizerPass> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] void** ppvObject) 
		{
			IDxcOptimizerPass* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizerPass*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<IDxcOptimizerPass> comObj, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcOptimizerPass* handle = comObj.Handle;
			ppvObject = default;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizerPass*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int QueryInterface<T>(this ComPtr<IDxcOptimizerPass> comObj, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvObject")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcOptimizerPass* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizerPass*, Guid*, void**, int>)(*handle->LpVtbl))(handle, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint AddRef(this ComPtr<IDxcOptimizerPass> comObj) 
		{
			IDxcOptimizerPass* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizerPass*, uint>)(handle->LpVtbl[1]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public static uint Release(this ComPtr<IDxcOptimizerPass> comObj) 
		{
			IDxcOptimizerPass* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizerPass*, uint>)(handle->LpVtbl[2]))(handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOptionName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOptionName(this ComPtr<IDxcOptimizerPass> comObj, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPWSTR*")] char** ppResult) 
		{
			IDxcOptimizerPass* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizerPass*, char**, int>)(handle->LpVtbl[3]))(handle, ppResult);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOptionName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOptionName(this ComPtr<IDxcOptimizerPass> comObj, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPWSTR*")] ref char* ppResult) 
		{
			IDxcOptimizerPass* handle = comObj.Handle;
			fixed (char** pppResult = &ppResult)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizerPass*, char**, int>)(handle->LpVtbl[3]))(handle, (char**)pppResult);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDescription")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDescription(this ComPtr<IDxcOptimizerPass> comObj, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPWSTR*")] char** ppResult) 
		{
			IDxcOptimizerPass* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizerPass*, char**, int>)(handle->LpVtbl[4]))(handle, ppResult);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetDescription")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetDescription(this ComPtr<IDxcOptimizerPass> comObj, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPWSTR*")] ref char* ppResult) 
		{
			IDxcOptimizerPass* handle = comObj.Handle;
			fixed (char** pppResult = &ppResult)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizerPass*, char**, int>)(handle->LpVtbl[4]))(handle, (char**)pppResult);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOptionArgCount")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOptionArgCount(this ComPtr<IDxcOptimizerPass> comObj, [NativeName(NativeNameType.Param, "pCount")] [NativeName(NativeNameType.Type, "UINT32*")] uint* pCount) 
		{
			IDxcOptimizerPass* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizerPass*, uint*, int>)(handle->LpVtbl[5]))(handle, pCount);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOptionArgCount")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOptionArgCount(this ComPtr<IDxcOptimizerPass> comObj, [NativeName(NativeNameType.Param, "pCount")] [NativeName(NativeNameType.Type, "UINT32*")] ref uint pCount) 
		{
			IDxcOptimizerPass* handle = comObj.Handle;
			fixed (uint* ppCount = &pCount)
			{
				int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizerPass*, uint*, int>)(handle->LpVtbl[5]))(handle, (uint*)ppCount);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "GetOptionArgName")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int GetOptionArgName(this ComPtr<IDxcOptimizerPass> comObj, [NativeName(NativeNameType.Param, "argIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint argIndex, [NativeName(NativeNameType.Param, "ppResult")] [NativeName(NativeNameType.Type, "LPWSTR*")] char** ppResult) 
		{
			IDxcOptimizerPass* handle = comObj.Handle;
			int ret = ((delegate* unmanaged[Stdcall]<IDxcOptimizerPass*, uint, char**, int>)(handle->LpVtbl[6]))(handle, argIndex, ppResult);
			return ret;
		}
	}
}
