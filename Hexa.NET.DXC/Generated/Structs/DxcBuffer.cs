// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using HexaGen.Runtime.COM;

namespace Hexa.NET.DXC
{
	/// <summary>
	/// Structure for supplying bytes or text input to Dxc APIs.<br/>
	/// Use Encoding = 0 for non-text bytes, ANSI text, or unknown with BOM.<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "DxcBuffer")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DxcBuffer
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Ptr")]
		[NativeName(NativeNameType.Type, "LPCVOID")]
		public unsafe void* Ptr;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Size")]
		[NativeName(NativeNameType.Type, "SIZE_T")]
		public nuint Size;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "Encoding")]
		[NativeName(NativeNameType.Type, "UINT")]
		public uint Encoding;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe DxcBuffer(void* ptr = default, nuint size = default, uint encoding = default)
		{
			Ptr = ptr;
			Size = size;
			Encoding = encoding;
		}


	}

}
