// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using HexaGen.Runtime.COM;

namespace Hexa.NET.DXC
{
	/// <summary>
	/// To be documented.
	/// </summary>
	public partial struct IDxcCompiler3 : IComObject, IComObject<IDxcCompiler3>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public unsafe IDxcCompiler3 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface(Guid* riid, void** ppvObject) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface(ref Guid riid, void** ppvObject) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface<T>(out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface<T>(ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint AddRef() 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint Release() 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(Buffer* pSource, char** pArguments, uint argCount, IDxcIncludeHandler* pIncludeHandler, Guid* riid, void** ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, pSource, pArguments, argCount, pIncludeHandler, riid, ppResult);
			return ret;
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(ref Buffer pSource, char** pArguments, uint argCount, IDxcIncludeHandler* pIncludeHandler, Guid* riid, void** ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Buffer* ppSource = &pSource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, (Buffer*)ppSource, pArguments, argCount, pIncludeHandler, riid, ppResult);
				return ret;
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(Buffer* pSource, ref char* pArguments, uint argCount, IDxcIncludeHandler* pIncludeHandler, Guid* riid, void** ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (char** ppArguments = &pArguments)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, pSource, (char**)ppArguments, argCount, pIncludeHandler, riid, ppResult);
				return ret;
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(ref Buffer pSource, ref char* pArguments, uint argCount, IDxcIncludeHandler* pIncludeHandler, Guid* riid, void** ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Buffer* ppSource = &pSource)
			{
				fixed (char** ppArguments = &pArguments)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, (Buffer*)ppSource, (char**)ppArguments, argCount, pIncludeHandler, riid, ppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(Buffer* pSource, char** pArguments, uint argCount, ref IDxcIncludeHandler pIncludeHandler, Guid* riid, void** ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, pSource, pArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, riid, ppResult);
				return ret;
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(Buffer* pSource, char** pArguments, uint argCount, ComPtr<IDxcIncludeHandler> pIncludeHandler, Guid* riid, void** ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, pSource, pArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, riid, ppResult);
			return ret;
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(ref Buffer pSource, char** pArguments, uint argCount, ref IDxcIncludeHandler pIncludeHandler, Guid* riid, void** ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Buffer* ppSource = &pSource)
			{
				fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, (Buffer*)ppSource, pArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, riid, ppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(ref Buffer pSource, char** pArguments, uint argCount, ComPtr<IDxcIncludeHandler> pIncludeHandler, Guid* riid, void** ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Buffer* ppSource = &pSource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, (Buffer*)ppSource, pArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, riid, ppResult);
				return ret;
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(Buffer* pSource, ref char* pArguments, uint argCount, ref IDxcIncludeHandler pIncludeHandler, Guid* riid, void** ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (char** ppArguments = &pArguments)
			{
				fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, pSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, riid, ppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(Buffer* pSource, ref char* pArguments, uint argCount, ComPtr<IDxcIncludeHandler> pIncludeHandler, Guid* riid, void** ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (char** ppArguments = &pArguments)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, pSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, riid, ppResult);
				return ret;
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(ref Buffer pSource, ref char* pArguments, uint argCount, ref IDxcIncludeHandler pIncludeHandler, Guid* riid, void** ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Buffer* ppSource = &pSource)
			{
				fixed (char** ppArguments = &pArguments)
				{
					fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, (Buffer*)ppSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, riid, ppResult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(ref Buffer pSource, ref char* pArguments, uint argCount, ComPtr<IDxcIncludeHandler> pIncludeHandler, Guid* riid, void** ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Buffer* ppSource = &pSource)
			{
				fixed (char** ppArguments = &pArguments)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, (Buffer*)ppSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, riid, ppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(Buffer* pSource, char** pArguments, uint argCount, IDxcIncludeHandler* pIncludeHandler, ref Guid riid, void** ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, pSource, pArguments, argCount, pIncludeHandler, (Guid*)priid, ppResult);
				return ret;
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(ref Buffer pSource, char** pArguments, uint argCount, IDxcIncludeHandler* pIncludeHandler, ref Guid riid, void** ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Buffer* ppSource = &pSource)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, (Buffer*)ppSource, pArguments, argCount, pIncludeHandler, (Guid*)priid, ppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(Buffer* pSource, ref char* pArguments, uint argCount, IDxcIncludeHandler* pIncludeHandler, ref Guid riid, void** ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (char** ppArguments = &pArguments)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, pSource, (char**)ppArguments, argCount, pIncludeHandler, (Guid*)priid, ppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(ref Buffer pSource, ref char* pArguments, uint argCount, IDxcIncludeHandler* pIncludeHandler, ref Guid riid, void** ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Buffer* ppSource = &pSource)
			{
				fixed (char** ppArguments = &pArguments)
				{
					fixed (Guid* priid = &riid)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, (Buffer*)ppSource, (char**)ppArguments, argCount, pIncludeHandler, (Guid*)priid, ppResult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(Buffer* pSource, char** pArguments, uint argCount, ref IDxcIncludeHandler pIncludeHandler, ref Guid riid, void** ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, pSource, pArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, (Guid*)priid, ppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(Buffer* pSource, char** pArguments, uint argCount, ComPtr<IDxcIncludeHandler> pIncludeHandler, ref Guid riid, void** ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, pSource, pArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, (Guid*)priid, ppResult);
				return ret;
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(ref Buffer pSource, char** pArguments, uint argCount, ref IDxcIncludeHandler pIncludeHandler, ref Guid riid, void** ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Buffer* ppSource = &pSource)
			{
				fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
				{
					fixed (Guid* priid = &riid)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, (Buffer*)ppSource, pArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, (Guid*)priid, ppResult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(ref Buffer pSource, char** pArguments, uint argCount, ComPtr<IDxcIncludeHandler> pIncludeHandler, ref Guid riid, void** ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Buffer* ppSource = &pSource)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, (Buffer*)ppSource, pArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, (Guid*)priid, ppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(Buffer* pSource, ref char* pArguments, uint argCount, ref IDxcIncludeHandler pIncludeHandler, ref Guid riid, void** ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (char** ppArguments = &pArguments)
			{
				fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
				{
					fixed (Guid* priid = &riid)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, pSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, (Guid*)priid, ppResult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(Buffer* pSource, ref char* pArguments, uint argCount, ComPtr<IDxcIncludeHandler> pIncludeHandler, ref Guid riid, void** ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (char** ppArguments = &pArguments)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, pSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, (Guid*)priid, ppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(ref Buffer pSource, ref char* pArguments, uint argCount, ref IDxcIncludeHandler pIncludeHandler, ref Guid riid, void** ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Buffer* ppSource = &pSource)
			{
				fixed (char** ppArguments = &pArguments)
				{
					fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
					{
						fixed (Guid* priid = &riid)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, (Buffer*)ppSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, (Guid*)priid, ppResult);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(ref Buffer pSource, ref char* pArguments, uint argCount, ComPtr<IDxcIncludeHandler> pIncludeHandler, ref Guid riid, void** ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Buffer* ppSource = &pSource)
			{
				fixed (char** ppArguments = &pArguments)
				{
					fixed (Guid* priid = &riid)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, (Buffer*)ppSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, (Guid*)priid, ppResult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(Buffer* pSource, char** pArguments, uint argCount, IDxcIncludeHandler* pIncludeHandler, Guid* riid, ref void* ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (void** pppResult = &ppResult)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, pSource, pArguments, argCount, pIncludeHandler, riid, (void**)pppResult);
				return ret;
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(ref Buffer pSource, char** pArguments, uint argCount, IDxcIncludeHandler* pIncludeHandler, Guid* riid, ref void* ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Buffer* ppSource = &pSource)
			{
				fixed (void** pppResult = &ppResult)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, (Buffer*)ppSource, pArguments, argCount, pIncludeHandler, riid, (void**)pppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(Buffer* pSource, ref char* pArguments, uint argCount, IDxcIncludeHandler* pIncludeHandler, Guid* riid, ref void* ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (char** ppArguments = &pArguments)
			{
				fixed (void** pppResult = &ppResult)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, pSource, (char**)ppArguments, argCount, pIncludeHandler, riid, (void**)pppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(ref Buffer pSource, ref char* pArguments, uint argCount, IDxcIncludeHandler* pIncludeHandler, Guid* riid, ref void* ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Buffer* ppSource = &pSource)
			{
				fixed (char** ppArguments = &pArguments)
				{
					fixed (void** pppResult = &ppResult)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, (Buffer*)ppSource, (char**)ppArguments, argCount, pIncludeHandler, riid, (void**)pppResult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(Buffer* pSource, char** pArguments, uint argCount, ref IDxcIncludeHandler pIncludeHandler, Guid* riid, ref void* ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
			{
				fixed (void** pppResult = &ppResult)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, pSource, pArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, riid, (void**)pppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(Buffer* pSource, char** pArguments, uint argCount, ComPtr<IDxcIncludeHandler> pIncludeHandler, Guid* riid, ref void* ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (void** pppResult = &ppResult)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, pSource, pArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, riid, (void**)pppResult);
				return ret;
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(ref Buffer pSource, char** pArguments, uint argCount, ref IDxcIncludeHandler pIncludeHandler, Guid* riid, ref void* ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Buffer* ppSource = &pSource)
			{
				fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
				{
					fixed (void** pppResult = &ppResult)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, (Buffer*)ppSource, pArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, riid, (void**)pppResult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(ref Buffer pSource, char** pArguments, uint argCount, ComPtr<IDxcIncludeHandler> pIncludeHandler, Guid* riid, ref void* ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Buffer* ppSource = &pSource)
			{
				fixed (void** pppResult = &ppResult)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, (Buffer*)ppSource, pArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, riid, (void**)pppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(Buffer* pSource, ref char* pArguments, uint argCount, ref IDxcIncludeHandler pIncludeHandler, Guid* riid, ref void* ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (char** ppArguments = &pArguments)
			{
				fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
				{
					fixed (void** pppResult = &ppResult)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, pSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, riid, (void**)pppResult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(Buffer* pSource, ref char* pArguments, uint argCount, ComPtr<IDxcIncludeHandler> pIncludeHandler, Guid* riid, ref void* ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (char** ppArguments = &pArguments)
			{
				fixed (void** pppResult = &ppResult)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, pSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, riid, (void**)pppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(ref Buffer pSource, ref char* pArguments, uint argCount, ref IDxcIncludeHandler pIncludeHandler, Guid* riid, ref void* ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Buffer* ppSource = &pSource)
			{
				fixed (char** ppArguments = &pArguments)
				{
					fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
					{
						fixed (void** pppResult = &ppResult)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, (Buffer*)ppSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, riid, (void**)pppResult);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(ref Buffer pSource, ref char* pArguments, uint argCount, ComPtr<IDxcIncludeHandler> pIncludeHandler, Guid* riid, ref void* ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Buffer* ppSource = &pSource)
			{
				fixed (char** ppArguments = &pArguments)
				{
					fixed (void** pppResult = &ppResult)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, (Buffer*)ppSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, riid, (void**)pppResult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(Buffer* pSource, char** pArguments, uint argCount, IDxcIncludeHandler* pIncludeHandler, ref Guid riid, ref void* ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				fixed (void** pppResult = &ppResult)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, pSource, pArguments, argCount, pIncludeHandler, (Guid*)priid, (void**)pppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(ref Buffer pSource, char** pArguments, uint argCount, IDxcIncludeHandler* pIncludeHandler, ref Guid riid, ref void* ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Buffer* ppSource = &pSource)
			{
				fixed (Guid* priid = &riid)
				{
					fixed (void** pppResult = &ppResult)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, (Buffer*)ppSource, pArguments, argCount, pIncludeHandler, (Guid*)priid, (void**)pppResult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(Buffer* pSource, ref char* pArguments, uint argCount, IDxcIncludeHandler* pIncludeHandler, ref Guid riid, ref void* ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (char** ppArguments = &pArguments)
			{
				fixed (Guid* priid = &riid)
				{
					fixed (void** pppResult = &ppResult)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, pSource, (char**)ppArguments, argCount, pIncludeHandler, (Guid*)priid, (void**)pppResult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(ref Buffer pSource, ref char* pArguments, uint argCount, IDxcIncludeHandler* pIncludeHandler, ref Guid riid, ref void* ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Buffer* ppSource = &pSource)
			{
				fixed (char** ppArguments = &pArguments)
				{
					fixed (Guid* priid = &riid)
					{
						fixed (void** pppResult = &ppResult)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, (Buffer*)ppSource, (char**)ppArguments, argCount, pIncludeHandler, (Guid*)priid, (void**)pppResult);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(Buffer* pSource, char** pArguments, uint argCount, ref IDxcIncludeHandler pIncludeHandler, ref Guid riid, ref void* ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
			{
				fixed (Guid* priid = &riid)
				{
					fixed (void** pppResult = &ppResult)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, pSource, pArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, (Guid*)priid, (void**)pppResult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(Buffer* pSource, char** pArguments, uint argCount, ComPtr<IDxcIncludeHandler> pIncludeHandler, ref Guid riid, ref void* ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				fixed (void** pppResult = &ppResult)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, pSource, pArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, (Guid*)priid, (void**)pppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(ref Buffer pSource, char** pArguments, uint argCount, ref IDxcIncludeHandler pIncludeHandler, ref Guid riid, ref void* ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Buffer* ppSource = &pSource)
			{
				fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
				{
					fixed (Guid* priid = &riid)
					{
						fixed (void** pppResult = &ppResult)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, (Buffer*)ppSource, pArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, (Guid*)priid, (void**)pppResult);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(ref Buffer pSource, char** pArguments, uint argCount, ComPtr<IDxcIncludeHandler> pIncludeHandler, ref Guid riid, ref void* ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Buffer* ppSource = &pSource)
			{
				fixed (Guid* priid = &riid)
				{
					fixed (void** pppResult = &ppResult)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, (Buffer*)ppSource, pArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, (Guid*)priid, (void**)pppResult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(Buffer* pSource, ref char* pArguments, uint argCount, ref IDxcIncludeHandler pIncludeHandler, ref Guid riid, ref void* ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (char** ppArguments = &pArguments)
			{
				fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
				{
					fixed (Guid* priid = &riid)
					{
						fixed (void** pppResult = &ppResult)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, pSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, (Guid*)priid, (void**)pppResult);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(Buffer* pSource, ref char* pArguments, uint argCount, ComPtr<IDxcIncludeHandler> pIncludeHandler, ref Guid riid, ref void* ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (char** ppArguments = &pArguments)
			{
				fixed (Guid* priid = &riid)
				{
					fixed (void** pppResult = &ppResult)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, pSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, (Guid*)priid, (void**)pppResult);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(ref Buffer pSource, ref char* pArguments, uint argCount, ref IDxcIncludeHandler pIncludeHandler, ref Guid riid, ref void* ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Buffer* ppSource = &pSource)
			{
				fixed (char** ppArguments = &pArguments)
				{
					fixed (IDxcIncludeHandler* ppIncludeHandler = &pIncludeHandler)
					{
						fixed (Guid* priid = &riid)
						{
							fixed (void** pppResult = &ppResult)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, (Buffer*)ppSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)ppIncludeHandler, (Guid*)priid, (void**)pppResult);
								return ret;
							}
						}
					}
				}
			}
		}

		/// <summary>
		/// Compile a single entry point to the target shader model,<br/>
		/// Compile a library to a library target (-T lib_*),<br/>
		/// Compile a root signature (-T rootsig_*), or<br/>
		/// Preprocess HLSL source (-P)<br/>
		/// </summary>
		public readonly unsafe HResult Compile(ref Buffer pSource, ref char* pArguments, uint argCount, ComPtr<IDxcIncludeHandler> pIncludeHandler, ref Guid riid, ref void* ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Buffer* ppSource = &pSource)
			{
				fixed (char** ppArguments = &pArguments)
				{
					fixed (Guid* priid = &riid)
					{
						fixed (void** pppResult = &ppResult)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, char**, uint, IDxcIncludeHandler*, Guid*, void**, HResult>)(LpVtbl[3]))(ptr, (Buffer*)ppSource, (char**)ppArguments, argCount, (IDxcIncludeHandler*)pIncludeHandler.Handle, (Guid*)priid, (void**)pppResult);
							return ret;
						}
					}
				}
			}
		}

		/// <summary>
		/// Disassemble a program.<br/>
		/// </summary>
		public readonly unsafe HResult Disassemble(Buffer* pObject, Guid* riid, void** ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, Guid*, void**, HResult>)(LpVtbl[4]))(ptr, pObject, riid, ppResult);
			return ret;
		}

		/// <summary>
		/// Disassemble a program.<br/>
		/// </summary>
		public readonly unsafe HResult Disassemble(ref Buffer pObject, Guid* riid, void** ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Buffer* ppObject = &pObject)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, Guid*, void**, HResult>)(LpVtbl[4]))(ptr, (Buffer*)ppObject, riid, ppResult);
				return ret;
			}
		}

		/// <summary>
		/// Disassemble a program.<br/>
		/// </summary>
		public readonly unsafe HResult Disassemble(Buffer* pObject, ref Guid riid, void** ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, Guid*, void**, HResult>)(LpVtbl[4]))(ptr, pObject, (Guid*)priid, ppResult);
				return ret;
			}
		}

		/// <summary>
		/// Disassemble a program.<br/>
		/// </summary>
		public readonly unsafe HResult Disassemble(ref Buffer pObject, ref Guid riid, void** ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Buffer* ppObject = &pObject)
			{
				fixed (Guid* priid = &riid)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, Guid*, void**, HResult>)(LpVtbl[4]))(ptr, (Buffer*)ppObject, (Guid*)priid, ppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Disassemble a program.<br/>
		/// </summary>
		public readonly unsafe HResult Disassemble(Buffer* pObject, Guid* riid, ref void* ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (void** pppResult = &ppResult)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, Guid*, void**, HResult>)(LpVtbl[4]))(ptr, pObject, riid, (void**)pppResult);
				return ret;
			}
		}

		/// <summary>
		/// Disassemble a program.<br/>
		/// </summary>
		public readonly unsafe HResult Disassemble(ref Buffer pObject, Guid* riid, ref void* ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Buffer* ppObject = &pObject)
			{
				fixed (void** pppResult = &ppResult)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, Guid*, void**, HResult>)(LpVtbl[4]))(ptr, (Buffer*)ppObject, riid, (void**)pppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Disassemble a program.<br/>
		/// </summary>
		public readonly unsafe HResult Disassemble(Buffer* pObject, ref Guid riid, ref void* ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				fixed (void** pppResult = &ppResult)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, Guid*, void**, HResult>)(LpVtbl[4]))(ptr, pObject, (Guid*)priid, (void**)pppResult);
					return ret;
				}
			}
		}

		/// <summary>
		/// Disassemble a program.<br/>
		/// </summary>
		public readonly unsafe HResult Disassemble(ref Buffer pObject, ref Guid riid, ref void* ppResult) 
		{
			IDxcCompiler3* ptr = (IDxcCompiler3*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Buffer* ppObject = &pObject)
			{
				fixed (Guid* priid = &riid)
				{
					fixed (void** pppResult = &ppResult)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDxcCompiler3*, Buffer*, Guid*, void**, HResult>)(LpVtbl[4]))(ptr, (Buffer*)ppObject, (Guid*)priid, (void**)pppResult);
						return ret;
					}
				}
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IUnknown (IDxcCompiler3 value)
		{
			return Unsafe.As<IDxcCompiler3, IUnknown>(ref value);
		}

	}

}
