// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using HexaGen.Runtime.COM;

namespace Hexa.NET.DXC
{
	/// <summary>
	/// NOTE: IDxcResult replaces IDxcOperationResult<br/>
	/// </summary>
	public partial struct IDxcOperationResult : IComObject, IComObject<IDxcOperationResult>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public unsafe IDxcOperationResult (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface(Guid* riid, void** ppvObject) 
		{
			IDxcOperationResult* ptr = (IDxcOperationResult*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDxcOperationResult*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface(ref Guid riid, void** ppvObject) 
		{
			IDxcOperationResult* ptr = (IDxcOperationResult*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDxcOperationResult*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface<T>(out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcOperationResult* ptr = (IDxcOperationResult*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDxcOperationResult*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface<T>(ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDxcOperationResult* ptr = (IDxcOperationResult*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDxcOperationResult*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint AddRef() 
		{
			IDxcOperationResult* ptr = (IDxcOperationResult*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcOperationResult*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint Release() 
		{
			IDxcOperationResult* ptr = (IDxcOperationResult*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDxcOperationResult*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetStatus(HResult* pStatus) 
		{
			IDxcOperationResult* ptr = (IDxcOperationResult*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDxcOperationResult*, HResult*, HResult>)(LpVtbl[3]))(ptr, pStatus);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetStatus(ref HResult pStatus) 
		{
			IDxcOperationResult* ptr = (IDxcOperationResult*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (HResult* ppStatus = &pStatus)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDxcOperationResult*, HResult*, HResult>)(LpVtbl[3]))(ptr, (HResult*)ppStatus);
				return ret;
			}
		}

		/// <summary>
		/// GetResult returns the main result of the operation.<br/>
		/// This corresponds to:<br/>
		/// DXC_OUT_OBJECT - Compile() with shader or library target<br/>
		/// DXC_OUT_DISASSEMBLY - Disassemble()<br/>
		/// DXC_OUT_HLSL - Compile() with -P<br/>
		/// DXC_OUT_ROOT_SIGNATURE - Compile() with rootsig_* target<br/>
		/// </summary>
		public readonly unsafe HResult GetResult(IDxcBlob** ppResult) 
		{
			IDxcOperationResult* ptr = (IDxcOperationResult*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDxcOperationResult*, IDxcBlob**, HResult>)(LpVtbl[4]))(ptr, ppResult);
			return ret;
		}

		/// <summary>
		/// GetResult returns the main result of the operation.<br/>
		/// This corresponds to:<br/>
		/// DXC_OUT_OBJECT - Compile() with shader or library target<br/>
		/// DXC_OUT_DISASSEMBLY - Disassemble()<br/>
		/// DXC_OUT_HLSL - Compile() with -P<br/>
		/// DXC_OUT_ROOT_SIGNATURE - Compile() with rootsig_* target<br/>
		/// </summary>
		public readonly unsafe HResult GetResult(ref IDxcBlob* ppResult) 
		{
			IDxcOperationResult* ptr = (IDxcOperationResult*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDxcBlob** pppResult = &ppResult)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDxcOperationResult*, IDxcBlob**, HResult>)(LpVtbl[4]))(ptr, (IDxcBlob**)pppResult);
				return ret;
			}
		}

		/// <summary>
		/// GetResult returns the main result of the operation.<br/>
		/// This corresponds to:<br/>
		/// DXC_OUT_OBJECT - Compile() with shader or library target<br/>
		/// DXC_OUT_DISASSEMBLY - Disassemble()<br/>
		/// DXC_OUT_HLSL - Compile() with -P<br/>
		/// DXC_OUT_ROOT_SIGNATURE - Compile() with rootsig_* target<br/>
		/// </summary>
		public readonly unsafe HResult GetResult(out ComPtr<IDxcBlob> ppResult) 
		{
			IDxcOperationResult* ptr = (IDxcOperationResult*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppResult = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDxcOperationResult*, IDxcBlob**, HResult>)(LpVtbl[4]))(ptr, (IDxcBlob**)ppResult.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// GetErrorBuffer Corresponds to DXC_OUT_ERRORS.<br/>
		/// </summary>
		public readonly unsafe HResult GetErrorBuffer(IDxcBlobEncoding** ppErrors) 
		{
			IDxcOperationResult* ptr = (IDxcOperationResult*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDxcOperationResult*, IDxcBlobEncoding**, HResult>)(LpVtbl[5]))(ptr, ppErrors);
			return ret;
		}

		/// <summary>
		/// GetErrorBuffer Corresponds to DXC_OUT_ERRORS.<br/>
		/// </summary>
		public readonly unsafe HResult GetErrorBuffer(ref IDxcBlobEncoding* ppErrors) 
		{
			IDxcOperationResult* ptr = (IDxcOperationResult*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDxcBlobEncoding** pppErrors = &ppErrors)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDxcOperationResult*, IDxcBlobEncoding**, HResult>)(LpVtbl[5]))(ptr, (IDxcBlobEncoding**)pppErrors);
				return ret;
			}
		}

		/// <summary>
		/// GetErrorBuffer Corresponds to DXC_OUT_ERRORS.<br/>
		/// </summary>
		public readonly unsafe HResult GetErrorBuffer(out ComPtr<IDxcBlobEncoding> ppErrors) 
		{
			IDxcOperationResult* ptr = (IDxcOperationResult*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppErrors = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDxcOperationResult*, IDxcBlobEncoding**, HResult>)(LpVtbl[5]))(ptr, (IDxcBlobEncoding**)ppErrors.GetAddressOf());
			return ret;
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IUnknown (IDxcOperationResult value)
		{
			return Unsafe.As<IDxcOperationResult, IUnknown>(ref value);
		}

	}

}
