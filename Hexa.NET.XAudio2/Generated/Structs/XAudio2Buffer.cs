// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using HexaGen.Runtime.COM;

namespace Hexa.NET.XAudio2
{
	/// <summary>
	/// Used in IXAudio2SourceVoice::SubmitSourceBuffer<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "XAUDIO2_BUFFER")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct XAudio2Buffer
	{
		/// <summary>
		/// Either 0 or XAUDIO2_END_OF_STREAM.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "Flags")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint Flags;

		/// <summary>
		/// Size of the audio data buffer in bytes.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "AudioBytes")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint AudioBytes;

		/// <summary>
		/// Pointer to the audio data buffer.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "pAudioData")]
		[NativeName(NativeNameType.Type, "const BYTE*")]
		public unsafe byte* PAudioData;

		/// <summary>
		/// First sample in this buffer to be played.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "PlayBegin")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint PlayBegin;

		/// <summary>
		/// Length of the region to be played in samples,<br/>
		/// or 0 to play the whole buffer.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "PlayLength")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint PlayLength;

		/// <summary>
		/// First sample of the region to be looped.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "LoopBegin")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint LoopBegin;

		/// <summary>
		/// Length of the desired loop region in samples,<br/>
		/// or 0 to loop the entire buffer.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "LoopLength")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint LoopLength;

		/// <summary>
		/// Number of times to repeat the loop region,<br/>
		/// or XAUDIO2_LOOP_INFINITE to loop forever.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "LoopCount")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint LoopCount;

		/// <summary>
		/// Context value to be passed back in callbacks.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "pContext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PContext;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe XAudio2Buffer(uint flags = default, uint audioBytes = default, byte* pAudioData = default, uint playBegin = default, uint playLength = default, uint loopBegin = default, uint loopLength = default, uint loopCount = default, void* pContext = default)
		{
			Flags = flags;
			AudioBytes = audioBytes;
			PAudioData = pAudioData;
			PlayBegin = playBegin;
			PlayLength = playLength;
			LoopBegin = loopBegin;
			LoopLength = loopLength;
			LoopCount = loopCount;
			PContext = pContext;
		}


	}

}
