// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using HexaGen.Runtime.COM;

namespace Hexa.NET.XAudio2
{
	/// <summary>
	/// XAUDIO2FX_VOLUMEMETER_LEVELS: Receives results from GetEffectParameters().<br/>
	/// The user is responsible for allocating pPeakLevels, pRMSLevels, and<br/>
	/// initializing ChannelCount accordingly.<br/>
	/// The volume meter does not support SetEffectParameters().<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "XAUDIO2FX_VOLUMEMETER_LEVELS")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct XAudio2FxVolumemeterLevels
	{
		/// <summary>
		/// Peak levels table: receives maximum absolute level for each channel<br/>
		/// over a processing pass; may be NULL if pRMSLevls != NULL,<br/>
		/// otherwise must have at least ChannelCount elements.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "pPeakLevels")]
		[NativeName(NativeNameType.Type, "float*")]
		public unsafe float* PPeakLevels;

		/// <summary>
		/// Root mean square levels table: receives RMS level for each channel<br/>
		/// over a processing pass; may be NULL if pPeakLevels != NULL,<br/>
		/// otherwise must have at least ChannelCount elements.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "pRMSLevels")]
		[NativeName(NativeNameType.Type, "float*")]
		public unsafe float* PRMSLevels;

		/// <summary>
		/// Number of channels being processed by the volume meter APO<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "ChannelCount")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint ChannelCount;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe XAudio2FxVolumemeterLevels(float* pPeakLevels = default, float* pRMSLevels = default, uint channelCount = default)
		{
			PPeakLevels = pPeakLevels;
			PRMSLevels = pRMSLevels;
			ChannelCount = channelCount;
		}


	}

}
