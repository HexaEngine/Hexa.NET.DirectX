// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;
using HexaGen.Runtime.COM;

namespace Hexa.NET.DXGI
{
	public unsafe partial class DXGI
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateDXGIFactory")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static int CreateDXGIFactoryNative([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppFactory")] [NativeName(NativeNameType.Type, "void**")] void** ppFactory)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<Guid*, void**, int>)funcTable[0])(riid, ppFactory);
			#else
			return (int)((delegate* unmanaged[Cdecl]<nint, nint, int>)funcTable[0])((nint)riid, (nint)ppFactory);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateDXGIFactory")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateDXGIFactory([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppFactory")] [NativeName(NativeNameType.Type, "void**")] void** ppFactory) 
		{
			int ret = CreateDXGIFactoryNative(riid, ppFactory);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateDXGIFactory")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateDXGIFactory([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppFactory")] [NativeName(NativeNameType.Type, "void**")] void** ppFactory) 
		{
			fixed (Guid* priid = &riid)
			{
				int ret = CreateDXGIFactoryNative((Guid*)priid, ppFactory);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateDXGIFactory")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateDXGIFactory<T>([NativeName(NativeNameType.Param, "ppFactory")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppFactory) where T : unmanaged, IComObject, IComObject<T>
		{
			ppFactory = default;
			int ret = CreateDXGIFactoryNative((Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppFactory.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateDXGIFactory")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateDXGIFactory<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppFactory")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppFactory) where T : unmanaged, IComObject, IComObject<T>
		{
			fixed (Guid* priid = &riid)
			{
				ppFactory = default;
				int ret = CreateDXGIFactoryNative((Guid*)priid, (void**)ppFactory.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateDXGIFactory1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static int CreateDXGIFactory1Native([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppFactory")] [NativeName(NativeNameType.Type, "void**")] void** ppFactory)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<Guid*, void**, int>)funcTable[1])(riid, ppFactory);
			#else
			return (int)((delegate* unmanaged[Cdecl]<nint, nint, int>)funcTable[1])((nint)riid, (nint)ppFactory);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateDXGIFactory1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateDXGIFactory1([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppFactory")] [NativeName(NativeNameType.Type, "void**")] void** ppFactory) 
		{
			int ret = CreateDXGIFactory1Native(riid, ppFactory);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateDXGIFactory1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateDXGIFactory1([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppFactory")] [NativeName(NativeNameType.Type, "void**")] void** ppFactory) 
		{
			fixed (Guid* priid = &riid)
			{
				int ret = CreateDXGIFactory1Native((Guid*)priid, ppFactory);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateDXGIFactory1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateDXGIFactory1<T>([NativeName(NativeNameType.Param, "ppFactory")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppFactory) where T : unmanaged, IComObject, IComObject<T>
		{
			ppFactory = default;
			int ret = CreateDXGIFactory1Native((Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppFactory.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateDXGIFactory1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateDXGIFactory1<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppFactory")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppFactory) where T : unmanaged, IComObject, IComObject<T>
		{
			fixed (Guid* priid = &riid)
			{
				ppFactory = default;
				int ret = CreateDXGIFactory1Native((Guid*)priid, (void**)ppFactory.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateDXGIFactory2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static int CreateDXGIFactory2Native([NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppFactory")] [NativeName(NativeNameType.Type, "void**")] void** ppFactory)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<uint, Guid*, void**, int>)funcTable[2])(flags, riid, ppFactory);
			#else
			return (int)((delegate* unmanaged[Cdecl]<uint, nint, nint, int>)funcTable[2])(flags, (nint)riid, (nint)ppFactory);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateDXGIFactory2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateDXGIFactory2([NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppFactory")] [NativeName(NativeNameType.Type, "void**")] void** ppFactory) 
		{
			int ret = CreateDXGIFactory2Native(flags, riid, ppFactory);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateDXGIFactory2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateDXGIFactory2([NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppFactory")] [NativeName(NativeNameType.Type, "void**")] void** ppFactory) 
		{
			fixed (Guid* priid = &riid)
			{
				int ret = CreateDXGIFactory2Native(flags, (Guid*)priid, ppFactory);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateDXGIFactory2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateDXGIFactory2<T>([NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "ppFactory")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppFactory) where T : unmanaged, IComObject, IComObject<T>
		{
			ppFactory = default;
			int ret = CreateDXGIFactory2Native(flags, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppFactory.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "CreateDXGIFactory2")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int CreateDXGIFactory2<T>([NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppFactory")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppFactory) where T : unmanaged, IComObject, IComObject<T>
		{
			fixed (Guid* priid = &riid)
			{
				ppFactory = default;
				int ret = CreateDXGIFactory2Native(flags, (Guid*)priid, (void**)ppFactory.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DXGIGetDebugInterface1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static int DXGIGetDebugInterface1Native([NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "pDebug")] [NativeName(NativeNameType.Type, "void**")] void** pDebug)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<uint, Guid*, void**, int>)funcTable[3])(flags, riid, pDebug);
			#else
			return (int)((delegate* unmanaged[Cdecl]<uint, nint, nint, int>)funcTable[3])(flags, (nint)riid, (nint)pDebug);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DXGIGetDebugInterface1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int DXGIGetDebugInterface1([NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "pDebug")] [NativeName(NativeNameType.Type, "void**")] void** pDebug) 
		{
			int ret = DXGIGetDebugInterface1Native(flags, riid, pDebug);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DXGIGetDebugInterface1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int DXGIGetDebugInterface1([NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "pDebug")] [NativeName(NativeNameType.Type, "void**")] void** pDebug) 
		{
			fixed (Guid* priid = &riid)
			{
				int ret = DXGIGetDebugInterface1Native(flags, (Guid*)priid, pDebug);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DXGIGetDebugInterface1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int DXGIGetDebugInterface1<T>([NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "pDebug")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> pDebug) where T : unmanaged, IComObject, IComObject<T>
		{
			pDebug = default;
			int ret = DXGIGetDebugInterface1Native(flags, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)pDebug.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DXGIGetDebugInterface1")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int DXGIGetDebugInterface1<T>([NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT")] uint flags, [NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "pDebug")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> pDebug) where T : unmanaged, IComObject, IComObject<T>
		{
			fixed (Guid* priid = &riid)
			{
				pDebug = default;
				int ret = DXGIGetDebugInterface1Native(flags, (Guid*)priid, (void**)pDebug.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DXGIDeclareAdapterRemovalSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static int DXGIDeclareAdapterRemovalSupportNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<int>)funcTable[4])();
			#else
			return (int)((delegate* unmanaged[Cdecl]<int>)funcTable[4])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DXGIDeclareAdapterRemovalSupport")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int DXGIDeclareAdapterRemovalSupport() 
		{
			int ret = DXGIDeclareAdapterRemovalSupportNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DXGIDisableVBlankVirtualization")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static int DXGIDisableVBlankVirtualizationNative()
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<int>)funcTable[5])();
			#else
			return (int)((delegate* unmanaged[Cdecl]<int>)funcTable[5])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DXGIDisableVBlankVirtualization")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int DXGIDisableVBlankVirtualization() 
		{
			int ret = DXGIDisableVBlankVirtualizationNative();
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DXGIGetDebugInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static int DXGIGetDebugInterfaceNative([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppDebug")] [NativeName(NativeNameType.Type, "void**")] void** ppDebug)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<Guid*, void**, int>)funcTable[6])(riid, ppDebug);
			#else
			return (int)((delegate* unmanaged[Cdecl]<nint, nint, int>)funcTable[6])((nint)riid, (nint)ppDebug);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DXGIGetDebugInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int DXGIGetDebugInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppDebug")] [NativeName(NativeNameType.Type, "void**")] void** ppDebug) 
		{
			int ret = DXGIGetDebugInterfaceNative(riid, ppDebug);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DXGIGetDebugInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int DXGIGetDebugInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppDebug")] [NativeName(NativeNameType.Type, "void**")] void** ppDebug) 
		{
			fixed (Guid* priid = &riid)
			{
				int ret = DXGIGetDebugInterfaceNative((Guid*)priid, ppDebug);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DXGIGetDebugInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int DXGIGetDebugInterface<T>([NativeName(NativeNameType.Param, "ppDebug")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppDebug) where T : unmanaged, IComObject, IComObject<T>
		{
			ppDebug = default;
			int ret = DXGIGetDebugInterfaceNative((Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppDebug.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Func, "DXGIGetDebugInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public static int DXGIGetDebugInterface<T>([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppDebug")] [NativeName(NativeNameType.Type, "void**")] out ComPtr<T> ppDebug) where T : unmanaged, IComObject, IComObject<T>
		{
			fixed (Guid* priid = &riid)
			{
				ppDebug = default;
				int ret = DXGIGetDebugInterfaceNative((Guid*)priid, (void**)ppDebug.GetAddressOf());
				return ret;
			}
		}

	}
}
