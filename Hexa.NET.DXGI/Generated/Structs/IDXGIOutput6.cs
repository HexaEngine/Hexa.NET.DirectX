// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;
using HexaGen.Runtime.COM;

namespace Hexa.NET.DXGI
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[Guid("068346e8-aaec-4b84-add7-137f513f77a1")]
	public partial struct IDXGIOutput6 : IComObject, IComObject<IDXGIOutput6>, IComObject<IDXGIOutput5>, IComObject<IDXGIOutput4>, IComObject<IDXGIOutput3>, IComObject<IDXGIOutput2>, IComObject<IDXGIOutput1>, IComObject<IDXGIOutput>, IComObject<IDXGIObject>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("068346e8-aaec-4b84-add7-137f513f77a1");

		public unsafe IDXGIOutput6 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface(Guid* riid, void** ppvObject) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvObject);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface(ref Guid riid, void** ppvObject) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvObject);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface<T>(out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppvObject = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppvObject.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult QueryInterface<T>(ref Guid riid, out ComPtr<T> ppvObject) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppvObject = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, (void**)ppvObject.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint AddRef() 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe uint Release() 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateData(Guid* name, uint dataSize, void* pData) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, name, dataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateData(ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint, void*, HResult>)(LpVtbl[3]))(ptr, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(Guid* name, IUnknown* pUnknown) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, pUnknown);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, name, (IUnknown*)pUnknown.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetPrivateDataInterface(ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, IUnknown*, HResult>)(LpVtbl[4]))(ptr, (Guid*)pname, (IUnknown*)pUnknown.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData(Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, pData);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData(ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData(Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData(ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData<T>(Guid* name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, pDataSize, (void*)pData.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData<T>(ref Guid name, uint* pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, pDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData<T>(Guid* name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, name, (uint*)ppDataSize, (void*)pData.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetPrivateData<T>(ref Guid name, ref uint pDataSize, ComPtr<T> pData) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint*, void*, HResult>)(LpVtbl[5]))(ptr, (Guid*)pname, (uint*)ppDataSize, (void*)pData.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetParent(Guid* riid, void** ppParent) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, riid, ppParent);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetParent(ref Guid riid, void** ppParent) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, ppParent);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetParent<T>(out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppParent = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)(ComUtils.GuidPtrOf<T>()), (void**)ppParent.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetParent<T>(ref Guid riid, out ComPtr<T> ppParent) where T : unmanaged, IComObject, IComObject<T>
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				ppParent = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, void**, HResult>)(LpVtbl[6]))(ptr, (Guid*)priid, (void**)ppParent.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDesc(OutputDesc* pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, OutputDesc*, HResult>)(LpVtbl[7]))(ptr, pDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDesc(ref OutputDesc pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (OutputDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, OutputDesc*, HResult>)(LpVtbl[7]))(ptr, (OutputDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDisplayModeList(Format enumFormat, uint flags, uint* pNumModes, ModeDesc* pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Format, uint, uint*, ModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDisplayModeList(Format enumFormat, uint flags, ref uint pNumModes, ModeDesc* pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Format, uint, uint*, ModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDisplayModeList(Format enumFormat, uint flags, uint* pNumModes, ref ModeDesc pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ModeDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Format, uint, uint*, ModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, pNumModes, (ModeDesc*)ppDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDisplayModeList(Format enumFormat, uint flags, ref uint pNumModes, ref ModeDesc pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (ModeDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Format, uint, uint*, ModeDesc*, HResult>)(LpVtbl[8]))(ptr, enumFormat, flags, (uint*)ppNumModes, (ModeDesc*)ppDesc);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult FindClosestMatchingMode(ModeDesc* pModeToMatch, ModeDesc* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, ModeDesc*, ModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult FindClosestMatchingMode(ref ModeDesc pModeToMatch, ModeDesc* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ModeDesc* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, ModeDesc*, ModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (ModeDesc*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult FindClosestMatchingMode(ModeDesc* pModeToMatch, ref ModeDesc pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ModeDesc* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, ModeDesc*, ModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, (ModeDesc*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult FindClosestMatchingMode(ref ModeDesc pModeToMatch, ref ModeDesc pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (ModeDesc* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, ModeDesc*, ModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (ModeDesc*)ppModeToMatch, (ModeDesc*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult FindClosestMatchingMode(ModeDesc* pModeToMatch, ModeDesc* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, ModeDesc*, ModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult FindClosestMatchingMode(ModeDesc* pModeToMatch, ModeDesc* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, ModeDesc*, ModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult FindClosestMatchingMode(ref ModeDesc pModeToMatch, ModeDesc* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, ModeDesc*, ModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (ModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult FindClosestMatchingMode(ref ModeDesc pModeToMatch, ModeDesc* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ModeDesc* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, ModeDesc*, ModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (ModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult FindClosestMatchingMode(ModeDesc* pModeToMatch, ref ModeDesc pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ModeDesc* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, ModeDesc*, ModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, (ModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult FindClosestMatchingMode(ModeDesc* pModeToMatch, ref ModeDesc pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ModeDesc* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, ModeDesc*, ModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, pModeToMatch, (ModeDesc*)ppClosestMatch, (IUnknown*)pConcernedDevice.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult FindClosestMatchingMode(ref ModeDesc pModeToMatch, ref ModeDesc pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (ModeDesc* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, ModeDesc*, ModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (ModeDesc*)ppModeToMatch, (ModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult FindClosestMatchingMode(ref ModeDesc pModeToMatch, ref ModeDesc pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (ModeDesc* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, ModeDesc*, ModeDesc*, IUnknown*, HResult>)(LpVtbl[9]))(ptr, (ModeDesc*)ppModeToMatch, (ModeDesc*)ppClosestMatch, (IUnknown*)pConcernedDevice.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult WaitForVBlank() 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, HResult>)(LpVtbl[10]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult TakeOwnership(IUnknown* pDevice, Bool32 exclusive) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, Bool32, HResult>)(LpVtbl[11]))(ptr, pDevice, exclusive);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult TakeOwnership(ref IUnknown pDevice, Bool32 exclusive) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, Bool32, HResult>)(LpVtbl[11]))(ptr, (IUnknown*)ppDevice, exclusive);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult TakeOwnership(ComPtr<IUnknown> pDevice, Bool32 exclusive) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, Bool32, HResult>)(LpVtbl[11]))(ptr, (IUnknown*)pDevice.Handle, exclusive);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe void ReleaseOwnership() 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IDXGIOutput6*, void>)(LpVtbl[12]))(ptr);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetGammaControlCapabilities(GammaControlCapabilities* pGammaCaps) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, GammaControlCapabilities*, HResult>)(LpVtbl[13]))(ptr, pGammaCaps);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetGammaControlCapabilities(ref GammaControlCapabilities pGammaCaps) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (GammaControlCapabilities* ppGammaCaps = &pGammaCaps)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, GammaControlCapabilities*, HResult>)(LpVtbl[13]))(ptr, (GammaControlCapabilities*)ppGammaCaps);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetGammaControl(GammaControl* pArray) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, GammaControl*, HResult>)(LpVtbl[14]))(ptr, pArray);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetGammaControl(ref GammaControl pArray) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (GammaControl* ppArray = &pArray)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, GammaControl*, HResult>)(LpVtbl[14]))(ptr, (GammaControl*)ppArray);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetGammaControl(GammaControl* pArray) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, GammaControl*, HResult>)(LpVtbl[15]))(ptr, pArray);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetGammaControl(ref GammaControl pArray) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (GammaControl* ppArray = &pArray)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, GammaControl*, HResult>)(LpVtbl[15]))(ptr, (GammaControl*)ppArray);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetDisplaySurface(IDXGISurface* pScanoutSurface) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGISurface*, HResult>)(LpVtbl[16]))(ptr, pScanoutSurface);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetDisplaySurface(ref IDXGISurface pScanoutSurface) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface* ppScanoutSurface = &pScanoutSurface)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGISurface*, HResult>)(LpVtbl[16]))(ptr, (IDXGISurface*)ppScanoutSurface);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult SetDisplaySurface(ComPtr<IDXGISurface> pScanoutSurface) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGISurface*, HResult>)(LpVtbl[16]))(ptr, (IDXGISurface*)pScanoutSurface.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDisplaySurfaceData(IDXGISurface* pDestination) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGISurface*, HResult>)(LpVtbl[17]))(ptr, pDestination);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDisplaySurfaceData(ref IDXGISurface pDestination) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGISurface* ppDestination = &pDestination)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGISurface*, HResult>)(LpVtbl[17]))(ptr, (IDXGISurface*)ppDestination);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDisplaySurfaceData(ComPtr<IDXGISurface> pDestination) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGISurface*, HResult>)(LpVtbl[17]))(ptr, (IDXGISurface*)pDestination.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetFrameStatistics(FrameStatistics* pStats) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, FrameStatistics*, HResult>)(LpVtbl[18]))(ptr, pStats);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetFrameStatistics(ref FrameStatistics pStats) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (FrameStatistics* ppStats = &pStats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, FrameStatistics*, HResult>)(LpVtbl[18]))(ptr, (FrameStatistics*)ppStats);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDisplayModeList1(Format enumFormat, uint flags, uint* pNumModes, ModeDesc1* pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Format, uint, uint*, ModeDesc1*, HResult>)(LpVtbl[19]))(ptr, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDisplayModeList1(Format enumFormat, uint flags, ref uint pNumModes, ModeDesc1* pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Format, uint, uint*, ModeDesc1*, HResult>)(LpVtbl[19]))(ptr, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDisplayModeList1(Format enumFormat, uint flags, uint* pNumModes, ref ModeDesc1 pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ModeDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Format, uint, uint*, ModeDesc1*, HResult>)(LpVtbl[19]))(ptr, enumFormat, flags, pNumModes, (ModeDesc1*)ppDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDisplayModeList1(Format enumFormat, uint flags, ref uint pNumModes, ref ModeDesc1 pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (ModeDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Format, uint, uint*, ModeDesc1*, HResult>)(LpVtbl[19]))(ptr, enumFormat, flags, (uint*)ppNumModes, (ModeDesc1*)ppDesc);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult FindClosestMatchingMode1(ModeDesc1* pModeToMatch, ModeDesc1* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, ModeDesc1*, ModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult FindClosestMatchingMode1(ref ModeDesc1 pModeToMatch, ModeDesc1* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, ModeDesc1*, ModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (ModeDesc1*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult FindClosestMatchingMode1(ModeDesc1* pModeToMatch, ref ModeDesc1 pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, ModeDesc1*, ModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, (ModeDesc1*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult FindClosestMatchingMode1(ref ModeDesc1 pModeToMatch, ref ModeDesc1 pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (ModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, ModeDesc1*, ModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (ModeDesc1*)ppModeToMatch, (ModeDesc1*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult FindClosestMatchingMode1(ModeDesc1* pModeToMatch, ModeDesc1* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, ModeDesc1*, ModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult FindClosestMatchingMode1(ModeDesc1* pModeToMatch, ModeDesc1* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, ModeDesc1*, ModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult FindClosestMatchingMode1(ref ModeDesc1 pModeToMatch, ModeDesc1* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, ModeDesc1*, ModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (ModeDesc1*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult FindClosestMatchingMode1(ref ModeDesc1 pModeToMatch, ModeDesc1* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, ModeDesc1*, ModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (ModeDesc1*)ppModeToMatch, pClosestMatch, (IUnknown*)pConcernedDevice.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult FindClosestMatchingMode1(ModeDesc1* pModeToMatch, ref ModeDesc1 pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, ModeDesc1*, ModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, (ModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult FindClosestMatchingMode1(ModeDesc1* pModeToMatch, ref ModeDesc1 pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, ModeDesc1*, ModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, pModeToMatch, (ModeDesc1*)ppClosestMatch, (IUnknown*)pConcernedDevice.Handle);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult FindClosestMatchingMode1(ref ModeDesc1 pModeToMatch, ref ModeDesc1 pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (ModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, ModeDesc1*, ModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (ModeDesc1*)ppModeToMatch, (ModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult FindClosestMatchingMode1(ref ModeDesc1 pModeToMatch, ref ModeDesc1 pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (ModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (ModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, ModeDesc1*, ModeDesc1*, IUnknown*, HResult>)(LpVtbl[20]))(ptr, (ModeDesc1*)ppModeToMatch, (ModeDesc1*)ppClosestMatch, (IUnknown*)pConcernedDevice.Handle);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDisplaySurfaceData1(IDXGIResource* pDestination) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGIResource*, HResult>)(LpVtbl[21]))(ptr, pDestination);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDisplaySurfaceData1(ref IDXGIResource pDestination) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIResource* ppDestination = &pDestination)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGIResource*, HResult>)(LpVtbl[21]))(ptr, (IDXGIResource*)ppDestination);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDisplaySurfaceData1(ComPtr<IDXGIResource> pDestination) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGIResource*, HResult>)(LpVtbl[21]))(ptr, (IDXGIResource*)pDestination.Handle);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DuplicateOutput(IUnknown* pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, pDevice, ppOutputDuplication);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DuplicateOutput(ref IUnknown pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, (IUnknown*)ppDevice, ppOutputDuplication);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DuplicateOutput(ComPtr<IUnknown> pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, (IUnknown*)pDevice.Handle, ppOutputDuplication);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DuplicateOutput(IUnknown* pDevice, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, pDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DuplicateOutput(IUnknown* pDevice, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, pDevice, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DuplicateOutput(ref IUnknown pDevice, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, (IUnknown*)ppDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DuplicateOutput(ComPtr<IUnknown> pDevice, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, IDXGIOutputDuplication**, HResult>)(LpVtbl[22]))(ptr, (IUnknown*)pDevice.Handle, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe Bool32 SupportsOverlays() 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Bool32>)(LpVtbl[23]))(ptr);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckOverlaySupport(Format enumFormat, IUnknown* pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Format, IUnknown*, uint*, HResult>)(LpVtbl[24]))(ptr, enumFormat, pConcernedDevice, pFlags);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckOverlaySupport(Format enumFormat, ref IUnknown pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Format, IUnknown*, uint*, HResult>)(LpVtbl[24]))(ptr, enumFormat, (IUnknown*)ppConcernedDevice, pFlags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckOverlaySupport(Format enumFormat, ComPtr<IUnknown> pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Format, IUnknown*, uint*, HResult>)(LpVtbl[24]))(ptr, enumFormat, (IUnknown*)pConcernedDevice.Handle, pFlags);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckOverlaySupport(Format enumFormat, IUnknown* pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Format, IUnknown*, uint*, HResult>)(LpVtbl[24]))(ptr, enumFormat, pConcernedDevice, (uint*)ppFlags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckOverlaySupport(Format enumFormat, ref IUnknown pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				fixed (uint* ppFlags = &pFlags)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Format, IUnknown*, uint*, HResult>)(LpVtbl[24]))(ptr, enumFormat, (IUnknown*)ppConcernedDevice, (uint*)ppFlags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckOverlaySupport(Format enumFormat, ComPtr<IUnknown> pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Format, IUnknown*, uint*, HResult>)(LpVtbl[24]))(ptr, enumFormat, (IUnknown*)pConcernedDevice.Handle, (uint*)ppFlags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckOverlayColorSpaceSupport(Format format, ColorSpaceType colorSpace, IUnknown* pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Format, ColorSpaceType, IUnknown*, uint*, HResult>)(LpVtbl[25]))(ptr, format, colorSpace, pConcernedDevice, pFlags);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckOverlayColorSpaceSupport(Format format, ColorSpaceType colorSpace, ref IUnknown pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Format, ColorSpaceType, IUnknown*, uint*, HResult>)(LpVtbl[25]))(ptr, format, colorSpace, (IUnknown*)ppConcernedDevice, pFlags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckOverlayColorSpaceSupport(Format format, ColorSpaceType colorSpace, ComPtr<IUnknown> pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Format, ColorSpaceType, IUnknown*, uint*, HResult>)(LpVtbl[25]))(ptr, format, colorSpace, (IUnknown*)pConcernedDevice.Handle, pFlags);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckOverlayColorSpaceSupport(Format format, ColorSpaceType colorSpace, IUnknown* pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Format, ColorSpaceType, IUnknown*, uint*, HResult>)(LpVtbl[25]))(ptr, format, colorSpace, pConcernedDevice, (uint*)ppFlags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckOverlayColorSpaceSupport(Format format, ColorSpaceType colorSpace, ref IUnknown pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				fixed (uint* ppFlags = &pFlags)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Format, ColorSpaceType, IUnknown*, uint*, HResult>)(LpVtbl[25]))(ptr, format, colorSpace, (IUnknown*)ppConcernedDevice, (uint*)ppFlags);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckOverlayColorSpaceSupport(Format format, ColorSpaceType colorSpace, ComPtr<IUnknown> pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Format, ColorSpaceType, IUnknown*, uint*, HResult>)(LpVtbl[25]))(ptr, format, colorSpace, (IUnknown*)pConcernedDevice.Handle, (uint*)ppFlags);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DuplicateOutput1(IUnknown* pDevice, uint flags, uint supportedFormatsCount, Format* pSupportedFormats, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, Format*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, pDevice, flags, supportedFormatsCount, pSupportedFormats, ppOutputDuplication);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DuplicateOutput1(ref IUnknown pDevice, uint flags, uint supportedFormatsCount, Format* pSupportedFormats, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, Format*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, (IUnknown*)ppDevice, flags, supportedFormatsCount, pSupportedFormats, ppOutputDuplication);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DuplicateOutput1(ComPtr<IUnknown> pDevice, uint flags, uint supportedFormatsCount, Format* pSupportedFormats, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, Format*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, (IUnknown*)pDevice.Handle, flags, supportedFormatsCount, pSupportedFormats, ppOutputDuplication);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DuplicateOutput1(IUnknown* pDevice, uint flags, uint supportedFormatsCount, ref Format pSupportedFormats, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Format* ppSupportedFormats = &pSupportedFormats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, Format*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, pDevice, flags, supportedFormatsCount, (Format*)ppSupportedFormats, ppOutputDuplication);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DuplicateOutput1(ref IUnknown pDevice, uint flags, uint supportedFormatsCount, ref Format pSupportedFormats, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (Format* ppSupportedFormats = &pSupportedFormats)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, Format*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, (IUnknown*)ppDevice, flags, supportedFormatsCount, (Format*)ppSupportedFormats, ppOutputDuplication);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DuplicateOutput1(ComPtr<IUnknown> pDevice, uint flags, uint supportedFormatsCount, ref Format pSupportedFormats, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Format* ppSupportedFormats = &pSupportedFormats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, Format*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, (IUnknown*)pDevice.Handle, flags, supportedFormatsCount, (Format*)ppSupportedFormats, ppOutputDuplication);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DuplicateOutput1(IUnknown* pDevice, uint flags, uint supportedFormatsCount, Format* pSupportedFormats, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, Format*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, pDevice, flags, supportedFormatsCount, pSupportedFormats, (IDXGIOutputDuplication**)pppOutputDuplication);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DuplicateOutput1(IUnknown* pDevice, uint flags, uint supportedFormatsCount, Format* pSupportedFormats, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, Format*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, pDevice, flags, supportedFormatsCount, pSupportedFormats, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DuplicateOutput1(ref IUnknown pDevice, uint flags, uint supportedFormatsCount, Format* pSupportedFormats, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, Format*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, (IUnknown*)ppDevice, flags, supportedFormatsCount, pSupportedFormats, (IDXGIOutputDuplication**)pppOutputDuplication);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DuplicateOutput1(ComPtr<IUnknown> pDevice, uint flags, uint supportedFormatsCount, Format* pSupportedFormats, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, Format*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, (IUnknown*)pDevice.Handle, flags, supportedFormatsCount, pSupportedFormats, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DuplicateOutput1(IUnknown* pDevice, uint flags, uint supportedFormatsCount, ref Format pSupportedFormats, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Format* ppSupportedFormats = &pSupportedFormats)
			{
				fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, Format*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, pDevice, flags, supportedFormatsCount, (Format*)ppSupportedFormats, (IDXGIOutputDuplication**)pppOutputDuplication);
					return ret;
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DuplicateOutput1(IUnknown* pDevice, uint flags, uint supportedFormatsCount, ref Format pSupportedFormats, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Format* ppSupportedFormats = &pSupportedFormats)
			{
				ppOutputDuplication = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, Format*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, pDevice, flags, supportedFormatsCount, (Format*)ppSupportedFormats, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DuplicateOutput1(ref IUnknown pDevice, uint flags, uint supportedFormatsCount, ref Format pSupportedFormats, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (Format* ppSupportedFormats = &pSupportedFormats)
				{
					fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, Format*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, (IUnknown*)ppDevice, flags, supportedFormatsCount, (Format*)ppSupportedFormats, (IDXGIOutputDuplication**)pppOutputDuplication);
						return ret;
					}
				}
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult DuplicateOutput1(ComPtr<IUnknown> pDevice, uint flags, uint supportedFormatsCount, ref Format pSupportedFormats, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Format* ppSupportedFormats = &pSupportedFormats)
			{
				ppOutputDuplication = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, Format*, IDXGIOutputDuplication**, HResult>)(LpVtbl[26]))(ptr, (IUnknown*)pDevice.Handle, flags, supportedFormatsCount, (Format*)ppSupportedFormats, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDesc1(OutputDesc1* pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, OutputDesc1*, HResult>)(LpVtbl[27]))(ptr, pDesc);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult GetDesc1(ref OutputDesc1 pDesc) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (OutputDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, OutputDesc1*, HResult>)(LpVtbl[27]))(ptr, (OutputDesc1*)ppDesc);
				return ret;
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckHardwareCompositionSupport(uint* pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, uint*, HResult>)(LpVtbl[28]))(ptr, pFlags);
			return ret;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public readonly unsafe HResult CheckHardwareCompositionSupport(ref uint pFlags) 
		{
			IDXGIOutput6* ptr = (IDXGIOutput6*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, uint*, HResult>)(LpVtbl[28]))(ptr, (uint*)ppFlags);
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IDXGIOutput5 (IDXGIOutput6 value)
		{
			return Unsafe.As<IDXGIOutput6, IDXGIOutput5>(ref value);
		}

		public unsafe static implicit operator IDXGIOutput4 (IDXGIOutput6 value)
		{
			return Unsafe.As<IDXGIOutput6, IDXGIOutput4>(ref value);
		}

		public unsafe static implicit operator IDXGIOutput3 (IDXGIOutput6 value)
		{
			return Unsafe.As<IDXGIOutput6, IDXGIOutput3>(ref value);
		}

		public unsafe static implicit operator IDXGIOutput2 (IDXGIOutput6 value)
		{
			return Unsafe.As<IDXGIOutput6, IDXGIOutput2>(ref value);
		}

		public unsafe static implicit operator IDXGIOutput1 (IDXGIOutput6 value)
		{
			return Unsafe.As<IDXGIOutput6, IDXGIOutput1>(ref value);
		}

		public unsafe static implicit operator IDXGIOutput (IDXGIOutput6 value)
		{
			return Unsafe.As<IDXGIOutput6, IDXGIOutput>(ref value);
		}

		public unsafe static implicit operator IDXGIObject (IDXGIOutput6 value)
		{
			return Unsafe.As<IDXGIOutput6, IDXGIObject>(ref value);
		}

		public unsafe static implicit operator IUnknown (IDXGIOutput6 value)
		{
			return Unsafe.As<IDXGIOutput6, IUnknown>(ref value);
		}

	}

}
